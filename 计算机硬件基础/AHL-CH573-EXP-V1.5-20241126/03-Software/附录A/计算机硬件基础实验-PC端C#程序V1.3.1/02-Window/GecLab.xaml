<pu:WindowX
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GEC_LAB"
        xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:localC="clr-namespace:GEC_LAB._04_Class"
        xmlns:pu="https://opensource.panuon.com/wpf-ui"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:localW="clr-namespace:GEC_LAB._02_Window" 
        x:Class="GEC_LAB.MainWindow" 
         xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type={x:Type localW:GecLabViewModels}}"
        mc:Ignorable="d"
        pu:WindowXCaption.Background="#0977EA"
        Title="{Binding GecTitle}" Height="768" Width="1368" MinWidth="872" MinHeight="540" WindowStartupLocation="CenterScreen">
    <pu:WindowXCaption.HeaderTemplate>
        <DataTemplate>
            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource AncestorType=pu:WindowX}}" 
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       FontSize="13"/>
        </DataTemplate>
    </pu:WindowXCaption.HeaderTemplate>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand }"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <!--head-->

        <Border BorderBrush="#DEDEDE" BorderThickness="0,0,0,1" Height="26" Grid.Row="0">
            <Menu  Height="25" FontSize="14" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <MenuItem Header="实验" >
                    <MenuItem Header="新实验" Command="{Binding NewCommand}" />
                    <MenuItem Header="保存实验" Command="{Binding SaveCommand}" />
                    <MenuItem Header="另存为" Command="{Binding SaveAsCommand}"/>
                    <MenuItem Header="打开实验" Command="{Binding OpenCommand}"/>
                </MenuItem>
                <MenuItem Header="芯片" >
                    <MenuItem Header="{Binding McuName}" Padding="0" FontSize="12"/>
                    <MenuItem Header="切换芯片" Command="{Binding ChangeMcuCommand}" Padding="0"/>
                </MenuItem>
                <MenuItem Header="帮助">
                    <MenuItem Header="打开调试窗口" Command="{Binding OpenDebugWindowCommand}" Padding="0"/>
                    <MenuItem Header="打开日志" Command="{Binding OpenLoggerWindowCommand}" Padding="0"/>
                    <MenuItem Header="{Binding SoftName}" Command="{Binding AboutCommand}" Padding="0"/>
                </MenuItem>
            </Menu>
        </Border>


        <!--body-->
        <Grid x:Name="bodyContainer" Grid.Row="1"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <ListBox x:Name="menuBar" 
                     SelectedIndex="0" 
                     Padding="0" 
                     ItemContainerStyle="{StaticResource sideBarMenuItem}"
                     Background="#E6EBF0" 
                     ItemsSource="{Binding SideMenuItems}" 
                     BorderThickness="0">
                <behavior:Interaction.Triggers>
                    <behavior:EventTrigger EventName="SelectionChanged">
                        <behavior:InvokeCommandAction Command="{Binding NavigateCommand}"
                                                      CommandParameter="{Binding SelectedItem, ElementName=menuBar}"/>
                    </behavior:EventTrigger>

                </behavior:Interaction.Triggers>
                <ListBox.ItemTemplate >
                    <DataTemplate>
                        <Label Background="Transparent" Height="60" Width="60" VerticalAlignment="Center" FontSize="15" Padding="15,10,10,0">
                            <TextBlock TextWrapping="Wrap" Text="{Binding Text}"/>
                        </Label>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Button x:Name="controlBarShowBtn" Background="Transparent" IsEnabled="False" Height="40" Width="40" VerticalAlignment="Bottom" HorizontalContentAlignment="Center" Margin="0 0 0 10"/>

            <Border Grid.Column="1" BorderBrush="#DEDEDE" BorderThickness="0,0,1,0" Width="200" x:Name="controlBarBorder">
                <ContentControl prism:RegionManager.RegionName="{x:Static localC:PrismRegions.sideBarRegion}" />
            </Border>
            <Grid Grid.Column="2">
                <ContentControl prism:RegionManager.RegionName="{x:Static localC:PrismRegions.bodyRegion}"/>
            </Grid>

        </Grid>

        <!--fotter-->
        <Grid Grid.Row="2"  >
            <StatusBar Padding="0">
                <StatusBarItem Content="状态提示：" Padding="0"/>
                <StatusBarItem x:Name="StatusHintBar" Content="{Binding StatusHint}" Padding="0"/>
                <Separator/>
                <StatusBarItem  HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Tips: "/>
                        <TextBlock x:Name="TipsText" Text="{Binding Tips}"></TextBlock>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</pu:WindowX>
