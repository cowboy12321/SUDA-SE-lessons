
ADC-CH573.elf:     file format elf32-littleriscv
ADC-CH573.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00012000

Program Header:
    LOAD off    0x00001000 vaddr 0x00012000 paddr 0x00012000 align 2**12
         filesz 0x000000ec memsz 0x000000ec flags r-x
    LOAD off    0x00002000 vaddr 0x00013000 paddr 0x00013000 align 2**12
         filesz 0x00004ac8 memsz 0x00004ac8 flags r-x
    LOAD off    0x00007600 vaddr 0x20005600 paddr 0x00017ac8 align 2**12
         filesz 0x00000000 memsz 0x00000080 flags rw-
    LOAD off    0x00007680 vaddr 0x20005680 paddr 0x00017ac8 align 2**12
         filesz 0x00000030 memsz 0x00000038 flags rw-

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .init           00000004  00012000  00012000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector         000000e8  00012004  00012004  00001004  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .highcodelalign 00000000  00013000  00013000  000076b0  2**0  CONTENTS
  3 .highcode       00000000  20005600  20005600  000076b0  2**0  CONTENTS
  4 .text           00004ac8  00013000  00013000  00002000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini           00000000  00017ac8  00017ac8  000076b0  2**0  CONTENTS, ALLOC, LOAD, CODE
  6 .dalign         00000080  20005600  00017ac8  00007600  2**0  ALLOC
  7 .dlalign        00000000  00017ac8  00017ac8  000076b0  2**0  CONTENTS
  8 .data           00000030  20005680  00017ac8  00007680  2**2  CONTENTS, ALLOC, LOAD, DATA
  9 .bss            00000008  200056b0  00017af8  000076b0  2**2  ALLOC
 10 .stack          00000000  20008000  20008000  000076b0  2**0  CONTENTS
 11 .debug_info     0000736b  00000000  00000000  000076b0  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev   00001823  00000000  00000000  0000ea1b  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc      000034d5  00000000  00000000  0001023e  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  00000270  00000000  00000000  00013718  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   00000270  00000000  00000000  00013988  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_line     000062b5  00000000  00000000  00013bf8  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str      00000d23  00000000  00000000  00019ead  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment        00000033  00000000  00000000  0001abd0  2**0  CONTENTS, READONLY
 19 .debug_frame    000008ac  00000000  00000000  0001ac04  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00012000 l    d  .init	00000000 .init
00012004 l    d  .vector	00000000 .vector
00013000 l    d  .highcodelalign	00000000 .highcodelalign
20005600 l    d  .highcode	00000000 .highcode
00013000 l    d  .text	00000000 .text
00017ac8 l    d  .fini	00000000 .fini
20005600 l    d  .dalign	00000000 .dalign
00017ac8 l    d  .dlalign	00000000 .dlalign
20005680 l    d  .data	00000000 .data
200056b0 l    d  .bss	00000000 .bss
20008000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_CH573.o
00012004 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 main.c
20005680 l     O .data	0000000a diffName
20005690 l     O .data	00000005 diffPinName1
20005698 l     O .data	00000004 diffPinName2
2000569c l     O .data	00000006 singleName
200056a4 l     O .data	00000005 singlePinName
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
000141ec l     F .text	0000003c printk_putc
00014228 l     F .text	00000082 printk_mknumstr
000142aa l     F .text	0000003c printk_pad_space
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 fixunsdfdi.c
00000000 l    df *ABS*	00000000 floatundidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 libgcc2.c
00013a5c g     F .text	000000cc flash_write
00016120 g     F .text	0000006a .hidden __eqdf2
000135ee g     F .text	00000078 adc_mcu_temp
20005e90 g       .data	00000000 __global_pointer$
00000025 g       *ABS*	00000000 GEC_USER_SECTOR_END
00012098  w      .vector	00000000 HardFault_Handler
000120ac  w      .vector	00000000 GPIOB_IRQHandler
000120a8  w      .vector	00000000 GPIOA_IRQHandler
0001209c  w      .vector	00000000 SysTick_Handler
00012094  w      .vector	00000000 NMI_Handler
000120cc  w      .vector	00000000 UART1_IRQHandler
00014104 g     F .text	000000c6 uart_enable_re_int
200056b0 g       .bss	00000000 _sbss
00000012 g       *ABS*	00000000 GEC_USER_SECTOR_START
000141ca g     F .text	00000022 UART0_IRQHandler
00016eb6 g     F .text	00000076 .hidden __floatsidf
0001618a g     F .text	000000b6 .hidden __ltdf2
00012004 g       .init	00000000 _einit
000120b4  w      .vector	00000000 BB_IRQHandler
000139e8 g     F .text	00000026 flash_erase
00013a0e g     F .text	00000028 flash_Best
000120a4  w      .vector	00000000 TMR0_IRQHandler
0001715e g     F .text	000000b2 .hidden __extendsfdf2
00015424 g     F .text	00000738 .hidden __adddf3
00015096 g     F .text	0000038e .hidden __umoddi3
00014cfe g     F .text	00000398 .hidden __udivdi3
000142fe g     F .text	000002e8 printk_mkfloatstr
000120d0  w      .vector	00000000 RTC_IRQHandler
200056b8 g       .bss	00000000 _ebss
200056b0 g     O .bss	00000004 g_f1
00001000 g       *ABS*	00000000 MCU_SECTORSIZE
00016e4e g     F .text	00000068 .hidden __fixdfsi
0001327a g     F .text	000002a0 adc_read
0001618a g     F .text	000000b6 .hidden __ledf2
20007fff g       *ABS*	00000000 GEC_USER_RAM_END
00014cc8 g     F .text	00000036 myprintf
000120e0  w      .vector	00000000 UART2_IRQHandler
000120d8  w      .vector	00000000 PWMX_IRQHandler
0001737a g     F .text	00000076 .hidden __clzsi2
00013d50 g     F .text	00000228 uart_init
00012000 g       .init	00000000 _start
200056b4 g     O .bss	00000004 component_fun
00016fca g     F .text	00000194 .hidden __floatundidf
20005600 g       *ABS*	00000000 GEC_USER_RAM_START
000120d4  w      .vector	00000000 ADC_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_start
000120c4  w      .vector	00000000 TMR2_IRQHandler
20005680 g       .data	00000000 _data_vma
000142e6 g     F .text	00000018 out_char
000120bc  w      .vector	00000000 USB_IRQHandler
000145e6 g     F .text	000006e2 printk
00015b5c g     F .text	000005c4 .hidden __divdf3
00013a36 g     F .text	00000026 flash_read_logic
00016240 g     F .text	000004c8 .hidden __muldf3
00014086 g     F .text	0000007e uart_re1
0001359a g     F .text	00000054 adc_ave
000130c0 g     F .text	000000a8 memset
00013666 g     F .text	00000382 main
00013c18 g     F .text	000000b8 IRQ_OPC_CHANGE
00017210 g     F .text	0000016a .hidden __truncdfsf2
00013000 g       .highcodelalign	00000000 _highcode_lma
00016120 g     F .text	0000006a .hidden __nedf2
00016f2c g     F .text	0000009e .hidden __fixunsdfdi
000179c8 g     O .text	00000100 .hidden __clz_tab
000120b8  w      .vector	00000000 LLE_IRQHandler
00012000 g       .init	00000000 _sinit
00013168 g     F .text	00000112 adc_init
000120e8  w      .vector	00000000 WDOG_BAT_IRQHandler
000120dc  w      .vector	00000000 TMR3_IRQHandler
20008000 g       .stack	00000000 _eusrstack
000120a0  w      .vector	00000000 SW_Handler
00013cd0 g     F .text	00000080 Vectors_Init
0001351a g     F .text	00000080 adc_mid
200056b0 g       .data	00000000 _edata
000120b0  w      .vector	00000000 SPI0_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_end
00017ac8 g       .dlalign	00000000 _data_lma
00013000  w      .text	00000000 handle_reset
000173f0 g     F .text	00000012 strlen
000120e4  w      .vector	00000000 UART3_IRQHandler
00013f78 g     F .text	0000010e uart_send1
00013b28 g     F .text	00000072 gpio_set
00013b9a g     F .text	0000007e gpio_init
00016708 g     F .text	00000746 .hidden __subdf3
000120c0  w      .vector	00000000 TMR1_IRQHandler
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START



Disassembly of section .init:

00012000 <_sinit>:
_start():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:14
	.section	.init,"ax",@progbits   /*ax是 allocation  execute的缩写，表示该节区可分配并且可执行，progbits是类型*/
	.global	_start   /*将_start标签定义为全局可见*/
	.align	1   /*将当前PC地址推进到2的1次方个字节对齐的位置*/
    .option	norelax  /*	不允许链接松弛*/
_start:     /*定义此处的标签为_start*/
	j	handle_reset     /*跳转指令跳转到标签handle_reset所在的位置*/
   12000:	0000106f          	j	13000 <_highcode_lma>

Disassembly of section .vector:

00012004 <_vector_base>:
_vector_base():
   12004:	8000                	0x8000
   12006:	2000                	fld	fs0,0(s0)
   12008:	0000                	unimp
   1200a:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:22
    .align  1
_vector_base:
    .option norvc; /*表示接下来的汇编程序不可以被汇编生成16位宽的压缩指令*/
    .word   _eusrstack
    .word   0
        j   NMI_Handler                 /* NMI Handler */
   1200c:	0880006f          	j	12094 <NMI_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:23
        j   HardFault_Handler           /* Hard Fault Handler */
   12010:	0880006f          	j	12098 <HardFault_Handler>
	...
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:32
    .word   0
    .word   0
    .word   0
    .word   0
    .word   0
        j   SysTick_Handler            /* SysTick Handler */
   12034:	0680006f          	j	1209c <SysTick_Handler>
   12038:	0000                	unimp
   1203a:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:34
    .word   0
        j   SW_Handler                 /* SW Handler */
   1203c:	0640006f          	j	120a0 <SW_Handler>
   12040:	0000                	unimp
   12042:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:37
    .word   0
    /* External Interrupts */
        j   TMR0_IRQHandler            /* 0:  TMR0 */
   12044:	0600006f          	j	120a4 <TMR0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:38
        j   GPIOA_IRQHandler           /* GPIOA */
   12048:	0600006f          	j	120a8 <GPIOA_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:39
        j   GPIOB_IRQHandler           /* GPIOB */
   1204c:	0600006f          	j	120ac <GPIOB_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:40
        j   SPI0_IRQHandler            /* SPI0 */
   12050:	0600006f          	j	120b0 <SPI0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:41
        j   BB_IRQHandler              /* BLEB */
   12054:	0600006f          	j	120b4 <BB_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:42
        j   LLE_IRQHandler             /* BLEL */
   12058:	0600006f          	j	120b8 <LLE_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:43
        j   USB_IRQHandler             /* USB */
   1205c:	0600006f          	j	120bc <USB_IRQHandler>
   12060:	0000                	unimp
   12062:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:45
        .word   0
        j   TMR1_IRQHandler            /* TMR1 */
   12064:	05c0006f          	j	120c0 <TMR1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:46
        j   TMR2_IRQHandler            /* TMR2 */
   12068:	05c0006f          	j	120c4 <TMR2_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:47
        j   UART0_IRQHandler           /* UART0 */
   1206c:	15e0206f          	j	141ca <UART0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:48
        j   UART1_IRQHandler           /* UART1 */
   12070:	05c0006f          	j	120cc <UART1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:49
        j   RTC_IRQHandler             /* RTC */
   12074:	05c0006f          	j	120d0 <RTC_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:50
        j   ADC_IRQHandler             /* ADC */
   12078:	05c0006f          	j	120d4 <ADC_IRQHandler>
   1207c:	0000                	unimp
   1207e:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:52
        .word   0
        j   PWMX_IRQHandler            /* PWMX */
   12080:	0580006f          	j	120d8 <PWMX_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:53
        j   TMR3_IRQHandler            /* TMR3 */
   12084:	0580006f          	j	120dc <TMR3_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:54
        j   UART2_IRQHandler           /* UART2 */
   12088:	0580006f          	j	120e0 <UART2_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:55
        j   UART3_IRQHandler           /* UART3 */
   1208c:	0580006f          	j	120e4 <UART3_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:56
        j   WDOG_BAT_IRQHandler        /* WDOG_BAT */
   12090:	0580006f          	j	120e8 <WDOG_BAT_IRQHandler>

00012094 <NMI_Handler>:
NMI_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:84
    .weak   TMR3_IRQHandler
    .weak   UART2_IRQHandler
    .weak   UART3_IRQHandler
    .weak   WDOG_BAT_IRQHandler

NMI_Handler:  1:  j 1b     /* 在被引用之时，数字标签通常需要带上一个字母“f”或者“b”的后缀，“f”表示下一行，“b”表示向上一行*/
   12094:	0000006f          	j	12094 <NMI_Handler>

00012098 <HardFault_Handler>:
HardFault_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:85
HardFault_Handler:  1:  j 1b
   12098:	0000006f          	j	12098 <HardFault_Handler>

0001209c <SysTick_Handler>:
SysTick_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:86
SysTick_Handler:  1:  j 1b
   1209c:	0000006f          	j	1209c <SysTick_Handler>

000120a0 <SW_Handler>:
SW_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:87
SW_Handler:  1:  j 1b
   120a0:	0000006f          	j	120a0 <SW_Handler>

000120a4 <TMR0_IRQHandler>:
TMR0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:88
TMR0_IRQHandler:  1:  j 1b
   120a4:	0000006f          	j	120a4 <TMR0_IRQHandler>

000120a8 <GPIOA_IRQHandler>:
GPIOA_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:89
GPIOA_IRQHandler:  1:  j 1b
   120a8:	0000006f          	j	120a8 <GPIOA_IRQHandler>

000120ac <GPIOB_IRQHandler>:
GPIOB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:90
GPIOB_IRQHandler:  1:  j 1b
   120ac:	0000006f          	j	120ac <GPIOB_IRQHandler>

000120b0 <SPI0_IRQHandler>:
SPI0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:91
SPI0_IRQHandler:  1:  j 1b
   120b0:	0000006f          	j	120b0 <SPI0_IRQHandler>

000120b4 <BB_IRQHandler>:
BB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:92
BB_IRQHandler:  1:  j 1b
   120b4:	0000006f          	j	120b4 <BB_IRQHandler>

000120b8 <LLE_IRQHandler>:
LLE_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:93
LLE_IRQHandler:  1:  j 1b
   120b8:	0000006f          	j	120b8 <LLE_IRQHandler>

000120bc <USB_IRQHandler>:
USB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:94
USB_IRQHandler:  1:  j 1b
   120bc:	0000006f          	j	120bc <USB_IRQHandler>

000120c0 <TMR1_IRQHandler>:
TMR1_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:95
TMR1_IRQHandler:  1:  j 1b
   120c0:	0000006f          	j	120c0 <TMR1_IRQHandler>

000120c4 <TMR2_IRQHandler>:
TMR2_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:96
TMR2_IRQHandler:  1:  j 1b
   120c4:	0000006f          	j	120c4 <TMR2_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:97
UART0_IRQHandler:  1:  j 1b
   120c8:	0000006f          	j	120c8 <TMR2_IRQHandler+0x4>

000120cc <UART1_IRQHandler>:
UART1_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:98
UART1_IRQHandler:  1:  j 1b
   120cc:	0000006f          	j	120cc <UART1_IRQHandler>

000120d0 <RTC_IRQHandler>:
RTC_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:99
RTC_IRQHandler:  1:  j 1b
   120d0:	0000006f          	j	120d0 <RTC_IRQHandler>

000120d4 <ADC_IRQHandler>:
ADC_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:100
ADC_IRQHandler:  1:  j 1b
   120d4:	0000006f          	j	120d4 <ADC_IRQHandler>

000120d8 <PWMX_IRQHandler>:
PWMX_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:101
PWMX_IRQHandler:  1:  j 1b
   120d8:	0000006f          	j	120d8 <PWMX_IRQHandler>

000120dc <TMR3_IRQHandler>:
TMR3_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:102
TMR3_IRQHandler:  1:  j 1b
   120dc:	0000006f          	j	120dc <TMR3_IRQHandler>

000120e0 <UART2_IRQHandler>:
UART2_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:103
UART2_IRQHandler:  1:  j 1b
   120e0:	0000006f          	j	120e0 <UART2_IRQHandler>

000120e4 <UART3_IRQHandler>:
UART3_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:104
UART3_IRQHandler:  1:  j 1b
   120e4:	0000006f          	j	120e4 <UART3_IRQHandler>

000120e8 <WDOG_BAT_IRQHandler>:
WDOG_BAT_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:105
WDOG_BAT_IRQHandler:  1:  j 1b
   120e8:	0000006f          	j	120e8 <WDOG_BAT_IRQHandler>

Disassembly of section .text:

00013000 <handle_reset>:
handle_reset():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:113
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
   13000:	1fff3197          	auipc	gp,0x1fff3
   13004:	e9018193          	addi	gp,gp,-368 # 20005e90 <__global_pointer$>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:116
.option	pop 
1:
	la sp, _eusrstack 
   13008:	1fff5117          	auipc	sp,0x1fff5
   1300c:	ff810113          	addi	sp,sp,-8 # 20008000 <_eusrstack>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:120

/* Load highcode code  section from flash to RAM */
2:
    la a0, _highcode_lma
   13010:	00000517          	auipc	a0,0x0
   13014:	ff050513          	addi	a0,a0,-16 # 13000 <handle_reset>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:121
    la a1, _highcode_vma_start
   13018:	1fff2597          	auipc	a1,0x1fff2
   1301c:	5e858593          	addi	a1,a1,1512 # 20005600 <GEC_USER_RAM_START>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:122
    la a2, _highcode_vma_end
   13020:	1fff2617          	auipc	a2,0x1fff2
   13024:	5e060613          	addi	a2,a2,1504 # 20005600 <GEC_USER_RAM_START>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:123
    bgeu a1, a2, 2f
   13028:	00c5fc63          	bgeu	a1,a2,13040 <handle_reset+0x40>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:125
1:
    lw t0, (a0)
   1302c:	00052283          	lw	t0,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:126
    sw t0, (a1)
   13030:	0055a023          	sw	t0,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:127
    addi a0, a0, 4
   13034:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:128
    addi a1, a1, 4
   13038:	00458593          	addi	a1,a1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:129
    bltu a1, a2, 1b
   1303c:	fec5e8e3          	bltu	a1,a2,1302c <handle_reset+0x2c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:133

/* Load data section from flash to RAM */
2:
	la a0, _data_lma
   13040:	00005517          	auipc	a0,0x5
   13044:	a8850513          	addi	a0,a0,-1400 # 17ac8 <_data_lma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:134
	la a1, _data_vma
   13048:	1fff2597          	auipc	a1,0x1fff2
   1304c:	63858593          	addi	a1,a1,1592 # 20005680 <_data_vma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:135
	la a2, _edata
   13050:	1fff2617          	auipc	a2,0x1fff2
   13054:	66060613          	addi	a2,a2,1632 # 200056b0 <_edata>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:136
	bgeu a1, a2, 2f
   13058:	00c5fc63          	bgeu	a1,a2,13070 <handle_reset+0x70>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:138
1:
	lw t0, (a0)
   1305c:	00052283          	lw	t0,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:139
	sw t0, (a1)
   13060:	0055a023          	sw	t0,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:140
	addi a0, a0, 4
   13064:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:141
	addi a1, a1, 4
   13068:	00458593          	addi	a1,a1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:142
	bltu a1, a2, 1b
   1306c:	fec5e8e3          	bltu	a1,a2,1305c <handle_reset+0x5c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:145
2:
	/* clear bss section */
	la a0, _sbss
   13070:	1fff2517          	auipc	a0,0x1fff2
   13074:	64050513          	addi	a0,a0,1600 # 200056b0 <_edata>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:146
	la a1, _ebss
   13078:	1fff2597          	auipc	a1,0x1fff2
   1307c:	64058593          	addi	a1,a1,1600 # 200056b8 <_ebss>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:147
	bgeu a0, a1, 2f
   13080:	00b57863          	bgeu	a0,a1,13090 <handle_reset+0x90>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:149
1:
	sw zero, (a0)
   13084:	00052023          	sw	zero,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:150
	addi a0, a0, 4
   13088:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:151
	bltu a0, a1, 1b
   1308c:	feb56ce3          	bltu	a0,a1,13084 <handle_reset+0x84>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:153
2:
    li t0, 0x1880
   13090:	000022b7          	lui	t0,0x2
   13094:	88028293          	addi	t0,t0,-1920 # 1880 <MCU_SECTORSIZE+0x880>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:154
    csrs mstatus, t0
   13098:	3002a073          	csrs	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:156

    jal  Vectors_Init	    /* 跳转并链接到Vectors_Init函数，Vectors_Init：User对BIOS中断向量表的部分继承,构件库函数指针初始化 */		
   1309c:	435000ef          	jal	ra,13cd0 <Vectors_Init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:157
	la t0, _vector_base
   130a0:	fffff297          	auipc	t0,0xfffff
   130a4:	f6428293          	addi	t0,t0,-156 # 12004 <_einit>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:158
    ori t0, t0, 1
   130a8:	0012e293          	ori	t0,t0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:159
	csrw mtvec, t0
   130ac:	30529073          	csrw	mtvec,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:160
	la t0, main
   130b0:	00000297          	auipc	t0,0x0
   130b4:	5b628293          	addi	t0,t0,1462 # 13666 <main>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:161
	csrw mepc, t0
   130b8:	34129073          	csrw	mepc,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcs/startup_CH573.S:168
	/* enable vector relocation
	li t0, 0xE000ED14
	li t1, 1
	sw t1, 0(t0)*/
	
	mret
   130bc:	30200073          	mret

000130c0 <memset>:
memset():
   130c0:	433d                	li	t1,15
   130c2:	872a                	mv	a4,a0
   130c4:	02c37363          	bgeu	t1,a2,130ea <memset+0x2a>
   130c8:	00f77793          	andi	a5,a4,15
   130cc:	efbd                	bnez	a5,1314a <memset+0x8a>
   130ce:	e5ad                	bnez	a1,13138 <memset+0x78>
   130d0:	ff067693          	andi	a3,a2,-16
   130d4:	8a3d                	andi	a2,a2,15
   130d6:	96ba                	add	a3,a3,a4
   130d8:	c30c                	sw	a1,0(a4)
   130da:	c34c                	sw	a1,4(a4)
   130dc:	c70c                	sw	a1,8(a4)
   130de:	c74c                	sw	a1,12(a4)
   130e0:	0741                	addi	a4,a4,16
   130e2:	fed76be3          	bltu	a4,a3,130d8 <memset+0x18>
   130e6:	e211                	bnez	a2,130ea <memset+0x2a>
   130e8:	8082                	ret
   130ea:	40c306b3          	sub	a3,t1,a2
   130ee:	068a                	slli	a3,a3,0x2
   130f0:	00000297          	auipc	t0,0x0
   130f4:	9696                	add	a3,a3,t0
   130f6:	00a68067          	jr	10(a3)
   130fa:	00b70723          	sb	a1,14(a4)
   130fe:	00b706a3          	sb	a1,13(a4)
   13102:	00b70623          	sb	a1,12(a4)
   13106:	00b705a3          	sb	a1,11(a4)
   1310a:	00b70523          	sb	a1,10(a4)
   1310e:	00b704a3          	sb	a1,9(a4)
   13112:	00b70423          	sb	a1,8(a4)
   13116:	00b703a3          	sb	a1,7(a4)
   1311a:	00b70323          	sb	a1,6(a4)
   1311e:	00b702a3          	sb	a1,5(a4)
   13122:	00b70223          	sb	a1,4(a4)
   13126:	00b701a3          	sb	a1,3(a4)
   1312a:	00b70123          	sb	a1,2(a4)
   1312e:	00b700a3          	sb	a1,1(a4)
   13132:	00b70023          	sb	a1,0(a4)
   13136:	8082                	ret
   13138:	0ff5f593          	andi	a1,a1,255
   1313c:	00859693          	slli	a3,a1,0x8
   13140:	8dd5                	or	a1,a1,a3
   13142:	01059693          	slli	a3,a1,0x10
   13146:	8dd5                	or	a1,a1,a3
   13148:	b761                	j	130d0 <memset+0x10>
   1314a:	00279693          	slli	a3,a5,0x2
   1314e:	00000297          	auipc	t0,0x0
   13152:	9696                	add	a3,a3,t0
   13154:	8286                	mv	t0,ra
   13156:	fa8680e7          	jalr	-88(a3)
   1315a:	8096                	mv	ra,t0
   1315c:	17c1                	addi	a5,a5,-16
   1315e:	8f1d                	sub	a4,a4,a5
   13160:	963e                	add	a2,a2,a5
   13162:	f8c374e3          	bgeu	t1,a2,130ea <memset+0x2a>
   13166:	b7a5                	j	130ce <memset+0xe>

00013168 <adc_init>:
adc_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:41
//======================================================================
void adc_init(uint16_t Channel,uint16_t NC)
{	
	uint8_t i;
	uint32_t sum = 0;
	R8_TKEY_CFG &= ~RB_TKEY_PWR_ON;  //关闭触摸功能
   13168:	40001737          	lui	a4,0x40001
   1316c:	05774783          	lbu	a5,87(a4) # 40001057 <_eusrstack+0x1fff9057>
   13170:	0fe7f793          	andi	a5,a5,254
   13174:	04f70ba3          	sb	a5,87(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:44

	//初始化函数不配置设置寄存器，在读取时才配置寄存器读取
    switch (Channel)
   13178:	47c5                	li	a5,17
   1317a:	0ea7ef63          	bltu	a5,a0,13278 <adc_init+0x110>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:38
{	
   1317e:	1141                	addi	sp,sp,-16
   13180:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:44
    switch (Channel)
   13182:	050a                	slli	a0,a0,0x2
   13184:	00004717          	auipc	a4,0x4
   13188:	28070713          	addi	a4,a4,640 # 17404 <strlen+0x14>
   1318c:	953a                	add	a0,a0,a4
   1318e:	411c                	lw	a5,0(a0)
   13190:	97ba                	add	a5,a5,a4
   13192:	8782                	jr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:46
    {
		case ADC_CHANNEL_0:  gpio_init(PTA_NUM|4,  GPIO_INPUT,1);break;  // PA4
   13194:	4605                	li	a2,1
   13196:	4581                	li	a1,0
   13198:	4511                	li	a0,4
   1319a:	00001097          	auipc	ra,0x1
   1319e:	a00080e7          	jalr	-1536(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:84
	// }
	// sum = (sum + 8) >> 4;
	// R8_ADC_CFG &= ~RB_ADC_OFS_TEST;  //关闭测试模式

	// RoughCalib_Value = 2048-sum;	
}  
   131a2:	40b2                	lw	ra,12(sp)
   131a4:	0141                	addi	sp,sp,16
   131a6:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:47
		case ADC_CHANNEL_1:  gpio_init(PTA_NUM|5,  GPIO_INPUT,1);break;  // PA5
   131a8:	4605                	li	a2,1
   131aa:	4581                	li	a1,0
   131ac:	4515                	li	a0,5
   131ae:	00001097          	auipc	ra,0x1
   131b2:	9ec080e7          	jalr	-1556(ra) # 13b9a <gpio_init>
   131b6:	b7f5                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:48
		case ADC_CHANNEL_2:  gpio_init(PTA_NUM|12, GPIO_INPUT,1);break;  // PA12
   131b8:	4605                	li	a2,1
   131ba:	4581                	li	a1,0
   131bc:	4531                	li	a0,12
   131be:	00001097          	auipc	ra,0x1
   131c2:	9dc080e7          	jalr	-1572(ra) # 13b9a <gpio_init>
   131c6:	bff1                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:49
		case ADC_CHANNEL_3:  gpio_init(PTA_NUM|13, GPIO_INPUT,1);break;  // PA13
   131c8:	4605                	li	a2,1
   131ca:	4581                	li	a1,0
   131cc:	4535                	li	a0,13
   131ce:	00001097          	auipc	ra,0x1
   131d2:	9cc080e7          	jalr	-1588(ra) # 13b9a <gpio_init>
   131d6:	b7f1                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:50
		case ADC_CHANNEL_4:  gpio_init(PTA_NUM|14, GPIO_INPUT,1);break;  // PA14 
   131d8:	4605                	li	a2,1
   131da:	4581                	li	a1,0
   131dc:	4539                	li	a0,14
   131de:	00001097          	auipc	ra,0x1
   131e2:	9bc080e7          	jalr	-1604(ra) # 13b9a <gpio_init>
   131e6:	bf75                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:51
		case ADC_CHANNEL_5:  gpio_init(PTA_NUM|15, GPIO_INPUT,1);break;  // PA15
   131e8:	4605                	li	a2,1
   131ea:	4581                	li	a1,0
   131ec:	453d                	li	a0,15
   131ee:	00001097          	auipc	ra,0x1
   131f2:	9ac080e7          	jalr	-1620(ra) # 13b9a <gpio_init>
   131f6:	b775                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:52
		case ADC_CHANNEL_8:  gpio_init(PTB_NUM|0,  GPIO_INPUT,1);break;  // PB0
   131f8:	4605                	li	a2,1
   131fa:	4581                	li	a1,0
   131fc:	10000513          	li	a0,256
   13200:	00001097          	auipc	ra,0x1
   13204:	99a080e7          	jalr	-1638(ra) # 13b9a <gpio_init>
   13208:	bf69                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:53
		case ADC_CHANNEL_9:  gpio_init(PTB_NUM|6,  GPIO_INPUT,1);break;  // PB6
   1320a:	4605                	li	a2,1
   1320c:	4581                	li	a1,0
   1320e:	10600513          	li	a0,262
   13212:	00001097          	auipc	ra,0x1
   13216:	988080e7          	jalr	-1656(ra) # 13b9a <gpio_init>
   1321a:	b761                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:54
		case ADC_CHANNEL_12: gpio_init(PTA_NUM|8,  GPIO_INPUT,1);break;  // PA8
   1321c:	4605                	li	a2,1
   1321e:	4581                	li	a1,0
   13220:	4521                	li	a0,8
   13222:	00001097          	auipc	ra,0x1
   13226:	978080e7          	jalr	-1672(ra) # 13b9a <gpio_init>
   1322a:	bfa5                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:55
		case ADC_CHANNEL_13: gpio_init(PTA_NUM|9,  GPIO_INPUT,1);break;  // PA9
   1322c:	4605                	li	a2,1
   1322e:	4581                	li	a1,0
   13230:	4525                	li	a0,9
   13232:	00001097          	auipc	ra,0x1
   13236:	968080e7          	jalr	-1688(ra) # 13b9a <gpio_init>
   1323a:	b7a5                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:57
			gpio_init(PTA_NUM|4,  GPIO_INPUT,1);  // PA4  正极
   1323c:	4605                	li	a2,1
   1323e:	4581                	li	a1,0
   13240:	4511                	li	a0,4
   13242:	00001097          	auipc	ra,0x1
   13246:	958080e7          	jalr	-1704(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:58
			gpio_init(PTA_NUM|12, GPIO_INPUT,1);  // PA12 负极
   1324a:	4605                	li	a2,1
   1324c:	4581                	li	a1,0
   1324e:	4531                	li	a0,12
   13250:	00001097          	auipc	ra,0x1
   13254:	94a080e7          	jalr	-1718(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:59
			break; 
   13258:	b7a9                	j	131a2 <adc_init+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:61
			gpio_init(PTA_NUM|5,  GPIO_INPUT,1);  // PA5  正极
   1325a:	4605                	li	a2,1
   1325c:	4581                	li	a1,0
   1325e:	4515                	li	a0,5
   13260:	00001097          	auipc	ra,0x1
   13264:	93a080e7          	jalr	-1734(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:62
			gpio_init(PTA_NUM|13, GPIO_INPUT,1);  // PA13 负极
   13268:	4605                	li	a2,1
   1326a:	4581                	li	a1,0
   1326c:	4535                	li	a0,13
   1326e:	00001097          	auipc	ra,0x1
   13272:	92c080e7          	jalr	-1748(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:84
}  
   13276:	b735                	j	131a2 <adc_init+0x3a>
   13278:	8082                	ret

0001327a <adc_read>:
adc_read():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:104
	uint16_t ad;
	double voltage;
	uint8_t max=4; //最大采样4次，以保证不会死循环

	//在每次读取时配置寄存器，可以支持不同通道混合采集
	set_channel(Channel); //设置通道 
   1327a:	00f57713          	andi	a4,a0,15
   1327e:	400017b7          	lui	a5,0x40001
   13282:	04e78c23          	sb	a4,88(a5) # 40001058 <_eusrstack+0x1fff9058>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:105
    R8_TKEY_CFG &= ~RB_TKEY_PWR_ON;
   13286:	0577c703          	lbu	a4,87(a5)
   1328a:	0fe77713          	andi	a4,a4,254
   1328e:	04e78ba3          	sb	a4,87(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:106
	switch (Channel)
   13292:	47bd                	li	a5,15
   13294:	06f50563          	beq	a0,a5,132fe <adc_read+0x84>
   13298:	04a7e363          	bltu	a5,a0,132de <adc_read+0x64>
   1329c:	47b9                	li	a5,14
   1329e:	0af51563          	bne	a0,a5,13348 <adc_read+0xce>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:117
		R8_ADC_CHANNEL = 15;
		R8_ADC_CFG = RB_ADC_POWER_ON | RB_ADC_DIFF_EN | (3 << 4);
		goto single_cap;
	case ADC_CHANNEL_VREFINT:
//    	内置电池电压采样初始化
	    R8_ADC_CFG = RB_ADC_POWER_ON | RB_ADC_BUF_EN | (ADC_PGA_1_4 << 4); // 使用-12dB模式，
   132a2:	400017b7          	lui	a5,0x40001
   132a6:	470d                	li	a4,3
   132a8:	04e78ca3          	sb	a4,89(a5) # 40001059 <_eusrstack+0x1fff9059>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:97
{
   132ac:	1141                	addi	sp,sp,-16
   132ae:	c606                	sw	ra,12(sp)
   132b0:	c422                	sw	s0,8(sp)
   132b2:	4611                	li	a2,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:133
	}

multi_cap:
	//有多个档位的模式，所以需要多次采集才能确定一个准确的值
	while(max--){
		uint8_t ga=adc_ga;  
   132b4:	400015b7          	lui	a1,0x40001
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:135
		//先采样一次，后续可能需要调整档位
		R8_ADC_CONVERT = RB_ADC_START;
   132b8:	05a58713          	addi	a4,a1,90 # 4000105a <_eusrstack+0x1fff905a>
   132bc:	4f05                	li	t5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:137
		while(R8_ADC_CONVERT & RB_ADC_START);
		mcu_AD = (R16_ADC_DATA & RB_ADC_DATA) + RoughCalib_Value;
   132be:	6785                	lui	a5,0x1
   132c0:	fff78e93          	addi	t4,a5,-1 # fff <GEC_USER_SECTOR_END+0xfda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:139
		
		if(ga == ADC_PGA_1)   //此档位采集有效范围0V - 2V
   132c4:	4e09                	li	t3,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:151
			}else{
				//有效范围0V - 2V
				voltage = mcu_AD  / 2048.0 * ADC_Verf;
				break;
			}
		}else if(ga == ADC_PGA_1_2)  //此档位采集有效范围1.9V - 3V
   132c6:	4f85                	li	t6,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:171
			}
		}
		else if(ga == ADC_PGA_1_4) //此档位采集有效范围2.9V - 5V
		{
			// printf("p4 %d\n",mcu_AD);
			if(mcu_AD<2450){ 
   132c8:	99178393          	addi	t2,a5,-1647
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:174
				//实际电压小于2.9V 切换到1/2档位
				set_ga(ADC_PGA_1_2);
			}else if(mcu_AD<2950){ 
   132cc:	b8578413          	addi	s0,a5,-1147
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:154
			if(mcu_AD<2877){     
   132d0:	b3c78293          	addi	t0,a5,-1220
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:158
			}else if(mcu_AD>3949){ 
   132d4:	f6d78093          	addi	ra,a5,-147
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:142
			if(mcu_AD>3900){  
   132d8:	f3c78313          	addi	t1,a5,-196
   132dc:	a859                	j	13372 <adc_read+0xf8>
   132de:	47c5                	li	a5,17
   132e0:	06a7e463          	bltu	a5,a0,13348 <adc_read+0xce>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:122
	    R8_ADC_CFG = RB_ADC_POWER_ON | RB_ADC_DIFF_EN | (0x01 << 6) | (ADC_PGA_1 << 4);
   132e4:	400017b7          	lui	a5,0x40001
   132e8:	06500713          	li	a4,101
   132ec:	04e78ca3          	sb	a4,89(a5) # 40001059 <_eusrstack+0x1fff9059>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:123
		set_ga(ADC_PGA_1_4);
   132f0:	0597c703          	lbu	a4,89(a5)
   132f4:	0cf77713          	andi	a4,a4,207
   132f8:	04e78ca3          	sb	a4,89(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:124
		goto single_cap;
   132fc:	a025                	j	13324 <adc_read+0xaa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:110
		R8_TKEY_CFG &= ~RB_TKEY_PWR_ON;
   132fe:	400017b7          	lui	a5,0x40001
   13302:	0577c703          	lbu	a4,87(a5) # 40001057 <_eusrstack+0x1fff9057>
   13306:	0fe77713          	andi	a4,a4,254
   1330a:	04e78ba3          	sb	a4,87(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:111
		R8_TEM_SENSOR = RB_TEM_SEN_PWR_ON;
   1330e:	f8000713          	li	a4,-128
   13312:	04e78da3          	sb	a4,91(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:112
		R8_ADC_CHANNEL = 15;
   13316:	473d                	li	a4,15
   13318:	04e78c23          	sb	a4,88(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:113
		R8_ADC_CFG = RB_ADC_POWER_ON | RB_ADC_DIFF_EN | (3 << 4);
   1331c:	03500713          	li	a4,53
   13320:	04e78ca3          	sb	a4,89(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:189
	}
	ad = (int)(voltage*4095/3.3);  
	return ad>4095? 4095 : ad;  //4096级 最大值为3.3v。和其他构件行为保持一致
single_cap:
	//没有多个档位，直接返回数据就可以
	R8_ADC_CONVERT = RB_ADC_START;
   13324:	400017b7          	lui	a5,0x40001
   13328:	4705                	li	a4,1
   1332a:	04e78d23          	sb	a4,90(a5) # 4000105a <_eusrstack+0x1fff905a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:190
	while(R8_ADC_CONVERT & RB_ADC_START);
   1332e:	40001737          	lui	a4,0x40001
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:190 (discriminator 1)
   13332:	05a74783          	lbu	a5,90(a4) # 4000105a <_eusrstack+0x1fff905a>
   13336:	8b85                	andi	a5,a5,1
   13338:	ffed                	bnez	a5,13332 <adc_read+0xb8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:191
	return (R16_ADC_DATA & RB_ADC_DATA);
   1333a:	400017b7          	lui	a5,0x40001
   1333e:	05c7d503          	lhu	a0,92(a5) # 4000105c <_eusrstack+0x1fff905c>
   13342:	0552                	slli	a0,a0,0x14
   13344:	8151                	srli	a0,a0,0x14
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:192
}
   13346:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:126
	    R8_ADC_CFG = RB_ADC_POWER_ON | RB_ADC_BUF_EN | (0x01 << 6) | (ADC_PGA_1 << 4);
   13348:	400017b7          	lui	a5,0x40001
   1334c:	06300713          	li	a4,99
   13350:	04e78ca3          	sb	a4,89(a5) # 40001059 <_eusrstack+0x1fff9059>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:127
		goto multi_cap;
   13354:	bfa1                	j	132ac <adc_read+0x32>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:142
			if(mcu_AD>3900){  
   13356:	04a37d63          	bgeu	t1,a0,133b0 <adc_read+0x136>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:145
				set_ga(ADC_PGA_1_2);
   1335a:	0595c783          	lbu	a5,89(a1)
   1335e:	0cf7f793          	andi	a5,a5,207
   13362:	0107e793          	ori	a5,a5,16
   13366:	04f58ca3          	sb	a5,89(a1)
   1336a:	167d                	addi	a2,a2,-1
   1336c:	0ff67613          	andi	a2,a2,255
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:132
	while(max--){
   13370:	ca35                	beqz	a2,133e4 <adc_read+0x16a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:133
		uint8_t ga=adc_ga;  
   13372:	0595c683          	lbu	a3,89(a1)
   13376:	8291                	srli	a3,a3,0x4
   13378:	8a8d                	andi	a3,a3,3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:135
		R8_ADC_CONVERT = RB_ADC_START;
   1337a:	01e70023          	sb	t5,0(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:136 (discriminator 1)
		while(R8_ADC_CONVERT & RB_ADC_START);
   1337e:	00074783          	lbu	a5,0(a4)
   13382:	8b85                	andi	a5,a5,1
   13384:	ffed                	bnez	a5,1337e <adc_read+0x104>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:137
		mcu_AD = (R16_ADC_DATA & RB_ADC_DATA) + RoughCalib_Value;
   13386:	05c5d503          	lhu	a0,92(a1)
   1338a:	00aef533          	and	a0,t4,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:139
		if(ga == ADC_PGA_1)   //此档位采集有效范围0V - 2V
   1338e:	fdc684e3          	beq	a3,t3,13356 <adc_read+0xdc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:151
		}else if(ga == ADC_PGA_1_2)  //此档位采集有效范围1.9V - 3V
   13392:	0bf68263          	beq	a3,t6,13436 <adc_read+0x1bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:168
		else if(ga == ADC_PGA_1_4) //此档位采集有效范围2.9V - 5V
   13396:	16069963          	bnez	a3,13508 <adc_read+0x28e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:171
			if(mcu_AD<2450){ 
   1339a:	10a3e763          	bltu	t2,a0,134a8 <adc_read+0x22e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:173
				set_ga(ADC_PGA_1_2);
   1339e:	0595c783          	lbu	a5,89(a1)
   133a2:	0cf7f793          	andi	a5,a5,207
   133a6:	0107e793          	ori	a5,a5,16
   133aa:	04f58ca3          	sb	a5,89(a1)
   133ae:	bf75                	j	1336a <adc_read+0xf0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:148
				voltage = mcu_AD  / 2048.0 * ADC_Verf;
   133b0:	00004097          	auipc	ra,0x4
   133b4:	b06080e7          	jalr	-1274(ra) # 16eb6 <__floatsidf>
   133b8:	00004797          	auipc	a5,0x4
   133bc:	0a878793          	addi	a5,a5,168 # 17460 <strlen+0x70>
   133c0:	4390                	lw	a2,0(a5)
   133c2:	43d4                	lw	a3,4(a5)
   133c4:	00003097          	auipc	ra,0x3
   133c8:	e7c080e7          	jalr	-388(ra) # 16240 <__muldf3>
   133cc:	00004797          	auipc	a5,0x4
   133d0:	09c78793          	addi	a5,a5,156 # 17468 <strlen+0x78>
   133d4:	4390                	lw	a2,0(a5)
   133d6:	43d4                	lw	a3,4(a5)
   133d8:	00003097          	auipc	ra,0x3
   133dc:	e68080e7          	jalr	-408(ra) # 16240 <__muldf3>
   133e0:	882a                	mv	a6,a0
   133e2:	88ae                	mv	a7,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:185
	ad = (int)(voltage*4095/3.3);  
   133e4:	00004797          	auipc	a5,0x4
   133e8:	0ac78793          	addi	a5,a5,172 # 17490 <strlen+0xa0>
   133ec:	4390                	lw	a2,0(a5)
   133ee:	43d4                	lw	a3,4(a5)
   133f0:	8542                	mv	a0,a6
   133f2:	85c6                	mv	a1,a7
   133f4:	00003097          	auipc	ra,0x3
   133f8:	e4c080e7          	jalr	-436(ra) # 16240 <__muldf3>
   133fc:	00004797          	auipc	a5,0x4
   13400:	09c78793          	addi	a5,a5,156 # 17498 <strlen+0xa8>
   13404:	4390                	lw	a2,0(a5)
   13406:	43d4                	lw	a3,4(a5)
   13408:	00002097          	auipc	ra,0x2
   1340c:	754080e7          	jalr	1876(ra) # 15b5c <__divdf3>
   13410:	00004097          	auipc	ra,0x4
   13414:	a3e080e7          	jalr	-1474(ra) # 16e4e <__fixdfsi>
   13418:	87aa                	mv	a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:186
	return ad>4095? 4095 : ad;  //4096级 最大值为3.3v。和其他构件行为保持一致
   1341a:	0542                	slli	a0,a0,0x10
   1341c:	8141                	srli	a0,a0,0x10
   1341e:	6705                	lui	a4,0x1
   13420:	00e56463          	bltu	a0,a4,13428 <adc_read+0x1ae>
   13424:	6785                	lui	a5,0x1
   13426:	17fd                	addi	a5,a5,-1
   13428:	01079513          	slli	a0,a5,0x10
   1342c:	8141                	srli	a0,a0,0x10
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:192
}
   1342e:	40b2                	lw	ra,12(sp)
   13430:	4422                	lw	s0,8(sp)
   13432:	0141                	addi	sp,sp,16
   13434:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:154
			if(mcu_AD<2877){     
   13436:	00a2eb63          	bltu	t0,a0,1344c <adc_read+0x1d2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:157
				set_ga(ADC_PGA_1);
   1343a:	0595c783          	lbu	a5,89(a1)
   1343e:	0cf7f793          	andi	a5,a5,207
   13442:	0207e793          	ori	a5,a5,32
   13446:	04f58ca3          	sb	a5,89(a1)
   1344a:	b705                	j	1336a <adc_read+0xf0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:158
			}else if(mcu_AD>3949){ 
   1344c:	00a0f963          	bgeu	ra,a0,1345e <adc_read+0x1e4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:161
				set_ga(ADC_PGA_1_4);
   13450:	0595c783          	lbu	a5,89(a1)
   13454:	0cf7f793          	andi	a5,a5,207
   13458:	04f58ca3          	sb	a5,89(a1)
   1345c:	b739                	j	1336a <adc_read+0xf0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:164
				voltage = (mcu_AD/ 1024.0 - 1) * ADC_Verf;
   1345e:	00004097          	auipc	ra,0x4
   13462:	a58080e7          	jalr	-1448(ra) # 16eb6 <__floatsidf>
   13466:	00004797          	auipc	a5,0x4
   1346a:	00a78793          	addi	a5,a5,10 # 17470 <strlen+0x80>
   1346e:	4390                	lw	a2,0(a5)
   13470:	43d4                	lw	a3,4(a5)
   13472:	00003097          	auipc	ra,0x3
   13476:	dce080e7          	jalr	-562(ra) # 16240 <__muldf3>
   1347a:	00004797          	auipc	a5,0x4
   1347e:	ffe78793          	addi	a5,a5,-2 # 17478 <strlen+0x88>
   13482:	4390                	lw	a2,0(a5)
   13484:	43d4                	lw	a3,4(a5)
   13486:	00003097          	auipc	ra,0x3
   1348a:	282080e7          	jalr	642(ra) # 16708 <__subdf3>
   1348e:	00004797          	auipc	a5,0x4
   13492:	fda78793          	addi	a5,a5,-38 # 17468 <strlen+0x78>
   13496:	4390                	lw	a2,0(a5)
   13498:	43d4                	lw	a3,4(a5)
   1349a:	00003097          	auipc	ra,0x3
   1349e:	da6080e7          	jalr	-602(ra) # 16240 <__muldf3>
   134a2:	882a                	mv	a6,a0
   134a4:	88ae                	mv	a7,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:165
				break;
   134a6:	bf3d                	j	133e4 <adc_read+0x16a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:174
			}else if(mcu_AD<2950){ 
   134a8:	00a46b63          	bltu	s0,a0,134be <adc_read+0x244>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:176
				set_ga(ADC_PGA_1);
   134ac:	0595c783          	lbu	a5,89(a1)
   134b0:	0cf7f793          	andi	a5,a5,207
   134b4:	0207e793          	ori	a5,a5,32
   134b8:	04f58ca3          	sb	a5,89(a1)
   134bc:	b57d                	j	1336a <adc_read+0xf0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:178
				voltage= (mcu_AD / 512.0 - 3) * ADC_Verf;
   134be:	00004097          	auipc	ra,0x4
   134c2:	9f8080e7          	jalr	-1544(ra) # 16eb6 <__floatsidf>
   134c6:	00004797          	auipc	a5,0x4
   134ca:	fba78793          	addi	a5,a5,-70 # 17480 <strlen+0x90>
   134ce:	4390                	lw	a2,0(a5)
   134d0:	43d4                	lw	a3,4(a5)
   134d2:	00003097          	auipc	ra,0x3
   134d6:	d6e080e7          	jalr	-658(ra) # 16240 <__muldf3>
   134da:	00004797          	auipc	a5,0x4
   134de:	fae78793          	addi	a5,a5,-82 # 17488 <strlen+0x98>
   134e2:	4390                	lw	a2,0(a5)
   134e4:	43d4                	lw	a3,4(a5)
   134e6:	00003097          	auipc	ra,0x3
   134ea:	222080e7          	jalr	546(ra) # 16708 <__subdf3>
   134ee:	00004797          	auipc	a5,0x4
   134f2:	f7a78793          	addi	a5,a5,-134 # 17468 <strlen+0x78>
   134f6:	4390                	lw	a2,0(a5)
   134f8:	43d4                	lw	a3,4(a5)
   134fa:	00003097          	auipc	ra,0x3
   134fe:	d46080e7          	jalr	-698(ra) # 16240 <__muldf3>
   13502:	882a                	mv	a6,a0
   13504:	88ae                	mv	a7,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:179
				break;
   13506:	bdf9                	j	133e4 <adc_read+0x16a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:182
			set_ga(ADC_PGA_1);
   13508:	0595c783          	lbu	a5,89(a1)
   1350c:	0cf7f793          	andi	a5,a5,207
   13510:	0207e793          	ori	a5,a5,32
   13514:	04f58ca3          	sb	a5,89(a1)
   13518:	bd89                	j	1336a <adc_read+0xf0>

0001351a <adc_mid>:
adc_mid():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:202
//参    数:channel = 通道号                                           
//返    回:该通道中值滤波后的A/D转换结果                         
//内部调用:adc_ad_read                                               
//======================================================================
uint16_t adc_mid(uint16_t Channel)
{
   1351a:	1141                	addi	sp,sp,-16
   1351c:	c606                	sw	ra,12(sp)
   1351e:	c422                	sw	s0,8(sp)
   13520:	c226                	sw	s1,4(sp)
   13522:	c04a                	sw	s2,0(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:206
    uint16_t a,b,c;
    uint16_t i;
    //（1）取三次A/D转换结果
    a = adc_read(Channel);
   13524:	0ff57493          	andi	s1,a0,255
   13528:	8526                	mv	a0,s1
   1352a:	00000097          	auipc	ra,0x0
   1352e:	d50080e7          	jalr	-688(ra) # 1327a <adc_read>
   13532:	842a                	mv	s0,a0
   13534:	6785                	lui	a5,0x1
   13536:	bb878793          	addi	a5,a5,-1096 # bb8 <GEC_USER_SECTOR_END+0xb93>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:207 (discriminator 3)
    for (i=0;i<3000;i++) ;
   1353a:	17fd                	addi	a5,a5,-1
   1353c:	07c2                	slli	a5,a5,0x10
   1353e:	83c1                	srli	a5,a5,0x10
   13540:	ffed                	bnez	a5,1353a <adc_mid+0x20>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:208
    b = adc_read(Channel);
   13542:	8526                	mv	a0,s1
   13544:	00000097          	auipc	ra,0x0
   13548:	d36080e7          	jalr	-714(ra) # 1327a <adc_read>
   1354c:	892a                	mv	s2,a0
   1354e:	6785                	lui	a5,0x1
   13550:	bb878793          	addi	a5,a5,-1096 # bb8 <GEC_USER_SECTOR_END+0xb93>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:209 (discriminator 3)
    for (i=0;i<3000;i++) ;
   13554:	17fd                	addi	a5,a5,-1
   13556:	07c2                	slli	a5,a5,0x10
   13558:	83c1                	srli	a5,a5,0x10
   1355a:	ffed                	bnez	a5,13554 <adc_mid+0x3a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:210
    c = adc_read(Channel);
   1355c:	8526                	mv	a0,s1
   1355e:	00000097          	auipc	ra,0x0
   13562:	d1c080e7          	jalr	-740(ra) # 1327a <adc_read>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212
   // （2）从三次A/D转换结果中取中值
    return  a > b ? (b > c ? b : ( a > c ? c : a)) : ( a > c ? a: (b > c ? c : a));
   13566:	02897263          	bgeu	s2,s0,1358a <adc_mid+0x70>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212 (discriminator 1)
   1356a:	03256663          	bltu	a0,s2,13596 <adc_mid+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212 (discriminator 3)
   1356e:	87a2                	mv	a5,s0
   13570:	00857363          	bgeu	a0,s0,13576 <adc_mid+0x5c>
   13574:	87aa                	mv	a5,a0
   13576:	01079413          	slli	s0,a5,0x10
   1357a:	8041                	srli	s0,s0,0x10
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:213 (discriminator 16)
}
   1357c:	8522                	mv	a0,s0
   1357e:	40b2                	lw	ra,12(sp)
   13580:	4422                	lw	s0,8(sp)
   13582:	4492                	lw	s1,4(sp)
   13584:	4902                	lw	s2,0(sp)
   13586:	0141                	addi	sp,sp,16
   13588:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212 (discriminator 2)
    return  a > b ? (b > c ? b : ( a > c ? c : a)) : ( a > c ? a: (b > c ? c : a));
   1358a:	fe8569e3          	bltu	a0,s0,1357c <adc_mid+0x62>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212 (discriminator 8)
   1358e:	ff2577e3          	bgeu	a0,s2,1357c <adc_mid+0x62>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:212
   13592:	842a                	mv	s0,a0
   13594:	b7e5                	j	1357c <adc_mid+0x62>
   13596:	844a                	mv	s0,s2
   13598:	b7d5                	j	1357c <adc_mid+0x62>

0001359a <adc_ave>:
adc_ave():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:224
//参    数:channel = 通道号,n = 中值滤波次数                               
//返    回:该通道均值滤波后的A/D转换结果                                   
//内部调用:adc_mid                                                          
//======================================================================
uint16_t adc_ave(uint16_t Channel,uint8_t n) 
{
   1359a:	1101                	addi	sp,sp,-32
   1359c:	ce06                	sw	ra,28(sp)
   1359e:	cc22                	sw	s0,24(sp)
   135a0:	ca26                	sw	s1,20(sp)
   135a2:	c84a                	sw	s2,16(sp)
   135a4:	c64e                	sw	s3,12(sp)
   135a6:	c452                	sw	s4,8(sp)
   135a8:	8a2e                	mv	s4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:228
    uint16_t i;
    uint32_t j;
    j = 0;
    for (i = 0; i < n; i++) j += adc_mid(Channel);
   135aa:	01059913          	slli	s2,a1,0x10
   135ae:	01095913          	srli	s2,s2,0x10
   135b2:	02090c63          	beqz	s2,135ea <adc_ave+0x50>
   135b6:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:227
    j = 0;
   135b8:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:228
    for (i = 0; i < n; i++) j += adc_mid(Channel);
   135ba:	4401                	li	s0,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:228 (discriminator 3)
   135bc:	854e                	mv	a0,s3
   135be:	00000097          	auipc	ra,0x0
   135c2:	f5c080e7          	jalr	-164(ra) # 1351a <adc_mid>
   135c6:	94aa                	add	s1,s1,a0
   135c8:	0405                	addi	s0,s0,1
   135ca:	0442                	slli	s0,s0,0x10
   135cc:	8041                	srli	s0,s0,0x10
   135ce:	ff2417e3          	bne	s0,s2,135bc <adc_ave+0x22>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:229
    j = j/n;
   135d2:	0344d533          	divu	a0,s1,s4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:231
    return (uint16_t)j;
}
   135d6:	0542                	slli	a0,a0,0x10
   135d8:	8141                	srli	a0,a0,0x10
   135da:	40f2                	lw	ra,28(sp)
   135dc:	4462                	lw	s0,24(sp)
   135de:	44d2                	lw	s1,20(sp)
   135e0:	4942                	lw	s2,16(sp)
   135e2:	49b2                	lw	s3,12(sp)
   135e4:	4a22                	lw	s4,8(sp)
   135e6:	6105                	addi	sp,sp,32
   135e8:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:227
    j = 0;
   135ea:	4481                	li	s1,0
   135ec:	b7dd                	j	135d2 <adc_ave+0x38>

000135ee <adc_mcu_temp>:
adc_mcu_temp():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:239
//功能概要：将读到的芯片内部mcu温度AD值转换为实际温度
//参数说明：mcu_temp_AD：通过adc_ad_read函数得到的AD值
//函数返回：实际温度值
//============================================================================
float adc_mcu_temp(uint16_t mcu_temp_AD)
{
   135ee:	1101                	addi	sp,sp,-32
   135f0:	ce06                	sw	ra,28(sp)
   135f2:	cc22                	sw	s0,24(sp)
   135f4:	842a                	mv	s0,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:243
    uint32_t C25_Data[2];
    float      cal;

    FLASH_EEPROM_CMD(0x06, 0x7F014, C25_Data, 0);
   135f6:	1fff2797          	auipc	a5,0x1fff2
   135fa:	0be78793          	addi	a5,a5,190 # 200056b4 <component_fun>
   135fe:	439c                	lw	a5,0(a5)
   13600:	57fc                	lw	a5,108(a5)
   13602:	4681                	li	a3,0
   13604:	0030                	addi	a2,sp,8
   13606:	0007f5b7          	lui	a1,0x7f
   1360a:	05d1                	addi	a1,a1,20
   1360c:	4519                	li	a0,6
   1360e:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:244
	cal = 25+ (((mcu_temp_AD * 5100) >> 10) - ((int)(C25_Data[0]) ) * 11) / 27.0;
   13610:	6505                	lui	a0,0x1
   13612:	3ec50513          	addi	a0,a0,1004 # 13ec <MCU_SECTORSIZE+0x3ec>
   13616:	02a40433          	mul	s0,s0,a0
   1361a:	8429                	srai	s0,s0,0xa
   1361c:	5555                	li	a0,-11
   1361e:	47a2                	lw	a5,8(sp)
   13620:	02f50533          	mul	a0,a0,a5
   13624:	9522                	add	a0,a0,s0
   13626:	00004097          	auipc	ra,0x4
   1362a:	890080e7          	jalr	-1904(ra) # 16eb6 <__floatsidf>
   1362e:	00004797          	auipc	a5,0x4
   13632:	e2278793          	addi	a5,a5,-478 # 17450 <strlen+0x60>
   13636:	4390                	lw	a2,0(a5)
   13638:	43d4                	lw	a3,4(a5)
   1363a:	00002097          	auipc	ra,0x2
   1363e:	522080e7          	jalr	1314(ra) # 15b5c <__divdf3>
   13642:	00004797          	auipc	a5,0x4
   13646:	e1678793          	addi	a5,a5,-490 # 17458 <strlen+0x68>
   1364a:	4390                	lw	a2,0(a5)
   1364c:	43d4                	lw	a3,4(a5)
   1364e:	00002097          	auipc	ra,0x2
   13652:	dd6080e7          	jalr	-554(ra) # 15424 <__adddf3>
   13656:	00004097          	auipc	ra,0x4
   1365a:	bba080e7          	jalr	-1094(ra) # 17210 <__truncdfsf2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/adc.c:246
    return cal;
}
   1365e:	40f2                	lw	ra,28(sp)
   13660:	4462                	lw	s0,24(sp)
   13662:	6105                	addi	sp,sp,32
   13664:	8082                	ret

00013666 <main>:
main():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:14
#include "includes.h"  //【固定】包含总头文件

//main.c使用的内部函数声明处---------------------------------------------
//主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程）-----------
int main(void)
{
   13666:	715d                	addi	sp,sp,-80
   13668:	c686                	sw	ra,76(sp)
   1366a:	c4a2                	sw	s0,72(sp)
   1366c:	c2a6                	sw	s1,68(sp)
   1366e:	c0ca                	sw	s2,64(sp)
   13670:	de4e                	sw	s3,60(sp)
   13672:	dc52                	sw	s4,56(sp)
   13674:	da56                	sw	s5,52(sp)
   13676:	d85a                	sw	s6,48(sp)
   13678:	d65e                	sw	s7,44(sp)
   1367a:	d462                	sw	s8,40(sp)
   1367c:	d266                	sw	s9,36(sp)
   1367e:	d06a                	sw	s10,32(sp)
   13680:	ce6e                	sw	s11,28(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:15
    printf("-----------------------------------------------------------\n");   
   13682:	00004517          	auipc	a0,0x4
   13686:	e3650513          	addi	a0,a0,-458 # 174b8 <strlen+0xc8>
   1368a:	00001097          	auipc	ra,0x1
   1368e:	63e080e7          	jalr	1598(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:16
    printf("★金葫芦提示★                                         	    \n");
   13692:	00004517          	auipc	a0,0x4
   13696:	e6650513          	addi	a0,a0,-410 # 174f8 <strlen+0x108>
   1369a:	00001097          	auipc	ra,0x1
   1369e:	62e080e7          	jalr	1582(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:17
    printf("【中文名称】ADC构件的输出测试方法			        	    \n");
   136a2:	00004517          	auipc	a0,0x4
   136a6:	e9650513          	addi	a0,a0,-362 # 17538 <strlen+0x148>
   136aa:	00001097          	auipc	ra,0x1
   136ae:	61e080e7          	jalr	1566(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:18
    printf("（1）目的：ADC单端输入与差分输入测试                    \n"); 
   136b2:	00004517          	auipc	a0,0x4
   136b6:	eba50513          	addi	a0,a0,-326 # 1756c <strlen+0x17c>
   136ba:	00001097          	auipc	ra,0x1
   136be:	60e080e7          	jalr	1550(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:19
    printf("（2）单端：%s、内部温度传感器\n",singleName);
   136c2:	1fff2997          	auipc	s3,0x1fff2
   136c6:	fda98993          	addi	s3,s3,-38 # 2000569c <singleName>
   136ca:	85ce                	mv	a1,s3
   136cc:	00004517          	auipc	a0,0x4
   136d0:	edc50513          	addi	a0,a0,-292 # 175a8 <strlen+0x1b8>
   136d4:	00001097          	auipc	ra,0x1
   136d8:	5f4080e7          	jalr	1524(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:20
    printf("     差分：%s（%s、%s）\n",diffName,diffPinName1,diffPinName2);
   136dc:	1fff2497          	auipc	s1,0x1fff2
   136e0:	fbc48493          	addi	s1,s1,-68 # 20005698 <diffPinName2>
   136e4:	1fff2417          	auipc	s0,0x1fff2
   136e8:	fac40413          	addi	s0,s0,-84 # 20005690 <diffPinName1>
   136ec:	1fff2917          	auipc	s2,0x1fff2
   136f0:	f9490913          	addi	s2,s2,-108 # 20005680 <_data_vma>
   136f4:	86a6                	mv	a3,s1
   136f6:	8622                	mv	a2,s0
   136f8:	85ca                	mv	a1,s2
   136fa:	00004517          	auipc	a0,0x4
   136fe:	ece50513          	addi	a0,a0,-306 # 175c8 <strlen+0x1d8>
   13702:	00001097          	auipc	ra,0x1
   13706:	5c6080e7          	jalr	1478(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:21
    printf("（3）测试方法：单端：手摸芯片表面，A/D值增大，不要摸到引脚，静电可能损坏芯片\n");
   1370a:	00004517          	auipc	a0,0x4
   1370e:	eda50513          	addi	a0,a0,-294 # 175e4 <strlen+0x1f4>
   13712:	00001097          	auipc	ra,0x1
   13716:	5b6080e7          	jalr	1462(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:22
    printf("                    将引脚%s分别接地、3.3V、5V，观察%s情况\n",singlePinName,singleName);
   1371a:	864e                	mv	a2,s3
   1371c:	1fff2597          	auipc	a1,0x1fff2
   13720:	f8858593          	addi	a1,a1,-120 # 200056a4 <singlePinName>
   13724:	00004517          	auipc	a0,0x4
   13728:	f1050513          	addi	a0,a0,-240 # 17634 <strlen+0x244>
   1372c:	00001097          	auipc	ra,0x1
   13730:	59c080e7          	jalr	1436(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:23
    printf("              差分：将引脚%s接地、%s接3.3V,观察%s情况\n",diffPinName1,diffPinName2,diffName);
   13734:	86ca                	mv	a3,s2
   13736:	8626                	mv	a2,s1
   13738:	85a2                	mv	a1,s0
   1373a:	00004517          	auipc	a0,0x4
   1373e:	f3650513          	addi	a0,a0,-202 # 17670 <strlen+0x280>
   13742:	00001097          	auipc	ra,0x1
   13746:	586080e7          	jalr	1414(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:24
    printf("                    将引脚%s接地、%s接3.3V,观察%s情况\n",diffPinName2,diffPinName1,diffName);
   1374a:	86ca                	mv	a3,s2
   1374c:	8622                	mv	a2,s0
   1374e:	85a6                	mv	a1,s1
   13750:	00004517          	auipc	a0,0x4
   13754:	f5850513          	addi	a0,a0,-168 # 176a8 <strlen+0x2b8>
   13758:	00001097          	auipc	ra,0x1
   1375c:	570080e7          	jalr	1392(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:25
    printf("                    将引脚%s、%s短接,观察%s情况    \n" ,diffPinName1,diffPinName2,diffName);
   13760:	86ca                	mv	a3,s2
   13762:	8626                	mv	a2,s1
   13764:	85a2                	mv	a1,s0
   13766:	00004517          	auipc	a0,0x4
   1376a:	f7a50513          	addi	a0,a0,-134 # 176e0 <strlen+0x2f0>
   1376e:	00001097          	auipc	ra,0x1
   13772:	55a080e7          	jalr	1370(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:26
    printf("------------------------------------------------------------\n"); 
   13776:	00004517          	auipc	a0,0x4
   1377a:	fa250513          	addi	a0,a0,-94 # 17718 <strlen+0x328>
   1377e:	00001097          	auipc	ra,0x1
   13782:	54a080e7          	jalr	1354(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:41
    uint16_t num_AD1;
    uint16_t num_AD2;
    float temp;
    
    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
   13786:	42a1                	li	t0,8
   13788:	3002b073          	csrc	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:44
    
    //（1.3）【根据本函数所用的变量赋初值】给主函数使用的局部变量赋初值
    mMainLoopCount=0;    //主循环次数变量
   1378c:	c602                	sw	zero,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:52
    mLightCount=0;       //灯的闪烁次数
    
    //（1.4）【根据includes.h文件中声明的全局变量】给全局变量赋初值
    
    //（1.5）【根据所用到的外部硬件设备】用户外设模块初始化
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_ON);	//初始化蓝灯
   1378e:	4601                	li	a2,0
   13790:	4585                	li	a1,1
   13792:	10e00513          	li	a0,270
   13796:	00000097          	auipc	ra,0x0
   1379a:	404080e7          	jalr	1028(ra) # 13b9a <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:53
    uart_init(UART_User, 115200);
   1379e:	65f1                	lui	a1,0x1c
   137a0:	20058593          	addi	a1,a1,512 # 1c200 <_data_lma+0x4738>
   137a4:	4501                	li	a0,0
   137a6:	00000097          	auipc	ra,0x0
   137aa:	5aa080e7          	jalr	1450(ra) # 13d50 <uart_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:54
    adc_init(DIFF_CHANNEL,0);
   137ae:	4581                	li	a1,0
   137b0:	4541                	li	a0,16
   137b2:	00000097          	auipc	ra,0x0
   137b6:	9b6080e7          	jalr	-1610(ra) # 13168 <adc_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:55
    adc_init(SINGLE_CHANNEL,0);
   137ba:	4581                	li	a1,0
   137bc:	4511                	li	a0,4
   137be:	00000097          	auipc	ra,0x0
   137c2:	9aa080e7          	jalr	-1622(ra) # 13168 <adc_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:56
    adc_init(TEMPSENSOR_CHANNEL,0);
   137c6:	4581                	li	a1,0
   137c8:	453d                	li	a0,15
   137ca:	00000097          	auipc	ra,0x0
   137ce:	99e080e7          	jalr	-1634(ra) # 13168 <adc_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:59

    //（1.6）【根据所使用的硬件模块中断】使能模块中断
    uart_enable_re_int(UART_User);     //使能用户串口接收中断
   137d2:	4501                	li	a0,0
   137d4:	00001097          	auipc	ra,0x1
   137d8:	930080e7          	jalr	-1744(ra) # 14104 <uart_enable_re_int>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:61
    //（1.7）【不变】开总中断
    ENABLE_INTERRUPTS;
   137dc:	42a1                	li	t0,8
   137de:	3002a073          	csrs	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:47
    mLightCount=0;       //灯的闪烁次数
   137e2:	4a81                	li	s5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:45
    mFlag='A';           //灯的状态标志
   137e4:	04100a13          	li	s4,65
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:72
    for(;;)   //for(;;)（开头）
    {
        //（2.1）主循环次数变量+1
        mMainLoopCount++;
        //（2.2）未达到主循环次数设定值，继续循环
        if (mMainLoopCount<=MAINLOOP_COUNT) continue; //宏常数在user.h中定义
   137e8:	00219437          	lui	s0,0x219
   137ec:	1c040413          	addi	s0,s0,448 # 2191c0 <_data_lma+0x2016f8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:94
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
            printf(" LIGHT_BLUE:OFF--\r\n");  //串口输出灯的状态
        }
        
        num_AD1 = adc_read(DIFF_CHANNEL);        
        printf("%s(%s、%s)的A/D值：  %d\r\n",diffName,diffPinName1,diffPinName2,num_AD1);  //串口输出差分通道1的AD值
   137f0:	8ca6                	mv	s9,s1
   137f2:	1fff2c17          	auipc	s8,0x1fff2
   137f6:	e9ec0c13          	addi	s8,s8,-354 # 20005690 <diffPinName1>
   137fa:	89ca                	mv	s3,s2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:96
        printf("%s电压：",diffName);
        printf("%.2f\n",diff_ad_to_voltage(num_AD1)); //串口输出差分通道1的AD值
   137fc:	00004b97          	auipc	s7,0x4
   13800:	ca4b8b93          	addi	s7,s7,-860 # 174a0 <strlen+0xb0>
   13804:	00004917          	auipc	s2,0x4
   13808:	ca490913          	addi	s2,s2,-860 # 174a8 <strlen+0xb8>
   1380c:	00004b17          	auipc	s6,0x4
   13810:	ca4b0b13          	addi	s6,s6,-860 # 174b0 <strlen+0xc0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:98
        num_AD1 = adc_read(SINGLE_CHANNEL);        
        printf("%s(%s)的A/D值：  %d\r\n",singleName,singlePinName,num_AD1);           //串口输出差分通道1的AD值
   13814:	1fff2497          	auipc	s1,0x1fff2
   13818:	e9048493          	addi	s1,s1,-368 # 200056a4 <singlePinName>
   1381c:	aabd                	j	1399a <main+0x334>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:89
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
   1381e:	4585                	li	a1,1
   13820:	10e00513          	li	a0,270
   13824:	00000097          	auipc	ra,0x0
   13828:	304080e7          	jalr	772(ra) # 13b28 <gpio_set>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:90
            printf(" LIGHT_BLUE:OFF--\r\n");  //串口输出灯的状态
   1382c:	00004517          	auipc	a0,0x4
   13830:	f6050513          	addi	a0,a0,-160 # 1778c <strlen+0x39c>
   13834:	00001097          	auipc	ra,0x1
   13838:	494080e7          	jalr	1172(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:88
            mFlag='L';                       //灯的状态标志
   1383c:	04c00a13          	li	s4,76
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:93
        num_AD1 = adc_read(DIFF_CHANNEL);        
   13840:	4541                	li	a0,16
   13842:	00000097          	auipc	ra,0x0
   13846:	a38080e7          	jalr	-1480(ra) # 1327a <adc_read>
   1384a:	8d2a                	mv	s10,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:94
        printf("%s(%s、%s)的A/D值：  %d\r\n",diffName,diffPinName1,diffPinName2,num_AD1);  //串口输出差分通道1的AD值
   1384c:	872a                	mv	a4,a0
   1384e:	86e6                	mv	a3,s9
   13850:	8662                	mv	a2,s8
   13852:	85ce                	mv	a1,s3
   13854:	00004517          	auipc	a0,0x4
   13858:	f4c50513          	addi	a0,a0,-180 # 177a0 <strlen+0x3b0>
   1385c:	00001097          	auipc	ra,0x1
   13860:	46c080e7          	jalr	1132(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:95
        printf("%s电压：",diffName);
   13864:	85ce                	mv	a1,s3
   13866:	00004517          	auipc	a0,0x4
   1386a:	f5650513          	addi	a0,a0,-170 # 177bc <strlen+0x3cc>
   1386e:	00001097          	auipc	ra,0x1
   13872:	45a080e7          	jalr	1114(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:96
        printf("%.2f\n",diff_ad_to_voltage(num_AD1)); //串口输出差分通道1的AD值
   13876:	856a                	mv	a0,s10
   13878:	00003097          	auipc	ra,0x3
   1387c:	63e080e7          	jalr	1598(ra) # 16eb6 <__floatsidf>
   13880:	000ba603          	lw	a2,0(s7)
   13884:	004ba683          	lw	a3,4(s7)
   13888:	00003097          	auipc	ra,0x3
   1388c:	9b8080e7          	jalr	-1608(ra) # 16240 <__muldf3>
   13890:	00092603          	lw	a2,0(s2)
   13894:	00492683          	lw	a3,4(s2)
   13898:	00003097          	auipc	ra,0x3
   1389c:	9a8080e7          	jalr	-1624(ra) # 16240 <__muldf3>
   138a0:	000b2603          	lw	a2,0(s6)
   138a4:	004b2683          	lw	a3,4(s6)
   138a8:	00003097          	auipc	ra,0x3
   138ac:	e60080e7          	jalr	-416(ra) # 16708 <__subdf3>
   138b0:	862a                	mv	a2,a0
   138b2:	86ae                	mv	a3,a1
   138b4:	00004517          	auipc	a0,0x4
   138b8:	f1450513          	addi	a0,a0,-236 # 177c8 <strlen+0x3d8>
   138bc:	00001097          	auipc	ra,0x1
   138c0:	40c080e7          	jalr	1036(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:97
        num_AD1 = adc_read(SINGLE_CHANNEL);        
   138c4:	4511                	li	a0,4
   138c6:	00000097          	auipc	ra,0x0
   138ca:	9b4080e7          	jalr	-1612(ra) # 1327a <adc_read>
   138ce:	8d2a                	mv	s10,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:98
        printf("%s(%s)的A/D值：  %d\r\n",singleName,singlePinName,num_AD1);           //串口输出差分通道1的AD值
   138d0:	1fff2d97          	auipc	s11,0x1fff2
   138d4:	dccd8d93          	addi	s11,s11,-564 # 2000569c <singleName>
   138d8:	86aa                	mv	a3,a0
   138da:	8626                	mv	a2,s1
   138dc:	85ee                	mv	a1,s11
   138de:	00004517          	auipc	a0,0x4
   138e2:	ef250513          	addi	a0,a0,-270 # 177d0 <strlen+0x3e0>
   138e6:	00001097          	auipc	ra,0x1
   138ea:	3e2080e7          	jalr	994(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:99
        printf("%s(%s)电压： ",singleName,singlePinName);
   138ee:	8626                	mv	a2,s1
   138f0:	85ee                	mv	a1,s11
   138f2:	00004517          	auipc	a0,0x4
   138f6:	ef650513          	addi	a0,a0,-266 # 177e8 <strlen+0x3f8>
   138fa:	00001097          	auipc	ra,0x1
   138fe:	3ce080e7          	jalr	974(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:100
        printf(" %.2f\r\n",single_ad_to_voltage(num_AD1));       //串口输出差分通道1的AD值
   13902:	856a                	mv	a0,s10
   13904:	00003097          	auipc	ra,0x3
   13908:	5b2080e7          	jalr	1458(ra) # 16eb6 <__floatsidf>
   1390c:	00004797          	auipc	a5,0x4
   13910:	b8c78793          	addi	a5,a5,-1140 # 17498 <strlen+0xa8>
   13914:	4390                	lw	a2,0(a5)
   13916:	43d4                	lw	a3,4(a5)
   13918:	00003097          	auipc	ra,0x3
   1391c:	928080e7          	jalr	-1752(ra) # 16240 <__muldf3>
   13920:	00092603          	lw	a2,0(s2)
   13924:	00492683          	lw	a3,4(s2)
   13928:	00003097          	auipc	ra,0x3
   1392c:	918080e7          	jalr	-1768(ra) # 16240 <__muldf3>
   13930:	862a                	mv	a2,a0
   13932:	86ae                	mv	a3,a1
   13934:	00004517          	auipc	a0,0x4
   13938:	ec450513          	addi	a0,a0,-316 # 177f8 <strlen+0x408>
   1393c:	00001097          	auipc	ra,0x1
   13940:	38c080e7          	jalr	908(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:101
        num_AD2 = adc_ave(TEMPSENSOR_CHANNEL,5);                 //使用中值滤波和均值滤波
   13944:	4595                	li	a1,5
   13946:	453d                	li	a0,15
   13948:	00000097          	auipc	ra,0x0
   1394c:	c52080e7          	jalr	-942(ra) # 1359a <adc_ave>
   13950:	8d2a                	mv	s10,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:102
        printf("内部温度传感器的A/D值：    %d\r\n",num_AD2);       //串口输出内部传感器的AD值
   13952:	85aa                	mv	a1,a0
   13954:	00004517          	auipc	a0,0x4
   13958:	eac50513          	addi	a0,a0,-340 # 17800 <strlen+0x410>
   1395c:	00001097          	auipc	ra,0x1
   13960:	36c080e7          	jalr	876(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:103
        temp=adc_mcu_temp(num_AD2);
   13964:	856a                	mv	a0,s10
   13966:	00000097          	auipc	ra,0x0
   1396a:	c88080e7          	jalr	-888(ra) # 135ee <adc_mcu_temp>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:104
	    printf("mcu温度为%.2f度\r\n",temp);
   1396e:	00003097          	auipc	ra,0x3
   13972:	7f0080e7          	jalr	2032(ra) # 1715e <__extendsfdf2>
   13976:	862a                	mv	a2,a0
   13978:	86ae                	mv	a3,a1
   1397a:	00004517          	auipc	a0,0x4
   1397e:	ea650513          	addi	a0,a0,-346 # 17820 <strlen+0x430>
   13982:	00001097          	auipc	ra,0x1
   13986:	346080e7          	jalr	838(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:105
        printf("   \r\n"); 
   1398a:	00004517          	auipc	a0,0x4
   1398e:	eaa50513          	addi	a0,a0,-342 # 17834 <strlen+0x444>
   13992:	00001097          	auipc	ra,0x1
   13996:	336080e7          	jalr	822(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:70
        mMainLoopCount++;
   1399a:	47b2                	lw	a5,12(sp)
   1399c:	0785                	addi	a5,a5,1
   1399e:	c63e                	sw	a5,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:72
        if (mMainLoopCount<=MAINLOOP_COUNT) continue; //宏常数在user.h中定义
   139a0:	47b2                	lw	a5,12(sp)
   139a2:	fef47ce3          	bgeu	s0,a5,1399a <main+0x334>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:75
        mMainLoopCount=0; 
   139a6:	c602                	sw	zero,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:77
        if (mFlag=='L')                    //判断灯的状态标志
   139a8:	04c00793          	li	a5,76
   139ac:	e6fa19e3          	bne	s4,a5,1381e <main+0x1b8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:79
            mLightCount++;  
   139b0:	0a85                	addi	s5,s5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:80
            printf(" 蓝灯闪烁次数mLightCount = %d\r\n",mLightCount);
   139b2:	85d6                	mv	a1,s5
   139b4:	00004517          	auipc	a0,0x4
   139b8:	da450513          	addi	a0,a0,-604 # 17758 <strlen+0x368>
   139bc:	00001097          	auipc	ra,0x1
   139c0:	30c080e7          	jalr	780(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:82
            gpio_set(LIGHT_BLUE,LIGHT_ON);  //灯“亮”
   139c4:	4581                	li	a1,0
   139c6:	10e00513          	li	a0,270
   139ca:	00000097          	auipc	ra,0x0
   139ce:	15e080e7          	jalr	350(ra) # 13b28 <gpio_set>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:83
            printf(" LIGHT_BLUE:ON--\r\n"); //串口输出灯的状态
   139d2:	00004517          	auipc	a0,0x4
   139d6:	da650513          	addi	a0,a0,-602 # 17778 <strlen+0x388>
   139da:	00001097          	auipc	ra,0x1
   139de:	2ee080e7          	jalr	750(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/main.c:81
            mFlag='A';                       //灯的状态标志
   139e2:	04100a13          	li	s4,65
   139e6:	bda9                	j	13840 <main+0x1da>

000139e8 <flash_erase>:
flash_erase():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:66
//函数返回：函数执行执行状态：0=正常；1=异常。
//参数说明：sect：目标扇区号（范围取决于实际芯片
//功能概要：擦除flash存储器的sect扇区
//======================================================================
uint8_t flash_erase(uint16_t sect)
{
   139e8:	1141                	addi	sp,sp,-16
   139ea:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:70
    uint32_t StartAddr;
    uint8_t flag;
    StartAddr = (uint32_t)(sect * Flash_Sect_size + Flash_Address);
    flag = FLASH_ROM_ERASE(StartAddr,4096);
   139ec:	1fff2797          	auipc	a5,0x1fff2
   139f0:	cc878793          	addi	a5,a5,-824 # 200056b4 <component_fun>
   139f4:	439c                	lw	a5,0(a5)
   139f6:	57fc                	lw	a5,108(a5)
   139f8:	6685                	lui	a3,0x1
   139fa:	4601                	li	a2,0
   139fc:	00c51593          	slli	a1,a0,0xc
   13a00:	4505                	li	a0,1
   13a02:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:73
    return flag;

}
   13a04:	0ff57513          	andi	a0,a0,255
   13a08:	40b2                	lw	ra,12(sp)
   13a0a:	0141                	addi	sp,sp,16
   13a0c:	8082                	ret

00013a0e <flash_Best>:
flash_Best():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:176
//            buf:待写入数据的首地址
//功能概要：首位地址都对齐的情况下的数据写入
//编程参考：暂无
//======================================================================
uint8_t flash_Best(uint16_t sect,uint16_t offset,uint16_t N,uint8_t *buf)
{
   13a0e:	1141                	addi	sp,sp,-16
   13a10:	c606                	sw	ra,12(sp)
   13a12:	8736                	mv	a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:178
    uint32_t addr;
    addr = (uint32_t)(Flash_Address+sect*Flash_Sect_size+offset);
   13a14:	0532                	slli	a0,a0,0xc
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:179
    uint8_t flag=FLASH_ROM_WRITE(addr,buf,N);
   13a16:	1fff2797          	auipc	a5,0x1fff2
   13a1a:	c9e78793          	addi	a5,a5,-866 # 200056b4 <component_fun>
   13a1e:	439c                	lw	a5,0(a5)
   13a20:	57fc                	lw	a5,108(a5)
   13a22:	86b2                	mv	a3,a2
   13a24:	863a                	mv	a2,a4
   13a26:	95aa                	add	a1,a1,a0
   13a28:	4509                	li	a0,2
   13a2a:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:181
    return flag;
}
   13a2c:	0ff57513          	andi	a0,a0,255
   13a30:	40b2                	lw	ra,12(sp)
   13a32:	0141                	addi	sp,sp,16
   13a34:	8082                	ret

00013a36 <flash_read_logic>:
flash_read_logic():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:198
//编程参考：暂无
//=======================================================================
void flash_read_logic(uint8_t* Buffer,uint16_t sect,uint16_t offset,uint32_t N)
{

    uint32_t i, Length = ( N + 3 ) >> 2;
   13a36:	068d                	addi	a3,a3,3
   13a38:	8289                	srli	a3,a3,0x2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:199
    uint32_t* pCode = ( uint32_t* ) (sect * Flash_Sect_size + offset + Flash_Address);
   13a3a:	05b2                	slli	a1,a1,0xc
   13a3c:	962e                	add	a2,a2,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:202
    uint32_t* pBuf = ( uint32_t* ) Buffer;

    for ( i = 0; i < Length; i++ )
   13a3e:	ce91                	beqz	a3,13a5a <flash_read_logic+0x24>
   13a40:	068a                	slli	a3,a3,0x2
   13a42:	96aa                	add	a3,a3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:200
    uint32_t* pBuf = ( uint32_t* ) Buffer;
   13a44:	87aa                	mv	a5,a0
   13a46:	40a60533          	sub	a0,a2,a0
   13a4a:	00a78733          	add	a4,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:204 (discriminator 3)
    {
      *pBuf++ = *pCode++;
   13a4e:	0791                	addi	a5,a5,4
   13a50:	4318                	lw	a4,0(a4)
   13a52:	fee7ae23          	sw	a4,-4(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:202 (discriminator 3)
    for ( i = 0; i < Length; i++ )
   13a56:	fed79ae3          	bne	a5,a3,13a4a <flash_read_logic+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:207
    }

}
   13a5a:	8082                	ret

00013a5c <flash_write>:
flash_write():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:107
{
   13a5c:	7179                	addi	sp,sp,-48
   13a5e:	d606                	sw	ra,44(sp)
   13a60:	d422                	sw	s0,40(sp)
   13a62:	d226                	sw	s1,36(sp)
   13a64:	d04a                	sw	s2,32(sp)
   13a66:	ce4e                	sw	s3,28(sp)
   13a68:	737d                	lui	t1,0xfffff
   13a6a:	911a                	add	sp,sp,t1
   13a6c:	89aa                	mv	s3,a0
   13a6e:	892e                	mv	s2,a1
   13a70:	84b2                	mv	s1,a2
   13a72:	8436                	mv	s0,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:112
    if(offset+N>Flash_Sect_size)
   13a74:	00b60733          	add	a4,a2,a1
   13a78:	6785                	lui	a5,0x1
   13a7a:	04e7d663          	bge	a5,a4,13ac6 <flash_write+0x6a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:116
        flash_write(sect,offset,Flash_Sect_size-offset,buf);
   13a7e:	6605                	lui	a2,0x1
   13a80:	8e0d                	sub	a2,a2,a1
   13a82:	0642                	slli	a2,a2,0x10
   13a84:	8241                	srli	a2,a2,0x10
   13a86:	00000097          	auipc	ra,0x0
   13a8a:	fd6080e7          	jalr	-42(ra) # 13a5c <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:118
        flash_write(sect+1,0,N-(Flash_Sect_size-offset),buf+(Flash_Sect_size-offset));
   13a8e:	6685                	lui	a3,0x1
   13a90:	412686b3          	sub	a3,a3,s2
   13a94:	767d                	lui	a2,0xfffff
   13a96:	9626                	add	a2,a2,s1
   13a98:	964a                	add	a2,a2,s2
   13a9a:	00198513          	addi	a0,s3,1
   13a9e:	96a2                	add	a3,a3,s0
   13aa0:	0642                	slli	a2,a2,0x10
   13aa2:	8241                	srli	a2,a2,0x10
   13aa4:	4581                	li	a1,0
   13aa6:	0542                	slli	a0,a0,0x10
   13aa8:	8141                	srli	a0,a0,0x10
   13aaa:	00000097          	auipc	ra,0x0
   13aae:	fb2080e7          	jalr	-78(ra) # 13a5c <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:134
}
   13ab2:	4501                	li	a0,0
   13ab4:	6305                	lui	t1,0x1
   13ab6:	911a                	add	sp,sp,t1
   13ab8:	50b2                	lw	ra,44(sp)
   13aba:	5422                	lw	s0,40(sp)
   13abc:	5492                	lw	s1,36(sp)
   13abe:	5902                	lw	s2,32(sp)
   13ac0:	49f2                	lw	s3,28(sp)
   13ac2:	6145                	addi	sp,sp,48
   13ac4:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:124
         flash_read_logic(data,sect,0,Flash_Sect_size); //将当前扇区的全部值读入数组中
   13ac6:	6685                	lui	a3,0x1
   13ac8:	4601                	li	a2,0
   13aca:	85aa                	mv	a1,a0
   13acc:	757d                	lui	a0,0xfffff
   13ace:	6785                	lui	a5,0x1
   13ad0:	0818                	addi	a4,sp,16
   13ad2:	97ba                	add	a5,a5,a4
   13ad4:	953e                	add	a0,a0,a5
   13ad6:	00000097          	auipc	ra,0x0
   13ada:	f60080e7          	jalr	-160(ra) # 13a36 <flash_read_logic>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:126
         for(i = 0;i<N;i++)
   13ade:	c885                	beqz	s1,13b0e <flash_write+0xb2>
   13ae0:	87a2                	mv	a5,s0
   13ae2:	777d                	lui	a4,0xfffff
   13ae4:	6685                	lui	a3,0x1
   13ae6:	0810                	addi	a2,sp,16
   13ae8:	96b2                	add	a3,a3,a2
   13aea:	9736                	add	a4,a4,a3
   13aec:	c63a                	sw	a4,12(sp)
   13aee:	012705b3          	add	a1,a4,s2
   13af2:	0405                	addi	s0,s0,1
   13af4:	fff48693          	addi	a3,s1,-1
   13af8:	06c2                	slli	a3,a3,0x10
   13afa:	82c1                	srli	a3,a3,0x10
   13afc:	96a2                	add	a3,a3,s0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:128 (discriminator 3)
             data[offset+i] = buf[i];
   13afe:	0007c703          	lbu	a4,0(a5) # 1000 <MCU_SECTORSIZE>
   13b02:	00e58023          	sb	a4,0(a1)
   13b06:	0785                	addi	a5,a5,1
   13b08:	0585                	addi	a1,a1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:126 (discriminator 3)
         for(i = 0;i<N;i++)
   13b0a:	fed79ae3          	bne	a5,a3,13afe <flash_write+0xa2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/flash.c:131
         flash_Best(sect,0,Flash_Sect_size,data);
   13b0e:	76fd                	lui	a3,0xfffff
   13b10:	6785                	lui	a5,0x1
   13b12:	0818                	addi	a4,sp,16
   13b14:	97ba                	add	a5,a5,a4
   13b16:	96be                	add	a3,a3,a5
   13b18:	6605                	lui	a2,0x1
   13b1a:	4581                	li	a1,0
   13b1c:	854e                	mv	a0,s3
   13b1e:	00000097          	auipc	ra,0x0
   13b22:	ef0080e7          	jalr	-272(ra) # 13a0e <flash_Best>
   13b26:	b771                	j	13ab2 <flash_write+0x56>

00013b28 <gpio_set>:
gpio_get_port_pin():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:372
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
    *port = (port_pin>>8);
   13b28:	00855793          	srli	a5,a0,0x8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   13b2c:	0ff57513          	andi	a0,a0,255
gpio_set():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:70
   switch(port)
   13b30:	c789                	beqz	a5,13b3a <gpio_set+0x12>
   13b32:	4705                	li	a4,1
   13b34:	02e78b63          	beq	a5,a4,13b6a <gpio_set+0x42>
   13b38:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:74
       if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   13b3a:	4785                	li	a5,1
   13b3c:	00f58d63          	beq	a1,a5,13b56 <gpio_set+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:77
           R32_PA_CLR |= (1<<pin);
   13b40:	40001737          	lui	a4,0x40001
   13b44:	0ac72683          	lw	a3,172(a4) # 400010ac <_eusrstack+0x1fff90ac>
   13b48:	4785                	li	a5,1
   13b4a:	00a79533          	sll	a0,a5,a0
   13b4e:	8d55                	or	a0,a0,a3
   13b50:	0aa72623          	sw	a0,172(a4)
   13b54:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:75
           R32_PA_OUT |= (1<<pin);
   13b56:	40001737          	lui	a4,0x40001
   13b5a:	0a872683          	lw	a3,168(a4) # 400010a8 <_eusrstack+0x1fff90a8>
   13b5e:	00a79533          	sll	a0,a5,a0
   13b62:	8d55                	or	a0,a0,a3
   13b64:	0aa72423          	sw	a0,168(a4)
   13b68:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:81
      if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   13b6a:	4785                	li	a5,1
   13b6c:	00f58d63          	beq	a1,a5,13b86 <gpio_set+0x5e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:84
          R32_PB_CLR |= (1<<pin);
   13b70:	40001737          	lui	a4,0x40001
   13b74:	0cc72683          	lw	a3,204(a4) # 400010cc <_eusrstack+0x1fff90cc>
   13b78:	4785                	li	a5,1
   13b7a:	00a79533          	sll	a0,a5,a0
   13b7e:	8d55                	or	a0,a0,a3
   13b80:	0ca72623          	sw	a0,204(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:88
}
   13b84:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:82
          R32_PB_OUT |= (1<<pin);
   13b86:	40001737          	lui	a4,0x40001
   13b8a:	0c872683          	lw	a3,200(a4) # 400010c8 <_eusrstack+0x1fff90c8>
   13b8e:	00a79533          	sll	a0,a5,a0
   13b92:	8d55                	or	a0,a0,a3
   13b94:	0ca72423          	sw	a0,200(a4)
   13b98:	8082                	ret

00013b9a <gpio_init>:
gpio_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:24
{
   13b9a:	1141                	addi	sp,sp,-16
   13b9c:	c606                	sw	ra,12(sp)
gpio_get_port_pin():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:372
    *port = (port_pin>>8);
   13b9e:	00855793          	srli	a5,a0,0x8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   13ba2:	0ff57693          	andi	a3,a0,255
gpio_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:29
    switch(port)
   13ba6:	c799                	beqz	a5,13bb4 <gpio_init+0x1a>
   13ba8:	4705                	li	a4,1
   13baa:	02e78e63          	beq	a5,a4,13be6 <gpio_init+0x4c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:55
}
   13bae:	40b2                	lw	ra,12(sp)
   13bb0:	0141                	addi	sp,sp,16
   13bb2:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:32
        if(dir == 1)  //定义为输出引脚
   13bb4:	4785                	li	a5,1
   13bb6:	00f58963          	beq	a1,a5,13bc8 <gpio_init+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:39
            R32_PA_DIR &=~(GPIO_INPUT << pin );
   13bba:	400017b7          	lui	a5,0x40001
   13bbe:	0a07a703          	lw	a4,160(a5) # 400010a0 <_eusrstack+0x1fff90a0>
   13bc2:	0ae7a023          	sw	a4,160(a5)
   13bc6:	b7e5                	j	13bae <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:34
            R32_PA_DIR |= (GPIO_OUTPUT << pin );
   13bc8:	40001737          	lui	a4,0x40001
   13bcc:	0a072583          	lw	a1,160(a4) # 400010a0 <_eusrstack+0x1fff90a0>
   13bd0:	00d796b3          	sll	a3,a5,a3
   13bd4:	8ecd                	or	a3,a3,a1
   13bd6:	0ad72023          	sw	a3,160(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:35
            gpio_set(port_pin,state);
   13bda:	85b2                	mv	a1,a2
   13bdc:	00000097          	auipc	ra,0x0
   13be0:	f4c080e7          	jalr	-180(ra) # 13b28 <gpio_set>
   13be4:	b7e9                	j	13bae <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:43
        if(dir == 1)  //定义为输出引脚
   13be6:	4785                	li	a5,1
   13be8:	00f58963          	beq	a1,a5,13bfa <gpio_init+0x60>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:50
            R32_PB_DIR &=~(GPIO_INPUT << pin );
   13bec:	400017b7          	lui	a5,0x40001
   13bf0:	0c07a703          	lw	a4,192(a5) # 400010c0 <_eusrstack+0x1fff90c0>
   13bf4:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:55
}
   13bf8:	bf5d                	j	13bae <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:45
            R32_PB_DIR |= (GPIO_OUTPUT << pin );
   13bfa:	40001737          	lui	a4,0x40001
   13bfe:	0c072583          	lw	a1,192(a4) # 400010c0 <_eusrstack+0x1fff90c0>
   13c02:	00d796b3          	sll	a3,a5,a3
   13c06:	8ecd                	or	a3,a3,a1
   13c08:	0cd72023          	sw	a3,192(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gpio.c:46
            gpio_set(port_pin,state);
   13c0c:	85b2                	mv	a1,a2
   13c0e:	00000097          	auipc	ra,0x0
   13c12:	f1a080e7          	jalr	-230(ra) # 13b28 <gpio_set>
   13c16:	bf61                	j	13bae <gpio_init+0x14>

00013c18 <IRQ_OPC_CHANGE>:
IRQ_OPC_CHANGE():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:25
    static uint32_t opcode = 0;
    uint32_t bios_addr=0, user_addr=0;  //函数入口地址
    uint32_t user_opc=0;
    uint32_t imm1=0,imm2=0;
    uint32_t user_pc=0;
    if(IRQ_NUM == SysTick_IRQn)     //对SysTick_Handler中断进行重定向
   13c18:	47b1                	li	a5,12
   13c1a:	02f50563          	beq	a0,a5,13c44 <IRQ_OPC_CHANGE+0x2c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:31
    {
        user_addr = (uint32_t)SysTick_Handler;
        bios_addr = (uint32_t)component_fun[28];
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
    }
    else if(IRQ_NUM == SWI_IRQn)    //对SysTick_Handler中断进行重定向
   13c1e:	47b9                	li	a5,14
   13c20:	08f50763          	beq	a0,a5,13cae <IRQ_OPC_CHANGE+0x96>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:37
    {
        user_addr = (uint32_t)SW_Handler;
        bios_addr = (uint32_t)component_fun[29];
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
    }
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   13c24:	476d                	li	a4,27
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:44
        user_addr = (uint32_t)UART1_IRQHandler;
        bios_addr = (uint32_t)component_fun[30];
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
    }
    else                            //仅支持SysTick_Handler、SW_Handler、UART1_IRQHandler的重定向
       return 0;
   13c26:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:37
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   13c28:	08e51163          	bne	a0,a4,13caa <IRQ_OPC_CHANGE+0x92>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:39
        user_addr = (uint32_t)UART1_IRQHandler;
   13c2c:	ffffe817          	auipc	a6,0xffffe
   13c30:	4a080813          	addi	a6,a6,1184 # 120cc <UART1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:40
        bios_addr = (uint32_t)component_fun[30];
   13c34:	1fff2797          	auipc	a5,0x1fff2
   13c38:	a8078793          	addi	a5,a5,-1408 # 200056b4 <component_fun>
   13c3c:	439c                	lw	a5,0(a5)
   13c3e:	5fb0                	lw	a2,120(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:41
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
   13c40:	59b8                	lw	a4,112(a1)
   13c42:	a821                	j	13c5a <IRQ_OPC_CHANGE+0x42>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:27
        user_addr = (uint32_t)SysTick_Handler;
   13c44:	ffffe817          	auipc	a6,0xffffe
   13c48:	45880813          	addi	a6,a6,1112 # 1209c <SysTick_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:28
        bios_addr = (uint32_t)component_fun[28];
   13c4c:	1fff2797          	auipc	a5,0x1fff2
   13c50:	a6878793          	addi	a5,a5,-1432 # 200056b4 <component_fun>
   13c54:	439c                	lw	a5,0(a5)
   13c56:	5bb0                	lw	a2,112(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:29
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
   13c58:	59d8                	lw	a4,52(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:50
    // printf("addr1:%lx\r\n", user_addr);
    // printf("addr2:%lx\r\n", bios_addr);
    // printf("opc:%lx\r\n", user_opc);

    //判断该指令是否为向前跳转，如果是向前跳转说明已经修改过了中断向量表，无需再次修改
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   13c5a:	06074663          	bltz	a4,13cc6 <IRQ_OPC_CHANGE+0xae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:52

    imm1 = ( ((user_opc&0x80000000)>>11) | ((user_opc&0x7FE00000)>>20) | ((user_opc&0x00100000)>>9) | ((user_opc&0x000FF000)) );
   13c5e:	00975793          	srli	a5,a4,0x9
   13c62:	6685                	lui	a3,0x1
   13c64:	80068693          	addi	a3,a3,-2048 # 800 <GEC_USER_SECTOR_END+0x7db>
   13c68:	8ff5                	and	a5,a5,a3
   13c6a:	000ff6b7          	lui	a3,0xff
   13c6e:	00d775b3          	and	a1,a4,a3
   13c72:	8fcd                	or	a5,a5,a1
   13c74:	8351                	srli	a4,a4,0x14
   13c76:	7fe77713          	andi	a4,a4,2046
   13c7a:	8fd9                	or	a5,a5,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:58
    if(imm1>>20==1)         //向前跳转，补符号位
        imm1 = 0xFFE00000 | imm1;
    // printf("imm1:%lx\r\n", imm1);
    user_pc = user_addr - imm1;
    // printf("pc:%lx\r\n", user_pc);
    imm2 = bios_addr - user_pc;
   13c7c:	41060633          	sub	a2,a2,a6
   13c80:	97b2                	add	a5,a5,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:60
    // printf("imm2:%lx\r\n", imm2);
    opcode = (((imm2&0x100000)<<11) | ((imm2&0x7FE)<<20) | ((imm2&0x800)<<9) | (imm2&0xFF000)) | (0x0) | (0x6f);
   13c82:	00b79513          	slli	a0,a5,0xb
   13c86:	80000737          	lui	a4,0x80000
   13c8a:	8d79                	and	a0,a0,a4
   13c8c:	00979713          	slli	a4,a5,0x9
   13c90:	00100637          	lui	a2,0x100
   13c94:	8f71                	and	a4,a4,a2
   13c96:	8d59                	or	a0,a0,a4
   13c98:	8efd                	and	a3,a3,a5
   13c9a:	8d55                	or	a0,a0,a3
   13c9c:	07d2                	slli	a5,a5,0x14
   13c9e:	7fe00737          	lui	a4,0x7fe00
   13ca2:	8ff9                	and	a5,a5,a4
   13ca4:	8fc9                	or	a5,a5,a0
   13ca6:	06f7e793          	ori	a5,a5,111
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:63
    // printf("opcode:%lx\r\n", opcode);
    return opcode;
}
   13caa:	853e                	mv	a0,a5
   13cac:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:33
        user_addr = (uint32_t)SW_Handler;
   13cae:	ffffe817          	auipc	a6,0xffffe
   13cb2:	3f280813          	addi	a6,a6,1010 # 120a0 <SW_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:34
        bios_addr = (uint32_t)component_fun[29];
   13cb6:	1fff2797          	auipc	a5,0x1fff2
   13cba:	9fe78793          	addi	a5,a5,-1538 # 200056b4 <component_fun>
   13cbe:	439c                	lw	a5,0(a5)
   13cc0:	5bf0                	lw	a2,116(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:35
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
   13cc2:	5dd8                	lw	a4,60(a1)
   13cc4:	bf59                	j	13c5a <IRQ_OPC_CHANGE+0x42>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:50 (discriminator 1)
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   13cc6:	0505                	addi	a0,a0,1
   13cc8:	050a                	slli	a0,a0,0x2
   13cca:	952e                	add	a0,a0,a1
   13ccc:	411c                	lw	a5,0(a0)
   13cce:	bff1                	j	13caa <IRQ_OPC_CHANGE+0x92>

00013cd0 <Vectors_Init>:
Vectors_Init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:72
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
   13cd0:	716d                	addi	sp,sp,-272
   13cd2:	10112623          	sw	ra,268(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:82
    // {
    //     flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    //     MCU_FLASH_ADDR_START,24,(uint8_t *)"0123456789ABCDEF20200716");
    // }
    //（1）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+GEC_COMPONENT_LST_START*MCU_SECTORSIZE);
   13cd6:	67c1                	lui	a5,0x10
   13cd8:	1fff2717          	auipc	a4,0x1fff2
   13cdc:	9cf72e23          	sw	a5,-1572(a4) # 200056b4 <component_fun>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:87
    
    uint8_t user[MCU_SECTORSIZE/16];                    //User向量表变量数组
    uint32_t opcode;
    //（2.1）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_read_logic(user,GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16);
   13ce0:	10000693          	li	a3,256
   13ce4:	4601                	li	a2,0
   13ce6:	45c9                	li	a1,18
   13ce8:	850a                	mv	a0,sp
   13cea:	00000097          	auipc	ra,0x0
   13cee:	d4c080e7          	jalr	-692(ra) # 13a36 <flash_read_logic>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:89
    // （2.2）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_erase(GEC_USER_SECTOR_START);
   13cf2:	4549                	li	a0,18
   13cf4:	00000097          	auipc	ra,0x0
   13cf8:	cf4080e7          	jalr	-780(ra) # 139e8 <flash_erase>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:92
    //重定向 UART1_IRQHandler
    // user[112]=(uint8_t)(0x6f); user[113]=(uint8_t)(0x40); user[114]=(uint8_t)(0xaf); user[115]=(uint8_t)(0x8a);
    opcode = IRQ_OPC_CHANGE(UART1_IRQn, user);
   13cfc:	858a                	mv	a1,sp
   13cfe:	456d                	li	a0,27
   13d00:	00000097          	auipc	ra,0x0
   13d04:	f18080e7          	jalr	-232(ra) # 13c18 <IRQ_OPC_CHANGE>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:93
    ((uint32_t *)user)[UART1_IRQn+1] = opcode;
   13d08:	d8aa                	sw	a0,112(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:97
    #if (RTThread_Start == 0)
        //重定向 SW_Handler
        // user[60]=(uint8_t)(0x6f); user[61]=(uint8_t)(0x40); user[62]=(uint8_t)(0x0f); user[63]=(uint8_t)(0xdb);
        opcode = IRQ_OPC_CHANGE(SWI_IRQn, user);
   13d0a:	858a                	mv	a1,sp
   13d0c:	4539                	li	a0,14
   13d0e:	00000097          	auipc	ra,0x0
   13d12:	f0a080e7          	jalr	-246(ra) # 13c18 <IRQ_OPC_CHANGE>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:98
        ((uint32_t *)user)[SWI_IRQn+1] = opcode;
   13d16:	de2a                	sw	a0,60(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:101
        //重定向 SysTickHandler
        // user[52]=(uint8_t)(0x6f); user[53]=(uint8_t)(0x40); user[54]=(uint8_t)(0x0f); user[55]=(uint8_t)(0x86);
        opcode = IRQ_OPC_CHANGE(SysTick_IRQn, user);
   13d18:	858a                	mv	a1,sp
   13d1a:	4531                	li	a0,12
   13d1c:	00000097          	auipc	ra,0x0
   13d20:	efc080e7          	jalr	-260(ra) # 13c18 <IRQ_OPC_CHANGE>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:102
        ((uint32_t *)user)[SysTick_IRQn+1] = opcode;
   13d24:	da2a                	sw	a0,52(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:105
    #endif
    //（2.3）将修改后的user数组写回User中断向量表
    flash_write(GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16,user);
   13d26:	868a                	mv	a3,sp
   13d28:	10000613          	li	a2,256
   13d2c:	4581                	li	a1,0
   13d2e:	4549                	li	a0,18
   13d30:	00000097          	auipc	ra,0x0
   13d34:	d2c080e7          	jalr	-724(ra) # 13a5c <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:108

    //（4）printf提示
    printf("  【User提示】：将进入User的main函数执行...\r\n\n");
   13d38:	00004517          	auipc	a0,0x4
   13d3c:	b0450513          	addi	a0,a0,-1276 # 1783c <strlen+0x44c>
   13d40:	00001097          	auipc	ra,0x1
   13d44:	f88080e7          	jalr	-120(ra) # 14cc8 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/gec.c:111

    // #endif
}
   13d48:	10c12083          	lw	ra,268(sp)
   13d4c:	6151                	addi	sp,sp,272
   13d4e:	8082                	ret

00013d50 <uart_init>:
uart_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:31
void uart_init(uint8_t uartNo, uint32_t baud_rate)
{
    uint32_t x;

//    SetSysClock( CLK_SOURCE_PLL_60MHz );
    switch (uartNo)
   13d50:	4805                	li	a6,1
   13d52:	09050e63          	beq	a0,a6,13dee <uart_init+0x9e>
   13d56:	01851813          	slli	a6,a0,0x18
   13d5a:	41885813          	srai	a6,a6,0x18
   13d5e:	00080963          	beqz	a6,13d70 <uart_init+0x20>
   13d62:	4809                	li	a6,2
   13d64:	11050663          	beq	a0,a6,13e70 <uart_init+0x120>
   13d68:	480d                	li	a6,3
   13d6a:	19050863          	beq	a0,a6,13efa <uart_init+0x1aa>
   13d6e:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:40
            //
            switch (UART0_GROUP)
            {
                case 0:

                   R32_PB_OUT |= ((uint32_t)(bTXD0));
   13d70:	400017b7          	lui	a5,0x40001
   13d74:	0c87a703          	lw	a4,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   13d78:	08076713          	ori	a4,a4,128
   13d7c:	0ce7a423          	sw	a4,200(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:42
                   //PB4->RX
                   R32_PB_PD_DRV &= ~((uint32_t)(bRXD0));
   13d80:	0d47a703          	lw	a4,212(a5)
   13d84:	9b3d                	andi	a4,a4,-17
   13d86:	0ce7aa23          	sw	a4,212(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:43
                   R32_PB_PU     |= ((uint32_t)(bRXD0));
   13d8a:	0d07a703          	lw	a4,208(a5)
   13d8e:	01076713          	ori	a4,a4,16
   13d92:	0ce7a823          	sw	a4,208(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:44
                   R32_PB_DIR    &= ~((uint32_t)(bRXD0));
   13d96:	0c07a703          	lw	a4,192(a5)
   13d9a:	9b3d                	andi	a4,a4,-17
   13d9c:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:46
                   //PB7->TX
                   R32_PB_PD_DRV &= ~((uint32_t)(bTXD0));
   13da0:	0d47a703          	lw	a4,212(a5)
   13da4:	f7f77713          	andi	a4,a4,-129
   13da8:	0ce7aa23          	sw	a4,212(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:47
                   R32_PB_DIR    |= ((uint32_t)(bTXD0));
   13dac:	0c07a703          	lw	a4,192(a5)
   13db0:	08076713          	ori	a4,a4,128
   13db4:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:50

//                   R8_UART0_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;     // FIFO打开，触发点4字节
                   R8_UART0_LCR = RB_LCR_WORD_SZ;
   13db8:	40003737          	lui	a4,0x40003
   13dbc:	478d                	li	a5,3
   13dbe:	00f701a3          	sb	a5,3(a4) # 40003003 <_eusrstack+0x1fffb003>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:51
                   R8_UART0_IER = RB_IER_TXD_EN;
   13dc2:	04000793          	li	a5,64
   13dc6:	00f700a3          	sb	a5,1(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:52
                   R8_UART0_DIV = 1;
   13dca:	4785                	li	a5,1
   13dcc:	00f70723          	sb	a5,14(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:55

                   //配置波特率115200
                   x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13dd0:	04787637          	lui	a2,0x4787
   13dd4:	8c060613          	addi	a2,a2,-1856 # 47868c0 <_data_lma+0x476edf8>
   13dd8:	02b657b3          	divu	a5,a2,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:56
                   x = (x + 5) / 10;
   13ddc:	0795                	addi	a5,a5,5
   13dde:	4629                	li	a2,10
   13de0:	02c7d7b3          	divu	a5,a5,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:57
                   R16_UART0_DL = (uint16_t)x;
   13de4:	07c2                	slli	a5,a5,0x10
   13de6:	83c1                	srli	a5,a5,0x10
   13de8:	00f71623          	sh	a5,12(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:86
                  break;
                default:
                    break;
            }
#endif
            break;
   13dec:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:93
#ifdef UART1_GROUP
            //
            switch (UART1_GROUP) {
                case 0:

                    R32_PA_OUT |= ((uint32_t)(bTXD1));
   13dee:	400017b7          	lui	a5,0x40001
   13df2:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   13df6:	20076713          	ori	a4,a4,512
   13dfa:	0ae7a423          	sw	a4,168(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:95
                    //PA8->RX
                    R32_PA_PD_DRV &= ~((uint32_t)(bRXD1));
   13dfe:	0b47a703          	lw	a4,180(a5)
   13e02:	eff77713          	andi	a4,a4,-257
   13e06:	0ae7aa23          	sw	a4,180(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:96
                    R32_PA_PU     |= ((uint32_t)(bRXD1));
   13e0a:	0b07a703          	lw	a4,176(a5)
   13e0e:	10076713          	ori	a4,a4,256
   13e12:	0ae7a823          	sw	a4,176(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:97
                    R32_PA_DIR    &= ~((uint32_t)(bRXD1));
   13e16:	0a07a703          	lw	a4,160(a5)
   13e1a:	eff77713          	andi	a4,a4,-257
   13e1e:	0ae7a023          	sw	a4,160(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:100

                    //PA9->TX
                    R32_PA_PD_DRV &= ~((uint32_t)(bTXD1));
   13e22:	0b47a703          	lw	a4,180(a5)
   13e26:	dff77713          	andi	a4,a4,-513
   13e2a:	0ae7aa23          	sw	a4,180(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:101
                    R32_PA_DIR    |= ((uint32_t)(bTXD1));
   13e2e:	0a07a703          	lw	a4,160(a5)
   13e32:	20076713          	ori	a4,a4,512
   13e36:	0ae7a023          	sw	a4,160(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:104

//                    R8_UART1_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                    R8_UART1_LCR = RB_LCR_WORD_SZ;
   13e3a:	40003737          	lui	a4,0x40003
   13e3e:	478d                	li	a5,3
   13e40:	40f701a3          	sb	a5,1027(a4) # 40003403 <_eusrstack+0x1fffb403>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:105
                    R8_UART1_IER = RB_IER_TXD_EN;
   13e44:	04000793          	li	a5,64
   13e48:	40f700a3          	sb	a5,1025(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:106
                    R8_UART1_DIV = 1;
   13e4c:	4785                	li	a5,1
   13e4e:	40f70723          	sb	a5,1038(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:109

                    //配置波特率115200
                    x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13e52:	047876b7          	lui	a3,0x4787
   13e56:	8c068693          	addi	a3,a3,-1856 # 47868c0 <_data_lma+0x476edf8>
   13e5a:	02b6d7b3          	divu	a5,a3,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:110
                    x = (x + 5) / 10;
   13e5e:	0795                	addi	a5,a5,5
   13e60:	46a9                	li	a3,10
   13e62:	02d7d7b3          	divu	a5,a5,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:111
                    R16_UART1_DL = (uint16_t)x;
   13e66:	07c2                	slli	a5,a5,0x10
   13e68:	83c1                	srli	a5,a5,0x10
   13e6a:	40f71623          	sh	a5,1036(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:140
                    break;
                default:
                    break;
            }
#endif
            break;
   13e6e:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:143
        case UART_2:

              R32_PB_OUT |= ((uint32_t)(bTXD2));
   13e70:	400017b7          	lui	a5,0x40001
   13e74:	0c87a683          	lw	a3,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   13e78:	00800537          	lui	a0,0x800
   13e7c:	8ec9                	or	a3,a3,a0
   13e7e:	0cd7a423          	sw	a3,200(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:145
              //PB22->RX
              R32_PB_PD_DRV &= ~((uint32_t)(bRXD2));
   13e82:	0d47a683          	lw	a3,212(a5)
   13e86:	ffc00737          	lui	a4,0xffc00
   13e8a:	177d                	addi	a4,a4,-1
   13e8c:	8ef9                	and	a3,a3,a4
   13e8e:	0cd7aa23          	sw	a3,212(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:146
              R32_PB_PU     |= ((uint32_t)(bRXD2));
   13e92:	0d07a683          	lw	a3,208(a5)
   13e96:	00400637          	lui	a2,0x400
   13e9a:	8ed1                	or	a3,a3,a2
   13e9c:	0cd7a823          	sw	a3,208(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:147
              R32_PB_DIR    &= ~((uint32_t)(bRXD2));
   13ea0:	0c07a683          	lw	a3,192(a5)
   13ea4:	8f75                	and	a4,a4,a3
   13ea6:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:149
              //PB23->TX
              R32_PB_PD_DRV &= ~((uint32_t)(bTXD2));
   13eaa:	0d47a683          	lw	a3,212(a5)
   13eae:	ff800637          	lui	a2,0xff800
   13eb2:	167d                	addi	a2,a2,-1
   13eb4:	8ef1                	and	a3,a3,a2
   13eb6:	0cd7aa23          	sw	a3,212(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:150
              R32_PB_DIR    |= ((uint32_t)(bTXD2));
   13eba:	0c07a703          	lw	a4,192(a5)
   13ebe:	8f49                	or	a4,a4,a0
   13ec0:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:153

//              R8_UART2_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;      // FIFO打开，触发点4字节
              R8_UART2_LCR = RB_LCR_WORD_SZ;
   13ec4:	400046b7          	lui	a3,0x40004
   13ec8:	478d                	li	a5,3
   13eca:	80f681a3          	sb	a5,-2045(a3) # 40003803 <_eusrstack+0x1fffb803>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:154
              R8_UART2_IER = RB_IER_TXD_EN;
   13ece:	04000793          	li	a5,64
   13ed2:	80f680a3          	sb	a5,-2047(a3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:155
              R8_UART2_DIV = 1;
   13ed6:	4785                	li	a5,1
   13ed8:	80f68723          	sb	a5,-2034(a3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:158

              //配置波特率115200
              x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13edc:	04787737          	lui	a4,0x4787
   13ee0:	8c070713          	addi	a4,a4,-1856 # 47868c0 <_data_lma+0x476edf8>
   13ee4:	02b757b3          	divu	a5,a4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:159
              x = (x + 5) / 10;
   13ee8:	0795                	addi	a5,a5,5
   13eea:	4729                	li	a4,10
   13eec:	02e7d7b3          	divu	a5,a5,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:160
              R16_UART2_DL = (uint16_t)x;
   13ef0:	07c2                	slli	a5,a5,0x10
   13ef2:	83c1                	srli	a5,a5,0x10
   13ef4:	80f69623          	sh	a5,-2036(a3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:161
              break;
   13ef8:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:164
        case UART_3:

                R32_PA_OUT |= ((uint32_t)(bTXD3));
   13efa:	400017b7          	lui	a5,0x40001
   13efe:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   13f02:	02076713          	ori	a4,a4,32
   13f06:	0ae7a423          	sw	a4,168(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:166
                //PA4->RX
                R32_PA_PD_DRV &= ~((uint32_t)(bRXD3));
   13f0a:	0b47a703          	lw	a4,180(a5)
   13f0e:	9b3d                	andi	a4,a4,-17
   13f10:	0ae7aa23          	sw	a4,180(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:167
                R32_PA_PU     |= ((uint32_t)(bRXD3));
   13f14:	0b07a703          	lw	a4,176(a5)
   13f18:	01076713          	ori	a4,a4,16
   13f1c:	0ae7a823          	sw	a4,176(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:168
                R32_PA_DIR    &= ~((uint32_t)(bRXD3));
   13f20:	0a07a703          	lw	a4,160(a5)
   13f24:	9b3d                	andi	a4,a4,-17
   13f26:	0ae7a023          	sw	a4,160(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:170
                //PA5->TX
                R32_PA_PD_DRV &= ~((uint32_t)(bTXD3));
   13f2a:	0b47a703          	lw	a4,180(a5)
   13f2e:	fdf77713          	andi	a4,a4,-33
   13f32:	0ae7aa23          	sw	a4,180(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:171
                R32_PA_DIR    |= ((uint32_t)(bTXD3));
   13f36:	0a07a703          	lw	a4,160(a5)
   13f3a:	02076713          	ori	a4,a4,32
   13f3e:	0ae7a023          	sw	a4,160(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:174

//                R8_UART3_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                R8_UART3_LCR = RB_LCR_WORD_SZ;
   13f42:	40004737          	lui	a4,0x40004
   13f46:	478d                	li	a5,3
   13f48:	c0f701a3          	sb	a5,-1021(a4) # 40003c03 <_eusrstack+0x1fffbc03>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:175
                R8_UART3_IER = RB_IER_TXD_EN;
   13f4c:	04000793          	li	a5,64
   13f50:	c0f700a3          	sb	a5,-1023(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:176
                R8_UART3_DIV = 1;
   13f54:	4785                	li	a5,1
   13f56:	c0f70723          	sb	a5,-1010(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:179

               //配置波特率115200
                x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13f5a:	047877b7          	lui	a5,0x4787
   13f5e:	8c078793          	addi	a5,a5,-1856 # 47868c0 <_data_lma+0x476edf8>
   13f62:	02b7d7b3          	divu	a5,a5,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:180
                x = (x + 5) / 10;
   13f66:	0795                	addi	a5,a5,5
   13f68:	46a9                	li	a3,10
   13f6a:	02d7d7b3          	divu	a5,a5,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:181
                R16_UART3_DL = (uint16_t)x;
   13f6e:	07c2                	slli	a5,a5,0x10
   13f70:	83c1                	srli	a5,a5,0x10
   13f72:	c0f71623          	sh	a5,-1012(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:187
                break;
        default:
            break;
    }

}
   13f76:	8082                	ret

00013f78 <uart_send1>:
uart_send1():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:201
uint8_t uart_send1(uint8_t uartNo,uint8_t ch)
{
  uint32_t t;

    //判断传入串口号参数是否有误，有误直接退出
    if(uart_is_uartNo(uartNo)==0)
   13f78:	470d                	li	a4,3
   13f7a:	10a76463          	bltu	a4,a0,14082 <uart_send1+0x10a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:206
    {
        return 0;
    }
    //判断UARTx号
    switch (uartNo)
   13f7e:	4705                	li	a4,1
   13f80:	06e50863          	beq	a0,a4,13ff0 <uart_send1+0x78>
   13f84:	01851713          	slli	a4,a0,0x18
   13f88:	8761                	srai	a4,a4,0x18
   13f8a:	cb49                	beqz	a4,1401c <uart_send1+0xa4>
   13f8c:	4709                	li	a4,2
   13f8e:	02e50b63          	beq	a0,a4,13fc4 <uart_send1+0x4c>
   13f92:	470d                	li	a4,3
   13f94:	0ae51f63          	bne	a0,a4,14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:238
          }
            break;
        case 3:
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
          {
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13f98:	400047b7          	lui	a5,0x40004
   13f9c:	c057c783          	lbu	a5,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
   13fa0:	0207f793          	andi	a5,a5,32
   13fa4:	ebe9                	bnez	a5,14076 <uart_send1+0xfe>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fa6:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13fa8:	40004637          	lui	a2,0x40004
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fac:	66c1                	lui	a3,0x10
   13fae:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13fb2:	c0564703          	lbu	a4,-1019(a2) # 40003c05 <_eusrstack+0x1fffbc05>
   13fb6:	02077713          	andi	a4,a4,32
   13fba:	ef5d                	bnez	a4,14078 <uart_send1+0x100>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:236 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fbc:	0785                	addi	a5,a5,1
   13fbe:	fed79ae3          	bne	a5,a3,13fb2 <uart_send1+0x3a>
   13fc2:	a841                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13fc4:	400047b7          	lui	a5,0x40004
   13fc8:	8057c783          	lbu	a5,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
   13fcc:	0207f793          	andi	a5,a5,32
   13fd0:	efc9                	bnez	a5,1406a <uart_send1+0xf2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fd2:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13fd4:	40004637          	lui	a2,0x40004
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fd8:	66c1                	lui	a3,0x10
   13fda:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13fde:	80564703          	lbu	a4,-2043(a2) # 40003805 <_eusrstack+0x1fffb805>
   13fe2:	02077713          	andi	a4,a4,32
   13fe6:	e359                	bnez	a4,1406c <uart_send1+0xf4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:227 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13fe8:	0785                	addi	a5,a5,1
   13fea:	fed79ae3          	bne	a5,a3,13fde <uart_send1+0x66>
   13fee:	a095                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13ff0:	400037b7          	lui	a5,0x40003
   13ff4:	4057c783          	lbu	a5,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
   13ff8:	0207f793          	andi	a5,a5,32
   13ffc:	e3ad                	bnez	a5,1405e <uart_send1+0xe6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13ffe:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   14000:	40003637          	lui	a2,0x40003
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   14004:	66c1                	lui	a3,0x10
   14006:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   1400a:	40564703          	lbu	a4,1029(a2) # 40003405 <_eusrstack+0x1fffb405>
   1400e:	02077713          	andi	a4,a4,32
   14012:	e739                	bnez	a4,14060 <uart_send1+0xe8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:218 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   14014:	0785                	addi	a5,a5,1
   14016:	fed79ae3          	bne	a5,a3,1400a <uart_send1+0x92>
   1401a:	a825                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   1401c:	400037b7          	lui	a5,0x40003
   14020:	0057c783          	lbu	a5,5(a5) # 40003005 <_eusrstack+0x1fffb005>
   14024:	0207f793          	andi	a5,a5,32
   14028:	e385                	bnez	a5,14048 <uart_send1+0xd0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1402a:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   1402c:	40003637          	lui	a2,0x40003
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   14030:	66c1                	lui	a3,0x10
   14032:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   14036:	00564703          	lbu	a4,5(a2) # 40003005 <_eusrstack+0x1fffb005>
   1403a:	02077713          	andi	a4,a4,32
   1403e:	e711                	bnez	a4,1404a <uart_send1+0xd2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:209 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   14040:	0785                	addi	a5,a5,1
   14042:	fed79ae3          	bne	a5,a3,14036 <uart_send1+0xbe>
   14046:	a031                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:209
   14048:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:212
              R8_UART0_THR = ch;
   1404a:	40003737          	lui	a4,0x40003
   1404e:	00b70423          	sb	a1,8(a4) # 40003008 <_eusrstack+0x1fffb008>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:203
        return 0;
   14052:	6541                	lui	a0,0x10
   14054:	bbb50513          	addi	a0,a0,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
   14058:	00a7b533          	sltu	a0,a5,a0
   1405c:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1405e:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:221
              R8_UART1_THR = ch;
   14060:	40003737          	lui	a4,0x40003
   14064:	40b70423          	sb	a1,1032(a4) # 40003408 <_eusrstack+0x1fffb408>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:222
              break;
   14068:	b7ed                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1406a:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:230
              R8_UART2_THR = ch;
   1406c:	40004737          	lui	a4,0x40004
   14070:	80b70423          	sb	a1,-2040(a4) # 40003808 <_eusrstack+0x1fffb808>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:231
              break;
   14074:	bff9                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   14076:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:239
              R8_UART3_THR = ch;
   14078:	40004737          	lui	a4,0x40004
   1407c:	c0b70423          	sb	a1,-1016(a4) # 40003c08 <_eusrstack+0x1fffbc08>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:240
              break;
   14080:	bfc9                	j	14052 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:203
        return 0;
   14082:	4501                	li	a0,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:252

    if (t >= 0xFBBB)
        return 0; //发送超时，发送失败
    else
        return 1; //成功发送
}
   14084:	8082                	ret

00014086 <uart_re1>:
uart_re1():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:428
//======================================================================
uint8_t uart_re1(uint8_t uartNo,uint8_t *fp)
{
    uint8_t dat;
    uint8_t flag;
    switch (uartNo)
   14086:	4705                	li	a4,1
   14088:	02e50a63          	beq	a0,a4,140bc <uart_re1+0x36>
   1408c:	01851713          	slli	a4,a0,0x18
   14090:	8761                	srai	a4,a4,0x18
   14092:	cb09                	beqz	a4,140a4 <uart_re1+0x1e>
   14094:	4709                	li	a4,2
   14096:	02e50f63          	beq	a0,a4,140d4 <uart_re1+0x4e>
   1409a:	470d                	li	a4,3
   1409c:	04e50863          	beq	a0,a4,140ec <uart_re1+0x66>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:454
            break;
        default:
            break;
    }
    return (dat);
}
   140a0:	853e                	mv	a0,a5
   140a2:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:431
            *fp =1;
   140a4:	4785                	li	a5,1
   140a6:	00f58023          	sb	a5,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:432
            flag = R8_UART0_LSR;
   140aa:	400037b7          	lui	a5,0x40003
   140ae:	0057c703          	lbu	a4,5(a5) # 40003005 <_eusrstack+0x1fffb005>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:433
            return R8_UART0_RBR;
   140b2:	0087c783          	lbu	a5,8(a5)
   140b6:	0ff7f793          	andi	a5,a5,255
   140ba:	b7dd                	j	140a0 <uart_re1+0x1a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:436
            *fp =1;
   140bc:	4785                	li	a5,1
   140be:	00f58023          	sb	a5,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:437
            flag = R8_UART1_LSR;
   140c2:	400037b7          	lui	a5,0x40003
   140c6:	4057c703          	lbu	a4,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:438
            dat = R8_UART1_RBR;
   140ca:	4087c783          	lbu	a5,1032(a5)
   140ce:	0ff7f793          	andi	a5,a5,255
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:439
            break;
   140d2:	b7f9                	j	140a0 <uart_re1+0x1a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:441
            *fp =1;
   140d4:	4785                	li	a5,1
   140d6:	00f58023          	sb	a5,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:442
            flag = R8_UART2_LSR;
   140da:	400047b7          	lui	a5,0x40004
   140de:	8057c703          	lbu	a4,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:443
            dat = R8_UART2_RBR;
   140e2:	8087c783          	lbu	a5,-2040(a5)
   140e6:	0ff7f793          	andi	a5,a5,255
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:444
            break;
   140ea:	bf5d                	j	140a0 <uart_re1+0x1a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:446
            *fp =1;
   140ec:	4785                	li	a5,1
   140ee:	00f58023          	sb	a5,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:447
            flag = R8_UART3_LSR;
   140f2:	400047b7          	lui	a5,0x40004
   140f6:	c057c703          	lbu	a4,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:448
            dat = R8_UART3_RBR;
   140fa:	c087c783          	lbu	a5,-1016(a5)
   140fe:	0ff7f793          	andi	a5,a5,255
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:449
            break;
   14102:	bf79                	j	140a0 <uart_re1+0x1a>

00014104 <uart_enable_re_int>:
uart_enable_re_int():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:497
//功能概要：开串口接收中断
//======================================================================
void uart_enable_re_int(uint8_t uartNo)
{
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
   14104:	478d                	li	a5,3
   14106:	0ca7e163          	bltu	a5,a0,141c8 <uart_enable_re_int+0xc4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:502
    {
        return;
    }

    switch (uartNo)
   1410a:	4785                	li	a5,1
   1410c:	04f50263          	beq	a0,a5,14150 <uart_enable_re_int+0x4c>
   14110:	01851793          	slli	a5,a0,0x18
   14114:	87e1                	srai	a5,a5,0x18
   14116:	cb81                	beqz	a5,14126 <uart_enable_re_int+0x22>
   14118:	4789                	li	a5,2
   1411a:	06f50063          	beq	a0,a5,1417a <uart_enable_re_int+0x76>
   1411e:	478d                	li	a5,3
   14120:	08f50163          	beq	a0,a5,141a2 <uart_enable_re_int+0x9e>
   14124:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:507
    {
        case 0:
//            R8_UART0_FCR = (R8_UART0_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);
//            R8_UART0_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART0_IER |= RB_IER_RECV_RDY;
   14126:	400037b7          	lui	a5,0x40003
   1412a:	0017c703          	lbu	a4,1(a5) # 40003001 <_eusrstack+0x1fffb001>
   1412e:	00176713          	ori	a4,a4,1
   14132:	00e780a3          	sb	a4,1(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:508
            R8_UART0_MCR |= RB_MCR_INT_OE;
   14136:	0007c703          	lbu	a4,0(a5)
   1413a:	00876713          	ori	a4,a4,8
   1413e:	00e78023          	sb	a4,0(a5)
PFIC_EnableIRQ():
c:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\02_CPU/core_riscv.h:87
* Description    : Enable Interrupt
* Input          : IRQn: Interrupt Numbers
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void PFIC_EnableIRQ(IRQn_Type IRQn){
    PFIC->IENR[((UINT32)(IRQn) >> 5)] = (1 << ((UINT32)(IRQn) & 0x1F));
   14142:	e000e7b7          	lui	a5,0xe000e
   14146:	04000737          	lui	a4,0x4000
   1414a:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   1414e:	8082                	ret
uart_enable_re_int():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:515
            break;
        case 1:
//            R8_UART1_FCR = (R8_UART1_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);

//            R8_UART1_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART1_IER |= RB_IER_RECV_RDY;
   14150:	400037b7          	lui	a5,0x40003
   14154:	4017c703          	lbu	a4,1025(a5) # 40003401 <_eusrstack+0x1fffb401>
   14158:	00176713          	ori	a4,a4,1
   1415c:	40e780a3          	sb	a4,1025(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:516
            R8_UART1_MCR |= RB_MCR_INT_OE;
   14160:	4007c703          	lbu	a4,1024(a5)
   14164:	00876713          	ori	a4,a4,8
   14168:	40e78023          	sb	a4,1024(a5)
PFIC_EnableIRQ():
c:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\02_CPU/core_riscv.h:87
   1416c:	e000e7b7          	lui	a5,0xe000e
   14170:	08000737          	lui	a4,0x8000
   14174:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   14178:	8082                	ret
uart_enable_re_int():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:521
            PFIC_EnableIRQ( UART1_IRQn );
            break;
        case 2:
//            R8_UART2_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART2_IER |= RB_IER_RECV_RDY;
   1417a:	400047b7          	lui	a5,0x40004
   1417e:	8017c703          	lbu	a4,-2047(a5) # 40003801 <_eusrstack+0x1fffb801>
   14182:	00176713          	ori	a4,a4,1
   14186:	80e780a3          	sb	a4,-2047(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:522
            R8_UART2_MCR |= RB_MCR_INT_OE;
   1418a:	8007c703          	lbu	a4,-2048(a5)
   1418e:	00876713          	ori	a4,a4,8
   14192:	80e78023          	sb	a4,-2048(a5)
PFIC_EnableIRQ():
c:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\02_CPU/core_riscv.h:87
   14196:	e000e7b7          	lui	a5,0xe000e
   1419a:	4709                	li	a4,2
   1419c:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
   141a0:	8082                	ret
uart_enable_re_int():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:527
            PFIC_EnableIRQ( UART2_IRQn );
            break;
        case 3:
//            R8_UART3_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART3_IER |= RB_IER_RECV_RDY;
   141a2:	400047b7          	lui	a5,0x40004
   141a6:	c017c703          	lbu	a4,-1023(a5) # 40003c01 <_eusrstack+0x1fffbc01>
   141aa:	00176713          	ori	a4,a4,1
   141ae:	c0e780a3          	sb	a4,-1023(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:528
            R8_UART3_MCR |= RB_MCR_INT_OE;
   141b2:	c007c703          	lbu	a4,-1024(a5)
   141b6:	00876713          	ori	a4,a4,8
   141ba:	c0e78023          	sb	a4,-1024(a5)
PFIC_EnableIRQ():
c:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\02_CPU/core_riscv.h:87
   141be:	e000e7b7          	lui	a5,0xe000e
   141c2:	4711                	li	a4,4
   141c4:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
uart_enable_re_int():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/uart.c:536

        default:
            break;
    }

}
   141c8:	8082                	ret

000141ca <UART0_IRQHandler>:
UART0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/isr.c:16
//触发条件：UART_User串口收到一个字节触发
//备    注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler( void )
{
   141ca:	1141                	addi	sp,sp,-16
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/isr.c:19
    //（1）变量声明
    uint8_t flag,ch;
    ch = uart_re1(UART_User,&flag);
   141cc:	00f10593          	addi	a1,sp,15
   141d0:	4501                	li	a0,0
   141d2:	00000097          	auipc	ra,0x0
   141d6:	eb4080e7          	jalr	-332(ra) # 14086 <uart_re1>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/isr.c:20
    uart_send1(UART_User, ch);
   141da:	85aa                	mv	a1,a0
   141dc:	4501                	li	a0,0
   141de:	00000097          	auipc	ra,0x0
   141e2:	d9a080e7          	jalr	-614(ra) # 13f78 <uart_send1>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/isr.c:23
//    UART_UPDATE_Handler_EXIT:
    return;
}
   141e6:	0141                	addi	sp,sp,16
   141e8:	30200073          	mret

000141ec <printk_putc>:
printk_putc():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:28
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
   141ec:	1141                	addi	sp,sp,-16
   141ee:	c606                	sw	ra,12(sp)
   141f0:	c422                	sw	s0,8(sp)
   141f2:	842e                	mv	s0,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:29
	switch (info->dest) {
   141f4:	421c                	lw	a5,0(a2)
   141f6:	4705                	li	a4,1
   141f8:	00e78c63          	beq	a5,a4,14210 <printk_putc+0x24>
   141fc:	4709                	li	a4,2
   141fe:	00e78e63          	beq	a5,a4,1421a <printk_putc+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:40
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
   14202:	401c                	lw	a5,0(s0)
   14204:	0785                	addi	a5,a5,1
   14206:	c01c                	sw	a5,0(s0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:41
}
   14208:	40b2                	lw	ra,12(sp)
   1420a:	4422                	lw	s0,8(sp)
   1420c:	0141                	addi	sp,sp,16
   1420e:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:31
		info->func((char) c);
   14210:	425c                	lw	a5,4(a2)
   14212:	0562                	slli	a0,a0,0x18
   14214:	8561                	srai	a0,a0,0x18
   14216:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:32
		break;
   14218:	b7ed                	j	14202 <printk_putc+0x16>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:34
		*(info->loc) = (unsigned char) c;
   1421a:	461c                	lw	a5,8(a2)
   1421c:	00a78023          	sb	a0,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:35
		++(info->loc);
   14220:	461c                	lw	a5,8(a2)
   14222:	0785                	addi	a5,a5,1
   14224:	c61c                	sw	a5,8(a2)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:36
		break;
   14226:	bff1                	j	14202 <printk_putc+0x16>

00014228 <printk_mknumstr>:
printk_mknumstr():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:131
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
   14228:	00150793          	addi	a5,a0,1
   1422c:	00050023          	sb	zero,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:133

	if (neg) {
   14230:	ce1d                	beqz	a2,1426e <printk_mknumstr+0x46>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:134
		a = *(int *) nump;
   14232:	4198                	lw	a4,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:144
		}
		while (a != 0) {
			b = (int) a / (int) radix;
			c = (int) a - ((int) b * (int) radix);
			if (c < 0) {
				c = ~c + 1 + '0';
   14234:	03000813          	li	a6,48
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:135
		if (a == 0) {
   14238:	e315                	bnez	a4,1425c <printk_mknumstr+0x34>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:136
			*nstrp = '0';
   1423a:	03000793          	li	a5,48
   1423e:	00f500a3          	sb	a5,1(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:137
			++nlen;
   14242:	4605                	li	a2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:173
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
   14244:	8532                	mv	a0,a2
   14246:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:144
				c = ~c + 1 + '0';
   14248:	40e80633          	sub	a2,a6,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:149
			*nstrp++ = (char) c;
   1424c:	0785                	addi	a5,a5,1
   1424e:	fec78fa3          	sb	a2,-1(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:150
			++nlen;
   14252:	fff78613          	addi	a2,a5,-1
   14256:	8e09                	sub	a2,a2,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:148
			a = b;
   14258:	872e                	mv	a4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:140
		while (a != 0) {
   1425a:	d5ed                	beqz	a1,14244 <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:141
			b = (int) a / (int) radix;
   1425c:	02d745b3          	div	a1,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:142
			c = (int) a - ((int) b * (int) radix);
   14260:	02d76733          	rem	a4,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:146
				c = c + '0';
   14264:	03070613          	addi	a2,a4,48 # 8000030 <_data_lma+0x7fe8568>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:143
			if (c < 0) {
   14268:	fe0752e3          	bgez	a4,1424c <printk_mknumstr+0x24>
   1426c:	bff1                	j	14248 <printk_mknumstr+0x20>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:153
		ua = *(unsigned int *) nump;
   1426e:	4198                	lw	a4,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   14270:	8336                	mv	t1,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   14272:	48a5                	li	a7,9
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:154
		if (ua == 0) {
   14274:	e305                	bnez	a4,14294 <printk_mknumstr+0x6c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:155
			*nstrp = '0';
   14276:	03000793          	li	a5,48
   1427a:	00f500a3          	sb	a5,1(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:156
			++nlen;
   1427e:	4605                	li	a2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:157
			goto done;
   14280:	b7d1                	j	14244 <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:168
			*nstrp++ = (char) uc;
   14282:	0785                	addi	a5,a5,1
   14284:	feb78fa3          	sb	a1,-1(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:169
			++nlen;
   14288:	fff78613          	addi	a2,a5,-1
   1428c:	8e09                	sub	a2,a2,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:159
		while (ua != 0) {
   1428e:	fa676be3          	bltu	a4,t1,14244 <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:167
			ua = ub;
   14292:	8742                	mv	a4,a6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   14294:	02d75833          	divu	a6,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:161
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
   14298:	02d77633          	remu	a2,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:165
				uc = uc - 10 + 'A';
   1429c:	03760593          	addi	a1,a2,55
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   142a0:	fec8e1e3          	bltu	a7,a2,14282 <printk_mknumstr+0x5a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:163
				uc = uc + '0';
   142a4:	03060593          	addi	a1,a2,48
   142a8:	bfe9                	j	14282 <printk_mknumstr+0x5a>

000142aa <printk_pad_space>:
printk_pad_space():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:186
	}
}

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
   142aa:	1101                	addi	sp,sp,-32
   142ac:	ce06                	sw	ra,28(sp)
   142ae:	cc22                	sw	s0,24(sp)
   142b0:	ca26                	sw	s1,20(sp)
   142b2:	c84a                	sw	s2,16(sp)
   142b4:	c64e                	sw	s3,12(sp)
   142b6:	842a                	mv	s0,a0
   142b8:	84ae                	mv	s1,a1
   142ba:	89b2                	mv	s3,a2
   142bc:	8936                	mv	s2,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:189
	int i;

	for (i = curlen; i < field_width; i++) {
   142be:	00b55d63          	bge	a0,a1,142d8 <printk_pad_space+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:190 (discriminator 3)
		printk_putc(' ', count, info);
   142c2:	864a                	mv	a2,s2
   142c4:	85ce                	mv	a1,s3
   142c6:	02000513          	li	a0,32
   142ca:	00000097          	auipc	ra,0x0
   142ce:	f22080e7          	jalr	-222(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:189 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
   142d2:	0405                	addi	s0,s0,1
   142d4:	fe8497e3          	bne	s1,s0,142c2 <printk_pad_space+0x18>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:192
	}
}
   142d8:	40f2                	lw	ra,28(sp)
   142da:	4462                	lw	s0,24(sp)
   142dc:	44d2                	lw	s1,20(sp)
   142de:	4942                	lw	s2,16(sp)
   142e0:	49b2                	lw	s3,12(sp)
   142e2:	6105                	addi	sp,sp,32
   142e4:	8082                	ret

000142e6 <out_char>:
out_char():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:18
void out_char(char data) {
   142e6:	1141                	addi	sp,sp,-16
   142e8:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:19
	uart_send1(UART_printf, data);
   142ea:	0ff57593          	andi	a1,a0,255
   142ee:	4505                	li	a0,1
   142f0:	00000097          	auipc	ra,0x0
   142f4:	c88080e7          	jalr	-888(ra) # 13f78 <uart_send1>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:20
}
   142f8:	40b2                	lw	ra,12(sp)
   142fa:	0141                	addi	sp,sp,16
   142fc:	8082                	ret

000142fe <printk_mkfloatstr>:
printk_mkfloatstr():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:50
{
   142fe:	c8010113          	addi	sp,sp,-896
   14302:	36112e23          	sw	ra,892(sp)
   14306:	36812c23          	sw	s0,888(sp)
   1430a:	36912a23          	sw	s1,884(sp)
   1430e:	37212823          	sw	s2,880(sp)
   14312:	37312623          	sw	s3,876(sp)
   14316:	37412423          	sw	s4,872(sp)
   1431a:	37512223          	sw	s5,868(sp)
   1431e:	37612023          	sw	s6,864(sp)
   14322:	35712e23          	sw	s7,860(sp)
   14326:	35812c23          	sw	s8,856(sp)
   1432a:	35912a23          	sw	s9,852(sp)
   1432e:	35a12823          	sw	s10,848(sp)
   14332:	35b12623          	sw	s11,844(sp)
   14336:	842a                	mv	s0,a0
   14338:	8b2e                	mv	s6,a1
   1433a:	8c32                	mv	s8,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   1433c:	19000613          	li	a2,400
   14340:	4581                	li	a1,0
   14342:	1b08                	addi	a0,sp,432
   14344:	fffff097          	auipc	ra,0xfffff
   14348:	d7c080e7          	jalr	-644(ra) # 130c0 <memset>
   1434c:	19000613          	li	a2,400
   14350:	4581                	li	a1,0
   14352:	1008                	addi	a0,sp,32
   14354:	fffff097          	auipc	ra,0xfffff
   14358:	d6c080e7          	jalr	-660(ra) # 130c0 <memset>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:59
	p=(uint64_t)*f;//整数部分
   1435c:	4044                	lw	s1,4(s0)
   1435e:	4000                	lw	s0,0(s0)
   14360:	8522                	mv	a0,s0
   14362:	85a6                	mv	a1,s1
   14364:	00003097          	auipc	ra,0x3
   14368:	bc8080e7          	jalr	-1080(ra) # 16f2c <__fixunsdfdi>
   1436c:	8caa                	mv	s9,a0
   1436e:	8bae                	mv	s7,a1
   14370:	8aaa                	mv	s5,a0
   14372:	8a2e                	mv	s4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:60
	tempf=(*f-p);
   14374:	00003097          	auipc	ra,0x3
   14378:	c56080e7          	jalr	-938(ra) # 16fca <__floatundidf>
   1437c:	862a                	mv	a2,a0
   1437e:	86ae                	mv	a3,a1
   14380:	8522                	mv	a0,s0
   14382:	85a6                	mv	a1,s1
   14384:	00002097          	auipc	ra,0x2
   14388:	384080e7          	jalr	900(ra) # 16708 <__subdf3>
   1438c:	842a                	mv	s0,a0
   1438e:	84ae                	mv	s1,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:61
	while(precision_width--)    tempf*=10;
   14390:	020c0663          	beqz	s8,143bc <printk_mkfloatstr+0xbe>
   14394:	fffc0d13          	addi	s10,s8,-1
   14398:	00003797          	auipc	a5,0x3
   1439c:	5a078793          	addi	a5,a5,1440 # 17938 <strlen+0x548>
   143a0:	0007a903          	lw	s2,0(a5)
   143a4:	0047a983          	lw	s3,4(a5)
   143a8:	5dfd                	li	s11,-1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:61 (discriminator 2)
   143aa:	864a                	mv	a2,s2
   143ac:	86ce                	mv	a3,s3
   143ae:	00002097          	auipc	ra,0x2
   143b2:	e92080e7          	jalr	-366(ra) # 16240 <__muldf3>
   143b6:	1d7d                	addi	s10,s10,-1
   143b8:	ffbd19e3          	bne	s10,s11,143aa <printk_mkfloatstr+0xac>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:62
    q=tempf;
   143bc:	00003097          	auipc	ra,0x3
   143c0:	b70080e7          	jalr	-1168(ra) # 16f2c <__fixunsdfdi>
   143c4:	ce2a                	sw	a0,28(sp)
   143c6:	8dae                	mv	s11,a1
   143c8:	8d2a                	mv	s10,a0
   143ca:	89ae                	mv	s3,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   143cc:	00003797          	auipc	a5,0x3
   143d0:	57478793          	addi	a5,a5,1396 # 17940 <strlen+0x550>
   143d4:	4390                	lw	a2,0(a5)
   143d6:	43d4                	lw	a3,4(a5)
   143d8:	8522                	mv	a0,s0
   143da:	85a6                	mv	a1,s1
   143dc:	00002097          	auipc	ra,0x2
   143e0:	dae080e7          	jalr	-594(ra) # 1618a <__ledf2>
   143e4:	0e055e63          	bgez	a0,144e0 <printk_mkfloatstr+0x1e2>
   143e8:	4601                	li	a2,0
   143ea:	4681                	li	a3,0
   143ec:	8522                	mv	a0,s0
   143ee:	85a6                	mv	a1,s1
   143f0:	00002097          	auipc	ra,0x2
   143f4:	d30080e7          	jalr	-720(ra) # 16120 <__eqdf2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   143f8:	4901                	li	s2,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   143fa:	c56d                	beqz	a0,144e4 <printk_mkfloatstr+0x1e6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   143fc:	00003797          	auipc	a5,0x3
   14400:	53c78793          	addi	a5,a5,1340 # 17938 <strlen+0x548>
   14404:	0047a803          	lw	a6,4(a5)
   14408:	439c                	lw	a5,0(a5)
   1440a:	c83e                	sw	a5,16(sp)
   1440c:	ca42                	sw	a6,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   1440e:	00003797          	auipc	a5,0x3
   14412:	53278793          	addi	a5,a5,1330 # 17940 <strlen+0x550>
   14416:	0047a803          	lw	a6,4(a5)
   1441a:	439c                	lw	a5,0(a5)
   1441c:	c43e                	sw	a5,8(sp)
   1441e:	c642                	sw	a6,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   14420:	4642                	lw	a2,16(sp)
   14422:	46d2                	lw	a3,20(sp)
   14424:	8522                	mv	a0,s0
   14426:	85a6                	mv	a1,s1
   14428:	00002097          	auipc	ra,0x2
   1442c:	e18080e7          	jalr	-488(ra) # 16240 <__muldf3>
   14430:	842a                	mv	s0,a0
   14432:	84ae                	mv	s1,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:69
		k++;			
   14434:	0905                	addi	s2,s2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   14436:	4622                	lw	a2,8(sp)
   14438:	46b2                	lw	a3,12(sp)
   1443a:	00002097          	auipc	ra,0x2
   1443e:	d50080e7          	jalr	-688(ra) # 1618a <__ledf2>
   14442:	00055b63          	bgez	a0,14458 <printk_mkfloatstr+0x15a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:66 (discriminator 1)
   14446:	4601                	li	a2,0
   14448:	4681                	li	a3,0
   1444a:	8522                	mv	a0,s0
   1444c:	85a6                	mv	a1,s1
   1444e:	00002097          	auipc	ra,0x2
   14452:	cd2080e7          	jalr	-814(ra) # 16120 <__eqdf2>
   14456:	f569                	bnez	a0,14420 <printk_mkfloatstr+0x122>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   14458:	019bebb3          	or	s7,s7,s9
   1445c:	080b9663          	bnez	s7,144e8 <printk_mkfloatstr+0x1ea>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:73
		c[i++]='0';
   14460:	03000793          	li	a5,48
   14464:	00fb0023          	sb	a5,0(s6)
   14468:	4485                	li	s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:87
	c[i++]='.';   //小数点
   1446a:	00148413          	addi	s0,s1,1
   1446e:	009b07b3          	add	a5,s6,s1
   14472:	02e00713          	li	a4,46
   14476:	00e78023          	sb	a4,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   1447a:	4772                	lw	a4,28(sp)
   1447c:	00ededb3          	or	s11,s11,a4
   14480:	0c0d9a63          	bnez	s11,14554 <printk_mkfloatstr+0x256>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:89
		while(zeroNum--) c[i++]='0';     //【20201119】-3/3   原为 c[i++]='0';
   14484:	000c0d63          	beqz	s8,1449e <printk_mkfloatstr+0x1a0>
   14488:	018b0733          	add	a4,s6,s8
   1448c:	94ba                	add	s1,s1,a4
   1448e:	03000713          	li	a4,48
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:89 (discriminator 2)
   14492:	00e780a3          	sb	a4,1(a5)
   14496:	0785                	addi	a5,a5,1
   14498:	fef49de3          	bne	s1,a5,14492 <printk_mkfloatstr+0x194>
   1449c:	9462                	add	s0,s0,s8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:109
	c[i]='\0';
   1449e:	9b22                	add	s6,s6,s0
   144a0:	000b0023          	sb	zero,0(s6)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:111
}
   144a4:	8522                	mv	a0,s0
   144a6:	37c12083          	lw	ra,892(sp)
   144aa:	37812403          	lw	s0,888(sp)
   144ae:	37412483          	lw	s1,884(sp)
   144b2:	37012903          	lw	s2,880(sp)
   144b6:	36c12983          	lw	s3,876(sp)
   144ba:	36812a03          	lw	s4,872(sp)
   144be:	36412a83          	lw	s5,868(sp)
   144c2:	36012b03          	lw	s6,864(sp)
   144c6:	35c12b83          	lw	s7,860(sp)
   144ca:	35812c03          	lw	s8,856(sp)
   144ce:	35412c83          	lw	s9,852(sp)
   144d2:	35012d03          	lw	s10,848(sp)
   144d6:	34c12d83          	lw	s11,844(sp)
   144da:	38010113          	addi	sp,sp,896
   144de:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   144e0:	4901                	li	s2,0
   144e2:	bf9d                	j	14458 <printk_mkfloatstr+0x15a>
   144e4:	4901                	li	s2,0
   144e6:	bf8d                	j	14458 <printk_mkfloatstr+0x15a>
   144e8:	1b010c93          	addi	s9,sp,432
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   144ec:	8466                	mv	s0,s9
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   144ee:	4b81                	li	s7,0
   144f0:	a021                	j	144f8 <printk_mkfloatstr+0x1fa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:79
			p/=10;
   144f2:	8aaa                	mv	s5,a0
   144f4:	8a2e                	mv	s4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:78
			a[j++]=p%10;
   144f6:	8ba6                	mv	s7,s1
   144f8:	001b8493          	addi	s1,s7,1
   144fc:	4629                	li	a2,10
   144fe:	4681                	li	a3,0
   14500:	8556                	mv	a0,s5
   14502:	85d2                	mv	a1,s4
   14504:	00001097          	auipc	ra,0x1
   14508:	b92080e7          	jalr	-1134(ra) # 15096 <__umoddi3>
   1450c:	c008                	sw	a0,0(s0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:79
			p/=10;
   1450e:	4629                	li	a2,10
   14510:	4681                	li	a3,0
   14512:	8556                	mv	a0,s5
   14514:	85d2                	mv	a1,s4
   14516:	00000097          	auipc	ra,0x0
   1451a:	7e8080e7          	jalr	2024(ra) # 14cfe <__udivdi3>
   1451e:	0411                	addi	s0,s0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:76
		while(p!=0)//倒序的数字
   14520:	fc0a19e3          	bnez	s4,144f2 <printk_mkfloatstr+0x1f4>
   14524:	000a1563          	bnez	s4,1452e <printk_mkfloatstr+0x230>
   14528:	47a5                	li	a5,9
   1452a:	fd57e4e3          	bltu	a5,s5,144f2 <printk_mkfloatstr+0x1f4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   1452e:	dc95                	beqz	s1,1446a <printk_mkfloatstr+0x16c>
   14530:	0b8a                	slli	s7,s7,0x2
   14532:	1b1c                	addi	a5,sp,432
   14534:	9bbe                	add	s7,s7,a5
   14536:	875a                	mv	a4,s6
   14538:	a011                	j	1453c <printk_mkfloatstr+0x23e>
   1453a:	8bbe                	mv	s7,a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:83
			c[i++]=a[j-1]+'0';
   1453c:	000ba783          	lw	a5,0(s7)
   14540:	03078793          	addi	a5,a5,48
   14544:	00f70023          	sb	a5,0(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:84
			j--;
   14548:	ffcb8793          	addi	a5,s7,-4
   1454c:	0705                	addi	a4,a4,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   1454e:	ff9b96e3          	bne	s7,s9,1453a <printk_mkfloatstr+0x23c>
   14552:	bf21                	j	1446a <printk_mkfloatstr+0x16c>
   14554:	02010a13          	addi	s4,sp,32
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   14558:	8ad2                	mv	s5,s4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:92
		j=0;
   1455a:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   1455c:	4ba5                	li	s7,9
   1455e:	a019                	j	14564 <printk_mkfloatstr+0x266>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:96
			q/=10;
   14560:	8d2a                	mv	s10,a0
   14562:	89ae                	mv	s3,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:95
			b[j++]=q%10;
   14564:	0485                	addi	s1,s1,1
   14566:	4629                	li	a2,10
   14568:	4681                	li	a3,0
   1456a:	856a                	mv	a0,s10
   1456c:	85ce                	mv	a1,s3
   1456e:	00001097          	auipc	ra,0x1
   14572:	b28080e7          	jalr	-1240(ra) # 15096 <__umoddi3>
   14576:	00aaa023          	sw	a0,0(s5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:96
			q/=10;
   1457a:	4629                	li	a2,10
   1457c:	4681                	li	a3,0
   1457e:	856a                	mv	a0,s10
   14580:	85ce                	mv	a1,s3
   14582:	00000097          	auipc	ra,0x0
   14586:	77c080e7          	jalr	1916(ra) # 14cfe <__udivdi3>
   1458a:	0a91                	addi	s5,s5,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   1458c:	fc099ae3          	bnez	s3,14560 <printk_mkfloatstr+0x262>
   14590:	00099463          	bnez	s3,14598 <printk_mkfloatstr+0x29a>
   14594:	fdabe6e3          	bltu	s7,s10,14560 <printk_mkfloatstr+0x262>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   14598:	00090f63          	beqz	s2,145b6 <printk_mkfloatstr+0x2b8>
   1459c:	00249793          	slli	a5,s1,0x2
   145a0:	1018                	addi	a4,sp,32
   145a2:	97ba                	add	a5,a5,a4
   145a4:	94ca                	add	s1,s1,s2
   145a6:	00249713          	slli	a4,s1,0x2
   145aa:	9752                	add	a4,a4,s4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:100
			b[j++]=0;
   145ac:	0007a023          	sw	zero,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:101
			k--;
   145b0:	0791                	addi	a5,a5,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   145b2:	fee79de3          	bne	a5,a4,145ac <printk_mkfloatstr+0x2ae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   145b6:	ee0484e3          	beqz	s1,1449e <printk_mkfloatstr+0x1a0>
   145ba:	00249793          	slli	a5,s1,0x2
   145be:	0698                	addi	a4,sp,832
   145c0:	97ba                	add	a5,a5,a4
   145c2:	cdc78793          	addi	a5,a5,-804
   145c6:	008b06b3          	add	a3,s6,s0
   145ca:	a011                	j	145ce <printk_mkfloatstr+0x2d0>
   145cc:	87ba                	mv	a5,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:105
			c[i++]=b[j-1]+'0';
   145ce:	4398                	lw	a4,0(a5)
   145d0:	03070713          	addi	a4,a4,48
   145d4:	00e68023          	sb	a4,0(a3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:106
			j--;
   145d8:	ffc78713          	addi	a4,a5,-4
   145dc:	0685                	addi	a3,a3,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   145de:	fefa17e3          	bne	s4,a5,145cc <printk_mkfloatstr+0x2ce>
   145e2:	9426                	add	s0,s0,s1
   145e4:	bd6d                	j	1449e <printk_mkfloatstr+0x1a0>

000145e6 <printk>:
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:202
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
   145e6:	7175                	addi	sp,sp,-144
   145e8:	c706                	sw	ra,140(sp)
   145ea:	c522                	sw	s0,136(sp)
   145ec:	c326                	sw	s1,132(sp)
   145ee:	c14a                	sw	s2,128(sp)
   145f0:	dece                	sw	s3,124(sp)
   145f2:	dcd2                	sw	s4,120(sp)
   145f4:	dad6                	sw	s5,116(sp)
   145f6:	d8da                	sw	s6,112(sp)
   145f8:	d6de                	sw	s7,108(sp)
   145fa:	d4e2                	sw	s8,104(sp)
   145fc:	d2e6                	sw	s9,100(sp)
   145fe:	d0ea                	sw	s10,96(sp)
   14600:	ceee                	sw	s11,92(sp)
   14602:	8a2a                	mv	s4,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:226

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
   14604:	d602                	sw	zero,44(sp)
   14606:	d802                	sw	zero,48(sp)
   14608:	da02                	sw	zero,52(sp)
   1460a:	dc02                	sw	zero,56(sp)
   1460c:	de02                	sw	zero,60(sp)
   1460e:	c082                	sw	zero,64(sp)
   14610:	c282                	sw	zero,68(sp)
   14612:	c482                	sw	zero,72(sp)
   14614:	04010623          	sb	zero,76(sp)
   14618:	03000793          	li	a5,48
   1461c:	02f10623          	sb	a5,44(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:247
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
   14620:	d402                	sw	zero,40(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
   14622:	00058503          	lb	a0,0(a1)
   14626:	68050163          	beqz	a0,14ca8 <printk+0x6c2>
   1462a:	8b2e                	mv	s6,a1
   1462c:	8bb2                	mv	s7,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:249
	precision_used=TRUE;
   1462e:	4d05                	li	s10,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:248
	length_modifier=0;
   14630:	4c81                	li	s9,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:279
		//此时字符为%  查看百分号后的第一个格式字符，对输出格式字符并做出相应输出判断
		//检查相应的修改标志
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
   14632:	00003417          	auipc	s0,0x3
   14636:	23a40413          	addi	s0,s0,570 # 1786c <strlen+0x47c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:387
			--p;
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
   1463a:	00003c17          	auipc	s8,0x3
   1463e:	276c0c13          	addi	s8,s8,630 # 178b0 <strlen+0x4c0>
   14642:	a035                	j	1466e <printk+0x88>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:263
				printk_putc(0x0D /* CR */, &count, info);
   14644:	8652                	mv	a2,s4
   14646:	102c                	addi	a1,sp,40
   14648:	4535                	li	a0,13
   1464a:	00000097          	auipc	ra,0x0
   1464e:	ba2080e7          	jalr	-1118(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:264
				printk_putc(0x0A /* LF */, &count, info);
   14652:	8652                	mv	a2,s4
   14654:	102c                	addi	a1,sp,40
   14656:	4529                	li	a0,10
   14658:	00000097          	auipc	ra,0x0
   1465c:	b94080e7          	jalr	-1132(ra) # 141ec <printk_putc>
   14660:	8ada                	mv	s5,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:251 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
   14662:	001a8b13          	addi	s6,s5,1
   14666:	001a8503          	lb	a0,1(s5)
   1466a:	62050f63          	beqz	a0,14ca8 <printk+0x6c2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:254
		if (c != '%')
   1466e:	02500793          	li	a5,37
   14672:	00f50d63          	beq	a0,a5,1468c <printk+0xa6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:258
			if (c != '\n') {
   14676:	47a9                	li	a5,10
   14678:	fcf506e3          	beq	a0,a5,14644 <printk+0x5e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:259
				printk_putc(c, &count, info);
   1467c:	8652                	mv	a2,s4
   1467e:	102c                	addi	a1,sp,40
   14680:	00000097          	auipc	ra,0x0
   14684:	b6c080e7          	jalr	-1172(ra) # 141ec <printk_putc>
   14688:	8ada                	mv	s5,s6
   1468a:	bfe1                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:276
		flags_used = 0;
   1468c:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   1468e:	4641                	li	a2,16
   14690:	a021                	j	14698 <printk+0xb2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:281
				flags_used |= FLAGS_MINUS;
   14692:	0014e493          	ori	s1,s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:282
				break;
   14696:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   14698:	001b0693          	addi	a3,s6,1
   1469c:	001b4783          	lbu	a5,1(s6)
   146a0:	1781                	addi	a5,a5,-32
   146a2:	0ff7f713          	andi	a4,a5,255
   146a6:	08e66c63          	bltu	a2,a4,1473e <printk+0x158>
   146aa:	00271793          	slli	a5,a4,0x2
   146ae:	97a2                	add	a5,a5,s0
   146b0:	439c                	lw	a5,0(a5)
   146b2:	97a2                	add	a5,a5,s0
   146b4:	8782                	jr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:284
				flags_used |= FLAGS_PLUS;
   146b6:	0024e493          	ori	s1,s1,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:285
				break;
   146ba:	bff1                	j	14696 <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:287
				flags_used |= FLAGS_SPACE;
   146bc:	0044e493          	ori	s1,s1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:288
				break;
   146c0:	bfd9                	j	14696 <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:290
				flags_used |= FLAGS_ZERO;
   146c2:	0084e493          	ori	s1,s1,8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:291
				break;
   146c6:	bfc1                	j	14696 <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:293
				flags_used |= FLAGS_POUND;
   146c8:	0104e493          	ori	s1,s1,16
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:294
				break;
   146cc:	b7e9                	j	14696 <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:319
				field_width = (field_width * 10) + (c - '0');
   146ce:	00291793          	slli	a5,s2,0x2
   146d2:	993e                	add	s2,s2,a5
   146d4:	0906                	slli	s2,s2,0x1
   146d6:	993a                	add	s2,s2,a4
   146d8:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   146da:	001b0693          	addi	a3,s6,1
   146de:	001b0703          	lb	a4,1(s6)
   146e2:	fd070713          	addi	a4,a4,-48
   146e6:	fee674e3          	bgeu	a2,a4,146ce <printk+0xe8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   146ea:	001b0703          	lb	a4,1(s6)
   146ee:	02e00793          	li	a5,46
   146f2:	04f70963          	beq	a4,a5,14744 <printk+0x15e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:366
			precision_width = 0;
   146f6:	4981                	li	s3,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:365
			precision_used = FALSE;
   146f8:	4d01                	li	s10,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   146fa:	001b0693          	addi	a3,s6,1
   146fe:	001b0783          	lb	a5,1(s6)
   14702:	06800713          	li	a4,104
   14706:	06e78a63          	beq	a5,a4,1477a <printk+0x194>
   1470a:	06c00713          	li	a4,108
   1470e:	04e78e63          	beq	a5,a4,1476a <printk+0x184>
   14712:	04c00713          	li	a4,76
   14716:	04e78e63          	beq	a5,a4,14772 <printk+0x18c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:387
		switch (c = *++p) {
   1471a:	001b0a93          	addi	s5,s6,1
   1471e:	001b0503          	lb	a0,1(s6)
   14722:	fa850793          	addi	a5,a0,-88
   14726:	0ff7f693          	andi	a3,a5,255
   1472a:	02000713          	li	a4,32
   1472e:	4cd76763          	bltu	a4,a3,14bfc <printk+0x616>
   14732:	00269793          	slli	a5,a3,0x2
   14736:	97e2                	add	a5,a5,s8
   14738:	439c                	lw	a5,0(a5)
   1473a:	97e2                	add	a5,a5,s8
   1473c:	8782                	jr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:305
		field_width = 0;
   1473e:	4901                	li	s2,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   14740:	4625                	li	a2,9
   14742:	bf61                	j	146da <printk+0xf4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   14744:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:335
			precision_width = 0;
   14746:	4981                	li	s3,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14748:	4625                	li	a2,9
   1474a:	a039                	j	14758 <printk+0x172>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:350
				precision_width = (precision_width * 10) +	(c - '0');
   1474c:	00299793          	slli	a5,s3,0x2
   14750:	99be                	add	s3,s3,a5
   14752:	0986                	slli	s3,s3,0x1
   14754:	99ba                	add	s3,s3,a4
   14756:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14758:	001b0693          	addi	a3,s6,1
   1475c:	001b0703          	lb	a4,1(s6)
   14760:	fd070713          	addi	a4,a4,-48
   14764:	fee674e3          	bgeu	a2,a4,1474c <printk+0x166>
   14768:	bf49                	j	146fa <printk+0x114>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:375
			 length_modifier |= LENMOD_l;
   1476a:	001cec93          	ori	s9,s9,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   1476e:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:376
			break;
   14770:	b76d                	j	1471a <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:378
			 length_modifier |= LENMOD_L;
   14772:	002cec93          	ori	s9,s9,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14776:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:379
			break;
   14778:	b74d                	j	1471a <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   1477a:	8b36                	mv	s6,a3
   1477c:	bf79                	j	1471a <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
		case 'd':
		case 'i':
			 //此时ap为指向可变参数列表的第一个参数
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   1477e:	004b8793          	addi	a5,s7,4
   14782:	c63e                	sw	a5,12(sp)
   14784:	000ba783          	lw	a5,0(s7)
   14788:	d23e                	sw	a5,36(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:392
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);//将整型转换成字符型保存在vstr中，返回字符数vlen
   1478a:	46a9                	li	a3,10
   1478c:	4605                	li	a2,1
   1478e:	104c                	addi	a1,sp,36
   14790:	1068                	addi	a0,sp,44
   14792:	00000097          	auipc	ra,0x0
   14796:	a96080e7          	jalr	-1386(ra) # 14228 <printk_mknumstr>
   1479a:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:393
			vstrp = &vstr[vlen];  //指向转换后的最后一个字符
   1479c:	107c                	addi	a5,sp,44
   1479e:	00a789b3          	add	s3,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:396

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
   147a2:	5792                	lw	a5,36(sp)
   147a4:	0007ca63          	bltz	a5,147b8 <printk+0x1d2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:402
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   147a8:	0024f793          	andi	a5,s1,2
   147ac:	cf8d                	beqz	a5,147e6 <printk+0x200>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:404
					schar = '+';
					++vlen;
   147ae:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:403
					schar = '+';
   147b2:	02b00d93          	li	s11,43
   147b6:	a029                	j	147c0 <printk+0x1da>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:398
				++vlen;
   147b8:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:397
				schar = '-';
   147bc:	02d00d93          	li	s11,45
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:419
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   147c0:	0084f793          	andi	a5,s1,8
   147c4:	eb95                	bnez	a5,147f8 <printk+0x212>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   147c6:	0014f793          	andi	a5,s1,1
   147ca:	4a078e63          	beqz	a5,14c86 <printk+0x6a0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   147ce:	4bb2                	lw	s7,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:437
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
   147d0:	280d8d63          	beqz	s11,14a6a <printk+0x484>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:438
				printk_putc(schar, &count, info);
   147d4:	8652                	mv	a2,s4
   147d6:	102c                	addi	a1,sp,40
   147d8:	856e                	mv	a0,s11
   147da:	00000097          	auipc	ra,0x0
   147de:	a12080e7          	jalr	-1518(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   147e2:	4bb2                	lw	s7,12(sp)
   147e4:	a459                	j	14a6a <printk+0x484>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:406
					if (IS_FLAG_SPACE(flags_used)) {
   147e6:	0044f793          	andi	a5,s1,4
   147ea:	46078663          	beqz	a5,14c56 <printk+0x670>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:408
						++vlen;
   147ee:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:407
						schar = ' ';
   147f2:	02000d93          	li	s11,32
   147f6:	b7e9                	j	147c0 <printk+0x1da>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:421
					printk_putc(schar, &count, info);  //输出符号
   147f8:	8652                	mv	a2,s4
   147fa:	102c                	addi	a1,sp,40
   147fc:	856e                	mv	a0,s11
   147fe:	00000097          	auipc	ra,0x0
   14802:	9ee080e7          	jalr	-1554(ra) # 141ec <printk_putc>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14806:	332b5963          	bge	s6,s2,14b38 <printk+0x552>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   1480a:	8652                	mv	a2,s4
   1480c:	102c                	addi	a1,sp,40
   1480e:	03000513          	li	a0,48
   14812:	00000097          	auipc	ra,0x0
   14816:	9da080e7          	jalr	-1574(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1481a:	0b05                	addi	s6,s6,1
   1481c:	ff2b17e3          	bne	s6,s2,1480a <printk+0x224>
   14820:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14822:	4bb2                	lw	s7,12(sp)
   14824:	a4e9                	j	14aee <printk+0x508>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:452
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg1(ap,double);
   14826:	00cb8b13          	addi	s6,s7,12
   1482a:	004bad83          	lw	s11,4(s7)
   1482e:	008bab83          	lw	s7,8(s7)
   14832:	cc6e                	sw	s11,24(sp)
   14834:	ce5e                	sw	s7,28(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:456
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
   14836:	4601                	li	a2,0
   14838:	4681                	li	a3,0
   1483a:	856e                	mv	a0,s11
   1483c:	85de                	mv	a1,s7
   1483e:	00002097          	auipc	ra,0x2
   14842:	94c080e7          	jalr	-1716(ra) # 1618a <__ledf2>
   14846:	00054e63          	bltz	a0,14862 <printk+0x27c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   1484a:	0024f793          	andi	a5,s1,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:464
					schar = '+';
   1484e:	02b00b93          	li	s7,43
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:463
				if (IS_FLAG_PLUS(flags_used)) {
   14852:	e385                	bnez	a5,14872 <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:467
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
   14854:	0044fb93          	andi	s7,s1,4
   14858:	000b8d63          	beqz	s7,14872 <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:468
						schar = ' ';
   1485c:	02000b93          	li	s7,32
   14860:	a809                	j	14872 <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:458
				fval = -fval;				//负数取它的正数
   14862:	cc6e                	sw	s11,24(sp)
   14864:	800007b7          	lui	a5,0x80000
   14868:	0177c7b3          	xor	a5,a5,s7
   1486c:	ce3e                	sw	a5,28(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:457
				schar = '-';
   1486e:	02d00b93          	li	s7,45
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:478
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
   14872:	060d1c63          	bnez	s10,148ea <printk+0x304>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:485
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{
				if(length_modifier==0)   //浮点型精度到小数点后8位
   14876:	080c9363          	bnez	s9,148fc <printk+0x316>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:487
				{
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   1487a:	4619                	li	a2,6
   1487c:	106c                	addi	a1,sp,44
   1487e:	0828                	addi	a0,sp,24
   14880:	00000097          	auipc	ra,0x0
   14884:	a7e080e7          	jalr	-1410(ra) # 142fe <printk_mkfloatstr>
   14888:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:503
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   1488a:	0084f793          	andi	a5,s1,8
   1488e:	cbc1                	beqz	a5,1491e <printk+0x338>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:504
				if (schar)
   14890:	060b9f63          	bnez	s7,1490e <printk+0x328>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14894:	0129dd63          	bge	s3,s2,148ae <printk+0x2c8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14898:	8652                	mv	a2,s4
   1489a:	102c                	addi	a1,sp,40
   1489c:	03000513          	li	a0,48
   148a0:	00000097          	auipc	ra,0x0
   148a4:	94c080e7          	jalr	-1716(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   148a8:	0985                	addi	s3,s3,1
   148aa:	ff2997e3          	bne	s3,s2,14898 <printk+0x2b2>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:524
			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
				printk_putc(schar, &count, info);
			}
			while (*vstrp)
   148ae:	02c10503          	lb	a0,44(sp)
   148b2:	89ca                	mv	s3,s2
   148b4:	cd09                	beqz	a0,148ce <printk+0x2e8>
   148b6:	02c10b93          	addi	s7,sp,44
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:525
				printk_putc(*vstrp++, &count, info);
   148ba:	0b85                	addi	s7,s7,1
   148bc:	8652                	mv	a2,s4
   148be:	102c                	addi	a1,sp,40
   148c0:	00000097          	auipc	ra,0x0
   148c4:	92c080e7          	jalr	-1748(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   148c8:	000b8503          	lb	a0,0(s7)
   148cc:	f57d                	bnez	a0,148ba <printk+0x2d4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   148ce:	8885                	andi	s1,s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   148d0:	8bda                	mv	s7,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   148d2:	d80488e3          	beqz	s1,14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:527
				printk_pad_space(vlen, field_width, &count, info);
   148d6:	86d2                	mv	a3,s4
   148d8:	1030                	addi	a2,sp,40
   148da:	85ca                	mv	a1,s2
   148dc:	854e                	mv	a0,s3
   148de:	00000097          	auipc	ra,0x0
   148e2:	9cc080e7          	jalr	-1588(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   148e6:	8bda                	mv	s7,s6
   148e8:	bbad                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:480
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
   148ea:	864e                	mv	a2,s3
   148ec:	106c                	addi	a1,sp,44
   148ee:	0828                	addi	a0,sp,24
   148f0:	00000097          	auipc	ra,0x0
   148f4:	a0e080e7          	jalr	-1522(ra) # 142fe <printk_mkfloatstr>
   148f8:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:481
				vstrp = &vstr[0];  //指向转换后的第一个字符
   148fa:	bf41                	j	1488a <printk+0x2a4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:492
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   148fc:	4619                	li	a2,6
   148fe:	106c                	addi	a1,sp,44
   14900:	0828                	addi	a0,sp,24
   14902:	00000097          	auipc	ra,0x0
   14906:	9fc080e7          	jalr	-1540(ra) # 142fe <printk_mkfloatstr>
   1490a:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:493
					vstrp = &vstr[0];  //指向转换后的第一个字符
   1490c:	bfbd                	j	1488a <printk+0x2a4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:505
					printk_putc(schar, &count, info);  //输出符号
   1490e:	8652                	mv	a2,s4
   14910:	102c                	addi	a1,sp,40
   14912:	855e                	mv	a0,s7
   14914:	00000097          	auipc	ra,0x0
   14918:	8d8080e7          	jalr	-1832(ra) # 141ec <printk_putc>
   1491c:	bfa5                	j	14894 <printk+0x2ae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:510
				if (!IS_FLAG_MINUS(flags_used)) {
   1491e:	0014f793          	andi	a5,s1,1
   14922:	c799                	beqz	a5,14930 <printk+0x34a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:521
			if (!dschar && schar) {
   14924:	020b9d63          	bnez	s7,1495e <printk+0x378>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14928:	02c10503          	lb	a0,44(sp)
   1492c:	f549                	bnez	a0,148b6 <printk+0x2d0>
   1492e:	b765                	j	148d6 <printk+0x2f0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:511
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14930:	86d2                	mv	a3,s4
   14932:	1030                	addi	a2,sp,40
   14934:	85ca                	mv	a1,s2
   14936:	854e                	mv	a0,s3
   14938:	00000097          	auipc	ra,0x0
   1493c:	972080e7          	jalr	-1678(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:513
					if (schar)
   14940:	000b9763          	bnez	s7,1494e <printk+0x368>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14944:	02c10503          	lb	a0,44(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   14948:	8bda                	mv	s7,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   1494a:	f535                	bnez	a0,148b6 <printk+0x2d0>
   1494c:	bb19                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:514
						printk_putc(schar, &count, info);
   1494e:	8652                	mv	a2,s4
   14950:	102c                	addi	a1,sp,40
   14952:	855e                	mv	a0,s7
   14954:	00000097          	auipc	ra,0x0
   14958:	898080e7          	jalr	-1896(ra) # 141ec <printk_putc>
   1495c:	b7e5                	j	14944 <printk+0x35e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:522
				printk_putc(schar, &count, info);
   1495e:	8652                	mv	a2,s4
   14960:	102c                	addi	a1,sp,40
   14962:	855e                	mv	a0,s7
   14964:	00000097          	auipc	ra,0x0
   14968:	888080e7          	jalr	-1912(ra) # 141ec <printk_putc>
   1496c:	bf75                	j	14928 <printk+0x342>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1496e:	004b8d93          	addi	s11,s7,4
   14972:	000ba783          	lw	a5,0(s7)
   14976:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:534
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   14978:	46c1                	li	a3,16
   1497a:	4601                	li	a2,0
   1497c:	084c                	addi	a1,sp,20
   1497e:	1068                	addi	a0,sp,44
   14980:	00000097          	auipc	ra,0x0
   14984:	8a8080e7          	jalr	-1880(ra) # 14228 <printk_mknumstr>
   14988:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:535
			vstrp = &vstr[vlen];
   1498a:	107c                	addi	a5,sp,44
   1498c:	00a789b3          	add	s3,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:538

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
   14990:	0084f793          	andi	a5,s1,8
   14994:	c3a5                	beqz	a5,149f4 <printk+0x40e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:539
				if (IS_FLAG_POUND(flags_used)) {
   14996:	0104fb93          	andi	s7,s1,16
   1499a:	020b9863          	bnez	s7,149ca <printk+0x3e4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:537
			dschar = FALSE;
   1499e:	c65e                	sw	s7,12(sp)
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   149a0:	29255b63          	bge	a0,s2,14c36 <printk+0x650>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   149a4:	8652                	mv	a2,s4
   149a6:	102c                	addi	a1,sp,40
   149a8:	03000513          	li	a0,48
   149ac:	00000097          	auipc	ra,0x0
   149b0:	840080e7          	jalr	-1984(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   149b4:	0b05                	addi	s6,s6,1
   149b6:	ff2b47e3          	blt	s6,s2,149a4 <printk+0x3be>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:561
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   149ba:	180b8563          	beqz	s7,14b44 <printk+0x55e>
   149be:	8b4a                	mv	s6,s2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533 (discriminator 1)
			uval = (unsigned int) va_arg1(ap, unsigned int);
   149c0:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:561 (discriminator 1)
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   149c2:	47b2                	lw	a5,12(sp)
   149c4:	12079563          	bnez	a5,14aee <printk+0x508>
   149c8:	a4a1                	j	14c10 <printk+0x62a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:540
					printk_putc('0', &count, info);
   149ca:	8652                	mv	a2,s4
   149cc:	102c                	addi	a1,sp,40
   149ce:	03000513          	li	a0,48
   149d2:	00000097          	auipc	ra,0x0
   149d6:	81a080e7          	jalr	-2022(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:541
					printk_putc('x', &count, info);
   149da:	8652                	mv	a2,s4
   149dc:	102c                	addi	a1,sp,40
   149de:	07800513          	li	a0,120
   149e2:	00000097          	auipc	ra,0x0
   149e6:	80a080e7          	jalr	-2038(ra) # 141ec <printk_putc>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   149ea:	152b5a63          	bge	s6,s2,14b3e <printk+0x558>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:543
					dschar = TRUE;
   149ee:	4785                	li	a5,1
   149f0:	c63e                	sw	a5,12(sp)
   149f2:	bf4d                	j	149a4 <printk+0x3be>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:548
				if (!IS_FLAG_MINUS(flags_used)) {
   149f4:	0014f793          	andi	a5,s1,1
   149f8:	20079963          	bnez	a5,14c0a <printk+0x624>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:549
					if (IS_FLAG_POUND(flags_used)) {
   149fc:	0104f793          	andi	a5,s1,16
   14a00:	22078e63          	beqz	a5,14c3c <printk+0x656>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:550
						vlen += 2;
   14a04:	00250b13          	addi	s6,a0,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14a08:	86d2                	mv	a3,s4
   14a0a:	1030                	addi	a2,sp,40
   14a0c:	85ca                	mv	a1,s2
   14a0e:	855a                	mv	a0,s6
   14a10:	00000097          	auipc	ra,0x0
   14a14:	89a080e7          	jalr	-1894(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:554
						printk_putc('0', &count, info);
   14a18:	8652                	mv	a2,s4
   14a1a:	102c                	addi	a1,sp,40
   14a1c:	03000513          	li	a0,48
   14a20:	fffff097          	auipc	ra,0xfffff
   14a24:	7cc080e7          	jalr	1996(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:555
						printk_putc('x', &count, info);
   14a28:	8652                	mv	a2,s4
   14a2a:	102c                	addi	a1,sp,40
   14a2c:	07800513          	li	a0,120
   14a30:	fffff097          	auipc	ra,0xfffff
   14a34:	7bc080e7          	jalr	1980(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14a38:	ac09                	j	14c4a <printk+0x664>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:569
				vlen += 2;
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14a3a:	004b8993          	addi	s3,s7,4
   14a3e:	000ba783          	lw	a5,0(s7)
   14a42:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:570
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
   14a44:	46a1                	li	a3,8
   14a46:	4601                	li	a2,0
   14a48:	084c                	addi	a1,sp,20
   14a4a:	1068                	addi	a0,sp,44
   14a4c:	fffff097          	auipc	ra,0xfffff
   14a50:	7dc080e7          	jalr	2012(ra) # 14228 <printk_mknumstr>
   14a54:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:569
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14a56:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:586
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg1(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
   14a58:	107c                	addi	a5,sp,44
   14a5a:	016789b3          	add	s3,a5,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:588

			if (IS_FLAG_ZERO(flags_used)) {
   14a5e:	0084f793          	andi	a5,s1,8
   14a62:	eba5                	bnez	a5,14ad2 <printk+0x4ec>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:592
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   14a64:	0014f793          	andi	a5,s1,1
   14a68:	cfc5                	beqz	a5,14b20 <printk+0x53a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
					printk_pad_space(vlen, field_width, &count, info);
				}
			}

			cont_xd: while (*vstrp)
   14a6a:	00098503          	lb	a0,0(s3)
   14a6e:	e159                	bnez	a0,14af4 <printk+0x50e>
   14a70:	a879                	j	14b0e <printk+0x528>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14a72:	004b8993          	addi	s3,s7,4
   14a76:	000ba783          	lw	a5,0(s7)
   14a7a:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:575
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
   14a7c:	4689                	li	a3,2
   14a7e:	4601                	li	a2,0
   14a80:	084c                	addi	a1,sp,20
   14a82:	1068                	addi	a0,sp,44
   14a84:	fffff097          	auipc	ra,0xfffff
   14a88:	7a4080e7          	jalr	1956(ra) # 14228 <printk_mknumstr>
   14a8c:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14a8e:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:576
			goto cont_u;
   14a90:	b7e1                	j	14a58 <printk+0x472>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   14a92:	004b8993          	addi	s3,s7,4
   14a96:	000ba783          	lw	a5,0(s7)
   14a9a:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:580
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   14a9c:	46c1                	li	a3,16
   14a9e:	4601                	li	a2,0
   14aa0:	084c                	addi	a1,sp,20
   14aa2:	1068                	addi	a0,sp,44
   14aa4:	fffff097          	auipc	ra,0xfffff
   14aa8:	784080e7          	jalr	1924(ra) # 14228 <printk_mknumstr>
   14aac:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   14aae:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:581
			goto cont_u;
   14ab0:	b765                	j	14a58 <printk+0x472>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14ab2:	004b8993          	addi	s3,s7,4
   14ab6:	000ba783          	lw	a5,0(s7)
   14aba:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:584
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
   14abc:	46a9                	li	a3,10
   14abe:	4601                	li	a2,0
   14ac0:	084c                	addi	a1,sp,20
   14ac2:	1068                	addi	a0,sp,44
   14ac4:	fffff097          	auipc	ra,0xfffff
   14ac8:	764080e7          	jalr	1892(ra) # 14228 <printk_mknumstr>
   14acc:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14ace:	8bce                	mv	s7,s3
   14ad0:	b761                	j	14a58 <printk+0x472>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14ad2:	072b5c63          	bge	s6,s2,14b4a <printk+0x564>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14ad6:	8652                	mv	a2,s4
   14ad8:	102c                	addi	a1,sp,40
   14ada:	03000513          	li	a0,48
   14ade:	fffff097          	auipc	ra,0xfffff
   14ae2:	70e080e7          	jalr	1806(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14ae6:	0b05                	addi	s6,s6,1
   14ae8:	ff2b17e3          	bne	s6,s2,14ad6 <printk+0x4f0>
   14aec:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597 (discriminator 1)
			cont_xd: while (*vstrp)
   14aee:	00098503          	lb	a0,0(s3)
   14af2:	c919                	beqz	a0,14b08 <printk+0x522>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:598
				printk_putc(*vstrp--, &count, info);
   14af4:	19fd                	addi	s3,s3,-1
   14af6:	8652                	mv	a2,s4
   14af8:	102c                	addi	a1,sp,40
   14afa:	fffff097          	auipc	ra,0xfffff
   14afe:	6f2080e7          	jalr	1778(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14b02:	00098503          	lb	a0,0(s3)
   14b06:	f57d                	bnez	a0,14af4 <printk+0x50e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:600

			if (IS_FLAG_MINUS(flags_used)) {
   14b08:	8885                	andi	s1,s1,1
   14b0a:	b4048ce3          	beqz	s1,14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:601
				printk_pad_space(vlen, field_width, &count, info);
   14b0e:	86d2                	mv	a3,s4
   14b10:	1030                	addi	a2,sp,40
   14b12:	85ca                	mv	a1,s2
   14b14:	855a                	mv	a0,s6
   14b16:	fffff097          	auipc	ra,0xfffff
   14b1a:	794080e7          	jalr	1940(ra) # 142aa <printk_pad_space>
   14b1e:	b691                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:593
					printk_pad_space(vlen, field_width, &count, info);
   14b20:	86d2                	mv	a3,s4
   14b22:	1030                	addi	a2,sp,40
   14b24:	85ca                	mv	a1,s2
   14b26:	855a                	mv	a0,s6
   14b28:	fffff097          	auipc	ra,0xfffff
   14b2c:	782080e7          	jalr	1922(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14b30:	00098503          	lb	a0,0(s3)
   14b34:	f161                	bnez	a0,14af4 <printk+0x50e>
   14b36:	b635                	j	14662 <printk+0x7c>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14b38:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14b3a:	4bb2                	lw	s7,12(sp)
   14b3c:	bf4d                	j	14aee <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14b3e:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14b40:	8bee                	mv	s7,s11
   14b42:	b775                	j	14aee <printk+0x508>
   14b44:	8b4a                	mv	s6,s2
   14b46:	8bee                	mv	s7,s11
   14b48:	b75d                	j	14aee <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14b4a:	8b4a                	mv	s6,s2
   14b4c:	b74d                	j	14aee <printk+0x508>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:607
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg1(ap, unsigned int);
   14b4e:	004b8493          	addi	s1,s7,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:608
			printk_putc(cval, &count, info);
   14b52:	8652                	mv	a2,s4
   14b54:	102c                	addi	a1,sp,40
   14b56:	000b8503          	lb	a0,0(s7)
   14b5a:	fffff097          	auipc	ra,0xfffff
   14b5e:	692080e7          	jalr	1682(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:607
			cval = (char) va_arg1(ap, unsigned int);
   14b62:	8ba6                	mv	s7,s1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:609
			break;
   14b64:	bcfd                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:611
		case 's':
			sval = (char *) va_arg1(ap, char *);
   14b66:	004b8d93          	addi	s11,s7,4
   14b6a:	000bab03          	lw	s6,0(s7)
   14b6e:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:612
			if (sval) {
   14b70:	ae0b09e3          	beqz	s6,14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:613
				vlen = strlen(sval);
   14b74:	855a                	mv	a0,s6
   14b76:	00003097          	auipc	ra,0x3
   14b7a:	87a080e7          	jalr	-1926(ra) # 173f0 <strlen>
   14b7e:	c62a                	sw	a0,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:614
				if (!IS_FLAG_MINUS(flags_used)) {
   14b80:	8885                	andi	s1,s1,1
   14b82:	cc85                	beqz	s1,14bba <printk+0x5d4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:617
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
   14b84:	04099363          	bnez	s3,14bca <printk+0x5e4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:628
							printk_putc(*sval++, &count, info);					
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
   14b88:	000b0503          	lb	a0,0(s6)
   14b8c:	c919                	beqz	a0,14ba2 <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:629
					   printk_putc(*sval++, &count, info);
   14b8e:	0b05                	addi	s6,s6,1
   14b90:	8652                	mv	a2,s4
   14b92:	102c                	addi	a1,sp,40
   14b94:	fffff097          	auipc	ra,0xfffff
   14b98:	658080e7          	jalr	1624(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:628
					while (*sval)
   14b9c:	000b0503          	lb	a0,0(s6)
   14ba0:	f57d                	bnez	a0,14b8e <printk+0x5a8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:611
			sval = (char *) va_arg1(ap, char *);
   14ba2:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:631
				}
				if (IS_FLAG_MINUS(flags_used)) {
   14ba4:	aa048fe3          	beqz	s1,14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:632
					printk_pad_space(vlen, field_width, &count, info);
   14ba8:	86d2                	mv	a3,s4
   14baa:	1030                	addi	a2,sp,40
   14bac:	85ca                	mv	a1,s2
   14bae:	4532                	lw	a0,12(sp)
   14bb0:	fffff097          	auipc	ra,0xfffff
   14bb4:	6fa080e7          	jalr	1786(ra) # 142aa <printk_pad_space>
   14bb8:	b46d                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:615
					printk_pad_space(vlen, field_width, &count, info);
   14bba:	86d2                	mv	a3,s4
   14bbc:	1030                	addi	a2,sp,40
   14bbe:	85ca                	mv	a1,s2
   14bc0:	fffff097          	auipc	ra,0xfffff
   14bc4:	6ea080e7          	jalr	1770(ra) # 142aa <printk_pad_space>
   14bc8:	bf75                	j	14b84 <printk+0x59e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   14bca:	fd305ce3          	blez	s3,14ba2 <printk+0x5bc>
   14bce:	000b0503          	lb	a0,0(s6)
   14bd2:	d961                	beqz	a0,14ba2 <printk+0x5bc>
   14bd4:	99da                	add	s3,s3,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:623
							printk_putc(*sval++, &count, info);					
   14bd6:	0b05                	addi	s6,s6,1
   14bd8:	8652                	mv	a2,s4
   14bda:	102c                	addi	a1,sp,40
   14bdc:	fffff097          	auipc	ra,0xfffff
   14be0:	610080e7          	jalr	1552(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   14be4:	fb3b0fe3          	beq	s6,s3,14ba2 <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:620 (discriminator 1)
   14be8:	000b0503          	lb	a0,0(s6)
   14bec:	f56d                	bnez	a0,14bd6 <printk+0x5f0>
   14bee:	bf55                	j	14ba2 <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:637
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg1(ap, int *);
   14bf0:	000ba783          	lw	a5,0(s7)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:638
			*ivalp = count;
   14bf4:	5722                	lw	a4,40(sp)
   14bf6:	c398                	sw	a4,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:637
			ivalp = (int *) va_arg1(ap, int *);
   14bf8:	0b91                	addi	s7,s7,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:639
			break;
   14bfa:	b4a5                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:642

		default:
			printk_putc(c, &count, info);
   14bfc:	8652                	mv	a2,s4
   14bfe:	102c                	addi	a1,sp,40
   14c00:	fffff097          	auipc	ra,0xfffff
   14c04:	5ec080e7          	jalr	1516(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:643
			break;
   14c08:	bca9                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14c0a:	0104f793          	andi	a5,s1,16
   14c0e:	c7b5                	beqz	a5,14c7a <printk+0x694>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:562
				printk_putc('0', &count, info);
   14c10:	8652                	mv	a2,s4
   14c12:	102c                	addi	a1,sp,40
   14c14:	03000513          	li	a0,48
   14c18:	fffff097          	auipc	ra,0xfffff
   14c1c:	5d4080e7          	jalr	1492(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:563
				printk_putc('x', &count, info);
   14c20:	8652                	mv	a2,s4
   14c22:	102c                	addi	a1,sp,40
   14c24:	07800513          	li	a0,120
   14c28:	fffff097          	auipc	ra,0xfffff
   14c2c:	5c4080e7          	jalr	1476(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:564
				vlen += 2;
   14c30:	0b09                	addi	s6,s6,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14c32:	8bee                	mv	s7,s11
   14c34:	bd6d                	j	14aee <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14c36:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14c38:	8bee                	mv	s7,s11
   14c3a:	bd55                	j	14aee <printk+0x508>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14c3c:	86d2                	mv	a3,s4
   14c3e:	1030                	addi	a2,sp,40
   14c40:	85ca                	mv	a1,s2
   14c42:	fffff097          	auipc	ra,0xfffff
   14c46:	668080e7          	jalr	1640(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14c4a:	00098503          	lb	a0,0(s3)
   14c4e:	8bee                	mv	s7,s11
   14c50:	ea0512e3          	bnez	a0,14af4 <printk+0x50e>
   14c54:	b439                	j	14662 <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:419
			if (IS_FLAG_ZERO(flags_used)) {
   14c56:	0084fd93          	andi	s11,s1,8
   14c5a:	ba0d96e3          	bnez	s11,14806 <printk+0x220>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:426
				if (!IS_FLAG_MINUS(flags_used)) {
   14c5e:	0014f793          	andi	a5,s1,1
   14c62:	b60796e3          	bnez	a5,147ce <printk+0x1e8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14c66:	86d2                	mv	a3,s4
   14c68:	1030                	addi	a2,sp,40
   14c6a:	85ca                	mv	a1,s2
   14c6c:	855a                	mv	a0,s6
   14c6e:	fffff097          	auipc	ra,0xfffff
   14c72:	63c080e7          	jalr	1596(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14c76:	4bb2                	lw	s7,12(sp)
   14c78:	bd65                	j	14b30 <printk+0x54a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14c7a:	00098503          	lb	a0,0(s3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14c7e:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14c80:	e6051ae3          	bnez	a0,14af4 <printk+0x50e>
   14c84:	b569                	j	14b0e <printk+0x528>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14c86:	86d2                	mv	a3,s4
   14c88:	1030                	addi	a2,sp,40
   14c8a:	85ca                	mv	a1,s2
   14c8c:	855a                	mv	a0,s6
   14c8e:	fffff097          	auipc	ra,0xfffff
   14c92:	61c080e7          	jalr	1564(ra) # 142aa <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:430
						printk_putc(schar, &count, info);
   14c96:	8652                	mv	a2,s4
   14c98:	102c                	addi	a1,sp,40
   14c9a:	856e                	mv	a0,s11
   14c9c:	fffff097          	auipc	ra,0xfffff
   14ca0:	550080e7          	jalr	1360(ra) # 141ec <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14ca4:	4bb2                	lw	s7,12(sp)
   14ca6:	b569                	j	14b30 <printk+0x54a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:646
		}
	}
	return count;
   14ca8:	5522                	lw	a0,40(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:647
}
   14caa:	40ba                	lw	ra,140(sp)
   14cac:	442a                	lw	s0,136(sp)
   14cae:	449a                	lw	s1,132(sp)
   14cb0:	490a                	lw	s2,128(sp)
   14cb2:	59f6                	lw	s3,124(sp)
   14cb4:	5a66                	lw	s4,120(sp)
   14cb6:	5ad6                	lw	s5,116(sp)
   14cb8:	5b46                	lw	s6,112(sp)
   14cba:	5bb6                	lw	s7,108(sp)
   14cbc:	5c26                	lw	s8,104(sp)
   14cbe:	5c96                	lw	s9,100(sp)
   14cc0:	5d06                	lw	s10,96(sp)
   14cc2:	4df6                	lw	s11,92(sp)
   14cc4:	6149                	addi	sp,sp,144
   14cc6:	8082                	ret

00014cc8 <myprintf>:
myprintf():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:656
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
   14cc8:	7139                	addi	sp,sp,-64
   14cca:	ce06                	sw	ra,28(sp)
   14ccc:	d22e                	sw	a1,36(sp)
   14cce:	d432                	sw	a2,40(sp)
   14cd0:	d636                	sw	a3,44(sp)
   14cd2:	d83a                	sw	a4,48(sp)
   14cd4:	da3e                	sw	a5,52(sp)
   14cd6:	dc42                	sw	a6,56(sp)
   14cd8:	de46                	sw	a7,60(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:662
	//char * ap;
  va_list ap;
	char c;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
   14cda:	4785                	li	a5,1
   14cdc:	c03e                	sw	a5,0(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:663
	info.func = &out_char;     //调用的串口输出函数
   14cde:	fffff797          	auipc	a5,0xfffff
   14ce2:	60878793          	addi	a5,a5,1544 # 142e6 <out_char>
   14ce6:	c23e                	sw	a5,4(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:664
	va_start(ap, fmt);  //对ap 进行初始化，让它指向可变参数表里面的第一个参数
   14ce8:	1050                	addi	a2,sp,36
   14cea:	c632                	sw	a2,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:665
	rvalue = printk(&info, fmt, ap);
   14cec:	85aa                	mv	a1,a0
   14cee:	850a                	mv	a0,sp
   14cf0:	00000097          	auipc	ra,0x0
   14cf4:	8f6080e7          	jalr	-1802(ra) # 145e6 <printk>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH08\ADC-CH573\Debug/srcc/printf.c:670
    
	va_end(ap);

	return rvalue;
}
   14cf8:	40f2                	lw	ra,28(sp)
   14cfa:	6121                	addi	sp,sp,64
   14cfc:	8082                	ret

00014cfe <__udivdi3>:
__udivdi3():
   14cfe:	87b6                	mv	a5,a3
   14d00:	88b2                	mv	a7,a2
   14d02:	832a                	mv	t1,a0
   14d04:	882e                	mv	a6,a1
   14d06:	14069d63          	bnez	a3,14e60 <__udivdi3+0x162>
   14d0a:	0ac5f963          	bgeu	a1,a2,14dbc <__udivdi3+0xbe>
   14d0e:	6741                	lui	a4,0x10
   14d10:	1ae66e63          	bltu	a2,a4,14ecc <__udivdi3+0x1ce>
   14d14:	010007b7          	lui	a5,0x1000
   14d18:	34f66363          	bltu	a2,a5,1505e <__udivdi3+0x360>
   14d1c:	01865693          	srli	a3,a2,0x18
   14d20:	47e1                	li	a5,24
   14d22:	00003717          	auipc	a4,0x3
   14d26:	ca670713          	addi	a4,a4,-858 # 179c8 <__clz_tab>
   14d2a:	9736                	add	a4,a4,a3
   14d2c:	00074703          	lbu	a4,0(a4)
   14d30:	97ba                	add	a5,a5,a4
   14d32:	02000713          	li	a4,32
   14d36:	8f1d                	sub	a4,a4,a5
   14d38:	cb19                	beqz	a4,14d4e <__udivdi3+0x50>
   14d3a:	00e59833          	sll	a6,a1,a4
   14d3e:	00f557b3          	srl	a5,a0,a5
   14d42:	00e618b3          	sll	a7,a2,a4
   14d46:	0107e833          	or	a6,a5,a6
   14d4a:	00e51333          	sll	t1,a0,a4
   14d4e:	0108d613          	srli	a2,a7,0x10
   14d52:	02c85533          	divu	a0,a6,a2
   14d56:	01089693          	slli	a3,a7,0x10
   14d5a:	82c1                	srli	a3,a3,0x10
   14d5c:	01035793          	srli	a5,t1,0x10
   14d60:	02c87733          	remu	a4,a6,a2
   14d64:	02a685b3          	mul	a1,a3,a0
   14d68:	0742                	slli	a4,a4,0x10
   14d6a:	00f76833          	or	a6,a4,a5
   14d6e:	00b87a63          	bgeu	a6,a1,14d82 <__udivdi3+0x84>
   14d72:	9846                	add	a6,a6,a7
   14d74:	fff50793          	addi	a5,a0,-1
   14d78:	01186463          	bltu	a6,a7,14d80 <__udivdi3+0x82>
   14d7c:	30b86763          	bltu	a6,a1,1508a <__udivdi3+0x38c>
   14d80:	853e                	mv	a0,a5
   14d82:	40b80833          	sub	a6,a6,a1
   14d86:	02c85733          	divu	a4,a6,a2
   14d8a:	0342                	slli	t1,t1,0x10
   14d8c:	01035313          	srli	t1,t1,0x10
   14d90:	02c87833          	remu	a6,a6,a2
   14d94:	02e686b3          	mul	a3,a3,a4
   14d98:	0842                	slli	a6,a6,0x10
   14d9a:	00686833          	or	a6,a6,t1
   14d9e:	00d87b63          	bgeu	a6,a3,14db4 <__udivdi3+0xb6>
   14da2:	9846                	add	a6,a6,a7
   14da4:	fff70793          	addi	a5,a4,-1
   14da8:	01186563          	bltu	a6,a7,14db2 <__udivdi3+0xb4>
   14dac:	1779                	addi	a4,a4,-2
   14dae:	00d86363          	bltu	a6,a3,14db4 <__udivdi3+0xb6>
   14db2:	873e                	mv	a4,a5
   14db4:	0542                	slli	a0,a0,0x10
   14db6:	8d59                	or	a0,a0,a4
   14db8:	4581                	li	a1,0
   14dba:	8082                	ret
   14dbc:	e601                	bnez	a2,14dc4 <__udivdi3+0xc6>
   14dbe:	4705                	li	a4,1
   14dc0:	02c758b3          	divu	a7,a4,a2
   14dc4:	6741                	lui	a4,0x10
   14dc6:	0ee8ea63          	bltu	a7,a4,14eba <__udivdi3+0x1bc>
   14dca:	010007b7          	lui	a5,0x1000
   14dce:	28f8ec63          	bltu	a7,a5,15066 <__udivdi3+0x368>
   14dd2:	0188d693          	srli	a3,a7,0x18
   14dd6:	47e1                	li	a5,24
   14dd8:	00003717          	auipc	a4,0x3
   14ddc:	bf070713          	addi	a4,a4,-1040 # 179c8 <__clz_tab>
   14de0:	9736                	add	a4,a4,a3
   14de2:	00074683          	lbu	a3,0(a4)
   14de6:	96be                	add	a3,a3,a5
   14de8:	02000793          	li	a5,32
   14dec:	8f95                	sub	a5,a5,a3
   14dee:	ebe5                	bnez	a5,14ede <__udivdi3+0x1e0>
   14df0:	01089e93          	slli	t4,a7,0x10
   14df4:	41158733          	sub	a4,a1,a7
   14df8:	0108df13          	srli	t5,a7,0x10
   14dfc:	010ede93          	srli	t4,t4,0x10
   14e00:	4585                	li	a1,1
   14e02:	01035793          	srli	a5,t1,0x10
   14e06:	03e75533          	divu	a0,a4,t5
   14e0a:	03e77733          	remu	a4,a4,t5
   14e0e:	03d506b3          	mul	a3,a0,t4
   14e12:	0742                	slli	a4,a4,0x10
   14e14:	8fd9                	or	a5,a5,a4
   14e16:	00d7fa63          	bgeu	a5,a3,14e2a <__udivdi3+0x12c>
   14e1a:	97c6                	add	a5,a5,a7
   14e1c:	fff50713          	addi	a4,a0,-1
   14e20:	0117e463          	bltu	a5,a7,14e28 <__udivdi3+0x12a>
   14e24:	26d7e663          	bltu	a5,a3,15090 <__udivdi3+0x392>
   14e28:	853a                	mv	a0,a4
   14e2a:	8f95                	sub	a5,a5,a3
   14e2c:	03e7d733          	divu	a4,a5,t5
   14e30:	0342                	slli	t1,t1,0x10
   14e32:	01035313          	srli	t1,t1,0x10
   14e36:	03e7f7b3          	remu	a5,a5,t5
   14e3a:	03d70eb3          	mul	t4,a4,t4
   14e3e:	07c2                	slli	a5,a5,0x10
   14e40:	0067e7b3          	or	a5,a5,t1
   14e44:	01d7fb63          	bgeu	a5,t4,14e5a <__udivdi3+0x15c>
   14e48:	97c6                	add	a5,a5,a7
   14e4a:	fff70693          	addi	a3,a4,-1
   14e4e:	0117e563          	bltu	a5,a7,14e58 <__udivdi3+0x15a>
   14e52:	1779                	addi	a4,a4,-2
   14e54:	01d7e363          	bltu	a5,t4,14e5a <__udivdi3+0x15c>
   14e58:	8736                	mv	a4,a3
   14e5a:	0542                	slli	a0,a0,0x10
   14e5c:	8d59                	or	a0,a0,a4
   14e5e:	8082                	ret
   14e60:	04d5e263          	bltu	a1,a3,14ea4 <__udivdi3+0x1a6>
   14e64:	67c1                	lui	a5,0x10
   14e66:	04f6e263          	bltu	a3,a5,14eaa <__udivdi3+0x1ac>
   14e6a:	010007b7          	lui	a5,0x1000
   14e6e:	1ef6e463          	bltu	a3,a5,15056 <__udivdi3+0x358>
   14e72:	0186d713          	srli	a4,a3,0x18
   14e76:	4861                	li	a6,24
   14e78:	00003797          	auipc	a5,0x3
   14e7c:	b5078793          	addi	a5,a5,-1200 # 179c8 <__clz_tab>
   14e80:	97ba                	add	a5,a5,a4
   14e82:	0007c703          	lbu	a4,0(a5)
   14e86:	02000e13          	li	t3,32
   14e8a:	9742                	add	a4,a4,a6
   14e8c:	40ee0e33          	sub	t3,t3,a4
   14e90:	0c0e1a63          	bnez	t3,14f64 <__udivdi3+0x266>
   14e94:	1cb6ed63          	bltu	a3,a1,1506e <__udivdi3+0x370>
   14e98:	00c53533          	sltu	a0,a0,a2
   14e9c:	00154513          	xori	a0,a0,1
   14ea0:	4581                	li	a1,0
   14ea2:	8082                	ret
   14ea4:	4581                	li	a1,0
   14ea6:	4501                	li	a0,0
   14ea8:	8082                	ret
   14eaa:	0ff00793          	li	a5,255
   14eae:	1cd7f363          	bgeu	a5,a3,15074 <__udivdi3+0x376>
   14eb2:	0086d713          	srli	a4,a3,0x8
   14eb6:	4821                	li	a6,8
   14eb8:	b7c1                	j	14e78 <__udivdi3+0x17a>
   14eba:	0ff00713          	li	a4,255
   14ebe:	86c6                	mv	a3,a7
   14ec0:	f1177ce3          	bgeu	a4,a7,14dd8 <__udivdi3+0xda>
   14ec4:	0088d693          	srli	a3,a7,0x8
   14ec8:	47a1                	li	a5,8
   14eca:	b739                	j	14dd8 <__udivdi3+0xda>
   14ecc:	0ff00713          	li	a4,255
   14ed0:	86b2                	mv	a3,a2
   14ed2:	e4c778e3          	bgeu	a4,a2,14d22 <__udivdi3+0x24>
   14ed6:	00865693          	srli	a3,a2,0x8
   14eda:	47a1                	li	a5,8
   14edc:	b599                	j	14d22 <__udivdi3+0x24>
   14ede:	00f898b3          	sll	a7,a7,a5
   14ee2:	00d5d633          	srl	a2,a1,a3
   14ee6:	0108df13          	srli	t5,a7,0x10
   14eea:	03e65e33          	divu	t3,a2,t5
   14eee:	00f59733          	sll	a4,a1,a5
   14ef2:	00d556b3          	srl	a3,a0,a3
   14ef6:	8f55                	or	a4,a4,a3
   14ef8:	01089e93          	slli	t4,a7,0x10
   14efc:	010ede93          	srli	t4,t4,0x10
   14f00:	00f51333          	sll	t1,a0,a5
   14f04:	01075593          	srli	a1,a4,0x10
   14f08:	03e676b3          	remu	a3,a2,t5
   14f0c:	03ce87b3          	mul	a5,t4,t3
   14f10:	06c2                	slli	a3,a3,0x10
   14f12:	8ecd                	or	a3,a3,a1
   14f14:	00f6fb63          	bgeu	a3,a5,14f2a <__udivdi3+0x22c>
   14f18:	96c6                	add	a3,a3,a7
   14f1a:	fffe0613          	addi	a2,t3,-1
   14f1e:	1716e463          	bltu	a3,a7,15086 <__udivdi3+0x388>
   14f22:	16f6f263          	bgeu	a3,a5,15086 <__udivdi3+0x388>
   14f26:	1e79                	addi	t3,t3,-2
   14f28:	96c6                	add	a3,a3,a7
   14f2a:	8e9d                	sub	a3,a3,a5
   14f2c:	03e6d633          	divu	a2,a3,t5
   14f30:	01071793          	slli	a5,a4,0x10
   14f34:	83c1                	srli	a5,a5,0x10
   14f36:	03e6f6b3          	remu	a3,a3,t5
   14f3a:	02ce8533          	mul	a0,t4,a2
   14f3e:	01069713          	slli	a4,a3,0x10
   14f42:	8f5d                	or	a4,a4,a5
   14f44:	00a77b63          	bgeu	a4,a0,14f5a <__udivdi3+0x25c>
   14f48:	9746                	add	a4,a4,a7
   14f4a:	fff60793          	addi	a5,a2,-1
   14f4e:	13176863          	bltu	a4,a7,1507e <__udivdi3+0x380>
   14f52:	12a77663          	bgeu	a4,a0,1507e <__udivdi3+0x380>
   14f56:	1679                	addi	a2,a2,-2
   14f58:	9746                	add	a4,a4,a7
   14f5a:	010e1593          	slli	a1,t3,0x10
   14f5e:	8f09                	sub	a4,a4,a0
   14f60:	8dd1                	or	a1,a1,a2
   14f62:	b545                	j	14e02 <__udivdi3+0x104>
   14f64:	00e657b3          	srl	a5,a2,a4
   14f68:	01c696b3          	sll	a3,a3,t3
   14f6c:	8edd                	or	a3,a3,a5
   14f6e:	00e5d333          	srl	t1,a1,a4
   14f72:	0106df13          	srli	t5,a3,0x10
   14f76:	03e357b3          	divu	a5,t1,t5
   14f7a:	01069e93          	slli	t4,a3,0x10
   14f7e:	010ede93          	srli	t4,t4,0x10
   14f82:	01c59833          	sll	a6,a1,t3
   14f86:	00e55733          	srl	a4,a0,a4
   14f8a:	01076833          	or	a6,a4,a6
   14f8e:	01085893          	srli	a7,a6,0x10
   14f92:	01c61633          	sll	a2,a2,t3
   14f96:	03e37333          	remu	t1,t1,t5
   14f9a:	02fe85b3          	mul	a1,t4,a5
   14f9e:	0342                	slli	t1,t1,0x10
   14fa0:	011368b3          	or	a7,t1,a7
   14fa4:	00b8fb63          	bgeu	a7,a1,14fba <__udivdi3+0x2bc>
   14fa8:	98b6                	add	a7,a7,a3
   14faa:	fff78713          	addi	a4,a5,-1
   14fae:	0cd8ea63          	bltu	a7,a3,15082 <__udivdi3+0x384>
   14fb2:	0cb8f863          	bgeu	a7,a1,15082 <__udivdi3+0x384>
   14fb6:	17f9                	addi	a5,a5,-2
   14fb8:	98b6                	add	a7,a7,a3
   14fba:	40b888b3          	sub	a7,a7,a1
   14fbe:	03e8d733          	divu	a4,a7,t5
   14fc2:	0842                	slli	a6,a6,0x10
   14fc4:	01085813          	srli	a6,a6,0x10
   14fc8:	03e8f8b3          	remu	a7,a7,t5
   14fcc:	02ee8333          	mul	t1,t4,a4
   14fd0:	08c2                	slli	a7,a7,0x10
   14fd2:	0108e5b3          	or	a1,a7,a6
   14fd6:	0065fb63          	bgeu	a1,t1,14fec <__udivdi3+0x2ee>
   14fda:	95b6                	add	a1,a1,a3
   14fdc:	fff70813          	addi	a6,a4,-1
   14fe0:	08d5ed63          	bltu	a1,a3,1507a <__udivdi3+0x37c>
   14fe4:	0865fb63          	bgeu	a1,t1,1507a <__udivdi3+0x37c>
   14fe8:	1779                	addi	a4,a4,-2
   14fea:	95b6                	add	a1,a1,a3
   14fec:	07c2                	slli	a5,a5,0x10
   14fee:	6f41                	lui	t5,0x10
   14ff0:	8fd9                	or	a5,a5,a4
   14ff2:	ffff0713          	addi	a4,t5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14ff6:	00e7f6b3          	and	a3,a5,a4
   14ffa:	0107d893          	srli	a7,a5,0x10
   14ffe:	8f71                	and	a4,a4,a2
   15000:	8241                	srli	a2,a2,0x10
   15002:	02e68eb3          	mul	t4,a3,a4
   15006:	406585b3          	sub	a1,a1,t1
   1500a:	02c686b3          	mul	a3,a3,a2
   1500e:	010ed813          	srli	a6,t4,0x10
   15012:	02e88733          	mul	a4,a7,a4
   15016:	96ba                	add	a3,a3,a4
   15018:	96c2                	add	a3,a3,a6
   1501a:	02c88633          	mul	a2,a7,a2
   1501e:	00e6f363          	bgeu	a3,a4,15024 <__udivdi3+0x326>
   15022:	967a                	add	a2,a2,t5
   15024:	0106d893          	srli	a7,a3,0x10
   15028:	9646                	add	a2,a2,a7
   1502a:	02c5e263          	bltu	a1,a2,1504e <__udivdi3+0x350>
   1502e:	00c58563          	beq	a1,a2,15038 <__udivdi3+0x33a>
   15032:	853e                	mv	a0,a5
   15034:	4581                	li	a1,0
   15036:	8082                	ret
   15038:	6741                	lui	a4,0x10
   1503a:	177d                	addi	a4,a4,-1
   1503c:	8ef9                	and	a3,a3,a4
   1503e:	06c2                	slli	a3,a3,0x10
   15040:	00eefeb3          	and	t4,t4,a4
   15044:	01c51533          	sll	a0,a0,t3
   15048:	96f6                	add	a3,a3,t4
   1504a:	fed574e3          	bgeu	a0,a3,15032 <__udivdi3+0x334>
   1504e:	fff78513          	addi	a0,a5,-1
   15052:	4581                	li	a1,0
   15054:	8082                	ret
   15056:	0106d713          	srli	a4,a3,0x10
   1505a:	4841                	li	a6,16
   1505c:	bd31                	j	14e78 <__udivdi3+0x17a>
   1505e:	01065693          	srli	a3,a2,0x10
   15062:	47c1                	li	a5,16
   15064:	b97d                	j	14d22 <__udivdi3+0x24>
   15066:	0108d693          	srli	a3,a7,0x10
   1506a:	47c1                	li	a5,16
   1506c:	b3b5                	j	14dd8 <__udivdi3+0xda>
   1506e:	4581                	li	a1,0
   15070:	4505                	li	a0,1
   15072:	8082                	ret
   15074:	8736                	mv	a4,a3
   15076:	4801                	li	a6,0
   15078:	b501                	j	14e78 <__udivdi3+0x17a>
   1507a:	8742                	mv	a4,a6
   1507c:	bf85                	j	14fec <__udivdi3+0x2ee>
   1507e:	863e                	mv	a2,a5
   15080:	bde9                	j	14f5a <__udivdi3+0x25c>
   15082:	87ba                	mv	a5,a4
   15084:	bf1d                	j	14fba <__udivdi3+0x2bc>
   15086:	8e32                	mv	t3,a2
   15088:	b54d                	j	14f2a <__udivdi3+0x22c>
   1508a:	1579                	addi	a0,a0,-2
   1508c:	9846                	add	a6,a6,a7
   1508e:	b9d5                	j	14d82 <__udivdi3+0x84>
   15090:	1579                	addi	a0,a0,-2
   15092:	97c6                	add	a5,a5,a7
   15094:	bb59                	j	14e2a <__udivdi3+0x12c>

00015096 <__umoddi3>:
__umoddi3():
   15096:	87b6                	mv	a5,a3
   15098:	8832                	mv	a6,a2
   1509a:	832a                	mv	t1,a0
   1509c:	872e                	mv	a4,a1
   1509e:	8e2e                	mv	t3,a1
   150a0:	14069363          	bnez	a3,151e6 <__umoddi3+0x150>
   150a4:	0ac5f163          	bgeu	a1,a2,15146 <__umoddi3+0xb0>
   150a8:	6741                	lui	a4,0x10
   150aa:	1ae67863          	bgeu	a2,a4,1525a <__umoddi3+0x1c4>
   150ae:	0ff00713          	li	a4,255
   150b2:	86b2                	mv	a3,a2
   150b4:	00c77563          	bgeu	a4,a2,150be <__umoddi3+0x28>
   150b8:	00865693          	srli	a3,a2,0x8
   150bc:	47a1                	li	a5,8
   150be:	00003717          	auipc	a4,0x3
   150c2:	90a70713          	addi	a4,a4,-1782 # 179c8 <__clz_tab>
   150c6:	9736                	add	a4,a4,a3
   150c8:	00074703          	lbu	a4,0(a4)
   150cc:	02000893          	li	a7,32
   150d0:	97ba                	add	a5,a5,a4
   150d2:	40f888b3          	sub	a7,a7,a5
   150d6:	00088c63          	beqz	a7,150ee <__umoddi3+0x58>
   150da:	011595b3          	sll	a1,a1,a7
   150de:	00f557b3          	srl	a5,a0,a5
   150e2:	01161833          	sll	a6,a2,a7
   150e6:	00b7ee33          	or	t3,a5,a1
   150ea:	01151333          	sll	t1,a0,a7
   150ee:	01085613          	srli	a2,a6,0x10
   150f2:	02ce57b3          	divu	a5,t3,a2
   150f6:	01081513          	slli	a0,a6,0x10
   150fa:	8141                	srli	a0,a0,0x10
   150fc:	01035693          	srli	a3,t1,0x10
   15100:	02ce7e33          	remu	t3,t3,a2
   15104:	02f507b3          	mul	a5,a0,a5
   15108:	0e42                	slli	t3,t3,0x10
   1510a:	00de6733          	or	a4,t3,a3
   1510e:	00f77863          	bgeu	a4,a5,1511e <__umoddi3+0x88>
   15112:	9742                	add	a4,a4,a6
   15114:	01076563          	bltu	a4,a6,1511e <__umoddi3+0x88>
   15118:	00f77363          	bgeu	a4,a5,1511e <__umoddi3+0x88>
   1511c:	9742                	add	a4,a4,a6
   1511e:	8f1d                	sub	a4,a4,a5
   15120:	02c756b3          	divu	a3,a4,a2
   15124:	01031793          	slli	a5,t1,0x10
   15128:	83c1                	srli	a5,a5,0x10
   1512a:	02c77733          	remu	a4,a4,a2
   1512e:	02d50533          	mul	a0,a0,a3
   15132:	0742                	slli	a4,a4,0x10
   15134:	8fd9                	or	a5,a5,a4
   15136:	08a7ec63          	bltu	a5,a0,151ce <__umoddi3+0x138>
   1513a:	40a78533          	sub	a0,a5,a0
   1513e:	01155533          	srl	a0,a0,a7
   15142:	4581                	li	a1,0
   15144:	8082                	ret
   15146:	e601                	bnez	a2,1514e <__umoddi3+0xb8>
   15148:	4705                	li	a4,1
   1514a:	02c75833          	divu	a6,a4,a2
   1514e:	6741                	lui	a4,0x10
   15150:	0ee86c63          	bltu	a6,a4,15248 <__umoddi3+0x1b2>
   15154:	010007b7          	lui	a5,0x1000
   15158:	2af86563          	bltu	a6,a5,15402 <__umoddi3+0x36c>
   1515c:	01885693          	srli	a3,a6,0x18
   15160:	47e1                	li	a5,24
   15162:	00003717          	auipc	a4,0x3
   15166:	86670713          	addi	a4,a4,-1946 # 179c8 <__clz_tab>
   1516a:	9736                	add	a4,a4,a3
   1516c:	00074703          	lbu	a4,0(a4)
   15170:	02000893          	li	a7,32
   15174:	97ba                	add	a5,a5,a4
   15176:	40f888b3          	sub	a7,a7,a5
   1517a:	1e089a63          	bnez	a7,1536e <__umoddi3+0x2d8>
   1517e:	01081e13          	slli	t3,a6,0x10
   15182:	410585b3          	sub	a1,a1,a6
   15186:	01085613          	srli	a2,a6,0x10
   1518a:	010e5e13          	srli	t3,t3,0x10
   1518e:	01035713          	srli	a4,t1,0x10
   15192:	02c5d6b3          	divu	a3,a1,a2
   15196:	02c5f5b3          	remu	a1,a1,a2
   1519a:	03c686b3          	mul	a3,a3,t3
   1519e:	05c2                	slli	a1,a1,0x10
   151a0:	8f4d                	or	a4,a4,a1
   151a2:	00d77763          	bgeu	a4,a3,151b0 <__umoddi3+0x11a>
   151a6:	9742                	add	a4,a4,a6
   151a8:	01076463          	bltu	a4,a6,151b0 <__umoddi3+0x11a>
   151ac:	26d76a63          	bltu	a4,a3,15420 <__umoddi3+0x38a>
   151b0:	8f15                	sub	a4,a4,a3
   151b2:	02c75533          	divu	a0,a4,a2
   151b6:	0342                	slli	t1,t1,0x10
   151b8:	01035313          	srli	t1,t1,0x10
   151bc:	02c77733          	remu	a4,a4,a2
   151c0:	03c50533          	mul	a0,a0,t3
   151c4:	0742                	slli	a4,a4,0x10
   151c6:	006767b3          	or	a5,a4,t1
   151ca:	00a7f863          	bgeu	a5,a0,151da <__umoddi3+0x144>
   151ce:	97c2                	add	a5,a5,a6
   151d0:	0107e563          	bltu	a5,a6,151da <__umoddi3+0x144>
   151d4:	00a7f363          	bgeu	a5,a0,151da <__umoddi3+0x144>
   151d8:	97c2                	add	a5,a5,a6
   151da:	40a78533          	sub	a0,a5,a0
   151de:	01155533          	srl	a0,a0,a7
   151e2:	4581                	li	a1,0
   151e4:	8082                	ret
   151e6:	882a                	mv	a6,a0
   151e8:	f4d5eee3          	bltu	a1,a3,15144 <__umoddi3+0xae>
   151ec:	67c1                	lui	a5,0x10
   151ee:	04f6e563          	bltu	a3,a5,15238 <__umoddi3+0x1a2>
   151f2:	010007b7          	lui	a5,0x1000
   151f6:	20f6e263          	bltu	a3,a5,153fa <__umoddi3+0x364>
   151fa:	0186d313          	srli	t1,a3,0x18
   151fe:	48e1                	li	a7,24
   15200:	00002797          	auipc	a5,0x2
   15204:	7c878793          	addi	a5,a5,1992 # 179c8 <__clz_tab>
   15208:	979a                	add	a5,a5,t1
   1520a:	0007ce03          	lbu	t3,0(a5)
   1520e:	02000313          	li	t1,32
   15212:	9e46                	add	t3,t3,a7
   15214:	41c30333          	sub	t1,t1,t3
   15218:	04031963          	bnez	t1,1526a <__umoddi3+0x1d4>
   1521c:	00b6e463          	bltu	a3,a1,15224 <__umoddi3+0x18e>
   15220:	00c56963          	bltu	a0,a2,15232 <__umoddi3+0x19c>
   15224:	40c50833          	sub	a6,a0,a2
   15228:	8d95                	sub	a1,a1,a3
   1522a:	01053733          	sltu	a4,a0,a6
   1522e:	40e58733          	sub	a4,a1,a4
   15232:	8542                	mv	a0,a6
   15234:	85ba                	mv	a1,a4
   15236:	8082                	ret
   15238:	0ff00793          	li	a5,255
   1523c:	1cd7fb63          	bgeu	a5,a3,15412 <__umoddi3+0x37c>
   15240:	0086d313          	srli	t1,a3,0x8
   15244:	48a1                	li	a7,8
   15246:	bf6d                	j	15200 <__umoddi3+0x16a>
   15248:	0ff00713          	li	a4,255
   1524c:	86c2                	mv	a3,a6
   1524e:	f1077ae3          	bgeu	a4,a6,15162 <__umoddi3+0xcc>
   15252:	00885693          	srli	a3,a6,0x8
   15256:	47a1                	li	a5,8
   15258:	b729                	j	15162 <__umoddi3+0xcc>
   1525a:	010007b7          	lui	a5,0x1000
   1525e:	1af66663          	bltu	a2,a5,1540a <__umoddi3+0x374>
   15262:	01865693          	srli	a3,a2,0x18
   15266:	47e1                	li	a5,24
   15268:	bd99                	j	150be <__umoddi3+0x28>
   1526a:	01c657b3          	srl	a5,a2,t3
   1526e:	006696b3          	sll	a3,a3,t1
   15272:	8edd                	or	a3,a3,a5
   15274:	01c5d8b3          	srl	a7,a1,t3
   15278:	0106d713          	srli	a4,a3,0x10
   1527c:	02e8deb3          	divu	t4,a7,a4
   15280:	01069f13          	slli	t5,a3,0x10
   15284:	01c557b3          	srl	a5,a0,t3
   15288:	010f5f13          	srli	t5,t5,0x10
   1528c:	006595b3          	sll	a1,a1,t1
   15290:	8ddd                	or	a1,a1,a5
   15292:	0105d813          	srli	a6,a1,0x10
   15296:	00661633          	sll	a2,a2,t1
   1529a:	00651533          	sll	a0,a0,t1
   1529e:	02e8f8b3          	remu	a7,a7,a4
   152a2:	03df07b3          	mul	a5,t5,t4
   152a6:	08c2                	slli	a7,a7,0x10
   152a8:	0108e833          	or	a6,a7,a6
   152ac:	00f87b63          	bgeu	a6,a5,152c2 <__umoddi3+0x22c>
   152b0:	9836                	add	a6,a6,a3
   152b2:	fffe8893          	addi	a7,t4,-1
   152b6:	16d86363          	bltu	a6,a3,1541c <__umoddi3+0x386>
   152ba:	16f87163          	bgeu	a6,a5,1541c <__umoddi3+0x386>
   152be:	1ef9                	addi	t4,t4,-2
   152c0:	9836                	add	a6,a6,a3
   152c2:	40f80833          	sub	a6,a6,a5
   152c6:	02e857b3          	divu	a5,a6,a4
   152ca:	05c2                	slli	a1,a1,0x10
   152cc:	81c1                	srli	a1,a1,0x10
   152ce:	02e87833          	remu	a6,a6,a4
   152d2:	02ff0f33          	mul	t5,t5,a5
   152d6:	01081713          	slli	a4,a6,0x10
   152da:	8f4d                	or	a4,a4,a1
   152dc:	01e77b63          	bgeu	a4,t5,152f2 <__umoddi3+0x25c>
   152e0:	9736                	add	a4,a4,a3
   152e2:	fff78593          	addi	a1,a5,-1 # ffffff <_data_lma+0xfe8537>
   152e6:	12d76963          	bltu	a4,a3,15418 <__umoddi3+0x382>
   152ea:	13e77763          	bgeu	a4,t5,15418 <__umoddi3+0x382>
   152ee:	17f9                	addi	a5,a5,-2
   152f0:	9736                	add	a4,a4,a3
   152f2:	0ec2                	slli	t4,t4,0x10
   152f4:	62c1                	lui	t0,0x10
   152f6:	00feeeb3          	or	t4,t4,a5
   152fa:	fff28813          	addi	a6,t0,-1 # ffff <MCU_SECTORSIZE+0xefff>
   152fe:	010ef8b3          	and	a7,t4,a6
   15302:	01065593          	srli	a1,a2,0x10
   15306:	010ede93          	srli	t4,t4,0x10
   1530a:	01067833          	and	a6,a2,a6
   1530e:	03088fb3          	mul	t6,a7,a6
   15312:	41e70733          	sub	a4,a4,t5
   15316:	030e8833          	mul	a6,t4,a6
   1531a:	010fd793          	srli	a5,t6,0x10
   1531e:	02b888b3          	mul	a7,a7,a1
   15322:	98c2                	add	a7,a7,a6
   15324:	97c6                	add	a5,a5,a7
   15326:	02be8eb3          	mul	t4,t4,a1
   1532a:	0107f363          	bgeu	a5,a6,15330 <__umoddi3+0x29a>
   1532e:	9e96                	add	t4,t4,t0
   15330:	6841                	lui	a6,0x10
   15332:	187d                	addi	a6,a6,-1
   15334:	0107d593          	srli	a1,a5,0x10
   15338:	0107f7b3          	and	a5,a5,a6
   1533c:	07c2                	slli	a5,a5,0x10
   1533e:	010fffb3          	and	t6,t6,a6
   15342:	95f6                	add	a1,a1,t4
   15344:	97fe                	add	a5,a5,t6
   15346:	0ab76263          	bltu	a4,a1,153ea <__umoddi3+0x354>
   1534a:	08b70e63          	beq	a4,a1,153e6 <__umoddi3+0x350>
   1534e:	40f507b3          	sub	a5,a0,a5
   15352:	00f53533          	sltu	a0,a0,a5
   15356:	40b705b3          	sub	a1,a4,a1
   1535a:	8d89                	sub	a1,a1,a0
   1535c:	01c59e33          	sll	t3,a1,t3
   15360:	0067d533          	srl	a0,a5,t1
   15364:	00ae6533          	or	a0,t3,a0
   15368:	0065d5b3          	srl	a1,a1,t1
   1536c:	8082                	ret
   1536e:	01181833          	sll	a6,a6,a7
   15372:	00f5d733          	srl	a4,a1,a5
   15376:	01085613          	srli	a2,a6,0x10
   1537a:	02c756b3          	divu	a3,a4,a2
   1537e:	01081e13          	slli	t3,a6,0x10
   15382:	00f557b3          	srl	a5,a0,a5
   15386:	010e5e13          	srli	t3,t3,0x10
   1538a:	011595b3          	sll	a1,a1,a7
   1538e:	8ddd                	or	a1,a1,a5
   15390:	0105de93          	srli	t4,a1,0x10
   15394:	01151333          	sll	t1,a0,a7
   15398:	02c77733          	remu	a4,a4,a2
   1539c:	02de07b3          	mul	a5,t3,a3
   153a0:	01071693          	slli	a3,a4,0x10
   153a4:	01d6e6b3          	or	a3,a3,t4
   153a8:	00f6f863          	bgeu	a3,a5,153b8 <__umoddi3+0x322>
   153ac:	96c2                	add	a3,a3,a6
   153ae:	0106e563          	bltu	a3,a6,153b8 <__umoddi3+0x322>
   153b2:	00f6f363          	bgeu	a3,a5,153b8 <__umoddi3+0x322>
   153b6:	96c2                	add	a3,a3,a6
   153b8:	8e9d                	sub	a3,a3,a5
   153ba:	02c6d733          	divu	a4,a3,a2
   153be:	01059793          	slli	a5,a1,0x10
   153c2:	83c1                	srli	a5,a5,0x10
   153c4:	02c6f6b3          	remu	a3,a3,a2
   153c8:	02ee0733          	mul	a4,t3,a4
   153cc:	01069593          	slli	a1,a3,0x10
   153d0:	8ddd                	or	a1,a1,a5
   153d2:	00e5f863          	bgeu	a1,a4,153e2 <__umoddi3+0x34c>
   153d6:	95c2                	add	a1,a1,a6
   153d8:	0105e563          	bltu	a1,a6,153e2 <__umoddi3+0x34c>
   153dc:	00e5f363          	bgeu	a1,a4,153e2 <__umoddi3+0x34c>
   153e0:	95c2                	add	a1,a1,a6
   153e2:	8d99                	sub	a1,a1,a4
   153e4:	b36d                	j	1518e <__umoddi3+0xf8>
   153e6:	f6f574e3          	bgeu	a0,a5,1534e <__umoddi3+0x2b8>
   153ea:	40c78633          	sub	a2,a5,a2
   153ee:	00c7b7b3          	sltu	a5,a5,a2
   153f2:	97b6                	add	a5,a5,a3
   153f4:	8d9d                	sub	a1,a1,a5
   153f6:	87b2                	mv	a5,a2
   153f8:	bf99                	j	1534e <__umoddi3+0x2b8>
   153fa:	0106d313          	srli	t1,a3,0x10
   153fe:	48c1                	li	a7,16
   15400:	b501                	j	15200 <__umoddi3+0x16a>
   15402:	01085693          	srli	a3,a6,0x10
   15406:	47c1                	li	a5,16
   15408:	bba9                	j	15162 <__umoddi3+0xcc>
   1540a:	01065693          	srli	a3,a2,0x10
   1540e:	47c1                	li	a5,16
   15410:	b17d                	j	150be <__umoddi3+0x28>
   15412:	8336                	mv	t1,a3
   15414:	4881                	li	a7,0
   15416:	b3ed                	j	15200 <__umoddi3+0x16a>
   15418:	87ae                	mv	a5,a1
   1541a:	bde1                	j	152f2 <__umoddi3+0x25c>
   1541c:	8ec6                	mv	t4,a7
   1541e:	b555                	j	152c2 <__umoddi3+0x22c>
   15420:	9742                	add	a4,a4,a6
   15422:	b379                	j	151b0 <__umoddi3+0x11a>

00015424 <__adddf3>:
__adddf3():
   15424:	00100837          	lui	a6,0x100
   15428:	1101                	addi	sp,sp,-32
   1542a:	187d                	addi	a6,a6,-1
   1542c:	00b87733          	and	a4,a6,a1
   15430:	ca26                	sw	s1,20(sp)
   15432:	00d87833          	and	a6,a6,a3
   15436:	0145d493          	srli	s1,a1,0x14
   1543a:	0146d313          	srli	t1,a3,0x14
   1543e:	00371e13          	slli	t3,a4,0x3
   15442:	c64e                	sw	s3,12(sp)
   15444:	01d55713          	srli	a4,a0,0x1d
   15448:	080e                	slli	a6,a6,0x3
   1544a:	01d65793          	srli	a5,a2,0x1d
   1544e:	7ff4f493          	andi	s1,s1,2047
   15452:	7ff37313          	andi	t1,t1,2047
   15456:	ce06                	sw	ra,28(sp)
   15458:	cc22                	sw	s0,24(sp)
   1545a:	c84a                	sw	s2,16(sp)
   1545c:	01f5d993          	srli	s3,a1,0x1f
   15460:	01f6de93          	srli	t4,a3,0x1f
   15464:	01c76733          	or	a4,a4,t3
   15468:	00351f13          	slli	t5,a0,0x3
   1546c:	0107e833          	or	a6,a5,a6
   15470:	00361f93          	slli	t6,a2,0x3
   15474:	40648e33          	sub	t3,s1,t1
   15478:	19d98263          	beq	s3,t4,155fc <__adddf3+0x1d8>
   1547c:	13c05863          	blez	t3,155ac <__adddf3+0x188>
   15480:	1c030663          	beqz	t1,1564c <__adddf3+0x228>
   15484:	008006b7          	lui	a3,0x800
   15488:	7ff00793          	li	a5,2047
   1548c:	00d86833          	or	a6,a6,a3
   15490:	38f48363          	beq	s1,a5,15816 <__adddf3+0x3f2>
   15494:	03800793          	li	a5,56
   15498:	35c7c463          	blt	a5,t3,157e0 <__adddf3+0x3bc>
   1549c:	47fd                	li	a5,31
   1549e:	49c7c163          	blt	a5,t3,15920 <__adddf3+0x4fc>
   154a2:	02000513          	li	a0,32
   154a6:	41c50533          	sub	a0,a0,t3
   154aa:	01cfd7b3          	srl	a5,t6,t3
   154ae:	00a816b3          	sll	a3,a6,a0
   154b2:	00af9933          	sll	s2,t6,a0
   154b6:	8edd                	or	a3,a3,a5
   154b8:	01203933          	snez	s2,s2
   154bc:	01c857b3          	srl	a5,a6,t3
   154c0:	0126e933          	or	s2,a3,s2
   154c4:	8f1d                	sub	a4,a4,a5
   154c6:	412f0933          	sub	s2,t5,s2
   154ca:	012f37b3          	sltu	a5,t5,s2
   154ce:	40f70633          	sub	a2,a4,a5
   154d2:	00861793          	slli	a5,a2,0x8
   154d6:	2407d663          	bgez	a5,15722 <__adddf3+0x2fe>
   154da:	00800737          	lui	a4,0x800
   154de:	177d                	addi	a4,a4,-1
   154e0:	00e67433          	and	s0,a2,a4
   154e4:	2c040e63          	beqz	s0,157c0 <__adddf3+0x39c>
   154e8:	8522                	mv	a0,s0
   154ea:	00002097          	auipc	ra,0x2
   154ee:	e90080e7          	jalr	-368(ra) # 1737a <__clzsi2>
   154f2:	ff850713          	addi	a4,a0,-8
   154f6:	02000793          	li	a5,32
   154fa:	8f99                	sub	a5,a5,a4
   154fc:	00f957b3          	srl	a5,s2,a5
   15500:	00e41633          	sll	a2,s0,a4
   15504:	8fd1                	or	a5,a5,a2
   15506:	00e91933          	sll	s2,s2,a4
   1550a:	2a974163          	blt	a4,s1,157ac <__adddf3+0x388>
   1550e:	40970533          	sub	a0,a4,s1
   15512:	00150613          	addi	a2,a0,1
   15516:	477d                	li	a4,31
   15518:	38c74f63          	blt	a4,a2,158b6 <__adddf3+0x492>
   1551c:	02000713          	li	a4,32
   15520:	8f11                	sub	a4,a4,a2
   15522:	00c956b3          	srl	a3,s2,a2
   15526:	00e91933          	sll	s2,s2,a4
   1552a:	00e79733          	sll	a4,a5,a4
   1552e:	8f55                	or	a4,a4,a3
   15530:	01203933          	snez	s2,s2
   15534:	01276933          	or	s2,a4,s2
   15538:	00c7d633          	srl	a2,a5,a2
   1553c:	4481                	li	s1,0
   1553e:	00797793          	andi	a5,s2,7
   15542:	cf81                	beqz	a5,1555a <__adddf3+0x136>
   15544:	00f97713          	andi	a4,s2,15
   15548:	4791                	li	a5,4
   1554a:	00f70863          	beq	a4,a5,1555a <__adddf3+0x136>
   1554e:	00490713          	addi	a4,s2,4
   15552:	01273933          	sltu	s2,a4,s2
   15556:	964a                	add	a2,a2,s2
   15558:	893a                	mv	s2,a4
   1555a:	00861793          	slli	a5,a2,0x8
   1555e:	1c07d663          	bgez	a5,1572a <__adddf3+0x306>
   15562:	00148513          	addi	a0,s1,1
   15566:	7ff00793          	li	a5,2047
   1556a:	85ce                	mv	a1,s3
   1556c:	20f50463          	beq	a0,a5,15774 <__adddf3+0x350>
   15570:	ff8007b7          	lui	a5,0xff800
   15574:	17fd                	addi	a5,a5,-1
   15576:	8ff1                	and	a5,a5,a2
   15578:	01d79893          	slli	a7,a5,0x1d
   1557c:	00395913          	srli	s2,s2,0x3
   15580:	07a6                	slli	a5,a5,0x9
   15582:	0128e8b3          	or	a7,a7,s2
   15586:	83b1                	srli	a5,a5,0xc
   15588:	7ff57513          	andi	a0,a0,2047
   1558c:	00c79693          	slli	a3,a5,0xc
   15590:	0552                	slli	a0,a0,0x14
   15592:	40f2                	lw	ra,28(sp)
   15594:	4462                	lw	s0,24(sp)
   15596:	82b1                	srli	a3,a3,0xc
   15598:	05fe                	slli	a1,a1,0x1f
   1559a:	8ec9                	or	a3,a3,a0
   1559c:	8ecd                	or	a3,a3,a1
   1559e:	44d2                	lw	s1,20(sp)
   155a0:	4942                	lw	s2,16(sp)
   155a2:	49b2                	lw	s3,12(sp)
   155a4:	8546                	mv	a0,a7
   155a6:	85b6                	mv	a1,a3
   155a8:	6105                	addi	sp,sp,32
   155aa:	8082                	ret
   155ac:	0a0e1e63          	bnez	t3,15668 <__adddf3+0x244>
   155b0:	00148313          	addi	t1,s1,1
   155b4:	7fe37313          	andi	t1,t1,2046
   155b8:	22031963          	bnez	t1,157ea <__adddf3+0x3c6>
   155bc:	01e767b3          	or	a5,a4,t5
   155c0:	01f868b3          	or	a7,a6,t6
   155c4:	1a049d63          	bnez	s1,1577e <__adddf3+0x35a>
   155c8:	40078963          	beqz	a5,159da <__adddf3+0x5b6>
   155cc:	44088863          	beqz	a7,15a1c <__adddf3+0x5f8>
   155d0:	41ff0933          	sub	s2,t5,t6
   155d4:	410707b3          	sub	a5,a4,a6
   155d8:	012f3633          	sltu	a2,t5,s2
   155dc:	40c78633          	sub	a2,a5,a2
   155e0:	00861793          	slli	a5,a2,0x8
   155e4:	4c07d863          	bgez	a5,15ab4 <__adddf3+0x690>
   155e8:	41ef8933          	sub	s2,t6,t5
   155ec:	40e807b3          	sub	a5,a6,a4
   155f0:	012fb633          	sltu	a2,t6,s2
   155f4:	40c78633          	sub	a2,a5,a2
   155f8:	89f6                	mv	s3,t4
   155fa:	b791                	j	1553e <__adddf3+0x11a>
   155fc:	0fc05063          	blez	t3,156dc <__adddf3+0x2b8>
   15600:	0c030063          	beqz	t1,156c0 <__adddf3+0x29c>
   15604:	008006b7          	lui	a3,0x800
   15608:	7ff00793          	li	a5,2047
   1560c:	00d86833          	or	a6,a6,a3
   15610:	3af48c63          	beq	s1,a5,159c8 <__adddf3+0x5a4>
   15614:	03800793          	li	a5,56
   15618:	13c7cb63          	blt	a5,t3,1574e <__adddf3+0x32a>
   1561c:	47fd                	li	a5,31
   1561e:	37c7d163          	bge	a5,t3,15980 <__adddf3+0x55c>
   15622:	fe0e0913          	addi	s2,t3,-32
   15626:	02000793          	li	a5,32
   1562a:	012856b3          	srl	a3,a6,s2
   1562e:	00fe0a63          	beq	t3,a5,15642 <__adddf3+0x21e>
   15632:	04000913          	li	s2,64
   15636:	41c90933          	sub	s2,s2,t3
   1563a:	01281933          	sll	s2,a6,s2
   1563e:	012fefb3          	or	t6,t6,s2
   15642:	01f03933          	snez	s2,t6
   15646:	00d96933          	or	s2,s2,a3
   1564a:	a231                	j	15756 <__adddf3+0x332>
   1564c:	01f867b3          	or	a5,a6,t6
   15650:	1c078c63          	beqz	a5,15828 <__adddf3+0x404>
   15654:	fffe0793          	addi	a5,t3,-1
   15658:	38078e63          	beqz	a5,159f4 <__adddf3+0x5d0>
   1565c:	7ff00693          	li	a3,2047
   15660:	1ade0b63          	beq	t3,a3,15816 <__adddf3+0x3f2>
   15664:	8e3e                	mv	t3,a5
   15666:	b53d                	j	15494 <__adddf3+0x70>
   15668:	409305b3          	sub	a1,t1,s1
   1566c:	22049363          	bnez	s1,15892 <__adddf3+0x46e>
   15670:	01e767b3          	or	a5,a4,t5
   15674:	32078963          	beqz	a5,159a6 <__adddf3+0x582>
   15678:	fff58793          	addi	a5,a1,-1
   1567c:	44078363          	beqz	a5,15ac2 <__adddf3+0x69e>
   15680:	7ff00693          	li	a3,2047
   15684:	20d58e63          	beq	a1,a3,158a0 <__adddf3+0x47c>
   15688:	85be                	mv	a1,a5
   1568a:	03800793          	li	a5,56
   1568e:	2ab7ce63          	blt	a5,a1,1594a <__adddf3+0x526>
   15692:	47fd                	li	a5,31
   15694:	3eb7c163          	blt	a5,a1,15a76 <__adddf3+0x652>
   15698:	02000793          	li	a5,32
   1569c:	8f8d                	sub	a5,a5,a1
   1569e:	00f71933          	sll	s2,a4,a5
   156a2:	00bf56b3          	srl	a3,t5,a1
   156a6:	00ff17b3          	sll	a5,t5,a5
   156aa:	00d96933          	or	s2,s2,a3
   156ae:	00f037b3          	snez	a5,a5
   156b2:	00b75733          	srl	a4,a4,a1
   156b6:	00f96933          	or	s2,s2,a5
   156ba:	40e80833          	sub	a6,a6,a4
   156be:	ac51                	j	15952 <__adddf3+0x52e>
   156c0:	01f867b3          	or	a5,a6,t6
   156c4:	34078263          	beqz	a5,15a08 <__adddf3+0x5e4>
   156c8:	fffe0793          	addi	a5,t3,-1
   156cc:	20078c63          	beqz	a5,158e4 <__adddf3+0x4c0>
   156d0:	7ff00693          	li	a3,2047
   156d4:	2ede0a63          	beq	t3,a3,159c8 <__adddf3+0x5a4>
   156d8:	8e3e                	mv	t3,a5
   156da:	bf2d                	j	15614 <__adddf3+0x1f0>
   156dc:	160e1063          	bnez	t3,1583c <__adddf3+0x418>
   156e0:	00148693          	addi	a3,s1,1
   156e4:	7fe6f793          	andi	a5,a3,2046
   156e8:	34079363          	bnez	a5,15a2e <__adddf3+0x60a>
   156ec:	01e767b3          	or	a5,a4,t5
   156f0:	2c049763          	bnez	s1,159be <__adddf3+0x59a>
   156f4:	3e078263          	beqz	a5,15ad8 <__adddf3+0x6b4>
   156f8:	01f867b3          	or	a5,a6,t6
   156fc:	32078063          	beqz	a5,15a1c <__adddf3+0x5f8>
   15700:	01ff0933          	add	s2,t5,t6
   15704:	010707b3          	add	a5,a4,a6
   15708:	01e93f33          	sltu	t5,s2,t5
   1570c:	01e78633          	add	a2,a5,t5
   15710:	00861793          	slli	a5,a2,0x8
   15714:	0007d763          	bgez	a5,15722 <__adddf3+0x2fe>
   15718:	ff8007b7          	lui	a5,0xff800
   1571c:	17fd                	addi	a5,a5,-1
   1571e:	8e7d                	and	a2,a2,a5
   15720:	4485                	li	s1,1
   15722:	00797793          	andi	a5,s2,7
   15726:	e0079fe3          	bnez	a5,15544 <__adddf3+0x120>
   1572a:	01d61793          	slli	a5,a2,0x1d
   1572e:	00395893          	srli	a7,s2,0x3
   15732:	00f8e8b3          	or	a7,a7,a5
   15736:	00365793          	srli	a5,a2,0x3
   1573a:	7ff00713          	li	a4,2047
   1573e:	04e48d63          	beq	s1,a4,15798 <__adddf3+0x374>
   15742:	07b2                	slli	a5,a5,0xc
   15744:	83b1                	srli	a5,a5,0xc
   15746:	7ff4f513          	andi	a0,s1,2047
   1574a:	85ce                	mv	a1,s3
   1574c:	b581                	j	1558c <__adddf3+0x168>
   1574e:	01f86933          	or	s2,a6,t6
   15752:	01203933          	snez	s2,s2
   15756:	997a                	add	s2,s2,t5
   15758:	01e937b3          	sltu	a5,s2,t5
   1575c:	00e78633          	add	a2,a5,a4
   15760:	00861793          	slli	a5,a2,0x8
   15764:	fa07dfe3          	bgez	a5,15722 <__adddf3+0x2fe>
   15768:	0485                	addi	s1,s1,1
   1576a:	7ff00793          	li	a5,2047
   1576e:	18f49863          	bne	s1,a5,158fe <__adddf3+0x4da>
   15772:	85ce                	mv	a1,s3
   15774:	7ff00513          	li	a0,2047
   15778:	4781                	li	a5,0
   1577a:	4881                	li	a7,0
   1577c:	bd01                	j	1558c <__adddf3+0x168>
   1577e:	ebd1                	bnez	a5,15812 <__adddf3+0x3ee>
   15780:	3a088663          	beqz	a7,15b2c <__adddf3+0x708>
   15784:	00361693          	slli	a3,a2,0x3
   15788:	01d81793          	slli	a5,a6,0x1d
   1578c:	828d                	srli	a3,a3,0x3
   1578e:	00d7e8b3          	or	a7,a5,a3
   15792:	89f6                	mv	s3,t4
   15794:	00385793          	srli	a5,a6,0x3
   15798:	00f8e7b3          	or	a5,a7,a5
   1579c:	dbf9                	beqz	a5,15772 <__adddf3+0x34e>
   1579e:	4581                	li	a1,0
   157a0:	7ff00513          	li	a0,2047
   157a4:	000807b7          	lui	a5,0x80
   157a8:	4881                	li	a7,0
   157aa:	b3cd                	j	1558c <__adddf3+0x168>
   157ac:	ff800637          	lui	a2,0xff800
   157b0:	167d                	addi	a2,a2,-1
   157b2:	8e7d                	and	a2,a2,a5
   157b4:	00797793          	andi	a5,s2,7
   157b8:	8c99                	sub	s1,s1,a4
   157ba:	d80795e3          	bnez	a5,15544 <__adddf3+0x120>
   157be:	b7b5                	j	1572a <__adddf3+0x306>
   157c0:	854a                	mv	a0,s2
   157c2:	00002097          	auipc	ra,0x2
   157c6:	bb8080e7          	jalr	-1096(ra) # 1737a <__clzsi2>
   157ca:	01850713          	addi	a4,a0,24
   157ce:	47fd                	li	a5,31
   157d0:	d2e7d3e3          	bge	a5,a4,154f6 <__adddf3+0xd2>
   157d4:	ff850613          	addi	a2,a0,-8
   157d8:	00c917b3          	sll	a5,s2,a2
   157dc:	4901                	li	s2,0
   157de:	b335                	j	1550a <__adddf3+0xe6>
   157e0:	01f86933          	or	s2,a6,t6
   157e4:	01203933          	snez	s2,s2
   157e8:	b9f9                	j	154c6 <__adddf3+0xa2>
   157ea:	41ff0933          	sub	s2,t5,t6
   157ee:	41070633          	sub	a2,a4,a6
   157f2:	012f3433          	sltu	s0,t5,s2
   157f6:	40860433          	sub	s0,a2,s0
   157fa:	00841793          	slli	a5,s0,0x8
   157fe:	2407cd63          	bltz	a5,15a58 <__adddf3+0x634>
   15802:	008968b3          	or	a7,s2,s0
   15806:	cc089fe3          	bnez	a7,154e4 <__adddf3+0xc0>
   1580a:	4781                	li	a5,0
   1580c:	4981                	li	s3,0
   1580e:	4481                	li	s1,0
   15810:	bf0d                	j	15742 <__adddf3+0x31e>
   15812:	f80896e3          	bnez	a7,1579e <__adddf3+0x37a>
   15816:	050e                	slli	a0,a0,0x3
   15818:	01d71793          	slli	a5,a4,0x1d
   1581c:	810d                	srli	a0,a0,0x3
   1581e:	00a7e8b3          	or	a7,a5,a0
   15822:	00375793          	srli	a5,a4,0x3
   15826:	bf8d                	j	15798 <__adddf3+0x374>
   15828:	050e                	slli	a0,a0,0x3
   1582a:	01d71793          	slli	a5,a4,0x1d
   1582e:	810d                	srli	a0,a0,0x3
   15830:	00a7e8b3          	or	a7,a5,a0
   15834:	84f2                	mv	s1,t3
   15836:	00375793          	srli	a5,a4,0x3
   1583a:	b701                	j	1573a <__adddf3+0x316>
   1583c:	40930533          	sub	a0,t1,s1
   15840:	12048263          	beqz	s1,15964 <__adddf3+0x540>
   15844:	008006b7          	lui	a3,0x800
   15848:	7ff00793          	li	a5,2047
   1584c:	8f55                	or	a4,a4,a3
   1584e:	2ef30d63          	beq	t1,a5,15b48 <__adddf3+0x724>
   15852:	03800793          	li	a5,56
   15856:	20a7cb63          	blt	a5,a0,15a6c <__adddf3+0x648>
   1585a:	47fd                	li	a5,31
   1585c:	2aa7c363          	blt	a5,a0,15b02 <__adddf3+0x6de>
   15860:	02000793          	li	a5,32
   15864:	8f89                	sub	a5,a5,a0
   15866:	00f71933          	sll	s2,a4,a5
   1586a:	00af56b3          	srl	a3,t5,a0
   1586e:	00ff17b3          	sll	a5,t5,a5
   15872:	00d96933          	or	s2,s2,a3
   15876:	00f037b3          	snez	a5,a5
   1587a:	00a75733          	srl	a4,a4,a0
   1587e:	00f96933          	or	s2,s2,a5
   15882:	983a                	add	a6,a6,a4
   15884:	997e                	add	s2,s2,t6
   15886:	01f937b3          	sltu	a5,s2,t6
   1588a:	01078633          	add	a2,a5,a6
   1588e:	849a                	mv	s1,t1
   15890:	bdc1                	j	15760 <__adddf3+0x33c>
   15892:	008006b7          	lui	a3,0x800
   15896:	7ff00793          	li	a5,2047
   1589a:	8f55                	or	a4,a4,a3
   1589c:	def317e3          	bne	t1,a5,1568a <__adddf3+0x266>
   158a0:	00361793          	slli	a5,a2,0x3
   158a4:	838d                	srli	a5,a5,0x3
   158a6:	01d81893          	slli	a7,a6,0x1d
   158aa:	0117e8b3          	or	a7,a5,a7
   158ae:	89f6                	mv	s3,t4
   158b0:	00385793          	srli	a5,a6,0x3
   158b4:	b5d5                	j	15798 <__adddf3+0x374>
   158b6:	fe150713          	addi	a4,a0,-31
   158ba:	02000693          	li	a3,32
   158be:	00e7d733          	srl	a4,a5,a4
   158c2:	00d60a63          	beq	a2,a3,158d6 <__adddf3+0x4b2>
   158c6:	04000693          	li	a3,64
   158ca:	40c68633          	sub	a2,a3,a2
   158ce:	00c79633          	sll	a2,a5,a2
   158d2:	00c96933          	or	s2,s2,a2
   158d6:	01203933          	snez	s2,s2
   158da:	00e96933          	or	s2,s2,a4
   158de:	4601                	li	a2,0
   158e0:	4481                	li	s1,0
   158e2:	b581                	j	15722 <__adddf3+0x2fe>
   158e4:	01ff0933          	add	s2,t5,t6
   158e8:	010707b3          	add	a5,a4,a6
   158ec:	01e93633          	sltu	a2,s2,t5
   158f0:	963e                	add	a2,a2,a5
   158f2:	00861793          	slli	a5,a2,0x8
   158f6:	4485                	li	s1,1
   158f8:	e207d5e3          	bgez	a5,15722 <__adddf3+0x2fe>
   158fc:	4489                	li	s1,2
   158fe:	ff8007b7          	lui	a5,0xff800
   15902:	17fd                	addi	a5,a5,-1
   15904:	8ff1                	and	a5,a5,a2
   15906:	00195713          	srli	a4,s2,0x1
   1590a:	00197913          	andi	s2,s2,1
   1590e:	01276933          	or	s2,a4,s2
   15912:	01f79893          	slli	a7,a5,0x1f
   15916:	0128e933          	or	s2,a7,s2
   1591a:	0017d613          	srli	a2,a5,0x1
   1591e:	b105                	j	1553e <__adddf3+0x11a>
   15920:	fe0e0913          	addi	s2,t3,-32
   15924:	02000793          	li	a5,32
   15928:	012856b3          	srl	a3,a6,s2
   1592c:	00fe0a63          	beq	t3,a5,15940 <__adddf3+0x51c>
   15930:	04000913          	li	s2,64
   15934:	41c90933          	sub	s2,s2,t3
   15938:	01281933          	sll	s2,a6,s2
   1593c:	012fefb3          	or	t6,t6,s2
   15940:	01f03933          	snez	s2,t6
   15944:	00d96933          	or	s2,s2,a3
   15948:	bebd                	j	154c6 <__adddf3+0xa2>
   1594a:	01e76933          	or	s2,a4,t5
   1594e:	01203933          	snez	s2,s2
   15952:	412f8933          	sub	s2,t6,s2
   15956:	012fb7b3          	sltu	a5,t6,s2
   1595a:	40f80633          	sub	a2,a6,a5
   1595e:	849a                	mv	s1,t1
   15960:	89f6                	mv	s3,t4
   15962:	be85                	j	154d2 <__adddf3+0xae>
   15964:	01e767b3          	or	a5,a4,t5
   15968:	18078263          	beqz	a5,15aec <__adddf3+0x6c8>
   1596c:	fff50793          	addi	a5,a0,-1
   15970:	1c078463          	beqz	a5,15b38 <__adddf3+0x714>
   15974:	7ff00693          	li	a3,2047
   15978:	12d50463          	beq	a0,a3,15aa0 <__adddf3+0x67c>
   1597c:	853e                	mv	a0,a5
   1597e:	bdd1                	j	15852 <__adddf3+0x42e>
   15980:	02000793          	li	a5,32
   15984:	41c787b3          	sub	a5,a5,t3
   15988:	00f816b3          	sll	a3,a6,a5
   1598c:	00ff9933          	sll	s2,t6,a5
   15990:	01cfd633          	srl	a2,t6,t3
   15994:	8ed1                	or	a3,a3,a2
   15996:	01203933          	snez	s2,s2
   1599a:	01c857b3          	srl	a5,a6,t3
   1599e:	0126e933          	or	s2,a3,s2
   159a2:	973e                	add	a4,a4,a5
   159a4:	bb4d                	j	15756 <__adddf3+0x332>
   159a6:	00361793          	slli	a5,a2,0x3
   159aa:	838d                	srli	a5,a5,0x3
   159ac:	01d81893          	slli	a7,a6,0x1d
   159b0:	0117e8b3          	or	a7,a5,a7
   159b4:	84ae                	mv	s1,a1
   159b6:	00385793          	srli	a5,a6,0x3
   159ba:	89f6                	mv	s3,t4
   159bc:	bbbd                	j	1573a <__adddf3+0x316>
   159be:	c3ed                	beqz	a5,15aa0 <__adddf3+0x67c>
   159c0:	01f86933          	or	s2,a6,t6
   159c4:	dc091de3          	bnez	s2,1579e <__adddf3+0x37a>
   159c8:	050e                	slli	a0,a0,0x3
   159ca:	01d71793          	slli	a5,a4,0x1d
   159ce:	810d                	srli	a0,a0,0x3
   159d0:	00f568b3          	or	a7,a0,a5
   159d4:	00375793          	srli	a5,a4,0x3
   159d8:	b3c1                	j	15798 <__adddf3+0x374>
   159da:	0e088163          	beqz	a7,15abc <__adddf3+0x698>
   159de:	00361693          	slli	a3,a2,0x3
   159e2:	01d81793          	slli	a5,a6,0x1d
   159e6:	828d                	srli	a3,a3,0x3
   159e8:	00d7e8b3          	or	a7,a5,a3
   159ec:	89f6                	mv	s3,t4
   159ee:	00385793          	srli	a5,a6,0x3
   159f2:	bb81                	j	15742 <__adddf3+0x31e>
   159f4:	41ff0933          	sub	s2,t5,t6
   159f8:	410707b3          	sub	a5,a4,a6
   159fc:	012f3f33          	sltu	t5,t5,s2
   15a00:	41e78633          	sub	a2,a5,t5
   15a04:	4485                	li	s1,1
   15a06:	b4f1                	j	154d2 <__adddf3+0xae>
   15a08:	050e                	slli	a0,a0,0x3
   15a0a:	01d71793          	slli	a5,a4,0x1d
   15a0e:	810d                	srli	a0,a0,0x3
   15a10:	00f568b3          	or	a7,a0,a5
   15a14:	84f2                	mv	s1,t3
   15a16:	00375793          	srli	a5,a4,0x3
   15a1a:	b305                	j	1573a <__adddf3+0x316>
   15a1c:	050e                	slli	a0,a0,0x3
   15a1e:	01d71793          	slli	a5,a4,0x1d
   15a22:	810d                	srli	a0,a0,0x3
   15a24:	00a7e8b3          	or	a7,a5,a0
   15a28:	00375793          	srli	a5,a4,0x3
   15a2c:	bb19                	j	15742 <__adddf3+0x31e>
   15a2e:	7ff00793          	li	a5,2047
   15a32:	d4f680e3          	beq	a3,a5,15772 <__adddf3+0x34e>
   15a36:	01ff0933          	add	s2,t5,t6
   15a3a:	01e93633          	sltu	a2,s2,t5
   15a3e:	010707b3          	add	a5,a4,a6
   15a42:	97b2                	add	a5,a5,a2
   15a44:	01f79893          	slli	a7,a5,0x1f
   15a48:	00195913          	srli	s2,s2,0x1
   15a4c:	0128e933          	or	s2,a7,s2
   15a50:	0017d613          	srli	a2,a5,0x1
   15a54:	84b6                	mv	s1,a3
   15a56:	b1f1                	j	15722 <__adddf3+0x2fe>
   15a58:	41ef8933          	sub	s2,t6,t5
   15a5c:	40e80733          	sub	a4,a6,a4
   15a60:	012fb633          	sltu	a2,t6,s2
   15a64:	40c70433          	sub	s0,a4,a2
   15a68:	89f6                	mv	s3,t4
   15a6a:	bcad                	j	154e4 <__adddf3+0xc0>
   15a6c:	01e76933          	or	s2,a4,t5
   15a70:	01203933          	snez	s2,s2
   15a74:	bd01                	j	15884 <__adddf3+0x460>
   15a76:	fe058793          	addi	a5,a1,-32
   15a7a:	02000693          	li	a3,32
   15a7e:	00f757b3          	srl	a5,a4,a5
   15a82:	00d58a63          	beq	a1,a3,15a96 <__adddf3+0x672>
   15a86:	04000693          	li	a3,64
   15a8a:	40b685b3          	sub	a1,a3,a1
   15a8e:	00b71733          	sll	a4,a4,a1
   15a92:	00ef6f33          	or	t5,t5,a4
   15a96:	01e03933          	snez	s2,t5
   15a9a:	00f96933          	or	s2,s2,a5
   15a9e:	bd55                	j	15952 <__adddf3+0x52e>
   15aa0:	00361793          	slli	a5,a2,0x3
   15aa4:	838d                	srli	a5,a5,0x3
   15aa6:	01d81893          	slli	a7,a6,0x1d
   15aaa:	0117e8b3          	or	a7,a5,a7
   15aae:	00385793          	srli	a5,a6,0x3
   15ab2:	b1dd                	j	15798 <__adddf3+0x374>
   15ab4:	00c968b3          	or	a7,s2,a2
   15ab8:	c60895e3          	bnez	a7,15722 <__adddf3+0x2fe>
   15abc:	4781                	li	a5,0
   15abe:	4981                	li	s3,0
   15ac0:	b149                	j	15742 <__adddf3+0x31e>
   15ac2:	41ef8933          	sub	s2,t6,t5
   15ac6:	40e807b3          	sub	a5,a6,a4
   15aca:	012fb633          	sltu	a2,t6,s2
   15ace:	40c78633          	sub	a2,a5,a2
   15ad2:	89f6                	mv	s3,t4
   15ad4:	4485                	li	s1,1
   15ad6:	baf5                	j	154d2 <__adddf3+0xae>
   15ad8:	00361693          	slli	a3,a2,0x3
   15adc:	01d81793          	slli	a5,a6,0x1d
   15ae0:	828d                	srli	a3,a3,0x3
   15ae2:	00d7e8b3          	or	a7,a5,a3
   15ae6:	00385793          	srli	a5,a6,0x3
   15aea:	b9a1                	j	15742 <__adddf3+0x31e>
   15aec:	00361693          	slli	a3,a2,0x3
   15af0:	01d81793          	slli	a5,a6,0x1d
   15af4:	828d                	srli	a3,a3,0x3
   15af6:	00d7e8b3          	or	a7,a5,a3
   15afa:	84aa                	mv	s1,a0
   15afc:	00385793          	srli	a5,a6,0x3
   15b00:	b92d                	j	1573a <__adddf3+0x316>
   15b02:	fe050793          	addi	a5,a0,-32
   15b06:	02000693          	li	a3,32
   15b0a:	00f757b3          	srl	a5,a4,a5
   15b0e:	00d50a63          	beq	a0,a3,15b22 <__adddf3+0x6fe>
   15b12:	04000693          	li	a3,64
   15b16:	40a68533          	sub	a0,a3,a0
   15b1a:	00a71733          	sll	a4,a4,a0
   15b1e:	00ef6f33          	or	t5,t5,a4
   15b22:	01e03933          	snez	s2,t5
   15b26:	00f96933          	or	s2,s2,a5
   15b2a:	bba9                	j	15884 <__adddf3+0x460>
   15b2c:	4581                	li	a1,0
   15b2e:	7ff00513          	li	a0,2047
   15b32:	000807b7          	lui	a5,0x80
   15b36:	bc99                	j	1558c <__adddf3+0x168>
   15b38:	01ff0933          	add	s2,t5,t6
   15b3c:	010707b3          	add	a5,a4,a6
   15b40:	01f93633          	sltu	a2,s2,t6
   15b44:	963e                	add	a2,a2,a5
   15b46:	b375                	j	158f2 <__adddf3+0x4ce>
   15b48:	00361693          	slli	a3,a2,0x3
   15b4c:	01d81793          	slli	a5,a6,0x1d
   15b50:	828d                	srli	a3,a3,0x3
   15b52:	00d7e8b3          	or	a7,a5,a3
   15b56:	00385793          	srli	a5,a6,0x3
   15b5a:	b93d                	j	15798 <__adddf3+0x374>

00015b5c <__divdf3>:
__divdf3():
   15b5c:	7139                	addi	sp,sp,-64
   15b5e:	0145d793          	srli	a5,a1,0x14
   15b62:	dc22                	sw	s0,56(sp)
   15b64:	d84a                	sw	s2,48(sp)
   15b66:	d256                	sw	s5,36(sp)
   15b68:	892a                	mv	s2,a0
   15b6a:	00c59413          	slli	s0,a1,0xc
   15b6e:	de06                	sw	ra,60(sp)
   15b70:	da26                	sw	s1,52(sp)
   15b72:	d64e                	sw	s3,44(sp)
   15b74:	d452                	sw	s4,40(sp)
   15b76:	d05a                	sw	s6,32(sp)
   15b78:	ce5e                	sw	s7,28(sp)
   15b7a:	7ff7f513          	andi	a0,a5,2047
   15b7e:	8031                	srli	s0,s0,0xc
   15b80:	01f5da93          	srli	s5,a1,0x1f
   15b84:	10050d63          	beqz	a0,15c9e <__divdf3+0x142>
   15b88:	7ff00793          	li	a5,2047
   15b8c:	14f50f63          	beq	a0,a5,15cea <__divdf3+0x18e>
   15b90:	01d95a13          	srli	s4,s2,0x1d
   15b94:	040e                	slli	s0,s0,0x3
   15b96:	008a6433          	or	s0,s4,s0
   15b9a:	00800a37          	lui	s4,0x800
   15b9e:	01446a33          	or	s4,s0,s4
   15ba2:	00391b13          	slli	s6,s2,0x3
   15ba6:	c0150493          	addi	s1,a0,-1023
   15baa:	4401                	li	s0,0
   15bac:	4b81                	li	s7,0
   15bae:	0146d813          	srli	a6,a3,0x14
   15bb2:	00c69913          	slli	s2,a3,0xc
   15bb6:	7ff87813          	andi	a6,a6,2047
   15bba:	88b2                	mv	a7,a2
   15bbc:	00c95913          	srli	s2,s2,0xc
   15bc0:	01f6d993          	srli	s3,a3,0x1f
   15bc4:	08080e63          	beqz	a6,15c60 <__divdf3+0x104>
   15bc8:	7ff00793          	li	a5,2047
   15bcc:	04f80063          	beq	a6,a5,15c0c <__divdf3+0xb0>
   15bd0:	01d65713          	srli	a4,a2,0x1d
   15bd4:	090e                	slli	s2,s2,0x3
   15bd6:	01276933          	or	s2,a4,s2
   15bda:	c0180813          	addi	a6,a6,-1023 # ffc01 <_data_lma+0xe8139>
   15bde:	008007b7          	lui	a5,0x800
   15be2:	00f96733          	or	a4,s2,a5
   15be6:	00361893          	slli	a7,a2,0x3
   15bea:	410484b3          	sub	s1,s1,a6
   15bee:	4581                	li	a1,0
   15bf0:	47bd                	li	a5,15
   15bf2:	013ac833          	xor	a6,s5,s3
   15bf6:	1a87e863          	bltu	a5,s0,15da6 <__divdf3+0x24a>
   15bfa:	00002797          	auipc	a5,0x2
   15bfe:	d4e78793          	addi	a5,a5,-690 # 17948 <strlen+0x558>
   15c02:	040a                	slli	s0,s0,0x2
   15c04:	943e                	add	s0,s0,a5
   15c06:	4010                	lw	a2,0(s0)
   15c08:	963e                	add	a2,a2,a5
   15c0a:	8602                	jr	a2
   15c0c:	00c96733          	or	a4,s2,a2
   15c10:	80148493          	addi	s1,s1,-2047
   15c14:	10071663          	bnez	a4,15d20 <__divdf3+0x1c4>
   15c18:	00246413          	ori	s0,s0,2
   15c1c:	4881                	li	a7,0
   15c1e:	4589                	li	a1,2
   15c20:	bfc1                	j	15bf0 <__divdf3+0x94>
   15c22:	7ff00613          	li	a2,2047
   15c26:	4781                	li	a5,0
   15c28:	4701                	li	a4,0
   15c2a:	07b2                	slli	a5,a5,0xc
   15c2c:	50f2                	lw	ra,60(sp)
   15c2e:	5462                	lw	s0,56(sp)
   15c30:	0652                	slli	a2,a2,0x14
   15c32:	83b1                	srli	a5,a5,0xc
   15c34:	087e                	slli	a6,a6,0x1f
   15c36:	8fd1                	or	a5,a5,a2
   15c38:	0107e7b3          	or	a5,a5,a6
   15c3c:	54d2                	lw	s1,52(sp)
   15c3e:	5942                	lw	s2,48(sp)
   15c40:	59b2                	lw	s3,44(sp)
   15c42:	5a22                	lw	s4,40(sp)
   15c44:	5a92                	lw	s5,36(sp)
   15c46:	5b02                	lw	s6,32(sp)
   15c48:	4bf2                	lw	s7,28(sp)
   15c4a:	853a                	mv	a0,a4
   15c4c:	85be                	mv	a1,a5
   15c4e:	6121                	addi	sp,sp,64
   15c50:	8082                	ret
   15c52:	4801                	li	a6,0
   15c54:	7ff00613          	li	a2,2047
   15c58:	000807b7          	lui	a5,0x80
   15c5c:	4701                	li	a4,0
   15c5e:	b7f1                	j	15c2a <__divdf3+0xce>
   15c60:	00c96733          	or	a4,s2,a2
   15c64:	cb4d                	beqz	a4,15d16 <__divdf3+0x1ba>
   15c66:	30090e63          	beqz	s2,15f82 <__divdf3+0x426>
   15c6a:	854a                	mv	a0,s2
   15c6c:	c432                	sw	a2,8(sp)
   15c6e:	00001097          	auipc	ra,0x1
   15c72:	70c080e7          	jalr	1804(ra) # 1737a <__clzsi2>
   15c76:	4622                	lw	a2,8(sp)
   15c78:	ff550713          	addi	a4,a0,-11
   15c7c:	47f5                	li	a5,29
   15c7e:	ff850693          	addi	a3,a0,-8
   15c82:	8f99                	sub	a5,a5,a4
   15c84:	00d91933          	sll	s2,s2,a3
   15c88:	00f657b3          	srl	a5,a2,a5
   15c8c:	0127e733          	or	a4,a5,s2
   15c90:	00d618b3          	sll	a7,a2,a3
   15c94:	9526                	add	a0,a0,s1
   15c96:	3f350493          	addi	s1,a0,1011
   15c9a:	4581                	li	a1,0
   15c9c:	bf91                	j	15bf0 <__divdf3+0x94>
   15c9e:	01246a33          	or	s4,s0,s2
   15ca2:	060a0563          	beqz	s4,15d0c <__divdf3+0x1b0>
   15ca6:	c636                	sw	a3,12(sp)
   15ca8:	c432                	sw	a2,8(sp)
   15caa:	2a040863          	beqz	s0,15f5a <__divdf3+0x3fe>
   15cae:	8522                	mv	a0,s0
   15cb0:	00001097          	auipc	ra,0x1
   15cb4:	6ca080e7          	jalr	1738(ra) # 1737a <__clzsi2>
   15cb8:	4622                	lw	a2,8(sp)
   15cba:	46b2                	lw	a3,12(sp)
   15cbc:	84aa                	mv	s1,a0
   15cbe:	ff550713          	addi	a4,a0,-11
   15cc2:	4a75                	li	s4,29
   15cc4:	ff848b13          	addi	s6,s1,-8
   15cc8:	40ea0a33          	sub	s4,s4,a4
   15ccc:	01641433          	sll	s0,s0,s6
   15cd0:	01495a33          	srl	s4,s2,s4
   15cd4:	008a6a33          	or	s4,s4,s0
   15cd8:	01691b33          	sll	s6,s2,s6
   15cdc:	c0d00513          	li	a0,-1011
   15ce0:	409504b3          	sub	s1,a0,s1
   15ce4:	4401                	li	s0,0
   15ce6:	4b81                	li	s7,0
   15ce8:	b5d9                	j	15bae <__divdf3+0x52>
   15cea:	01246a33          	or	s4,s0,s2
   15cee:	000a1863          	bnez	s4,15cfe <__divdf3+0x1a2>
   15cf2:	4421                	li	s0,8
   15cf4:	4b01                	li	s6,0
   15cf6:	7ff00493          	li	s1,2047
   15cfa:	4b89                	li	s7,2
   15cfc:	bd4d                	j	15bae <__divdf3+0x52>
   15cfe:	8a22                	mv	s4,s0
   15d00:	8b4a                	mv	s6,s2
   15d02:	4431                	li	s0,12
   15d04:	7ff00493          	li	s1,2047
   15d08:	4b8d                	li	s7,3
   15d0a:	b555                	j	15bae <__divdf3+0x52>
   15d0c:	4411                	li	s0,4
   15d0e:	4b01                	li	s6,0
   15d10:	4481                	li	s1,0
   15d12:	4b85                	li	s7,1
   15d14:	bd69                	j	15bae <__divdf3+0x52>
   15d16:	00146413          	ori	s0,s0,1
   15d1a:	4881                	li	a7,0
   15d1c:	4585                	li	a1,1
   15d1e:	bdc9                	j	15bf0 <__divdf3+0x94>
   15d20:	00346413          	ori	s0,s0,3
   15d24:	874a                	mv	a4,s2
   15d26:	458d                	li	a1,3
   15d28:	b5e1                	j	15bf0 <__divdf3+0x94>
   15d2a:	2e050e63          	beqz	a0,16026 <__divdf3+0x4ca>
   15d2e:	4785                	li	a5,1
   15d30:	8f89                	sub	a5,a5,a0
   15d32:	03800693          	li	a3,56
   15d36:	34f6d163          	bge	a3,a5,16078 <__divdf3+0x51c>
   15d3a:	4601                	li	a2,0
   15d3c:	4781                	li	a5,0
   15d3e:	4701                	li	a4,0
   15d40:	b5ed                	j	15c2a <__divdf3+0xce>
   15d42:	86ce                	mv	a3,s3
   15d44:	4789                	li	a5,2
   15d46:	3cf58163          	beq	a1,a5,16108 <__divdf3+0x5ac>
   15d4a:	478d                	li	a5,3
   15d4c:	f0f583e3          	beq	a1,a5,15c52 <__divdf3+0xf6>
   15d50:	4785                	li	a5,1
   15d52:	8836                	mv	a6,a3
   15d54:	fef583e3          	beq	a1,a5,15d3a <__divdf3+0x1de>
   15d58:	3ff48513          	addi	a0,s1,1023
   15d5c:	fca057e3          	blez	a0,15d2a <__divdf3+0x1ce>
   15d60:	0078f793          	andi	a5,a7,7
   15d64:	28079a63          	bnez	a5,15ff8 <__divdf3+0x49c>
   15d68:	0038d693          	srli	a3,a7,0x3
   15d6c:	00771793          	slli	a5,a4,0x7
   15d70:	0007d863          	bgez	a5,15d80 <__divdf3+0x224>
   15d74:	ff0007b7          	lui	a5,0xff000
   15d78:	17fd                	addi	a5,a5,-1
   15d7a:	8f7d                	and	a4,a4,a5
   15d7c:	40048513          	addi	a0,s1,1024
   15d80:	7fe00793          	li	a5,2046
   15d84:	e8a7cfe3          	blt	a5,a0,15c22 <__divdf3+0xc6>
   15d88:	01d71613          	slli	a2,a4,0x1d
   15d8c:	00971793          	slli	a5,a4,0x9
   15d90:	83b1                	srli	a5,a5,0xc
   15d92:	00d66733          	or	a4,a2,a3
   15d96:	7ff57613          	andi	a2,a0,2047
   15d9a:	bd41                	j	15c2a <__divdf3+0xce>
   15d9c:	86d6                	mv	a3,s5
   15d9e:	8752                	mv	a4,s4
   15da0:	88da                	mv	a7,s6
   15da2:	85de                	mv	a1,s7
   15da4:	b745                	j	15d44 <__divdf3+0x1e8>
   15da6:	23476563          	bltu	a4,s4,15fd0 <__divdf3+0x474>
   15daa:	22ea0163          	beq	s4,a4,15fcc <__divdf3+0x470>
   15dae:	86da                	mv	a3,s6
   15db0:	14fd                	addi	s1,s1,-1
   15db2:	8452                	mv	s0,s4
   15db4:	4b01                	li	s6,0
   15db6:	00871793          	slli	a5,a4,0x8
   15dba:	0188d313          	srli	t1,a7,0x18
   15dbe:	00f36333          	or	t1,t1,a5
   15dc2:	01035e93          	srli	t4,t1,0x10
   15dc6:	03d457b3          	divu	a5,s0,t4
   15dca:	01031f13          	slli	t5,t1,0x10
   15dce:	010f5f13          	srli	t5,t5,0x10
   15dd2:	0106d593          	srli	a1,a3,0x10
   15dd6:	00889e13          	slli	t3,a7,0x8
   15dda:	03d47433          	remu	s0,s0,t4
   15dde:	02ff0733          	mul	a4,t5,a5
   15de2:	0442                	slli	s0,s0,0x10
   15de4:	8dc1                	or	a1,a1,s0
   15de6:	00e5fb63          	bgeu	a1,a4,15dfc <__divdf3+0x2a0>
   15dea:	959a                	add	a1,a1,t1
   15dec:	fff78613          	addi	a2,a5,-1 # feffffff <_eusrstack+0xdeff7fff>
   15df0:	2865e263          	bltu	a1,t1,16074 <__divdf3+0x518>
   15df4:	28e5f063          	bgeu	a1,a4,16074 <__divdf3+0x518>
   15df8:	17f9                	addi	a5,a5,-2
   15dfa:	959a                	add	a1,a1,t1
   15dfc:	8d99                	sub	a1,a1,a4
   15dfe:	03d5d733          	divu	a4,a1,t4
   15e02:	06c2                	slli	a3,a3,0x10
   15e04:	82c1                	srli	a3,a3,0x10
   15e06:	03d5f5b3          	remu	a1,a1,t4
   15e0a:	02ef0633          	mul	a2,t5,a4
   15e0e:	05c2                	slli	a1,a1,0x10
   15e10:	8dd5                	or	a1,a1,a3
   15e12:	00c5fb63          	bgeu	a1,a2,15e28 <__divdf3+0x2cc>
   15e16:	959a                	add	a1,a1,t1
   15e18:	fff70693          	addi	a3,a4,-1 # 7fffff <_data_lma+0x7e8537>
   15e1c:	2465ea63          	bltu	a1,t1,16070 <__divdf3+0x514>
   15e20:	24c5f863          	bgeu	a1,a2,16070 <__divdf3+0x514>
   15e24:	1779                	addi	a4,a4,-2
   15e26:	959a                	add	a1,a1,t1
   15e28:	07c2                	slli	a5,a5,0x10
   15e2a:	6441                	lui	s0,0x10
   15e2c:	8f5d                	or	a4,a4,a5
   15e2e:	fff40793          	addi	a5,s0,-1 # ffff <MCU_SECTORSIZE+0xefff>
   15e32:	00f77533          	and	a0,a4,a5
   15e36:	01075893          	srli	a7,a4,0x10
   15e3a:	010e5f93          	srli	t6,t3,0x10
   15e3e:	00fe77b3          	and	a5,t3,a5
   15e42:	02f502b3          	mul	t0,a0,a5
   15e46:	40c586b3          	sub	a3,a1,a2
   15e4a:	02f883b3          	mul	t2,a7,a5
   15e4e:	0102d593          	srli	a1,t0,0x10
   15e52:	02af8633          	mul	a2,t6,a0
   15e56:	961e                	add	a2,a2,t2
   15e58:	962e                	add	a2,a2,a1
   15e5a:	03f88533          	mul	a0,a7,t6
   15e5e:	00767363          	bgeu	a2,t2,15e64 <__divdf3+0x308>
   15e62:	9522                	add	a0,a0,s0
   15e64:	68c1                	lui	a7,0x10
   15e66:	18fd                	addi	a7,a7,-1
   15e68:	01065593          	srli	a1,a2,0x10
   15e6c:	01167633          	and	a2,a2,a7
   15e70:	0642                	slli	a2,a2,0x10
   15e72:	0112f8b3          	and	a7,t0,a7
   15e76:	95aa                	add	a1,a1,a0
   15e78:	9646                	add	a2,a2,a7
   15e7a:	12b6ea63          	bltu	a3,a1,15fae <__divdf3+0x452>
   15e7e:	12b68663          	beq	a3,a1,15faa <__divdf3+0x44e>
   15e82:	40cb0633          	sub	a2,s6,a2
   15e86:	8e8d                	sub	a3,a3,a1
   15e88:	00cb3b33          	sltu	s6,s6,a2
   15e8c:	41668b33          	sub	s6,a3,s6
   15e90:	3ff48513          	addi	a0,s1,1023
   15e94:	19630063          	beq	t1,s6,16014 <__divdf3+0x4b8>
   15e98:	03db58b3          	divu	a7,s6,t4
   15e9c:	01065593          	srli	a1,a2,0x10
   15ea0:	03db7b33          	remu	s6,s6,t4
   15ea4:	031f06b3          	mul	a3,t5,a7
   15ea8:	0b42                	slli	s6,s6,0x10
   15eaa:	0165eb33          	or	s6,a1,s6
   15eae:	00db7b63          	bgeu	s6,a3,15ec4 <__divdf3+0x368>
   15eb2:	9b1a                	add	s6,s6,t1
   15eb4:	fff88593          	addi	a1,a7,-1 # ffff <MCU_SECTORSIZE+0xefff>
   15eb8:	226b6163          	bltu	s6,t1,160da <__divdf3+0x57e>
   15ebc:	20db7f63          	bgeu	s6,a3,160da <__divdf3+0x57e>
   15ec0:	18f9                	addi	a7,a7,-2
   15ec2:	9b1a                	add	s6,s6,t1
   15ec4:	40db0b33          	sub	s6,s6,a3
   15ec8:	03db56b3          	divu	a3,s6,t4
   15ecc:	0642                	slli	a2,a2,0x10
   15ece:	8241                	srli	a2,a2,0x10
   15ed0:	03db7b33          	remu	s6,s6,t4
   15ed4:	02df0f33          	mul	t5,t5,a3
   15ed8:	0b42                	slli	s6,s6,0x10
   15eda:	01666633          	or	a2,a2,s6
   15ede:	01e67b63          	bgeu	a2,t5,15ef4 <__divdf3+0x398>
   15ee2:	961a                	add	a2,a2,t1
   15ee4:	fff68593          	addi	a1,a3,-1 # 7fffff <_data_lma+0x7e8537>
   15ee8:	1e666b63          	bltu	a2,t1,160de <__divdf3+0x582>
   15eec:	1fe67963          	bgeu	a2,t5,160de <__divdf3+0x582>
   15ef0:	16f9                	addi	a3,a3,-2
   15ef2:	961a                	add	a2,a2,t1
   15ef4:	08c2                	slli	a7,a7,0x10
   15ef6:	00d8e8b3          	or	a7,a7,a3
   15efa:	01089593          	slli	a1,a7,0x10
   15efe:	0108d293          	srli	t0,a7,0x10
   15f02:	81c1                	srli	a1,a1,0x10
   15f04:	02f58eb3          	mul	t4,a1,a5
   15f08:	41e60633          	sub	a2,a2,t5
   15f0c:	02bf85b3          	mul	a1,t6,a1
   15f10:	010ed693          	srli	a3,t4,0x10
   15f14:	02f287b3          	mul	a5,t0,a5
   15f18:	95be                	add	a1,a1,a5
   15f1a:	96ae                	add	a3,a3,a1
   15f1c:	025f8fb3          	mul	t6,t6,t0
   15f20:	00f6f463          	bgeu	a3,a5,15f28 <__divdf3+0x3cc>
   15f24:	67c1                	lui	a5,0x10
   15f26:	9fbe                	add	t6,t6,a5
   15f28:	65c1                	lui	a1,0x10
   15f2a:	15fd                	addi	a1,a1,-1
   15f2c:	0106d793          	srli	a5,a3,0x10
   15f30:	8eed                	and	a3,a3,a1
   15f32:	06c2                	slli	a3,a3,0x10
   15f34:	00befeb3          	and	t4,t4,a1
   15f38:	9fbe                	add	t6,t6,a5
   15f3a:	96f6                	add	a3,a3,t4
   15f3c:	0bf67363          	bgeu	a2,t6,15fe2 <__divdf3+0x486>
   15f40:	961a                	add	a2,a2,t1
   15f42:	fff88793          	addi	a5,a7,-1
   15f46:	1a666d63          	bltu	a2,t1,16100 <__divdf3+0x5a4>
   15f4a:	19f66c63          	bltu	a2,t6,160e2 <__divdf3+0x586>
   15f4e:	1df60363          	beq	a2,t6,16114 <__divdf3+0x5b8>
   15f52:	88be                	mv	a7,a5
   15f54:	0018e893          	ori	a7,a7,1
   15f58:	b511                	j	15d5c <__divdf3+0x200>
   15f5a:	854a                	mv	a0,s2
   15f5c:	00001097          	auipc	ra,0x1
   15f60:	41e080e7          	jalr	1054(ra) # 1737a <__clzsi2>
   15f64:	01550713          	addi	a4,a0,21
   15f68:	45f1                	li	a1,28
   15f6a:	02050493          	addi	s1,a0,32
   15f6e:	4622                	lw	a2,8(sp)
   15f70:	46b2                	lw	a3,12(sp)
   15f72:	d4e5d8e3          	bge	a1,a4,15cc2 <__divdf3+0x166>
   15f76:	ff850413          	addi	s0,a0,-8
   15f7a:	00891a33          	sll	s4,s2,s0
   15f7e:	4b01                	li	s6,0
   15f80:	bbb1                	j	15cdc <__divdf3+0x180>
   15f82:	8532                	mv	a0,a2
   15f84:	c432                	sw	a2,8(sp)
   15f86:	00001097          	auipc	ra,0x1
   15f8a:	3f4080e7          	jalr	1012(ra) # 1737a <__clzsi2>
   15f8e:	01550713          	addi	a4,a0,21
   15f92:	46f1                	li	a3,28
   15f94:	87aa                	mv	a5,a0
   15f96:	4622                	lw	a2,8(sp)
   15f98:	02050513          	addi	a0,a0,32
   15f9c:	cee6d0e3          	bge	a3,a4,15c7c <__divdf3+0x120>
   15fa0:	17e1                	addi	a5,a5,-8
   15fa2:	00f61733          	sll	a4,a2,a5
   15fa6:	4881                	li	a7,0
   15fa8:	b1f5                	j	15c94 <__divdf3+0x138>
   15faa:	eccb7ce3          	bgeu	s6,a2,15e82 <__divdf3+0x326>
   15fae:	9b72                	add	s6,s6,t3
   15fb0:	01cb3533          	sltu	a0,s6,t3
   15fb4:	951a                	add	a0,a0,t1
   15fb6:	96aa                	add	a3,a3,a0
   15fb8:	fff70513          	addi	a0,a4,-1
   15fbc:	02d37863          	bgeu	t1,a3,15fec <__divdf3+0x490>
   15fc0:	10b6e663          	bltu	a3,a1,160cc <__divdf3+0x570>
   15fc4:	10d58263          	beq	a1,a3,160c8 <__divdf3+0x56c>
   15fc8:	872a                	mv	a4,a0
   15fca:	bd65                	j	15e82 <__divdf3+0x326>
   15fcc:	df1b61e3          	bltu	s6,a7,15dae <__divdf3+0x252>
   15fd0:	001b5593          	srli	a1,s6,0x1
   15fd4:	01fa1693          	slli	a3,s4,0x1f
   15fd8:	001a5413          	srli	s0,s4,0x1
   15fdc:	8ecd                	or	a3,a3,a1
   15fde:	0b7e                	slli	s6,s6,0x1f
   15fe0:	bbd9                	j	15db6 <__divdf3+0x25a>
   15fe2:	f7f619e3          	bne	a2,t6,15f54 <__divdf3+0x3f8>
   15fe6:	d6068be3          	beqz	a3,15d5c <__divdf3+0x200>
   15fea:	bf99                	j	15f40 <__divdf3+0x3e4>
   15fec:	fcd31ee3          	bne	t1,a3,15fc8 <__divdf3+0x46c>
   15ff0:	fdcb78e3          	bgeu	s6,t3,15fc0 <__divdf3+0x464>
   15ff4:	872a                	mv	a4,a0
   15ff6:	b571                	j	15e82 <__divdf3+0x326>
   15ff8:	00f8f793          	andi	a5,a7,15
   15ffc:	4691                	li	a3,4
   15ffe:	d6d785e3          	beq	a5,a3,15d68 <__divdf3+0x20c>
   16002:	ffc8b793          	sltiu	a5,a7,-4
   16006:	00488693          	addi	a3,a7,4
   1600a:	0017c793          	xori	a5,a5,1
   1600e:	828d                	srli	a3,a3,0x3
   16010:	973e                	add	a4,a4,a5
   16012:	bba9                	j	15d6c <__divdf3+0x210>
   16014:	4681                	li	a3,0
   16016:	4785                	li	a5,1
   16018:	fea04ce3          	bgtz	a0,16010 <__divdf3+0x4b4>
   1601c:	58fd                	li	a7,-1
   1601e:	d00518e3          	bnez	a0,15d2e <__divdf3+0x1d2>
   16022:	c0100493          	li	s1,-1023
   16026:	4785                	li	a5,1
   16028:	41e48513          	addi	a0,s1,1054
   1602c:	00a716b3          	sll	a3,a4,a0
   16030:	00f8d633          	srl	a2,a7,a5
   16034:	00a89533          	sll	a0,a7,a0
   16038:	8ed1                	or	a3,a3,a2
   1603a:	00a03533          	snez	a0,a0
   1603e:	8ec9                	or	a3,a3,a0
   16040:	0076f613          	andi	a2,a3,7
   16044:	00f75733          	srl	a4,a4,a5
   16048:	ce01                	beqz	a2,16060 <__divdf3+0x504>
   1604a:	00f6f793          	andi	a5,a3,15
   1604e:	4611                	li	a2,4
   16050:	00c78863          	beq	a5,a2,16060 <__divdf3+0x504>
   16054:	00468793          	addi	a5,a3,4
   16058:	00d7b6b3          	sltu	a3,a5,a3
   1605c:	9736                	add	a4,a4,a3
   1605e:	86be                	mv	a3,a5
   16060:	00871793          	slli	a5,a4,0x8
   16064:	0407d863          	bgez	a5,160b4 <__divdf3+0x558>
   16068:	4605                	li	a2,1
   1606a:	4781                	li	a5,0
   1606c:	4701                	li	a4,0
   1606e:	be75                	j	15c2a <__divdf3+0xce>
   16070:	8736                	mv	a4,a3
   16072:	bb5d                	j	15e28 <__divdf3+0x2cc>
   16074:	87b2                	mv	a5,a2
   16076:	b359                	j	15dfc <__divdf3+0x2a0>
   16078:	46fd                	li	a3,31
   1607a:	faf6d7e3          	bge	a3,a5,16028 <__divdf3+0x4cc>
   1607e:	5605                	li	a2,-31
   16080:	8e09                	sub	a2,a2,a0
   16082:	02000693          	li	a3,32
   16086:	00c75633          	srl	a2,a4,a2
   1608a:	00d78863          	beq	a5,a3,1609a <__divdf3+0x53e>
   1608e:	43e48793          	addi	a5,s1,1086
   16092:	00f717b3          	sll	a5,a4,a5
   16096:	00f8e8b3          	or	a7,a7,a5
   1609a:	011036b3          	snez	a3,a7
   1609e:	8ed1                	or	a3,a3,a2
   160a0:	0076f613          	andi	a2,a3,7
   160a4:	4781                	li	a5,0
   160a6:	ce01                	beqz	a2,160be <__divdf3+0x562>
   160a8:	00f6f793          	andi	a5,a3,15
   160ac:	4611                	li	a2,4
   160ae:	4701                	li	a4,0
   160b0:	fac792e3          	bne	a5,a2,16054 <__divdf3+0x4f8>
   160b4:	00971793          	slli	a5,a4,0x9
   160b8:	01d71613          	slli	a2,a4,0x1d
   160bc:	83b1                	srli	a5,a5,0xc
   160be:	0036d713          	srli	a4,a3,0x3
   160c2:	8f51                	or	a4,a4,a2
   160c4:	4601                	li	a2,0
   160c6:	b695                	j	15c2a <__divdf3+0xce>
   160c8:	f0cb70e3          	bgeu	s6,a2,15fc8 <__divdf3+0x46c>
   160cc:	9b72                	add	s6,s6,t3
   160ce:	01cb3533          	sltu	a0,s6,t3
   160d2:	951a                	add	a0,a0,t1
   160d4:	1779                	addi	a4,a4,-2
   160d6:	96aa                	add	a3,a3,a0
   160d8:	b36d                	j	15e82 <__divdf3+0x326>
   160da:	88ae                	mv	a7,a1
   160dc:	b3e5                	j	15ec4 <__divdf3+0x368>
   160de:	86ae                	mv	a3,a1
   160e0:	bd11                	j	15ef4 <__divdf3+0x398>
   160e2:	001e1793          	slli	a5,t3,0x1
   160e6:	01c7be33          	sltu	t3,a5,t3
   160ea:	9372                	add	t1,t1,t3
   160ec:	961a                	add	a2,a2,t1
   160ee:	18f9                	addi	a7,a7,-2
   160f0:	8e3e                	mv	t3,a5
   160f2:	e7f611e3          	bne	a2,t6,15f54 <__divdf3+0x3f8>
   160f6:	c6de03e3          	beq	t3,a3,15d5c <__divdf3+0x200>
   160fa:	0018e893          	ori	a7,a7,1
   160fe:	b9b9                	j	15d5c <__divdf3+0x200>
   16100:	88be                	mv	a7,a5
   16102:	fff60ae3          	beq	a2,t6,160f6 <__divdf3+0x59a>
   16106:	b5b9                	j	15f54 <__divdf3+0x3f8>
   16108:	8836                	mv	a6,a3
   1610a:	7ff00613          	li	a2,2047
   1610e:	4781                	li	a5,0
   16110:	4701                	li	a4,0
   16112:	be21                	j	15c2a <__divdf3+0xce>
   16114:	fcde67e3          	bltu	t3,a3,160e2 <__divdf3+0x586>
   16118:	88be                	mv	a7,a5
   1611a:	fede10e3          	bne	t3,a3,160fa <__divdf3+0x59e>
   1611e:	b93d                	j	15d5c <__divdf3+0x200>

00016120 <__eqdf2>:
__eqdf2():
   16120:	0145d713          	srli	a4,a1,0x14
   16124:	001007b7          	lui	a5,0x100
   16128:	17fd                	addi	a5,a5,-1
   1612a:	0146d813          	srli	a6,a3,0x14
   1612e:	7ff77713          	andi	a4,a4,2047
   16132:	7ff00893          	li	a7,2047
   16136:	00b7fe33          	and	t3,a5,a1
   1613a:	8eaa                	mv	t4,a0
   1613c:	8ff5                	and	a5,a5,a3
   1613e:	81fd                	srli	a1,a1,0x1f
   16140:	8f32                	mv	t5,a2
   16142:	7ff87813          	andi	a6,a6,2047
   16146:	82fd                	srli	a3,a3,0x1f
   16148:	01170b63          	beq	a4,a7,1615e <__eqdf2+0x3e>
   1614c:	4305                	li	t1,1
   1614e:	01180663          	beq	a6,a7,1615a <__eqdf2+0x3a>
   16152:	01071463          	bne	a4,a6,1615a <__eqdf2+0x3a>
   16156:	00fe0d63          	beq	t3,a5,16170 <__eqdf2+0x50>
   1615a:	851a                	mv	a0,t1
   1615c:	8082                	ret
   1615e:	00ae68b3          	or	a7,t3,a0
   16162:	4305                	li	t1,1
   16164:	fe089be3          	bnez	a7,1615a <__eqdf2+0x3a>
   16168:	fee819e3          	bne	a6,a4,1615a <__eqdf2+0x3a>
   1616c:	8fd1                	or	a5,a5,a2
   1616e:	f7f5                	bnez	a5,1615a <__eqdf2+0x3a>
   16170:	4305                	li	t1,1
   16172:	ffee94e3          	bne	t4,t5,1615a <__eqdf2+0x3a>
   16176:	4301                	li	t1,0
   16178:	fed581e3          	beq	a1,a3,1615a <__eqdf2+0x3a>
   1617c:	4305                	li	t1,1
   1617e:	ff71                	bnez	a4,1615a <__eqdf2+0x3a>
   16180:	00ae6533          	or	a0,t3,a0
   16184:	00a03333          	snez	t1,a0
   16188:	bfc9                	j	1615a <__eqdf2+0x3a>

0001618a <__ledf2>:
__ltdf2():
   1618a:	0145d713          	srli	a4,a1,0x14
   1618e:	001007b7          	lui	a5,0x100
   16192:	17fd                	addi	a5,a5,-1
   16194:	0146d813          	srli	a6,a3,0x14
   16198:	7ff77713          	andi	a4,a4,2047
   1619c:	7ff00893          	li	a7,2047
   161a0:	00b7fe33          	and	t3,a5,a1
   161a4:	8eaa                	mv	t4,a0
   161a6:	8ff5                	and	a5,a5,a3
   161a8:	81fd                	srli	a1,a1,0x1f
   161aa:	8f32                	mv	t5,a2
   161ac:	7ff87813          	andi	a6,a6,2047
   161b0:	82fd                	srli	a3,a3,0x1f
   161b2:	03170e63          	beq	a4,a7,161ee <__ledf2+0x64>
   161b6:	01180d63          	beq	a6,a7,161d0 <__ledf2+0x46>
   161ba:	e329                	bnez	a4,161fc <__ledf2+0x72>
   161bc:	00ae68b3          	or	a7,t3,a0
   161c0:	00081f63          	bnez	a6,161de <__ledf2+0x54>
   161c4:	8e5d                	or	a2,a2,a5
   161c6:	ee01                	bnez	a2,161de <__ledf2+0x54>
   161c8:	4301                	li	t1,0
   161ca:	04088c63          	beqz	a7,16222 <__ledf2+0x98>
   161ce:	a821                	j	161e6 <__ledf2+0x5c>
   161d0:	00c7e8b3          	or	a7,a5,a2
   161d4:	4309                	li	t1,2
   161d6:	04089663          	bnez	a7,16222 <__ledf2+0x98>
   161da:	d36d                	beqz	a4,161bc <__ledf2+0x32>
   161dc:	a005                	j	161fc <__ledf2+0x72>
   161de:	04088463          	beqz	a7,16226 <__ledf2+0x9c>
   161e2:	02d58563          	beq	a1,a3,1620c <__ledf2+0x82>
   161e6:	4305                	li	t1,1
   161e8:	cd8d                	beqz	a1,16222 <__ledf2+0x98>
   161ea:	537d                	li	t1,-1
   161ec:	a81d                	j	16222 <__ledf2+0x98>
   161ee:	00ae68b3          	or	a7,t3,a0
   161f2:	4309                	li	t1,2
   161f4:	02089763          	bnez	a7,16222 <__ledf2+0x98>
   161f8:	02e80a63          	beq	a6,a4,1622c <__ledf2+0xa2>
   161fc:	00081463          	bnez	a6,16204 <__ledf2+0x7a>
   16200:	8e5d                	or	a2,a2,a5
   16202:	d275                	beqz	a2,161e6 <__ledf2+0x5c>
   16204:	fed591e3          	bne	a1,a3,161e6 <__ledf2+0x5c>
   16208:	fce84fe3          	blt	a6,a4,161e6 <__ledf2+0x5c>
   1620c:	01074963          	blt	a4,a6,1621e <__ledf2+0x94>
   16210:	fdc7ebe3          	bltu	a5,t3,161e6 <__ledf2+0x5c>
   16214:	00fe0f63          	beq	t3,a5,16232 <__ledf2+0xa8>
   16218:	4301                	li	t1,0
   1621a:	00fe7463          	bgeu	t3,a5,16222 <__ledf2+0x98>
   1621e:	d5f1                	beqz	a1,161ea <__ledf2+0x60>
   16220:	4305                	li	t1,1
   16222:	851a                	mv	a0,t1
   16224:	8082                	ret
   16226:	feed                	bnez	a3,16220 <__ledf2+0x96>
   16228:	537d                	li	t1,-1
   1622a:	bfe5                	j	16222 <__ledf2+0x98>
   1622c:	8e5d                	or	a2,a2,a5
   1622e:	da79                	beqz	a2,16204 <__ledf2+0x7a>
   16230:	bfcd                	j	16222 <__ledf2+0x98>
   16232:	fbdf6ae3          	bltu	t5,t4,161e6 <__ledf2+0x5c>
   16236:	4301                	li	t1,0
   16238:	ffeef5e3          	bgeu	t4,t5,16222 <__ledf2+0x98>
   1623c:	f1f5                	bnez	a1,16220 <__ledf2+0x96>
   1623e:	b775                	j	161ea <__ledf2+0x60>

00016240 <__muldf3>:
__muldf3():
   16240:	7139                	addi	sp,sp,-64
   16242:	d84a                	sw	s2,48(sp)
   16244:	0145d913          	srli	s2,a1,0x14
   16248:	d64e                	sw	s3,44(sp)
   1624a:	d452                	sw	s4,40(sp)
   1624c:	d256                	sw	s5,36(sp)
   1624e:	00c59993          	slli	s3,a1,0xc
   16252:	de06                	sw	ra,60(sp)
   16254:	dc22                	sw	s0,56(sp)
   16256:	da26                	sw	s1,52(sp)
   16258:	d05a                	sw	s6,32(sp)
   1625a:	ce5e                	sw	s7,28(sp)
   1625c:	7ff97913          	andi	s2,s2,2047
   16260:	8a2a                	mv	s4,a0
   16262:	00c9d993          	srli	s3,s3,0xc
   16266:	01f5da93          	srli	s5,a1,0x1f
   1626a:	0e090d63          	beqz	s2,16364 <__muldf3+0x124>
   1626e:	7ff00793          	li	a5,2047
   16272:	18f90a63          	beq	s2,a5,16406 <__muldf3+0x1c6>
   16276:	01d55413          	srli	s0,a0,0x1d
   1627a:	098e                	slli	s3,s3,0x3
   1627c:	013469b3          	or	s3,s0,s3
   16280:	00800437          	lui	s0,0x800
   16284:	0089e433          	or	s0,s3,s0
   16288:	00351493          	slli	s1,a0,0x3
   1628c:	c0190913          	addi	s2,s2,-1023
   16290:	4981                	li	s3,0
   16292:	4b81                	li	s7,0
   16294:	0146d713          	srli	a4,a3,0x14
   16298:	00c69a13          	slli	s4,a3,0xc
   1629c:	7ff77713          	andi	a4,a4,2047
   162a0:	85b2                	mv	a1,a2
   162a2:	00ca5a13          	srli	s4,s4,0xc
   162a6:	01f6db13          	srli	s6,a3,0x1f
   162aa:	10070d63          	beqz	a4,163c4 <__muldf3+0x184>
   162ae:	7ff00793          	li	a5,2047
   162b2:	04f70363          	beq	a4,a5,162f8 <__muldf3+0xb8>
   162b6:	01d65793          	srli	a5,a2,0x1d
   162ba:	0a0e                	slli	s4,s4,0x3
   162bc:	0147ea33          	or	s4,a5,s4
   162c0:	c0170713          	addi	a4,a4,-1023
   162c4:	008007b7          	lui	a5,0x800
   162c8:	00fa67b3          	or	a5,s4,a5
   162cc:	00361593          	slli	a1,a2,0x3
   162d0:	993a                	add	s2,s2,a4
   162d2:	4881                	li	a7,0
   162d4:	016ac733          	xor	a4,s5,s6
   162d8:	46bd                	li	a3,15
   162da:	853a                	mv	a0,a4
   162dc:	00190813          	addi	a6,s2,1
   162e0:	1736ec63          	bltu	a3,s3,16458 <__muldf3+0x218>
   162e4:	00001617          	auipc	a2,0x1
   162e8:	6a460613          	addi	a2,a2,1700 # 17988 <strlen+0x598>
   162ec:	098a                	slli	s3,s3,0x2
   162ee:	99b2                	add	s3,s3,a2
   162f0:	0009a683          	lw	a3,0(s3)
   162f4:	96b2                	add	a3,a3,a2
   162f6:	8682                	jr	a3
   162f8:	00ca67b3          	or	a5,s4,a2
   162fc:	7ff90913          	addi	s2,s2,2047
   16300:	12079d63          	bnez	a5,1643a <__muldf3+0x1fa>
   16304:	0029e993          	ori	s3,s3,2
   16308:	4581                	li	a1,0
   1630a:	4889                	li	a7,2
   1630c:	b7e1                	j	162d4 <__muldf3+0x94>
   1630e:	4701                	li	a4,0
   16310:	7ff00793          	li	a5,2047
   16314:	00080437          	lui	s0,0x80
   16318:	4481                	li	s1,0
   1631a:	0432                	slli	s0,s0,0xc
   1631c:	07d2                	slli	a5,a5,0x14
   1631e:	8031                	srli	s0,s0,0xc
   16320:	077e                	slli	a4,a4,0x1f
   16322:	8c5d                	or	s0,s0,a5
   16324:	8c59                	or	s0,s0,a4
   16326:	85a2                	mv	a1,s0
   16328:	50f2                	lw	ra,60(sp)
   1632a:	5462                	lw	s0,56(sp)
   1632c:	8526                	mv	a0,s1
   1632e:	5942                	lw	s2,48(sp)
   16330:	54d2                	lw	s1,52(sp)
   16332:	59b2                	lw	s3,44(sp)
   16334:	5a22                	lw	s4,40(sp)
   16336:	5a92                	lw	s5,36(sp)
   16338:	5b02                	lw	s6,32(sp)
   1633a:	4bf2                	lw	s7,28(sp)
   1633c:	6121                	addi	sp,sp,64
   1633e:	8082                	ret
   16340:	855a                	mv	a0,s6
   16342:	843e                	mv	s0,a5
   16344:	84ae                	mv	s1,a1
   16346:	8bc6                	mv	s7,a7
   16348:	4789                	li	a5,2
   1634a:	10fb8163          	beq	s7,a5,1644c <__muldf3+0x20c>
   1634e:	478d                	li	a5,3
   16350:	fafb8fe3          	beq	s7,a5,1630e <__muldf3+0xce>
   16354:	4785                	li	a5,1
   16356:	872a                	mv	a4,a0
   16358:	3afb9663          	bne	s7,a5,16704 <__muldf3+0x4c4>
   1635c:	4781                	li	a5,0
   1635e:	4401                	li	s0,0
   16360:	4481                	li	s1,0
   16362:	bf65                	j	1631a <__muldf3+0xda>
   16364:	00a9e433          	or	s0,s3,a0
   16368:	c461                	beqz	s0,16430 <__muldf3+0x1f0>
   1636a:	c636                	sw	a3,12(sp)
   1636c:	c432                	sw	a2,8(sp)
   1636e:	2c098263          	beqz	s3,16632 <__muldf3+0x3f2>
   16372:	854e                	mv	a0,s3
   16374:	00001097          	auipc	ra,0x1
   16378:	006080e7          	jalr	6(ra) # 1737a <__clzsi2>
   1637c:	4622                	lw	a2,8(sp)
   1637e:	46b2                	lw	a3,12(sp)
   16380:	87aa                	mv	a5,a0
   16382:	ff550713          	addi	a4,a0,-11
   16386:	4475                	li	s0,29
   16388:	ff878493          	addi	s1,a5,-8 # 7ffff8 <_data_lma+0x7e8530>
   1638c:	8c19                	sub	s0,s0,a4
   1638e:	009999b3          	sll	s3,s3,s1
   16392:	008a5433          	srl	s0,s4,s0
   16396:	01346433          	or	s0,s0,s3
   1639a:	009a14b3          	sll	s1,s4,s1
   1639e:	0146d713          	srli	a4,a3,0x14
   163a2:	c0d00913          	li	s2,-1011
   163a6:	00c69a13          	slli	s4,a3,0xc
   163aa:	7ff77713          	andi	a4,a4,2047
   163ae:	40f90933          	sub	s2,s2,a5
   163b2:	4981                	li	s3,0
   163b4:	4b81                	li	s7,0
   163b6:	85b2                	mv	a1,a2
   163b8:	00ca5a13          	srli	s4,s4,0xc
   163bc:	01f6db13          	srli	s6,a3,0x1f
   163c0:	ee0717e3          	bnez	a4,162ae <__muldf3+0x6e>
   163c4:	00ca67b3          	or	a5,s4,a2
   163c8:	cba1                	beqz	a5,16418 <__muldf3+0x1d8>
   163ca:	240a0163          	beqz	s4,1660c <__muldf3+0x3cc>
   163ce:	8552                	mv	a0,s4
   163d0:	c432                	sw	a2,8(sp)
   163d2:	00001097          	auipc	ra,0x1
   163d6:	fa8080e7          	jalr	-88(ra) # 1737a <__clzsi2>
   163da:	4622                	lw	a2,8(sp)
   163dc:	872a                	mv	a4,a0
   163de:	ff550693          	addi	a3,a0,-11
   163e2:	47f5                	li	a5,29
   163e4:	ff870593          	addi	a1,a4,-8
   163e8:	8f95                	sub	a5,a5,a3
   163ea:	00ba1a33          	sll	s4,s4,a1
   163ee:	00f657b3          	srl	a5,a2,a5
   163f2:	0147e7b3          	or	a5,a5,s4
   163f6:	00b615b3          	sll	a1,a2,a1
   163fa:	40e90933          	sub	s2,s2,a4
   163fe:	c0d90913          	addi	s2,s2,-1011
   16402:	4881                	li	a7,0
   16404:	bdc1                	j	162d4 <__muldf3+0x94>
   16406:	00a9e433          	or	s0,s3,a0
   1640a:	ec01                	bnez	s0,16422 <__muldf3+0x1e2>
   1640c:	49a1                	li	s3,8
   1640e:	4481                	li	s1,0
   16410:	7ff00913          	li	s2,2047
   16414:	4b89                	li	s7,2
   16416:	bdbd                	j	16294 <__muldf3+0x54>
   16418:	0019e993          	ori	s3,s3,1
   1641c:	4581                	li	a1,0
   1641e:	4885                	li	a7,1
   16420:	bd55                	j	162d4 <__muldf3+0x94>
   16422:	844e                	mv	s0,s3
   16424:	84aa                	mv	s1,a0
   16426:	49b1                	li	s3,12
   16428:	7ff00913          	li	s2,2047
   1642c:	4b8d                	li	s7,3
   1642e:	b59d                	j	16294 <__muldf3+0x54>
   16430:	4991                	li	s3,4
   16432:	4481                	li	s1,0
   16434:	4901                	li	s2,0
   16436:	4b85                	li	s7,1
   16438:	bdb1                	j	16294 <__muldf3+0x54>
   1643a:	0039e993          	ori	s3,s3,3
   1643e:	87d2                	mv	a5,s4
   16440:	488d                	li	a7,3
   16442:	bd49                	j	162d4 <__muldf3+0x94>
   16444:	4789                	li	a5,2
   16446:	8556                	mv	a0,s5
   16448:	f0fb93e3          	bne	s7,a5,1634e <__muldf3+0x10e>
   1644c:	872a                	mv	a4,a0
   1644e:	7ff00793          	li	a5,2047
   16452:	4401                	li	s0,0
   16454:	4481                	li	s1,0
   16456:	b5d1                	j	1631a <__muldf3+0xda>
   16458:	6ec1                	lui	t4,0x10
   1645a:	fffe8613          	addi	a2,t4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   1645e:	0104d693          	srli	a3,s1,0x10
   16462:	0105de13          	srli	t3,a1,0x10
   16466:	8cf1                	and	s1,s1,a2
   16468:	8df1                	and	a1,a1,a2
   1646a:	02958633          	mul	a2,a1,s1
   1646e:	02b68333          	mul	t1,a3,a1
   16472:	01065893          	srli	a7,a2,0x10
   16476:	029e0533          	mul	a0,t3,s1
   1647a:	951a                	add	a0,a0,t1
   1647c:	98aa                	add	a7,a7,a0
   1647e:	03c682b3          	mul	t0,a3,t3
   16482:	0068f363          	bgeu	a7,t1,16488 <__muldf3+0x248>
   16486:	92f6                	add	t0,t0,t4
   16488:	6fc1                	lui	t6,0x10
   1648a:	ffff8313          	addi	t1,t6,-1 # ffff <MCU_SECTORSIZE+0xefff>
   1648e:	0067f533          	and	a0,a5,t1
   16492:	0107d393          	srli	t2,a5,0x10
   16496:	0068f7b3          	and	a5,a7,t1
   1649a:	07c2                	slli	a5,a5,0x10
   1649c:	00667333          	and	t1,a2,t1
   164a0:	933e                	add	t1,t1,a5
   164a2:	02950633          	mul	a2,a0,s1
   164a6:	0108d893          	srli	a7,a7,0x10
   164aa:	02a687b3          	mul	a5,a3,a0
   164ae:	01065f13          	srli	t5,a2,0x10
   164b2:	029384b3          	mul	s1,t2,s1
   164b6:	94be                	add	s1,s1,a5
   164b8:	94fa                	add	s1,s1,t5
   164ba:	02768eb3          	mul	t4,a3,t2
   164be:	00f4f363          	bgeu	s1,a5,164c4 <__muldf3+0x284>
   164c2:	9efe                	add	t4,t4,t6
   164c4:	6a41                	lui	s4,0x10
   164c6:	fffa0793          	addi	a5,s4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   164ca:	01045f93          	srli	t6,s0,0x10
   164ce:	00f476b3          	and	a3,s0,a5
   164d2:	00f4f9b3          	and	s3,s1,a5
   164d6:	8e7d                	and	a2,a2,a5
   164d8:	80c1                	srli	s1,s1,0x10
   164da:	02d58433          	mul	s0,a1,a3
   164de:	09c2                	slli	s3,s3,0x10
   164e0:	01d48f33          	add	t5,s1,t4
   164e4:	99b2                	add	s3,s3,a2
   164e6:	98ce                	add	a7,a7,s3
   164e8:	02de07b3          	mul	a5,t3,a3
   164ec:	01045e93          	srli	t4,s0,0x10
   164f0:	02bf85b3          	mul	a1,t6,a1
   164f4:	97ae                	add	a5,a5,a1
   164f6:	9ebe                	add	t4,t4,a5
   164f8:	03fe0e33          	mul	t3,t3,t6
   164fc:	00bef363          	bgeu	t4,a1,16502 <__muldf3+0x2c2>
   16500:	9e52                	add	t3,t3,s4
   16502:	67c1                	lui	a5,0x10
   16504:	fff78593          	addi	a1,a5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   16508:	00bef633          	and	a2,t4,a1
   1650c:	8c6d                	and	s0,s0,a1
   1650e:	0642                	slli	a2,a2,0x10
   16510:	9622                	add	a2,a2,s0
   16512:	010ede93          	srli	t4,t4,0x10
   16516:	02d505b3          	mul	a1,a0,a3
   1651a:	9e76                	add	t3,t3,t4
   1651c:	02af8533          	mul	a0,t6,a0
   16520:	0105d413          	srli	s0,a1,0x10
   16524:	02d386b3          	mul	a3,t2,a3
   16528:	96aa                	add	a3,a3,a0
   1652a:	96a2                	add	a3,a3,s0
   1652c:	03f38fb3          	mul	t6,t2,t6
   16530:	00a6f363          	bgeu	a3,a0,16536 <__muldf3+0x2f6>
   16534:	9fbe                	add	t6,t6,a5
   16536:	6541                	lui	a0,0x10
   16538:	157d                	addi	a0,a0,-1
   1653a:	00a6f7b3          	and	a5,a3,a0
   1653e:	07c2                	slli	a5,a5,0x10
   16540:	8d6d                	and	a0,a0,a1
   16542:	97aa                	add	a5,a5,a0
   16544:	005885b3          	add	a1,a7,t0
   16548:	0135b9b3          	sltu	s3,a1,s3
   1654c:	97fa                	add	a5,a5,t5
   1654e:	95b2                	add	a1,a1,a2
   16550:	01378433          	add	s0,a5,s3
   16554:	00c5b633          	sltu	a2,a1,a2
   16558:	01c40eb3          	add	t4,s0,t3
   1655c:	00ce8533          	add	a0,t4,a2
   16560:	01343433          	sltu	s0,s0,s3
   16564:	01e7b7b3          	sltu	a5,a5,t5
   16568:	8fc1                	or	a5,a5,s0
   1656a:	01cebe33          	sltu	t3,t4,t3
   1656e:	0106d413          	srli	s0,a3,0x10
   16572:	00c53633          	sltu	a2,a0,a2
   16576:	943e                	add	s0,s0,a5
   16578:	00ce6633          	or	a2,t3,a2
   1657c:	00959493          	slli	s1,a1,0x9
   16580:	9432                	add	s0,s0,a2
   16582:	947e                	add	s0,s0,t6
   16584:	0064e4b3          	or	s1,s1,t1
   16588:	0426                	slli	s0,s0,0x9
   1658a:	01755693          	srli	a3,a0,0x17
   1658e:	009034b3          	snez	s1,s1
   16592:	81dd                	srli	a1,a1,0x17
   16594:	00951793          	slli	a5,a0,0x9
   16598:	8ccd                	or	s1,s1,a1
   1659a:	8c55                	or	s0,s0,a3
   1659c:	8cdd                	or	s1,s1,a5
   1659e:	00741793          	slli	a5,s0,0x7
   165a2:	0007db63          	bgez	a5,165b8 <__muldf3+0x378>
   165a6:	0014d793          	srli	a5,s1,0x1
   165aa:	8885                	andi	s1,s1,1
   165ac:	01f41693          	slli	a3,s0,0x1f
   165b0:	8cdd                	or	s1,s1,a5
   165b2:	8cd5                	or	s1,s1,a3
   165b4:	8005                	srli	s0,s0,0x1
   165b6:	8942                	mv	s2,a6
   165b8:	3ff90793          	addi	a5,s2,1023
   165bc:	08f05d63          	blez	a5,16656 <__muldf3+0x416>
   165c0:	0074f693          	andi	a3,s1,7
   165c4:	ce81                	beqz	a3,165dc <__muldf3+0x39c>
   165c6:	00f4f693          	andi	a3,s1,15
   165ca:	4611                	li	a2,4
   165cc:	00c68863          	beq	a3,a2,165dc <__muldf3+0x39c>
   165d0:	00448693          	addi	a3,s1,4
   165d4:	0096b4b3          	sltu	s1,a3,s1
   165d8:	9426                	add	s0,s0,s1
   165da:	84b6                	mv	s1,a3
   165dc:	00741693          	slli	a3,s0,0x7
   165e0:	0006d863          	bgez	a3,165f0 <__muldf3+0x3b0>
   165e4:	ff0007b7          	lui	a5,0xff000
   165e8:	17fd                	addi	a5,a5,-1
   165ea:	8c7d                	and	s0,s0,a5
   165ec:	40090793          	addi	a5,s2,1024
   165f0:	7fe00693          	li	a3,2046
   165f4:	10f6c363          	blt	a3,a5,166fa <__muldf3+0x4ba>
   165f8:	0034d693          	srli	a3,s1,0x3
   165fc:	01d41493          	slli	s1,s0,0x1d
   16600:	0426                	slli	s0,s0,0x9
   16602:	8cd5                	or	s1,s1,a3
   16604:	8031                	srli	s0,s0,0xc
   16606:	7ff7f793          	andi	a5,a5,2047
   1660a:	bb01                	j	1631a <__muldf3+0xda>
   1660c:	8532                	mv	a0,a2
   1660e:	c432                	sw	a2,8(sp)
   16610:	00001097          	auipc	ra,0x1
   16614:	d6a080e7          	jalr	-662(ra) # 1737a <__clzsi2>
   16618:	01550693          	addi	a3,a0,21 # 10015 <MCU_SECTORSIZE+0xf015>
   1661c:	47f1                	li	a5,28
   1661e:	02050713          	addi	a4,a0,32
   16622:	4622                	lw	a2,8(sp)
   16624:	dad7dfe3          	bge	a5,a3,163e2 <__muldf3+0x1a2>
   16628:	1561                	addi	a0,a0,-8
   1662a:	00a617b3          	sll	a5,a2,a0
   1662e:	4581                	li	a1,0
   16630:	b3e9                	j	163fa <__muldf3+0x1ba>
   16632:	00001097          	auipc	ra,0x1
   16636:	d48080e7          	jalr	-696(ra) # 1737a <__clzsi2>
   1663a:	01550713          	addi	a4,a0,21
   1663e:	45f1                	li	a1,28
   16640:	02050793          	addi	a5,a0,32
   16644:	4622                	lw	a2,8(sp)
   16646:	46b2                	lw	a3,12(sp)
   16648:	d2e5dfe3          	bge	a1,a4,16386 <__muldf3+0x146>
   1664c:	1561                	addi	a0,a0,-8
   1664e:	00aa1433          	sll	s0,s4,a0
   16652:	4481                	li	s1,0
   16654:	b3a9                	j	1639e <__muldf3+0x15e>
   16656:	4685                	li	a3,1
   16658:	8e9d                	sub	a3,a3,a5
   1665a:	e7b1                	bnez	a5,166a6 <__muldf3+0x466>
   1665c:	41e90913          	addi	s2,s2,1054
   16660:	012497b3          	sll	a5,s1,s2
   16664:	00d4d4b3          	srl	s1,s1,a3
   16668:	01241933          	sll	s2,s0,s2
   1666c:	00f037b3          	snez	a5,a5
   16670:	009964b3          	or	s1,s2,s1
   16674:	8cdd                	or	s1,s1,a5
   16676:	0074f793          	andi	a5,s1,7
   1667a:	00d456b3          	srl	a3,s0,a3
   1667e:	cf81                	beqz	a5,16696 <__muldf3+0x456>
   16680:	00f4f793          	andi	a5,s1,15
   16684:	4611                	li	a2,4
   16686:	00c78863          	beq	a5,a2,16696 <__muldf3+0x456>
   1668a:	00448793          	addi	a5,s1,4
   1668e:	0097b4b3          	sltu	s1,a5,s1
   16692:	96a6                	add	a3,a3,s1
   16694:	84be                	mv	s1,a5
   16696:	00869793          	slli	a5,a3,0x8
   1669a:	0407d863          	bgez	a5,166ea <__muldf3+0x4aa>
   1669e:	4785                	li	a5,1
   166a0:	4401                	li	s0,0
   166a2:	4481                	li	s1,0
   166a4:	b99d                	j	1631a <__muldf3+0xda>
   166a6:	03800613          	li	a2,56
   166aa:	cad649e3          	blt	a2,a3,1635c <__muldf3+0x11c>
   166ae:	467d                	li	a2,31
   166b0:	fad656e3          	bge	a2,a3,1665c <__muldf3+0x41c>
   166b4:	5605                	li	a2,-31
   166b6:	40f607b3          	sub	a5,a2,a5
   166ba:	02000593          	li	a1,32
   166be:	00f45633          	srl	a2,s0,a5
   166c2:	00b68763          	beq	a3,a1,166d0 <__muldf3+0x490>
   166c6:	43e90913          	addi	s2,s2,1086
   166ca:	012417b3          	sll	a5,s0,s2
   166ce:	8cdd                	or	s1,s1,a5
   166d0:	009034b3          	snez	s1,s1
   166d4:	8cd1                	or	s1,s1,a2
   166d6:	0074f693          	andi	a3,s1,7
   166da:	4401                	li	s0,0
   166dc:	ca99                	beqz	a3,166f2 <__muldf3+0x4b2>
   166de:	00f4f793          	andi	a5,s1,15
   166e2:	4611                	li	a2,4
   166e4:	4681                	li	a3,0
   166e6:	fac792e3          	bne	a5,a2,1668a <__muldf3+0x44a>
   166ea:	00969413          	slli	s0,a3,0x9
   166ee:	8031                	srli	s0,s0,0xc
   166f0:	06f6                	slli	a3,a3,0x1d
   166f2:	808d                	srli	s1,s1,0x3
   166f4:	8cd5                	or	s1,s1,a3
   166f6:	4781                	li	a5,0
   166f8:	b10d                	j	1631a <__muldf3+0xda>
   166fa:	7ff00793          	li	a5,2047
   166fe:	4401                	li	s0,0
   16700:	4481                	li	s1,0
   16702:	b921                	j	1631a <__muldf3+0xda>
   16704:	8942                	mv	s2,a6
   16706:	bd4d                	j	165b8 <__muldf3+0x378>

00016708 <__subdf3>:
__subdf3():
   16708:	00100737          	lui	a4,0x100
   1670c:	177d                	addi	a4,a4,-1
   1670e:	1101                	addi	sp,sp,-32
   16710:	00b77333          	and	t1,a4,a1
   16714:	0146d893          	srli	a7,a3,0x14
   16718:	8f75                	and	a4,a4,a3
   1671a:	01d65e93          	srli	t4,a2,0x1d
   1671e:	cc22                	sw	s0,24(sp)
   16720:	ca26                	sw	s1,20(sp)
   16722:	030e                	slli	t1,t1,0x3
   16724:	0145d493          	srli	s1,a1,0x14
   16728:	01d55793          	srli	a5,a0,0x1d
   1672c:	070e                	slli	a4,a4,0x3
   1672e:	ce06                	sw	ra,28(sp)
   16730:	c84a                	sw	s2,16(sp)
   16732:	c64e                	sw	s3,12(sp)
   16734:	7ff8f893          	andi	a7,a7,2047
   16738:	7ff00e13          	li	t3,2047
   1673c:	00eee733          	or	a4,t4,a4
   16740:	7ff4f493          	andi	s1,s1,2047
   16744:	01f5d413          	srli	s0,a1,0x1f
   16748:	0067e333          	or	t1,a5,t1
   1674c:	00351f13          	slli	t5,a0,0x3
   16750:	82fd                	srli	a3,a3,0x1f
   16752:	00361e93          	slli	t4,a2,0x3
   16756:	19c88263          	beq	a7,t3,168da <__subdf3+0x1d2>
   1675a:	0016c693          	xori	a3,a3,1
   1675e:	411485b3          	sub	a1,s1,a7
   16762:	12d40763          	beq	s0,a3,16890 <__subdf3+0x188>
   16766:	18b05363          	blez	a1,168ec <__subdf3+0x1e4>
   1676a:	1a088d63          	beqz	a7,16924 <__subdf3+0x21c>
   1676e:	008007b7          	lui	a5,0x800
   16772:	8f5d                	or	a4,a4,a5
   16774:	59c48563          	beq	s1,t3,16cfe <__subdf3+0x5f6>
   16778:	03800793          	li	a5,56
   1677c:	34b7c863          	blt	a5,a1,16acc <__subdf3+0x3c4>
   16780:	47fd                	li	a5,31
   16782:	48b7c963          	blt	a5,a1,16c14 <__subdf3+0x50c>
   16786:	02000793          	li	a5,32
   1678a:	8f8d                	sub	a5,a5,a1
   1678c:	00bed9b3          	srl	s3,t4,a1
   16790:	00f71833          	sll	a6,a4,a5
   16794:	00fe9eb3          	sll	t4,t4,a5
   16798:	01386833          	or	a6,a6,s3
   1679c:	00b75733          	srl	a4,a4,a1
   167a0:	01d039b3          	snez	s3,t4
   167a4:	01386833          	or	a6,a6,s3
   167a8:	40e30333          	sub	t1,t1,a4
   167ac:	410f09b3          	sub	s3,t5,a6
   167b0:	013f37b3          	sltu	a5,t5,s3
   167b4:	40f30633          	sub	a2,t1,a5
   167b8:	00861793          	slli	a5,a2,0x8
   167bc:	2407d563          	bgez	a5,16a06 <__subdf3+0x2fe>
   167c0:	00800937          	lui	s2,0x800
   167c4:	197d                	addi	s2,s2,-1
   167c6:	01267933          	and	s2,a2,s2
   167ca:	2e090163          	beqz	s2,16aac <__subdf3+0x3a4>
   167ce:	854a                	mv	a0,s2
   167d0:	00001097          	auipc	ra,0x1
   167d4:	baa080e7          	jalr	-1110(ra) # 1737a <__clzsi2>
   167d8:	ff850713          	addi	a4,a0,-8
   167dc:	02000793          	li	a5,32
   167e0:	8f99                	sub	a5,a5,a4
   167e2:	00f9d7b3          	srl	a5,s3,a5
   167e6:	00e91633          	sll	a2,s2,a4
   167ea:	8fd1                	or	a5,a5,a2
   167ec:	00e999b3          	sll	s3,s3,a4
   167f0:	2a974463          	blt	a4,s1,16a98 <__subdf3+0x390>
   167f4:	8f05                	sub	a4,a4,s1
   167f6:	00170613          	addi	a2,a4,1 # 100001 <_data_lma+0xe8539>
   167fa:	46fd                	li	a3,31
   167fc:	3ac6c763          	blt	a3,a2,16baa <__subdf3+0x4a2>
   16800:	02000713          	li	a4,32
   16804:	8f11                	sub	a4,a4,a2
   16806:	00c9d6b3          	srl	a3,s3,a2
   1680a:	00e99833          	sll	a6,s3,a4
   1680e:	00e79733          	sll	a4,a5,a4
   16812:	8f55                	or	a4,a4,a3
   16814:	01003833          	snez	a6,a6
   16818:	010769b3          	or	s3,a4,a6
   1681c:	00c7d633          	srl	a2,a5,a2
   16820:	4481                	li	s1,0
   16822:	0079f793          	andi	a5,s3,7
   16826:	cf81                	beqz	a5,1683e <__subdf3+0x136>
   16828:	00f9f693          	andi	a3,s3,15
   1682c:	4791                	li	a5,4
   1682e:	00f68863          	beq	a3,a5,1683e <__subdf3+0x136>
   16832:	00498693          	addi	a3,s3,4
   16836:	0136b833          	sltu	a6,a3,s3
   1683a:	9642                	add	a2,a2,a6
   1683c:	89b6                	mv	s3,a3
   1683e:	00861793          	slli	a5,a2,0x8
   16842:	1c07d663          	bgez	a5,16a0e <__subdf3+0x306>
   16846:	00148713          	addi	a4,s1,1
   1684a:	7ff00793          	li	a5,2047
   1684e:	8805                	andi	s0,s0,1
   16850:	20f70663          	beq	a4,a5,16a5c <__subdf3+0x354>
   16854:	ff8007b7          	lui	a5,0xff800
   16858:	17fd                	addi	a5,a5,-1
   1685a:	8ff1                	and	a5,a5,a2
   1685c:	01d79813          	slli	a6,a5,0x1d
   16860:	0039d993          	srli	s3,s3,0x3
   16864:	07a6                	slli	a5,a5,0x9
   16866:	01386833          	or	a6,a6,s3
   1686a:	83b1                	srli	a5,a5,0xc
   1686c:	7ff77713          	andi	a4,a4,2047
   16870:	00c79693          	slli	a3,a5,0xc
   16874:	0752                	slli	a4,a4,0x14
   16876:	82b1                	srli	a3,a3,0xc
   16878:	047e                	slli	s0,s0,0x1f
   1687a:	8ed9                	or	a3,a3,a4
   1687c:	8ec1                	or	a3,a3,s0
   1687e:	40f2                	lw	ra,28(sp)
   16880:	4462                	lw	s0,24(sp)
   16882:	44d2                	lw	s1,20(sp)
   16884:	4942                	lw	s2,16(sp)
   16886:	49b2                	lw	s3,12(sp)
   16888:	8542                	mv	a0,a6
   1688a:	85b6                	mv	a1,a3
   1688c:	6105                	addi	sp,sp,32
   1688e:	8082                	ret
   16890:	0ab05663          	blez	a1,1693c <__subdf3+0x234>
   16894:	12088a63          	beqz	a7,169c8 <__subdf3+0x2c0>
   16898:	008007b7          	lui	a5,0x800
   1689c:	8f5d                	or	a4,a4,a5
   1689e:	2dc48963          	beq	s1,t3,16b70 <__subdf3+0x468>
   168a2:	03800793          	li	a5,56
   168a6:	18b7c763          	blt	a5,a1,16a34 <__subdf3+0x32c>
   168aa:	47fd                	li	a5,31
   168ac:	3cb7d463          	bge	a5,a1,16c74 <__subdf3+0x56c>
   168b0:	fe058813          	addi	a6,a1,-32 # ffe0 <MCU_SECTORSIZE+0xefe0>
   168b4:	02000793          	li	a5,32
   168b8:	010759b3          	srl	s3,a4,a6
   168bc:	00f58a63          	beq	a1,a5,168d0 <__subdf3+0x1c8>
   168c0:	04000793          	li	a5,64
   168c4:	40b785b3          	sub	a1,a5,a1
   168c8:	00b71733          	sll	a4,a4,a1
   168cc:	00eeeeb3          	or	t4,t4,a4
   168d0:	01d03833          	snez	a6,t4
   168d4:	01386833          	or	a6,a6,s3
   168d8:	a295                	j	16a3c <__subdf3+0x334>
   168da:	01d767b3          	or	a5,a4,t4
   168de:	80148593          	addi	a1,s1,-2047
   168e2:	e399                	bnez	a5,168e8 <__subdf3+0x1e0>
   168e4:	0016c693          	xori	a3,a3,1
   168e8:	04d40a63          	beq	s0,a3,1693c <__subdf3+0x234>
   168ec:	e1d1                	bnez	a1,16970 <__subdf3+0x268>
   168ee:	00148793          	addi	a5,s1,1
   168f2:	7fe7f793          	andi	a5,a5,2046
   168f6:	1e079b63          	bnez	a5,16aec <__subdf3+0x3e4>
   168fa:	01e367b3          	or	a5,t1,t5
   168fe:	01d76833          	or	a6,a4,t4
   16902:	16049263          	bnez	s1,16a66 <__subdf3+0x35e>
   16906:	3c078463          	beqz	a5,16cce <__subdf3+0x5c6>
   1690a:	42081863          	bnez	a6,16d3a <__subdf3+0x632>
   1690e:	00351813          	slli	a6,a0,0x3
   16912:	01d31693          	slli	a3,t1,0x1d
   16916:	00385813          	srli	a6,a6,0x3
   1691a:	0106e833          	or	a6,a3,a6
   1691e:	00335793          	srli	a5,t1,0x3
   16922:	a219                	j	16a28 <__subdf3+0x320>
   16924:	01d767b3          	or	a5,a4,t4
   16928:	1a078763          	beqz	a5,16ad6 <__subdf3+0x3ce>
   1692c:	fff58793          	addi	a5,a1,-1
   16930:	3a078d63          	beqz	a5,16cea <__subdf3+0x5e2>
   16934:	23c58e63          	beq	a1,t3,16b70 <__subdf3+0x468>
   16938:	85be                	mv	a1,a5
   1693a:	bd3d                	j	16778 <__subdf3+0x70>
   1693c:	1c059b63          	bnez	a1,16b12 <__subdf3+0x40a>
   16940:	00148693          	addi	a3,s1,1
   16944:	7fe6f793          	andi	a5,a3,2046
   16948:	efc1                	bnez	a5,169e0 <__subdf3+0x2d8>
   1694a:	01e367b3          	or	a5,t1,t5
   1694e:	36049263          	bnez	s1,16cb2 <__subdf3+0x5aa>
   16952:	44078f63          	beqz	a5,16db0 <__subdf3+0x6a8>
   16956:	01d767b3          	or	a5,a4,t4
   1695a:	46079663          	bnez	a5,16dc6 <__subdf3+0x6be>
   1695e:	050e                	slli	a0,a0,0x3
   16960:	01d31813          	slli	a6,t1,0x1d
   16964:	810d                	srli	a0,a0,0x3
   16966:	00a86833          	or	a6,a6,a0
   1696a:	00335793          	srli	a5,t1,0x3
   1696e:	a86d                	j	16a28 <__subdf3+0x320>
   16970:	409885b3          	sub	a1,a7,s1
   16974:	20049963          	bnez	s1,16b86 <__subdf3+0x47e>
   16978:	01e367b3          	or	a5,t1,t5
   1697c:	30078f63          	beqz	a5,16c9a <__subdf3+0x592>
   16980:	fff58793          	addi	a5,a1,-1
   16984:	40078b63          	beqz	a5,16d9a <__subdf3+0x692>
   16988:	7ff00513          	li	a0,2047
   1698c:	20a58563          	beq	a1,a0,16b96 <__subdf3+0x48e>
   16990:	85be                	mv	a1,a5
   16992:	03800793          	li	a5,56
   16996:	2ab7c463          	blt	a5,a1,16c3e <__subdf3+0x536>
   1699a:	47fd                	li	a5,31
   1699c:	3cb7ca63          	blt	a5,a1,16d70 <__subdf3+0x668>
   169a0:	02000793          	li	a5,32
   169a4:	8f8d                	sub	a5,a5,a1
   169a6:	00f31833          	sll	a6,t1,a5
   169aa:	00bf5633          	srl	a2,t5,a1
   169ae:	00ff17b3          	sll	a5,t5,a5
   169b2:	00c86833          	or	a6,a6,a2
   169b6:	00f039b3          	snez	s3,a5
   169ba:	00b35333          	srl	t1,t1,a1
   169be:	01386833          	or	a6,a6,s3
   169c2:	40670733          	sub	a4,a4,t1
   169c6:	a441                	j	16c46 <__subdf3+0x53e>
   169c8:	01d767b3          	or	a5,a4,t4
   169cc:	10078563          	beqz	a5,16ad6 <__subdf3+0x3ce>
   169d0:	fff58793          	addi	a5,a1,-1
   169d4:	20078163          	beqz	a5,16bd6 <__subdf3+0x4ce>
   169d8:	2fc58263          	beq	a1,t3,16cbc <__subdf3+0x5b4>
   169dc:	85be                	mv	a1,a5
   169de:	b5d1                	j	168a2 <__subdf3+0x19a>
   169e0:	7ff00793          	li	a5,2047
   169e4:	06f68b63          	beq	a3,a5,16a5a <__subdf3+0x352>
   169e8:	9efa                	add	t4,t4,t5
   169ea:	01eeb633          	sltu	a2,t4,t5
   169ee:	00e307b3          	add	a5,t1,a4
   169f2:	97b2                	add	a5,a5,a2
   169f4:	01f79813          	slli	a6,a5,0x1f
   169f8:	001ede93          	srli	t4,t4,0x1
   169fc:	01d869b3          	or	s3,a6,t4
   16a00:	0017d613          	srli	a2,a5,0x1
   16a04:	84b6                	mv	s1,a3
   16a06:	0079f793          	andi	a5,s3,7
   16a0a:	e0079fe3          	bnez	a5,16828 <__subdf3+0x120>
   16a0e:	01d61793          	slli	a5,a2,0x1d
   16a12:	0039d813          	srli	a6,s3,0x3
   16a16:	00f86833          	or	a6,a6,a5
   16a1a:	85a6                	mv	a1,s1
   16a1c:	00365793          	srli	a5,a2,0x3
   16a20:	7ff00713          	li	a4,2047
   16a24:	06e58063          	beq	a1,a4,16a84 <__subdf3+0x37c>
   16a28:	07b2                	slli	a5,a5,0xc
   16a2a:	83b1                	srli	a5,a5,0xc
   16a2c:	7ff5f713          	andi	a4,a1,2047
   16a30:	8805                	andi	s0,s0,1
   16a32:	bd3d                	j	16870 <__subdf3+0x168>
   16a34:	01d76733          	or	a4,a4,t4
   16a38:	00e03833          	snez	a6,a4
   16a3c:	01e809b3          	add	s3,a6,t5
   16a40:	01e9b7b3          	sltu	a5,s3,t5
   16a44:	00678633          	add	a2,a5,t1
   16a48:	00861793          	slli	a5,a2,0x8
   16a4c:	fa07dde3          	bgez	a5,16a06 <__subdf3+0x2fe>
   16a50:	0485                	addi	s1,s1,1
   16a52:	7ff00793          	li	a5,2047
   16a56:	18f49e63          	bne	s1,a5,16bf2 <__subdf3+0x4ea>
   16a5a:	8805                	andi	s0,s0,1
   16a5c:	7ff00713          	li	a4,2047
   16a60:	4781                	li	a5,0
   16a62:	4801                	li	a6,0
   16a64:	b531                	j	16870 <__subdf3+0x168>
   16a66:	10079363          	bnez	a5,16b6c <__subdf3+0x464>
   16a6a:	3c080363          	beqz	a6,16e30 <__subdf3+0x728>
   16a6e:	00361813          	slli	a6,a2,0x3
   16a72:	01d71793          	slli	a5,a4,0x1d
   16a76:	00385813          	srli	a6,a6,0x3
   16a7a:	00f86833          	or	a6,a6,a5
   16a7e:	8436                	mv	s0,a3
   16a80:	00375793          	srli	a5,a4,0x3
   16a84:	00f867b3          	or	a5,a6,a5
   16a88:	dbe9                	beqz	a5,16a5a <__subdf3+0x352>
   16a8a:	4401                	li	s0,0
   16a8c:	7ff00713          	li	a4,2047
   16a90:	000807b7          	lui	a5,0x80
   16a94:	4801                	li	a6,0
   16a96:	bbe9                	j	16870 <__subdf3+0x168>
   16a98:	ff800637          	lui	a2,0xff800
   16a9c:	167d                	addi	a2,a2,-1
   16a9e:	8e7d                	and	a2,a2,a5
   16aa0:	0079f793          	andi	a5,s3,7
   16aa4:	8c99                	sub	s1,s1,a4
   16aa6:	d80791e3          	bnez	a5,16828 <__subdf3+0x120>
   16aaa:	b795                	j	16a0e <__subdf3+0x306>
   16aac:	854e                	mv	a0,s3
   16aae:	00001097          	auipc	ra,0x1
   16ab2:	8cc080e7          	jalr	-1844(ra) # 1737a <__clzsi2>
   16ab6:	01850713          	addi	a4,a0,24
   16aba:	47fd                	li	a5,31
   16abc:	d2e7d0e3          	bge	a5,a4,167dc <__subdf3+0xd4>
   16ac0:	ff850613          	addi	a2,a0,-8
   16ac4:	00c997b3          	sll	a5,s3,a2
   16ac8:	4981                	li	s3,0
   16aca:	b31d                	j	167f0 <__subdf3+0xe8>
   16acc:	01d76833          	or	a6,a4,t4
   16ad0:	01003833          	snez	a6,a6
   16ad4:	b9e1                	j	167ac <__subdf3+0xa4>
   16ad6:	00351813          	slli	a6,a0,0x3
   16ada:	01d31793          	slli	a5,t1,0x1d
   16ade:	00385813          	srli	a6,a6,0x3
   16ae2:	00f86833          	or	a6,a6,a5
   16ae6:	00335793          	srli	a5,t1,0x3
   16aea:	bf1d                	j	16a20 <__subdf3+0x318>
   16aec:	41df09b3          	sub	s3,t5,t4
   16af0:	40e30933          	sub	s2,t1,a4
   16af4:	013f3633          	sltu	a2,t5,s3
   16af8:	40c90933          	sub	s2,s2,a2
   16afc:	00891793          	slli	a5,s2,0x8
   16b00:	2007ca63          	bltz	a5,16d14 <__subdf3+0x60c>
   16b04:	0129e833          	or	a6,s3,s2
   16b08:	cc0811e3          	bnez	a6,167ca <__subdf3+0xc2>
   16b0c:	4781                	li	a5,0
   16b0e:	4401                	li	s0,0
   16b10:	bf21                	j	16a28 <__subdf3+0x320>
   16b12:	409885b3          	sub	a1,a7,s1
   16b16:	14048163          	beqz	s1,16c58 <__subdf3+0x550>
   16b1a:	008006b7          	lui	a3,0x800
   16b1e:	7ff00793          	li	a5,2047
   16b22:	00d36333          	or	t1,t1,a3
   16b26:	20f88163          	beq	a7,a5,16d28 <__subdf3+0x620>
   16b2a:	03800793          	li	a5,56
   16b2e:	22b7cc63          	blt	a5,a1,16d66 <__subdf3+0x65e>
   16b32:	47fd                	li	a5,31
   16b34:	2cb7c963          	blt	a5,a1,16e06 <__subdf3+0x6fe>
   16b38:	02000793          	li	a5,32
   16b3c:	8f8d                	sub	a5,a5,a1
   16b3e:	00f31833          	sll	a6,t1,a5
   16b42:	00bf56b3          	srl	a3,t5,a1
   16b46:	00ff17b3          	sll	a5,t5,a5
   16b4a:	00d86833          	or	a6,a6,a3
   16b4e:	00f039b3          	snez	s3,a5
   16b52:	00b35333          	srl	t1,t1,a1
   16b56:	01386833          	or	a6,a6,s3
   16b5a:	971a                	add	a4,a4,t1
   16b5c:	01d809b3          	add	s3,a6,t4
   16b60:	01d9b7b3          	sltu	a5,s3,t4
   16b64:	00e78633          	add	a2,a5,a4
   16b68:	84c6                	mv	s1,a7
   16b6a:	bdf9                	j	16a48 <__subdf3+0x340>
   16b6c:	f0081fe3          	bnez	a6,16a8a <__subdf3+0x382>
   16b70:	00351813          	slli	a6,a0,0x3
   16b74:	01d31793          	slli	a5,t1,0x1d
   16b78:	00385813          	srli	a6,a6,0x3
   16b7c:	00f86833          	or	a6,a6,a5
   16b80:	00335793          	srli	a5,t1,0x3
   16b84:	b701                	j	16a84 <__subdf3+0x37c>
   16b86:	00800537          	lui	a0,0x800
   16b8a:	7ff00793          	li	a5,2047
   16b8e:	00a36333          	or	t1,t1,a0
   16b92:	e0f890e3          	bne	a7,a5,16992 <__subdf3+0x28a>
   16b96:	060e                	slli	a2,a2,0x3
   16b98:	01d71813          	slli	a6,a4,0x1d
   16b9c:	820d                	srli	a2,a2,0x3
   16b9e:	00c86833          	or	a6,a6,a2
   16ba2:	00375793          	srli	a5,a4,0x3
   16ba6:	8436                	mv	s0,a3
   16ba8:	bdf1                	j	16a84 <__subdf3+0x37c>
   16baa:	1705                	addi	a4,a4,-31
   16bac:	02000693          	li	a3,32
   16bb0:	00e7d733          	srl	a4,a5,a4
   16bb4:	00d60a63          	beq	a2,a3,16bc8 <__subdf3+0x4c0>
   16bb8:	04000693          	li	a3,64
   16bbc:	40c68633          	sub	a2,a3,a2
   16bc0:	00c79633          	sll	a2,a5,a2
   16bc4:	00c9e9b3          	or	s3,s3,a2
   16bc8:	01303833          	snez	a6,s3
   16bcc:	00e869b3          	or	s3,a6,a4
   16bd0:	4601                	li	a2,0
   16bd2:	4481                	li	s1,0
   16bd4:	bd0d                	j	16a06 <__subdf3+0x2fe>
   16bd6:	01df09b3          	add	s3,t5,t4
   16bda:	00e307b3          	add	a5,t1,a4
   16bde:	01e9bf33          	sltu	t5,s3,t5
   16be2:	01e78633          	add	a2,a5,t5
   16be6:	00861793          	slli	a5,a2,0x8
   16bea:	4485                	li	s1,1
   16bec:	e007dde3          	bgez	a5,16a06 <__subdf3+0x2fe>
   16bf0:	4489                	li	s1,2
   16bf2:	ff8007b7          	lui	a5,0xff800
   16bf6:	17fd                	addi	a5,a5,-1
   16bf8:	8ff1                	and	a5,a5,a2
   16bfa:	0019d713          	srli	a4,s3,0x1
   16bfe:	0019f813          	andi	a6,s3,1
   16c02:	01076833          	or	a6,a4,a6
   16c06:	01f79993          	slli	s3,a5,0x1f
   16c0a:	0109e9b3          	or	s3,s3,a6
   16c0e:	0017d613          	srli	a2,a5,0x1
   16c12:	b901                	j	16822 <__subdf3+0x11a>
   16c14:	fe058813          	addi	a6,a1,-32
   16c18:	02000793          	li	a5,32
   16c1c:	010759b3          	srl	s3,a4,a6
   16c20:	00f58a63          	beq	a1,a5,16c34 <__subdf3+0x52c>
   16c24:	04000793          	li	a5,64
   16c28:	40b785b3          	sub	a1,a5,a1
   16c2c:	00b71733          	sll	a4,a4,a1
   16c30:	00eeeeb3          	or	t4,t4,a4
   16c34:	01d03833          	snez	a6,t4
   16c38:	01386833          	or	a6,a6,s3
   16c3c:	be85                	j	167ac <__subdf3+0xa4>
   16c3e:	01e36333          	or	t1,t1,t5
   16c42:	00603833          	snez	a6,t1
   16c46:	410e89b3          	sub	s3,t4,a6
   16c4a:	013eb7b3          	sltu	a5,t4,s3
   16c4e:	40f70633          	sub	a2,a4,a5
   16c52:	84c6                	mv	s1,a7
   16c54:	8436                	mv	s0,a3
   16c56:	b68d                	j	167b8 <__subdf3+0xb0>
   16c58:	01e367b3          	or	a5,t1,t5
   16c5c:	18078763          	beqz	a5,16dea <__subdf3+0x6e2>
   16c60:	fff58793          	addi	a5,a1,-1
   16c64:	1c078c63          	beqz	a5,16e3c <__subdf3+0x734>
   16c68:	7ff00693          	li	a3,2047
   16c6c:	0ad58e63          	beq	a1,a3,16d28 <__subdf3+0x620>
   16c70:	85be                	mv	a1,a5
   16c72:	bd65                	j	16b2a <__subdf3+0x422>
   16c74:	02000793          	li	a5,32
   16c78:	8f8d                	sub	a5,a5,a1
   16c7a:	00bed9b3          	srl	s3,t4,a1
   16c7e:	00f71833          	sll	a6,a4,a5
   16c82:	00fe9eb3          	sll	t4,t4,a5
   16c86:	01386833          	or	a6,a6,s3
   16c8a:	00b75733          	srl	a4,a4,a1
   16c8e:	01d039b3          	snez	s3,t4
   16c92:	01386833          	or	a6,a6,s3
   16c96:	933a                	add	t1,t1,a4
   16c98:	b355                	j	16a3c <__subdf3+0x334>
   16c9a:	00361813          	slli	a6,a2,0x3
   16c9e:	01d71793          	slli	a5,a4,0x1d
   16ca2:	00385813          	srli	a6,a6,0x3
   16ca6:	0107e833          	or	a6,a5,a6
   16caa:	8436                	mv	s0,a3
   16cac:	00375793          	srli	a5,a4,0x3
   16cb0:	bb85                	j	16a20 <__subdf3+0x318>
   16cb2:	cbbd                	beqz	a5,16d28 <__subdf3+0x620>
   16cb4:	01d76733          	or	a4,a4,t4
   16cb8:	dc0719e3          	bnez	a4,16a8a <__subdf3+0x382>
   16cbc:	050e                	slli	a0,a0,0x3
   16cbe:	01d31813          	slli	a6,t1,0x1d
   16cc2:	810d                	srli	a0,a0,0x3
   16cc4:	00a86833          	or	a6,a6,a0
   16cc8:	00335793          	srli	a5,t1,0x3
   16ccc:	bb65                	j	16a84 <__subdf3+0x37c>
   16cce:	e2080fe3          	beqz	a6,16b0c <__subdf3+0x404>
   16cd2:	00361813          	slli	a6,a2,0x3
   16cd6:	01d71793          	slli	a5,a4,0x1d
   16cda:	00385813          	srli	a6,a6,0x3
   16cde:	00f86833          	or	a6,a6,a5
   16ce2:	8436                	mv	s0,a3
   16ce4:	00375793          	srli	a5,a4,0x3
   16ce8:	b381                	j	16a28 <__subdf3+0x320>
   16cea:	41df09b3          	sub	s3,t5,t4
   16cee:	40e307b3          	sub	a5,t1,a4
   16cf2:	013f3f33          	sltu	t5,t5,s3
   16cf6:	41e78633          	sub	a2,a5,t5
   16cfa:	4485                	li	s1,1
   16cfc:	bc75                	j	167b8 <__subdf3+0xb0>
   16cfe:	00351813          	slli	a6,a0,0x3
   16d02:	01d31693          	slli	a3,t1,0x1d
   16d06:	00385813          	srli	a6,a6,0x3
   16d0a:	0106e833          	or	a6,a3,a6
   16d0e:	00335793          	srli	a5,t1,0x3
   16d12:	bb8d                	j	16a84 <__subdf3+0x37c>
   16d14:	41ee89b3          	sub	s3,t4,t5
   16d18:	40670633          	sub	a2,a4,t1
   16d1c:	013eb933          	sltu	s2,t4,s3
   16d20:	41260933          	sub	s2,a2,s2
   16d24:	8436                	mv	s0,a3
   16d26:	b455                	j	167ca <__subdf3+0xc2>
   16d28:	060e                	slli	a2,a2,0x3
   16d2a:	01d71813          	slli	a6,a4,0x1d
   16d2e:	820d                	srli	a2,a2,0x3
   16d30:	00c86833          	or	a6,a6,a2
   16d34:	00375793          	srli	a5,a4,0x3
   16d38:	b3b1                	j	16a84 <__subdf3+0x37c>
   16d3a:	41df09b3          	sub	s3,t5,t4
   16d3e:	40e307b3          	sub	a5,t1,a4
   16d42:	013f3633          	sltu	a2,t5,s3
   16d46:	40c78633          	sub	a2,a5,a2
   16d4a:	00861793          	slli	a5,a2,0x8
   16d4e:	0a07d763          	bgez	a5,16dfc <__subdf3+0x6f4>
   16d52:	41ee89b3          	sub	s3,t4,t5
   16d56:	406707b3          	sub	a5,a4,t1
   16d5a:	013ebeb3          	sltu	t4,t4,s3
   16d5e:	41d78633          	sub	a2,a5,t4
   16d62:	8436                	mv	s0,a3
   16d64:	bc7d                	j	16822 <__subdf3+0x11a>
   16d66:	01e36333          	or	t1,t1,t5
   16d6a:	00603833          	snez	a6,t1
   16d6e:	b3fd                	j	16b5c <__subdf3+0x454>
   16d70:	fe058813          	addi	a6,a1,-32
   16d74:	02000793          	li	a5,32
   16d78:	010359b3          	srl	s3,t1,a6
   16d7c:	00f58a63          	beq	a1,a5,16d90 <__subdf3+0x688>
   16d80:	04000793          	li	a5,64
   16d84:	40b785b3          	sub	a1,a5,a1
   16d88:	00b31333          	sll	t1,t1,a1
   16d8c:	006f6f33          	or	t5,t5,t1
   16d90:	01e03833          	snez	a6,t5
   16d94:	01386833          	or	a6,a6,s3
   16d98:	b57d                	j	16c46 <__subdf3+0x53e>
   16d9a:	41ee89b3          	sub	s3,t4,t5
   16d9e:	406707b3          	sub	a5,a4,t1
   16da2:	013ebeb3          	sltu	t4,t4,s3
   16da6:	41d78633          	sub	a2,a5,t4
   16daa:	8436                	mv	s0,a3
   16dac:	4485                	li	s1,1
   16dae:	b429                	j	167b8 <__subdf3+0xb0>
   16db0:	00361813          	slli	a6,a2,0x3
   16db4:	01d71793          	slli	a5,a4,0x1d
   16db8:	00385813          	srli	a6,a6,0x3
   16dbc:	00f86833          	or	a6,a6,a5
   16dc0:	00375793          	srli	a5,a4,0x3
   16dc4:	b195                	j	16a28 <__subdf3+0x320>
   16dc6:	01df09b3          	add	s3,t5,t4
   16dca:	00e307b3          	add	a5,t1,a4
   16dce:	01e9bf33          	sltu	t5,s3,t5
   16dd2:	01e78633          	add	a2,a5,t5
   16dd6:	00861793          	slli	a5,a2,0x8
   16dda:	c207d6e3          	bgez	a5,16a06 <__subdf3+0x2fe>
   16dde:	ff8007b7          	lui	a5,0xff800
   16de2:	17fd                	addi	a5,a5,-1
   16de4:	8e7d                	and	a2,a2,a5
   16de6:	4485                	li	s1,1
   16de8:	b939                	j	16a06 <__subdf3+0x2fe>
   16dea:	060e                	slli	a2,a2,0x3
   16dec:	01d71813          	slli	a6,a4,0x1d
   16df0:	820d                	srli	a2,a2,0x3
   16df2:	00c86833          	or	a6,a6,a2
   16df6:	00375793          	srli	a5,a4,0x3
   16dfa:	b11d                	j	16a20 <__subdf3+0x318>
   16dfc:	00c9e833          	or	a6,s3,a2
   16e00:	d00806e3          	beqz	a6,16b0c <__subdf3+0x404>
   16e04:	b109                	j	16a06 <__subdf3+0x2fe>
   16e06:	fe058813          	addi	a6,a1,-32
   16e0a:	02000793          	li	a5,32
   16e0e:	010359b3          	srl	s3,t1,a6
   16e12:	00f58a63          	beq	a1,a5,16e26 <__subdf3+0x71e>
   16e16:	04000793          	li	a5,64
   16e1a:	40b785b3          	sub	a1,a5,a1
   16e1e:	00b31333          	sll	t1,t1,a1
   16e22:	006f6f33          	or	t5,t5,t1
   16e26:	01e03833          	snez	a6,t5
   16e2a:	01386833          	or	a6,a6,s3
   16e2e:	b33d                	j	16b5c <__subdf3+0x454>
   16e30:	4401                	li	s0,0
   16e32:	7ff00713          	li	a4,2047
   16e36:	000807b7          	lui	a5,0x80
   16e3a:	bc1d                	j	16870 <__subdf3+0x168>
   16e3c:	01df09b3          	add	s3,t5,t4
   16e40:	00e307b3          	add	a5,t1,a4
   16e44:	01d9beb3          	sltu	t4,s3,t4
   16e48:	01d78633          	add	a2,a5,t4
   16e4c:	bb69                	j	16be6 <__subdf3+0x4de>

00016e4e <__fixdfsi>:
__fixdfsi():
   16e4e:	0145d793          	srli	a5,a1,0x14
   16e52:	001006b7          	lui	a3,0x100
   16e56:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xe8537>
   16e5a:	7ff7f793          	andi	a5,a5,2047
   16e5e:	3fe00613          	li	a2,1022
   16e62:	8f6d                	and	a4,a4,a1
   16e64:	81fd                	srli	a1,a1,0x1f
   16e66:	00f65c63          	bge	a2,a5,16e7e <__fixdfsi+0x30>
   16e6a:	41d00613          	li	a2,1053
   16e6e:	00f65a63          	bge	a2,a5,16e82 <__fixdfsi+0x34>
   16e72:	80000537          	lui	a0,0x80000
   16e76:	fff54513          	not	a0,a0
   16e7a:	952e                	add	a0,a0,a1
   16e7c:	8082                	ret
   16e7e:	4501                	li	a0,0
   16e80:	8082                	ret
   16e82:	43300613          	li	a2,1075
   16e86:	8e1d                	sub	a2,a2,a5
   16e88:	487d                	li	a6,31
   16e8a:	8f55                	or	a4,a4,a3
   16e8c:	00c85d63          	bge	a6,a2,16ea6 <__fixdfsi+0x58>
   16e90:	41300693          	li	a3,1043
   16e94:	40f687b3          	sub	a5,a3,a5
   16e98:	00f757b3          	srl	a5,a4,a5
   16e9c:	40f00533          	neg	a0,a5
   16ea0:	f1e5                	bnez	a1,16e80 <__fixdfsi+0x32>
   16ea2:	853e                	mv	a0,a5
   16ea4:	8082                	ret
   16ea6:	bed78793          	addi	a5,a5,-1043 # 7fbed <_data_lma+0x68125>
   16eaa:	00f717b3          	sll	a5,a4,a5
   16eae:	00c55533          	srl	a0,a0,a2
   16eb2:	8fc9                	or	a5,a5,a0
   16eb4:	b7e5                	j	16e9c <__fixdfsi+0x4e>

00016eb6 <__floatsidf>:
__floatsidf():
   16eb6:	1141                	addi	sp,sp,-16
   16eb8:	c606                	sw	ra,12(sp)
   16eba:	c422                	sw	s0,8(sp)
   16ebc:	c226                	sw	s1,4(sp)
   16ebe:	cd1d                	beqz	a0,16efc <__floatsidf+0x46>
   16ec0:	41f55793          	srai	a5,a0,0x1f
   16ec4:	00a7c4b3          	xor	s1,a5,a0
   16ec8:	8c9d                	sub	s1,s1,a5
   16eca:	842a                	mv	s0,a0
   16ecc:	8526                	mv	a0,s1
   16ece:	00000097          	auipc	ra,0x0
   16ed2:	4ac080e7          	jalr	1196(ra) # 1737a <__clzsi2>
   16ed6:	41e00693          	li	a3,1054
   16eda:	8e89                	sub	a3,a3,a0
   16edc:	47a9                	li	a5,10
   16ede:	807d                	srli	s0,s0,0x1f
   16ee0:	7ff6f693          	andi	a3,a3,2047
   16ee4:	02a7cd63          	blt	a5,a0,16f1e <__floatsidf+0x68>
   16ee8:	472d                	li	a4,11
   16eea:	8f09                	sub	a4,a4,a0
   16eec:	00e4d7b3          	srl	a5,s1,a4
   16ef0:	0555                	addi	a0,a0,21
   16ef2:	07b2                	slli	a5,a5,0xc
   16ef4:	00a494b3          	sll	s1,s1,a0
   16ef8:	83b1                	srli	a5,a5,0xc
   16efa:	a029                	j	16f04 <__floatsidf+0x4e>
   16efc:	4401                	li	s0,0
   16efe:	4681                	li	a3,0
   16f00:	4781                	li	a5,0
   16f02:	4481                	li	s1,0
   16f04:	07b2                	slli	a5,a5,0xc
   16f06:	06d2                	slli	a3,a3,0x14
   16f08:	83b1                	srli	a5,a5,0xc
   16f0a:	047e                	slli	s0,s0,0x1f
   16f0c:	8fd5                	or	a5,a5,a3
   16f0e:	8fc1                	or	a5,a5,s0
   16f10:	40b2                	lw	ra,12(sp)
   16f12:	4422                	lw	s0,8(sp)
   16f14:	8526                	mv	a0,s1
   16f16:	85be                	mv	a1,a5
   16f18:	4492                	lw	s1,4(sp)
   16f1a:	0141                	addi	sp,sp,16
   16f1c:	8082                	ret
   16f1e:	1555                	addi	a0,a0,-11
   16f20:	00a497b3          	sll	a5,s1,a0
   16f24:	07b2                	slli	a5,a5,0xc
   16f26:	83b1                	srli	a5,a5,0xc
   16f28:	4481                	li	s1,0
   16f2a:	bfe9                	j	16f04 <__floatsidf+0x4e>

00016f2c <__fixunsdfdi>:
__fixunsdfdi():
   16f2c:	0145d793          	srli	a5,a1,0x14
   16f30:	001006b7          	lui	a3,0x100
   16f34:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xe8537>
   16f38:	7ff7f793          	andi	a5,a5,2047
   16f3c:	3fe00613          	li	a2,1022
   16f40:	8f6d                	and	a4,a4,a1
   16f42:	81fd                	srli	a1,a1,0x1f
   16f44:	00f65363          	bge	a2,a5,16f4a <__fixunsdfdi+0x1e>
   16f48:	c581                	beqz	a1,16f50 <__fixunsdfdi+0x24>
   16f4a:	4501                	li	a0,0
   16f4c:	4581                	li	a1,0
   16f4e:	8082                	ret
   16f50:	43e00613          	li	a2,1086
   16f54:	00f65563          	bge	a2,a5,16f5e <__fixunsdfdi+0x32>
   16f58:	557d                	li	a0,-1
   16f5a:	55fd                	li	a1,-1
   16f5c:	8082                	ret
   16f5e:	43200613          	li	a2,1074
   16f62:	00d765b3          	or	a1,a4,a3
   16f66:	00f65c63          	bge	a2,a5,16f7e <__fixunsdfdi+0x52>
   16f6a:	bad78713          	addi	a4,a5,-1107
   16f6e:	bcd78793          	addi	a5,a5,-1075
   16f72:	04074063          	bltz	a4,16fb2 <__fixunsdfdi+0x86>
   16f76:	00e515b3          	sll	a1,a0,a4
   16f7a:	4501                	li	a0,0
   16f7c:	8082                	ret
   16f7e:	43300693          	li	a3,1075
   16f82:	8e9d                	sub	a3,a3,a5
   16f84:	477d                	li	a4,31
   16f86:	00d75b63          	bge	a4,a3,16f9c <__fixunsdfdi+0x70>
   16f8a:	41300713          	li	a4,1043
   16f8e:	40f707b3          	sub	a5,a4,a5
   16f92:	00f5d7b3          	srl	a5,a1,a5
   16f96:	4581                	li	a1,0
   16f98:	853e                	mv	a0,a5
   16f9a:	8082                	ret
   16f9c:	bed78713          	addi	a4,a5,-1043
   16fa0:	00e59733          	sll	a4,a1,a4
   16fa4:	00d55533          	srl	a0,a0,a3
   16fa8:	00a767b3          	or	a5,a4,a0
   16fac:	00d5d5b3          	srl	a1,a1,a3
   16fb0:	b7e5                	j	16f98 <__fixunsdfdi+0x6c>
   16fb2:	46fd                	li	a3,31
   16fb4:	00155713          	srli	a4,a0,0x1
   16fb8:	8e9d                	sub	a3,a3,a5
   16fba:	00d75733          	srl	a4,a4,a3
   16fbe:	00f595b3          	sll	a1,a1,a5
   16fc2:	8dd9                	or	a1,a1,a4
   16fc4:	00f51533          	sll	a0,a0,a5
   16fc8:	8082                	ret

00016fca <__floatundidf>:
__floatundidf():
   16fca:	00b567b3          	or	a5,a0,a1
   16fce:	c3b1                	beqz	a5,17012 <__floatundidf+0x48>
   16fd0:	1141                	addi	sp,sp,-16
   16fd2:	c422                	sw	s0,8(sp)
   16fd4:	c226                	sw	s1,4(sp)
   16fd6:	c04a                	sw	s2,0(sp)
   16fd8:	c606                	sw	ra,12(sp)
   16fda:	84aa                	mv	s1,a0
   16fdc:	892e                	mv	s2,a1
   16fde:	842e                	mv	s0,a1
   16fe0:	c1b9                	beqz	a1,17026 <__floatundidf+0x5c>
   16fe2:	852e                	mv	a0,a1
   16fe4:	00000097          	auipc	ra,0x0
   16fe8:	396080e7          	jalr	918(ra) # 1737a <__clzsi2>
   16fec:	43e00693          	li	a3,1086
   16ff0:	8e89                	sub	a3,a3,a0
   16ff2:	43300793          	li	a5,1075
   16ff6:	06d7c763          	blt	a5,a3,17064 <__floatundidf+0x9a>
   16ffa:	00c91793          	slli	a5,s2,0xc
   16ffe:	462d                	li	a2,11
   17000:	8726                	mv	a4,s1
   17002:	7ff6f693          	andi	a3,a3,2047
   17006:	83b1                	srli	a5,a5,0xc
   17008:	0ca65f63          	bge	a2,a0,170e6 <__floatundidf+0x11c>
   1700c:	ff550613          	addi	a2,a0,-11 # 7ffffff5 <_eusrstack+0x5fff7ff5>
   17010:	a825                	j	17048 <__floatundidf+0x7e>
   17012:	4781                	li	a5,0
   17014:	4681                	li	a3,0
   17016:	07b2                	slli	a5,a5,0xc
   17018:	06d2                	slli	a3,a3,0x14
   1701a:	83b1                	srli	a5,a5,0xc
   1701c:	4701                	li	a4,0
   1701e:	8fd5                	or	a5,a5,a3
   17020:	853a                	mv	a0,a4
   17022:	85be                	mv	a1,a5
   17024:	8082                	ret
   17026:	00000097          	auipc	ra,0x0
   1702a:	354080e7          	jalr	852(ra) # 1737a <__clzsi2>
   1702e:	862a                	mv	a2,a0
   17030:	43e00693          	li	a3,1086
   17034:	02050513          	addi	a0,a0,32
   17038:	8e89                	sub	a3,a3,a0
   1703a:	02a00713          	li	a4,42
   1703e:	7ff6f693          	andi	a3,a3,2047
   17042:	0ca74c63          	blt	a4,a0,1711a <__floatundidf+0x150>
   17046:	0655                	addi	a2,a2,21
   17048:	02b00713          	li	a4,43
   1704c:	8f09                	sub	a4,a4,a0
   1704e:	00c917b3          	sll	a5,s2,a2
   17052:	00e4d733          	srl	a4,s1,a4
   17056:	8f5d                	or	a4,a4,a5
   17058:	00c71793          	slli	a5,a4,0xc
   1705c:	83b1                	srli	a5,a5,0xc
   1705e:	00c49733          	sll	a4,s1,a2
   17062:	a051                	j	170e6 <__floatundidf+0x11c>
   17064:	43600793          	li	a5,1078
   17068:	02d7d963          	bge	a5,a3,1709a <__floatundidf+0xd0>
   1706c:	01850713          	addi	a4,a0,24
   17070:	03850793          	addi	a5,a0,56
   17074:	0c074763          	bltz	a4,17142 <__floatundidf+0x178>
   17078:	00e49633          	sll	a2,s1,a4
   1707c:	4701                	li	a4,0
   1707e:	4421                	li	s0,8
   17080:	8c09                	sub	s0,s0,a0
   17082:	8f51                	or	a4,a4,a2
   17084:	fe040793          	addi	a5,s0,-32 # 7ffe0 <_data_lma+0x68518>
   17088:	00e03733          	snez	a4,a4
   1708c:	0807cf63          	bltz	a5,1712a <__floatundidf+0x160>
   17090:	00f954b3          	srl	s1,s2,a5
   17094:	4781                	li	a5,0
   17096:	8cd9                	or	s1,s1,a4
   17098:	843e                	mv	s0,a5
   1709a:	47a1                	li	a5,8
   1709c:	06a7c163          	blt	a5,a0,170fe <__floatundidf+0x134>
   170a0:	ff800737          	lui	a4,0xff800
   170a4:	177d                	addi	a4,a4,-1
   170a6:	0074f613          	andi	a2,s1,7
   170aa:	00e477b3          	and	a5,s0,a4
   170ae:	c605                	beqz	a2,170d6 <__floatundidf+0x10c>
   170b0:	00f4f613          	andi	a2,s1,15
   170b4:	4591                	li	a1,4
   170b6:	02b60063          	beq	a2,a1,170d6 <__floatundidf+0x10c>
   170ba:	00448613          	addi	a2,s1,4
   170be:	009634b3          	sltu	s1,a2,s1
   170c2:	97a6                	add	a5,a5,s1
   170c4:	00879593          	slli	a1,a5,0x8
   170c8:	0805d963          	bgez	a1,1715a <__floatundidf+0x190>
   170cc:	43f00693          	li	a3,1087
   170d0:	8ff9                	and	a5,a5,a4
   170d2:	8e89                	sub	a3,a3,a0
   170d4:	84b2                	mv	s1,a2
   170d6:	01d79713          	slli	a4,a5,0x1d
   170da:	808d                	srli	s1,s1,0x3
   170dc:	07a6                	slli	a5,a5,0x9
   170de:	8f45                	or	a4,a4,s1
   170e0:	83b1                	srli	a5,a5,0xc
   170e2:	7ff6f693          	andi	a3,a3,2047
   170e6:	40b2                	lw	ra,12(sp)
   170e8:	4422                	lw	s0,8(sp)
   170ea:	07b2                	slli	a5,a5,0xc
   170ec:	06d2                	slli	a3,a3,0x14
   170ee:	83b1                	srli	a5,a5,0xc
   170f0:	8fd5                	or	a5,a5,a3
   170f2:	4492                	lw	s1,4(sp)
   170f4:	4902                	lw	s2,0(sp)
   170f6:	853a                	mv	a0,a4
   170f8:	85be                	mv	a1,a5
   170fa:	0141                	addi	sp,sp,16
   170fc:	8082                	ret
   170fe:	02800713          	li	a4,40
   17102:	ff850613          	addi	a2,a0,-8
   17106:	8f09                	sub	a4,a4,a0
   17108:	00e4d733          	srl	a4,s1,a4
   1710c:	00c417b3          	sll	a5,s0,a2
   17110:	00f76433          	or	s0,a4,a5
   17114:	00c494b3          	sll	s1,s1,a2
   17118:	b761                	j	170a0 <__floatundidf+0xd6>
   1711a:	ff560793          	addi	a5,a2,-11 # ff7ffff5 <_eusrstack+0xdf7f7ff5>
   1711e:	00f497b3          	sll	a5,s1,a5
   17122:	07b2                	slli	a5,a5,0xc
   17124:	83b1                	srli	a5,a5,0xc
   17126:	4701                	li	a4,0
   17128:	bf7d                	j	170e6 <__floatundidf+0x11c>
   1712a:	467d                	li	a2,31
   1712c:	00191793          	slli	a5,s2,0x1
   17130:	8e01                	sub	a2,a2,s0
   17132:	00c797b3          	sll	a5,a5,a2
   17136:	0084d4b3          	srl	s1,s1,s0
   1713a:	8cdd                	or	s1,s1,a5
   1713c:	008957b3          	srl	a5,s2,s0
   17140:	bf99                	j	17096 <__floatundidf+0xcc>
   17142:	467d                	li	a2,31
   17144:	8e1d                	sub	a2,a2,a5
   17146:	0014d713          	srli	a4,s1,0x1
   1714a:	00c75733          	srl	a4,a4,a2
   1714e:	00f91633          	sll	a2,s2,a5
   17152:	8e59                	or	a2,a2,a4
   17154:	00f49733          	sll	a4,s1,a5
   17158:	b71d                	j	1707e <__floatundidf+0xb4>
   1715a:	84b2                	mv	s1,a2
   1715c:	bfad                	j	170d6 <__floatundidf+0x10c>

0001715e <__extendsfdf2>:
__extendsfdf2():
   1715e:	01755713          	srli	a4,a0,0x17
   17162:	0ff77713          	andi	a4,a4,255
   17166:	1141                	addi	sp,sp,-16
   17168:	00170793          	addi	a5,a4,1 # ff800001 <_eusrstack+0xdf7f8001>
   1716c:	c422                	sw	s0,8(sp)
   1716e:	c226                	sw	s1,4(sp)
   17170:	00951413          	slli	s0,a0,0x9
   17174:	c606                	sw	ra,12(sp)
   17176:	0fe7f793          	andi	a5,a5,254
   1717a:	8025                	srli	s0,s0,0x9
   1717c:	01f55493          	srli	s1,a0,0x1f
   17180:	c785                	beqz	a5,171a8 <__extendsfdf2+0x4a>
   17182:	00345793          	srli	a5,s0,0x3
   17186:	38070713          	addi	a4,a4,896
   1718a:	0476                	slli	s0,s0,0x1d
   1718c:	07b2                	slli	a5,a5,0xc
   1718e:	0752                	slli	a4,a4,0x14
   17190:	83b1                	srli	a5,a5,0xc
   17192:	01f49513          	slli	a0,s1,0x1f
   17196:	8fd9                	or	a5,a5,a4
   17198:	8fc9                	or	a5,a5,a0
   1719a:	40b2                	lw	ra,12(sp)
   1719c:	8522                	mv	a0,s0
   1719e:	4422                	lw	s0,8(sp)
   171a0:	4492                	lw	s1,4(sp)
   171a2:	85be                	mv	a1,a5
   171a4:	0141                	addi	sp,sp,16
   171a6:	8082                	ret
   171a8:	eb1d                	bnez	a4,171de <__extendsfdf2+0x80>
   171aa:	c831                	beqz	s0,171fe <__extendsfdf2+0xa0>
   171ac:	8522                	mv	a0,s0
   171ae:	00000097          	auipc	ra,0x0
   171b2:	1cc080e7          	jalr	460(ra) # 1737a <__clzsi2>
   171b6:	47a9                	li	a5,10
   171b8:	04a7c663          	blt	a5,a0,17204 <__extendsfdf2+0xa6>
   171bc:	472d                	li	a4,11
   171be:	8f09                	sub	a4,a4,a0
   171c0:	01550793          	addi	a5,a0,21
   171c4:	00e45733          	srl	a4,s0,a4
   171c8:	00f41433          	sll	s0,s0,a5
   171cc:	00c71793          	slli	a5,a4,0xc
   171d0:	38900713          	li	a4,905
   171d4:	8f09                	sub	a4,a4,a0
   171d6:	83b1                	srli	a5,a5,0xc
   171d8:	7ff77713          	andi	a4,a4,2047
   171dc:	bf45                	j	1718c <__extendsfdf2+0x2e>
   171de:	cc01                	beqz	s0,171f6 <__extendsfdf2+0x98>
   171e0:	00345713          	srli	a4,s0,0x3
   171e4:	000807b7          	lui	a5,0x80
   171e8:	8fd9                	or	a5,a5,a4
   171ea:	07b2                	slli	a5,a5,0xc
   171ec:	0476                	slli	s0,s0,0x1d
   171ee:	83b1                	srli	a5,a5,0xc
   171f0:	7ff00713          	li	a4,2047
   171f4:	bf61                	j	1718c <__extendsfdf2+0x2e>
   171f6:	7ff00713          	li	a4,2047
   171fa:	4781                	li	a5,0
   171fc:	bf41                	j	1718c <__extendsfdf2+0x2e>
   171fe:	4701                	li	a4,0
   17200:	4781                	li	a5,0
   17202:	b769                	j	1718c <__extendsfdf2+0x2e>
   17204:	ff550713          	addi	a4,a0,-11
   17208:	00e41733          	sll	a4,s0,a4
   1720c:	4401                	li	s0,0
   1720e:	bf7d                	j	171cc <__extendsfdf2+0x6e>

00017210 <__truncdfsf2>:
__truncdfsf2():
   17210:	0145d693          	srli	a3,a1,0x14
   17214:	00c59793          	slli	a5,a1,0xc
   17218:	7ff6f693          	andi	a3,a3,2047
   1721c:	83b1                	srli	a5,a5,0xc
   1721e:	00168613          	addi	a2,a3,1
   17222:	078e                	slli	a5,a5,0x3
   17224:	01d55713          	srli	a4,a0,0x1d
   17228:	7fe67613          	andi	a2,a2,2046
   1722c:	81fd                	srli	a1,a1,0x1f
   1722e:	8f5d                	or	a4,a4,a5
   17230:	00351893          	slli	a7,a0,0x3
   17234:	ce35                	beqz	a2,172b0 <__truncdfsf2+0xa0>
   17236:	c8068813          	addi	a6,a3,-896
   1723a:	0fe00793          	li	a5,254
   1723e:	0107dd63          	bge	a5,a6,17258 <__truncdfsf2+0x48>
   17242:	4781                	li	a5,0
   17244:	00979513          	slli	a0,a5,0x9
   17248:	0ff00693          	li	a3,255
   1724c:	06de                	slli	a3,a3,0x17
   1724e:	8125                	srli	a0,a0,0x9
   17250:	05fe                	slli	a1,a1,0x1f
   17252:	8d55                	or	a0,a0,a3
   17254:	8d4d                	or	a0,a0,a1
   17256:	8082                	ret
   17258:	0b005563          	blez	a6,17302 <__truncdfsf2+0xf2>
   1725c:	00651793          	slli	a5,a0,0x6
   17260:	070e                	slli	a4,a4,0x3
   17262:	00f037b3          	snez	a5,a5
   17266:	8fd9                	or	a5,a5,a4
   17268:	01d8d893          	srli	a7,a7,0x1d
   1726c:	0117e7b3          	or	a5,a5,a7
   17270:	0077f713          	andi	a4,a5,7
   17274:	10070163          	beqz	a4,17376 <__truncdfsf2+0x166>
   17278:	00f7f713          	andi	a4,a5,15
   1727c:	4691                	li	a3,4
   1727e:	00d70363          	beq	a4,a3,17284 <__truncdfsf2+0x74>
   17282:	0791                	addi	a5,a5,4
   17284:	04000737          	lui	a4,0x4000
   17288:	8f7d                	and	a4,a4,a5
   1728a:	c775                	beqz	a4,17376 <__truncdfsf2+0x166>
   1728c:	00180713          	addi	a4,a6,1
   17290:	0ff00613          	li	a2,255
   17294:	0ff77693          	andi	a3,a4,255
   17298:	fac705e3          	beq	a4,a2,17242 <__truncdfsf2+0x32>
   1729c:	079a                	slli	a5,a5,0x6
   1729e:	83a5                	srli	a5,a5,0x9
   172a0:	00979513          	slli	a0,a5,0x9
   172a4:	06de                	slli	a3,a3,0x17
   172a6:	8125                	srli	a0,a0,0x9
   172a8:	05fe                	slli	a1,a1,0x1f
   172aa:	8d55                	or	a0,a0,a3
   172ac:	8d4d                	or	a0,a0,a1
   172ae:	8082                	ret
   172b0:	011767b3          	or	a5,a4,a7
   172b4:	ee99                	bnez	a3,172d2 <__truncdfsf2+0xc2>
   172b6:	cf85                	beqz	a5,172ee <__truncdfsf2+0xde>
   172b8:	4795                	li	a5,5
   172ba:	079a                	slli	a5,a5,0x6
   172bc:	83a5                	srli	a5,a5,0x9
   172be:	00979513          	slli	a0,a5,0x9
   172c2:	0ff6f693          	andi	a3,a3,255
   172c6:	06de                	slli	a3,a3,0x17
   172c8:	8125                	srli	a0,a0,0x9
   172ca:	05fe                	slli	a1,a1,0x1f
   172cc:	8d55                	or	a0,a0,a3
   172ce:	8d4d                	or	a0,a0,a1
   172d0:	8082                	ret
   172d2:	dba5                	beqz	a5,17242 <__truncdfsf2+0x32>
   172d4:	004007b7          	lui	a5,0x400
   172d8:	00979513          	slli	a0,a5,0x9
   172dc:	0ff00693          	li	a3,255
   172e0:	06de                	slli	a3,a3,0x17
   172e2:	4581                	li	a1,0
   172e4:	8125                	srli	a0,a0,0x9
   172e6:	05fe                	slli	a1,a1,0x1f
   172e8:	8d55                	or	a0,a0,a3
   172ea:	8d4d                	or	a0,a0,a1
   172ec:	8082                	ret
   172ee:	4781                	li	a5,0
   172f0:	00979513          	slli	a0,a5,0x9
   172f4:	4681                	li	a3,0
   172f6:	06de                	slli	a3,a3,0x17
   172f8:	8125                	srli	a0,a0,0x9
   172fa:	05fe                	slli	a1,a1,0x1f
   172fc:	8d55                	or	a0,a0,a3
   172fe:	8d4d                	or	a0,a0,a1
   17300:	8082                	ret
   17302:	57a5                	li	a5,-23
   17304:	04f84863          	blt	a6,a5,17354 <__truncdfsf2+0x144>
   17308:	47f9                	li	a5,30
   1730a:	00800637          	lui	a2,0x800
   1730e:	410787b3          	sub	a5,a5,a6
   17312:	457d                	li	a0,31
   17314:	8e59                	or	a2,a2,a4
   17316:	04f55163          	bge	a0,a5,17358 <__truncdfsf2+0x148>
   1731a:	5779                	li	a4,-2
   1731c:	41070733          	sub	a4,a4,a6
   17320:	02000513          	li	a0,32
   17324:	00e65733          	srl	a4,a2,a4
   17328:	00a78863          	beq	a5,a0,17338 <__truncdfsf2+0x128>
   1732c:	ca268693          	addi	a3,a3,-862
   17330:	00d616b3          	sll	a3,a2,a3
   17334:	00d8e8b3          	or	a7,a7,a3
   17338:	011037b3          	snez	a5,a7
   1733c:	8fd9                	or	a5,a5,a4
   1733e:	0077f713          	andi	a4,a5,7
   17342:	4801                	li	a6,0
   17344:	fb15                	bnez	a4,17278 <__truncdfsf2+0x68>
   17346:	00579713          	slli	a4,a5,0x5
   1734a:	4685                	li	a3,1
   1734c:	f40748e3          	bltz	a4,1729c <__truncdfsf2+0x8c>
   17350:	4681                	li	a3,0
   17352:	b7a5                	j	172ba <__truncdfsf2+0xaa>
   17354:	4681                	li	a3,0
   17356:	b78d                	j	172b8 <__truncdfsf2+0xa8>
   17358:	c8268693          	addi	a3,a3,-894
   1735c:	00d89733          	sll	a4,a7,a3
   17360:	00e03733          	snez	a4,a4
   17364:	00d616b3          	sll	a3,a2,a3
   17368:	00f8d8b3          	srl	a7,a7,a5
   1736c:	00d767b3          	or	a5,a4,a3
   17370:	00f8e7b3          	or	a5,a7,a5
   17374:	b7e9                	j	1733e <__truncdfsf2+0x12e>
   17376:	86c2                	mv	a3,a6
   17378:	b789                	j	172ba <__truncdfsf2+0xaa>

0001737a <__clzsi2>:
__clzsi2():
   1737a:	67c1                	lui	a5,0x10
   1737c:	02f57e63          	bgeu	a0,a5,173b8 <__clzsi2+0x3e>
   17380:	0ff00793          	li	a5,255
   17384:	02000713          	li	a4,32
   17388:	00a7ec63          	bltu	a5,a0,173a0 <__clzsi2+0x26>
   1738c:	00000797          	auipc	a5,0x0
   17390:	63c78793          	addi	a5,a5,1596 # 179c8 <__clz_tab>
   17394:	97aa                	add	a5,a5,a0
   17396:	0007c503          	lbu	a0,0(a5)
   1739a:	40a70533          	sub	a0,a4,a0
   1739e:	8082                	ret
   173a0:	8121                	srli	a0,a0,0x8
   173a2:	00000797          	auipc	a5,0x0
   173a6:	62678793          	addi	a5,a5,1574 # 179c8 <__clz_tab>
   173aa:	97aa                	add	a5,a5,a0
   173ac:	0007c503          	lbu	a0,0(a5)
   173b0:	4761                	li	a4,24
   173b2:	40a70533          	sub	a0,a4,a0
   173b6:	8082                	ret
   173b8:	010007b7          	lui	a5,0x1000
   173bc:	00f56e63          	bltu	a0,a5,173d8 <__clzsi2+0x5e>
   173c0:	8161                	srli	a0,a0,0x18
   173c2:	00000797          	auipc	a5,0x0
   173c6:	60678793          	addi	a5,a5,1542 # 179c8 <__clz_tab>
   173ca:	97aa                	add	a5,a5,a0
   173cc:	0007c503          	lbu	a0,0(a5)
   173d0:	4721                	li	a4,8
   173d2:	40a70533          	sub	a0,a4,a0
   173d6:	8082                	ret
   173d8:	8141                	srli	a0,a0,0x10
   173da:	00000797          	auipc	a5,0x0
   173de:	5ee78793          	addi	a5,a5,1518 # 179c8 <__clz_tab>
   173e2:	97aa                	add	a5,a5,a0
   173e4:	0007c503          	lbu	a0,0(a5)
   173e8:	4741                	li	a4,16
   173ea:	40a70533          	sub	a0,a4,a0
   173ee:	8082                	ret

000173f0 <strlen>:
strlen():
   173f0:	87aa                	mv	a5,a0
   173f2:	0785                	addi	a5,a5,1
   173f4:	fff7c703          	lbu	a4,-1(a5)
   173f8:	ff6d                	bnez	a4,173f2 <strlen+0x2>
   173fa:	40a78533          	sub	a0,a5,a0
   173fe:	157d                	addi	a0,a0,-1
   17400:	8082                	ret
   17402:	0000                	unimp
   17404:	bd90                	fsd	fa2,56(a1)
   17406:	ffff                	0xffff
   17408:	bda4                	fsd	fs1,120(a1)
   1740a:	ffff                	0xffff
   1740c:	bdb4                	fsd	fa3,120(a1)
   1740e:	ffff                	0xffff
   17410:	bdc4                	fsd	fs1,184(a1)
   17412:	ffff                	0xffff
   17414:	bdd4                	fsd	fa3,184(a1)
   17416:	ffff                	0xffff
   17418:	bde4                	fsd	fs1,248(a1)
   1741a:	ffff                	0xffff
   1741c:	bd9e                	fsd	ft7,248(sp)
   1741e:	ffff                	0xffff
   17420:	bd9e                	fsd	ft7,248(sp)
   17422:	ffff                	0xffff
   17424:	bdf4                	fsd	fa3,248(a1)
   17426:	ffff                	0xffff
   17428:	be06                	fsd	ft1,312(sp)
   1742a:	ffff                	0xffff
   1742c:	bd9e                	fsd	ft7,248(sp)
   1742e:	ffff                	0xffff
   17430:	bd9e                	fsd	ft7,248(sp)
   17432:	ffff                	0xffff
   17434:	be18                	fsd	fa4,56(a2)
   17436:	ffff                	0xffff
   17438:	be28                	fsd	fa0,120(a2)
   1743a:	ffff                	0xffff
   1743c:	bd9e                	fsd	ft7,248(sp)
   1743e:	ffff                	0xffff
   17440:	bd9e                	fsd	ft7,248(sp)
   17442:	ffff                	0xffff
   17444:	be38                	fsd	fa4,120(a2)
   17446:	ffff                	0xffff
   17448:	be56                	fsd	fs5,312(sp)
   1744a:	ffff                	0xffff
	...
   17454:	0000                	unimp
   17456:	0000403b          	0x403b
   1745a:	0000                	unimp
   1745c:	0000                	unimp
   1745e:	4039                	c.li	zero,14
   17460:	0000                	unimp
   17462:	0000                	unimp
   17464:	0000                	unimp
   17466:	3f40                	fld	fs0,184(a4)
   17468:	cccd                	beqz	s1,17522 <strlen+0x132>
   1746a:	cccc                	sw	a1,28(s1)
   1746c:	cccc                	sw	a1,28(s1)
   1746e:	3ff0                	fld	fa2,248(a5)
   17470:	0000                	unimp
   17472:	0000                	unimp
   17474:	0000                	unimp
   17476:	3f50                	fld	fa2,184(a4)
   17478:	0000                	unimp
   1747a:	0000                	unimp
   1747c:	0000                	unimp
   1747e:	3ff0                	fld	fa2,248(a5)
   17480:	0000                	unimp
   17482:	0000                	unimp
   17484:	0000                	unimp
   17486:	3f60                	fld	fs0,248(a4)
   17488:	0000                	unimp
   1748a:	0000                	unimp
   1748c:	0000                	unimp
   1748e:	4008                	lw	a0,0(s0)
   17490:	0000                	unimp
   17492:	0000                	unimp
   17494:	fe00                	fsw	fs0,56(a2)
   17496:	666640af          	0x666640af
   1749a:	6666                	flw	fa2,88(sp)
   1749c:	6666                	flw	fa2,88(sp)
   1749e:	400a                	0x400a
   174a0:	cccd                	beqz	s1,1755a <strlen+0x16a>
   174a2:	cccc                	sw	a1,28(s1)
   174a4:	cccc                	sw	a1,28(s1)
   174a6:	4020                	lw	s0,64(s0)
   174a8:	0000                	unimp
   174aa:	0000                	unimp
   174ac:	0000                	unimp
   174ae:	3f30                	fld	fa2,120(a4)
   174b0:	cccd                	beqz	s1,1756a <strlen+0x17a>
   174b2:	cccc                	sw	a1,28(s1)
   174b4:	cccc                	sw	a1,28(s1)
   174b6:	4010                	lw	a2,0(s0)
   174b8:	2d2d                	jal	17af2 <_data_lma+0x2a>
   174ba:	2d2d                	jal	17af4 <_data_lma+0x2c>
   174bc:	2d2d                	jal	17af6 <_data_lma+0x2e>
   174be:	2d2d                	jal	17af8 <_data_lma+0x30>
   174c0:	2d2d                	jal	17afa <_data_lma+0x32>
   174c2:	2d2d                	jal	17afc <_data_lma+0x34>
   174c4:	2d2d                	jal	17afe <_data_lma+0x36>
   174c6:	2d2d                	jal	17b00 <_data_lma+0x38>
   174c8:	2d2d                	jal	17b02 <_data_lma+0x3a>
   174ca:	2d2d                	jal	17b04 <_data_lma+0x3c>
   174cc:	2d2d                	jal	17b06 <_data_lma+0x3e>
   174ce:	2d2d                	jal	17b08 <_data_lma+0x40>
   174d0:	2d2d                	jal	17b0a <_data_lma+0x42>
   174d2:	2d2d                	jal	17b0c <_data_lma+0x44>
   174d4:	2d2d                	jal	17b0e <_data_lma+0x46>
   174d6:	2d2d                	jal	17b10 <_data_lma+0x48>
   174d8:	2d2d                	jal	17b12 <_data_lma+0x4a>
   174da:	2d2d                	jal	17b14 <_data_lma+0x4c>
   174dc:	2d2d                	jal	17b16 <_data_lma+0x4e>
   174de:	2d2d                	jal	17b18 <_data_lma+0x50>
   174e0:	2d2d                	jal	17b1a <_data_lma+0x52>
   174e2:	2d2d                	jal	17b1c <_data_lma+0x54>
   174e4:	2d2d                	jal	17b1e <_data_lma+0x56>
   174e6:	2d2d                	jal	17b20 <_data_lma+0x58>
   174e8:	2d2d                	jal	17b22 <_data_lma+0x5a>
   174ea:	2d2d                	jal	17b24 <_data_lma+0x5c>
   174ec:	2d2d                	jal	17b26 <_data_lma+0x5e>
   174ee:	2d2d                	jal	17b28 <_data_lma+0x60>
   174f0:	2d2d                	jal	17b2a <_data_lma+0x62>
   174f2:	0a2d                	addi	s4,s4,11
   174f4:	0000                	unimp
   174f6:	0000                	unimp
   174f8:	efa1                	bnez	a5,17550 <strlen+0x160>
   174fa:	f0bd                	bnez	s1,17460 <strlen+0x70>
   174fc:	f9ba                	fsw	fa4,240(sp)
   174fe:	abc2                	fsd	fa6,464(sp)
   17500:	e1cc                	fsw	fa1,4(a1)
   17502:	beca                	fsd	fs2,376(sp)
   17504:	efa1                	bnez	a5,1755c <strlen+0x16c>
   17506:	2020                	fld	fs0,64(s0)
   17508:	2020                	fld	fs0,64(s0)
   1750a:	2020                	fld	fs0,64(s0)
   1750c:	2020                	fld	fs0,64(s0)
   1750e:	2020                	fld	fs0,64(s0)
   17510:	2020                	fld	fs0,64(s0)
   17512:	2020                	fld	fs0,64(s0)
   17514:	2020                	fld	fs0,64(s0)
   17516:	2020                	fld	fs0,64(s0)
   17518:	2020                	fld	fs0,64(s0)
   1751a:	2020                	fld	fs0,64(s0)
   1751c:	2020                	fld	fs0,64(s0)
   1751e:	2020                	fld	fs0,64(s0)
   17520:	2020                	fld	fs0,64(s0)
   17522:	2020                	fld	fs0,64(s0)
   17524:	2020                	fld	fs0,64(s0)
   17526:	2020                	fld	fs0,64(s0)
   17528:	2020                	fld	fs0,64(s0)
   1752a:	2020                	fld	fs0,64(s0)
   1752c:	2020                	fld	fs0,64(s0)
   1752e:	0920                	addi	s0,sp,152
   17530:	2020                	fld	fs0,64(s0)
   17532:	2020                	fld	fs0,64(s0)
   17534:	000a                	c.slli	zero,0x2
   17536:	0000                	unimp
   17538:	bea1                	j	17090 <__floatundidf+0xc6>
   1753a:	d0d6                	sw	s5,96(sp)
   1753c:	c4ce                	sw	s3,72(sp)
   1753e:	c6b3fbc3          	fmadd.q	fs7,ft7,fa1,fs8
   17542:	bfa1                	j	1749a <strlen+0xaa>
   17544:	4441                	li	s0,16
   17546:	bcb9b943          	0xbcb9b943
   1754a:	b5fe                	fsd	ft11,232(sp)
   1754c:	cac4                	sw	s1,20(a3)
   1754e:	b3e4                	fsd	fs1,224(a5)
   17550:	b2f6                	fsd	ft9,352(sp)
   17552:	cae2                	sw	s8,84(sp)
   17554:	b7d4                	fsd	fa3,168(a5)
   17556:	b7bd                	j	174c4 <strlen+0xd4>
   17558:	09a8                	addi	a0,sp,216
   1755a:	0909                	addi	s2,s2,2
   1755c:	2020                	fld	fs0,64(s0)
   1755e:	2020                	fld	fs0,64(s0)
   17560:	2020                	fld	fs0,64(s0)
   17562:	2020                	fld	fs0,64(s0)
   17564:	2009                	jal	17566 <strlen+0x176>
   17566:	2020                	fld	fs0,64(s0)
   17568:	0a20                	addi	s0,sp,280
   1756a:	0000                	unimp
   1756c:	a331a8a3          	sw	s3,-1487(gp) # 200058c1 <_ebss+0x209>
   17570:	c4a9                	beqz	s1,175ba <strlen+0x1ca>
   17572:	a3c4b5bf 434441ba 	0x434441baa3c4b5bf
   1757a:	a5b5                	j	17be6 <_data_lma+0x11e>
   1757c:	cbb6                	sw	a3,212(sp)
   1757e:	e4ca                	fsw	fs2,72(sp)
   17580:	ebc8                	fsw	fa0,20(a5)
   17582:	eeb2ebd3          	0xeeb2ebd3
   17586:	e4cad6b7          	lui	a3,0xe4cad
   1758a:	ebc8                	fsw	fa0,20(a5)
   1758c:	e2b2                	fsw	fa2,68(sp)
   1758e:	d4ca                	sw	s2,104(sp)
   17590:	2020                	fld	fs0,64(s0)
   17592:	2020                	fld	fs0,64(s0)
   17594:	2020                	fld	fs0,64(s0)
   17596:	2020                	fld	fs0,64(s0)
   17598:	2020                	fld	fs0,64(s0)
   1759a:	2020                	fld	fs0,64(s0)
   1759c:	2020                	fld	fs0,64(s0)
   1759e:	2020                	fld	fs0,64(s0)
   175a0:	2020                	fld	fs0,64(s0)
   175a2:	2020                	fld	fs0,64(s0)
   175a4:	000a                	c.slli	zero,0x2
   175a6:	0000                	unimp
   175a8:	a332a8a3          	sw	s3,-1487(t0)
   175ac:	b5a9                	j	173f6 <strlen+0x6>
   175ae:	b6a5                	j	17116 <__floatundidf+0x14c>
   175b0:	25baa3cb          	0x25baa3cb
   175b4:	c4a2a173          	csrrs	sp,0xc4a,t0
   175b8:	b2da                	fsd	fs6,352(sp)
   175ba:	b6c2cebf b8abb4c8 	0xb8abb4c8b6c2cebf
   175c2:	c6d0                	sw	a2,12(a3)
   175c4:	00000af7          	0xaf7
   175c8:	2020                	fld	fs0,64(s0)
   175ca:	2020                	fld	fs0,64(s0)
   175cc:	b220                	fsd	fs0,96(a2)
   175ce:	b7ee                	fsd	fs11,488(sp)
   175d0:	a3d6                	fsd	fs5,448(sp)
   175d2:	25ba                	fld	fa1,392(sp)
   175d4:	25a8a373          	csrrs	t1,0x25a,a7
   175d8:	25a2a173          	csrrs	sp,0x25a,t0
   175dc:	0aa9a373          	csrrs	t1,0xaa,s3
   175e0:	0000                	unimp
   175e2:	0000                	unimp
   175e4:	a333a8a3          	sw	s3,-1487(t2)
   175e8:	b2a9                	j	16f32 <__fixunsdfdi+0x6>
   175ea:	cae2                	sw	s8,84(sp)
   175ec:	b7d4                	fsd	fa3,168(a5)
   175ee:	b7bd                	j	1755c <strlen+0x16c>
   175f0:	a3a8                	fsd	fa0,64(a5)
   175f2:	b5ba                	fsd	fa4,232(sp)
   175f4:	b6a5                	j	1715c <__floatundidf+0x192>
   175f6:	cabaa3cb          	fnmsub.d	ft7,fs5,fa1,fs9,rdn
   175fa:	c3d6                	sw	s5,196(sp)
   175fc:	d0fe                	sw	t6,96(sp)
   175fe:	c6be                	sw	a5,76(sp)
   17600:	b1ac                	fsd	fa1,96(a1)
   17602:	c3ed                	beqz	a5,176e4 <strlen+0x2f4>
   17604:	a3e6                	fsd	fs9,448(sp)
   17606:	41ac                	lw	a1,64(a1)
   17608:	b5d6442f          	0xb5d6442f
   1760c:	f6d4                	fsw	fa3,44(a3)
   1760e:	f3b4                	fsw	fa3,96(a5)
   17610:	bbb2aca3          	sw	s11,-1095(t0)
   17614:	aad2                	fsd	fs4,336(sp)
   17616:	bdb5fec3          	0xbdb5fec3
   1761a:	fdd2                	fsw	fs4,248(sp)
   1761c:	c5bd                	beqz	a1,1768a <strlen+0x29a>
   1761e:	b2beaca3          	sw	a1,-1223(t4)
   17622:	e7b5                	bnez	a5,1768e <strlen+0x29e>
   17624:	dcc4c9bf b5bbf0cb 	0xb5bbf0cbdcc4c9bf
   1762c:	bed0                	fsd	fa2,184(a3)
   1762e:	acc6                	fsd	fa7,88(sp)
   17630:	000a                	c.slli	zero,0x2
   17632:	0000                	unimp
   17634:	2020                	fld	fs0,64(s0)
   17636:	2020                	fld	fs0,64(s0)
   17638:	2020                	fld	fs0,64(s0)
   1763a:	2020                	fld	fs0,64(s0)
   1763c:	2020                	fld	fs0,64(s0)
   1763e:	2020                	fld	fs0,64(s0)
   17640:	2020                	fld	fs0,64(s0)
   17642:	2020                	fld	fs0,64(s0)
   17644:	2020                	fld	fs0,64(s0)
   17646:	2020                	fld	fs0,64(s0)
   17648:	abbd                	j	17bc6 <_data_lma+0xfe>
   1764a:	fdd2                	fsw	fs4,248(sp)
   1764c:	c5bd                	beqz	a1,176ba <strlen+0x2ca>
   1764e:	7325                	lui	t1,0xfffe9
   17650:	f0b1d6b7          	lui	a3,0xf0b1d
   17654:	d3bd                	beqz	a5,175ba <strlen+0x1ca>
   17656:	d8b5                	beqz	s1,175ca <strlen+0x1da>
   17658:	a2a1                	j	177a0 <strlen+0x3b0>
   1765a:	56332e33          	0x56332e33
   1765e:	a2a1                	j	177a6 <strlen+0x3b6>
   17660:	5635                	li	a2,-19
   17662:	dbb9aca3          	sw	s11,-583(s3)
   17666:	ecb2                	fsw	fa2,88(sp)
   17668:	7325                	lui	t1,0xfffe9
   1766a:	f6bfe9c7          	fmsub.q	fs3,ft11,fa1,ft10,unknown
   1766e:	000a                	c.slli	zero,0x2
   17670:	2020                	fld	fs0,64(s0)
   17672:	2020                	fld	fs0,64(s0)
   17674:	2020                	fld	fs0,64(s0)
   17676:	2020                	fld	fs0,64(s0)
   17678:	2020                	fld	fs0,64(s0)
   1767a:	2020                	fld	fs0,64(s0)
   1767c:	2020                	fld	fs0,64(s0)
   1767e:	eeb2                	fsw	fa2,92(sp)
   17680:	baa3d6b7          	lui	a3,0xbaa3d
   17684:	abbd                	j	17c02 <_data_lma+0x13a>
   17686:	fdd2                	fsw	fs4,248(sp)
   17688:	c5bd                	beqz	a1,176f6 <strlen+0x306>
   1768a:	7325                	lui	t1,0xfffe9
   1768c:	d3bd                	beqz	a5,175f2 <strlen+0x202>
   1768e:	d8b5                	beqz	s1,17602 <strlen+0x212>
   17690:	a2a1                	j	177d8 <strlen+0x3e8>
   17692:	7325                	lui	t1,0xfffe9
   17694:	d3bd                	beqz	a5,175fa <strlen+0x20a>
   17696:	56332e33          	0x56332e33
   1769a:	b92c                	fsd	fa1,112(a0)
   1769c:	25ecb2db          	0x25ecb2db
   176a0:	bfe9c773          	0xbfe9c773
   176a4:	0af6                	slli	s5,s5,0x1d
   176a6:	0000                	unimp
   176a8:	2020                	fld	fs0,64(s0)
   176aa:	2020                	fld	fs0,64(s0)
   176ac:	2020                	fld	fs0,64(s0)
   176ae:	2020                	fld	fs0,64(s0)
   176b0:	2020                	fld	fs0,64(s0)
   176b2:	2020                	fld	fs0,64(s0)
   176b4:	2020                	fld	fs0,64(s0)
   176b6:	2020                	fld	fs0,64(s0)
   176b8:	2020                	fld	fs0,64(s0)
   176ba:	2020                	fld	fs0,64(s0)
   176bc:	abbd                	j	17c3a <_data_lma+0x172>
   176be:	fdd2                	fsw	fs4,248(sp)
   176c0:	c5bd                	beqz	a1,1772e <strlen+0x33e>
   176c2:	7325                	lui	t1,0xfffe9
   176c4:	d3bd                	beqz	a5,1762a <strlen+0x23a>
   176c6:	d8b5                	beqz	s1,1763a <strlen+0x24a>
   176c8:	a2a1                	j	17810 <strlen+0x420>
   176ca:	7325                	lui	t1,0xfffe9
   176cc:	d3bd                	beqz	a5,17632 <strlen+0x242>
   176ce:	56332e33          	0x56332e33
   176d2:	b92c                	fsd	fa1,112(a0)
   176d4:	25ecb2db          	0x25ecb2db
   176d8:	bfe9c773          	0xbfe9c773
   176dc:	0af6                	slli	s5,s5,0x1d
   176de:	0000                	unimp
   176e0:	2020                	fld	fs0,64(s0)
   176e2:	2020                	fld	fs0,64(s0)
   176e4:	2020                	fld	fs0,64(s0)
   176e6:	2020                	fld	fs0,64(s0)
   176e8:	2020                	fld	fs0,64(s0)
   176ea:	2020                	fld	fs0,64(s0)
   176ec:	2020                	fld	fs0,64(s0)
   176ee:	2020                	fld	fs0,64(s0)
   176f0:	2020                	fld	fs0,64(s0)
   176f2:	2020                	fld	fs0,64(s0)
   176f4:	abbd                	j	17c72 <_data_lma+0x1aa>
   176f6:	fdd2                	fsw	fs4,248(sp)
   176f8:	c5bd                	beqz	a1,17766 <strlen+0x376>
   176fa:	7325                	lui	t1,0xfffe9
   176fc:	a2a1                	j	17844 <strlen+0x454>
   176fe:	7325                	lui	t1,0xfffe9
   17700:	ccb6                	sw	a3,88(sp)
   17702:	d3bd                	beqz	a5,17668 <strlen+0x278>
   17704:	b92c                	fsd	fa1,112(a0)
   17706:	25ecb2db          	0x25ecb2db
   1770a:	bfe9c773          	0xbfe9c773
   1770e:	20f6                	fld	ft1,344(sp)
   17710:	2020                	fld	fs0,64(s0)
   17712:	0a20                	addi	s0,sp,280
   17714:	0000                	unimp
   17716:	0000                	unimp
   17718:	2d2d                	jal	17d52 <_data_lma+0x28a>
   1771a:	2d2d                	jal	17d54 <_data_lma+0x28c>
   1771c:	2d2d                	jal	17d56 <_data_lma+0x28e>
   1771e:	2d2d                	jal	17d58 <_data_lma+0x290>
   17720:	2d2d                	jal	17d5a <_data_lma+0x292>
   17722:	2d2d                	jal	17d5c <_data_lma+0x294>
   17724:	2d2d                	jal	17d5e <_data_lma+0x296>
   17726:	2d2d                	jal	17d60 <_data_lma+0x298>
   17728:	2d2d                	jal	17d62 <_data_lma+0x29a>
   1772a:	2d2d                	jal	17d64 <_data_lma+0x29c>
   1772c:	2d2d                	jal	17d66 <_data_lma+0x29e>
   1772e:	2d2d                	jal	17d68 <_data_lma+0x2a0>
   17730:	2d2d                	jal	17d6a <_data_lma+0x2a2>
   17732:	2d2d                	jal	17d6c <_data_lma+0x2a4>
   17734:	2d2d                	jal	17d6e <_data_lma+0x2a6>
   17736:	2d2d                	jal	17d70 <_data_lma+0x2a8>
   17738:	2d2d                	jal	17d72 <_data_lma+0x2aa>
   1773a:	2d2d                	jal	17d74 <_data_lma+0x2ac>
   1773c:	2d2d                	jal	17d76 <_data_lma+0x2ae>
   1773e:	2d2d                	jal	17d78 <_data_lma+0x2b0>
   17740:	2d2d                	jal	17d7a <_data_lma+0x2b2>
   17742:	2d2d                	jal	17d7c <_data_lma+0x2b4>
   17744:	2d2d                	jal	17d7e <_data_lma+0x2b6>
   17746:	2d2d                	jal	17d80 <_data_lma+0x2b8>
   17748:	2d2d                	jal	17d82 <_data_lma+0x2ba>
   1774a:	2d2d                	jal	17d84 <_data_lma+0x2bc>
   1774c:	2d2d                	jal	17d86 <_data_lma+0x2be>
   1774e:	2d2d                	jal	17d88 <_data_lma+0x2c0>
   17750:	2d2d                	jal	17d8a <_data_lma+0x2c2>
   17752:	2d2d                	jal	17d8c <_data_lma+0x2c4>
   17754:	000a                	c.slli	zero,0x2
   17756:	0000                	unimp
   17758:	c020                	sw	s0,64(s0)
   1775a:	b5b6                	fsd	fa3,232(sp)
   1775c:	c9c6                	sw	a7,208(sp)
   1775e:	cbc1                	beqz	a5,177ee <strlen+0x3fe>
   17760:	b4b8                	fsd	fa4,104(s1)
   17762:	cace                	sw	s3,84(sp)
   17764:	6dfd                	lui	s11,0x1f
   17766:	694c                	flw	fa1,20(a0)
   17768:	43746867          	0x43746867
   1776c:	746e756f          	jal	a0,feeb2 <_data_lma+0xe73ea>
   17770:	3d20                	fld	fs0,120(a0)
   17772:	2520                	fld	fs0,72(a0)
   17774:	0d64                	addi	s1,sp,668
   17776:	000a                	c.slli	zero,0x2
   17778:	4c20                	lw	s0,88(s0)
   1777a:	4749                	li	a4,18
   1777c:	5448                	lw	a0,44(s0)
   1777e:	425f 554c 3a45      	0x3a45554c425f
   17784:	2d2d4e4f          	0x2d2d4e4f
   17788:	0a0d                	addi	s4,s4,3
   1778a:	0000                	unimp
   1778c:	4c20                	lw	s0,88(s0)
   1778e:	4749                	li	a4,18
   17790:	5448                	lw	a0,44(s0)
   17792:	425f 554c 3a45      	0x3a45554c425f
   17798:	2d46464f          	0x2d46464f
   1779c:	0d2d                	addi	s10,s10,11
   1779e:	000a                	c.slli	zero,0x2
   177a0:	7325                	lui	t1,0xfffe9
   177a2:	2528                	fld	fa0,72(a0)
   177a4:	25a2a173          	csrrs	sp,0x25a,t0
   177a8:	c4b52973          	csrrs	s2,0xc4b,a0
   177ac:	2f41                	jal	17f3c <_data_lma+0x474>
   177ae:	d644                	sw	s1,44(a2)
   177b0:	a3b5                	j	17d1c <_data_lma+0x254>
   177b2:	20ba                	fld	ft1,392(sp)
   177b4:	2520                	fld	fs0,72(a0)
   177b6:	0d64                	addi	s1,sp,668
   177b8:	000a                	c.slli	zero,0x2
   177ba:	0000                	unimp
   177bc:	7325                	lui	t1,0xfffe9
   177be:	e7b5                	bnez	a5,1782a <strlen+0x43a>
   177c0:	b9d1                	j	17494 <strlen+0xa4>
   177c2:	0000baa3          	0xbaa3
   177c6:	0000                	unimp
   177c8:	2e25                	jal	17b00 <_data_lma+0x38>
   177ca:	6632                	flw	fa2,12(sp)
   177cc:	000a                	c.slli	zero,0x2
   177ce:	0000                	unimp
   177d0:	7325                	lui	t1,0xfffe9
   177d2:	2528                	fld	fa0,72(a0)
   177d4:	c4b52973          	csrrs	s2,0xc4b,a0
   177d8:	2f41                	jal	17f68 <_data_lma+0x4a0>
   177da:	d644                	sw	s1,44(a2)
   177dc:	a3b5                	j	17d48 <_data_lma+0x280>
   177de:	20ba                	fld	ft1,392(sp)
   177e0:	2520                	fld	fs0,72(a0)
   177e2:	0d64                	addi	s1,sp,668
   177e4:	000a                	c.slli	zero,0x2
   177e6:	0000                	unimp
   177e8:	7325                	lui	t1,0xfffe9
   177ea:	2528                	fld	fa0,72(a0)
   177ec:	e7b52973          	csrrs	s2,0xe7b,a0
   177f0:	b9d1                	j	174c4 <strlen+0xd4>
   177f2:	0020baa3          	0x20baa3
   177f6:	0000                	unimp
   177f8:	2520                	fld	fs0,72(a0)
   177fa:	322e                	fld	ft4,232(sp)
   177fc:	0d66                	slli	s10,s10,0x19
   177fe:	000a                	c.slli	zero,0x2
   17800:	dac4                	sw	s1,52(a3)
   17802:	bfb2                	fsd	fa2,504(sp)
   17804:	c2ce                	sw	s3,68(sp)
   17806:	c8b6                	sw	a3,80(sp)
   17808:	abb4                	fsd	fa3,80(a5)
   1780a:	d0b8                	sw	a4,96(s1)
   1780c:	f7c6                	fsw	fa7,236(sp)
   1780e:	c4b5                	beqz	s1,1787a <strlen+0x48a>
   17810:	2f41                	jal	17fa0 <_data_lma+0x4d8>
   17812:	d644                	sw	s1,44(a2)
   17814:	a3b5                	j	17d80 <_data_lma+0x2b8>
   17816:	20ba                	fld	ft1,392(sp)
   17818:	2020                	fld	fs0,64(s0)
   1781a:	2520                	fld	fs0,72(a0)
   1781c:	0d64                	addi	s1,sp,668
   1781e:	000a                	c.slli	zero,0x2
   17820:	636d                	lui	t1,0x1b
   17822:	ce75                	beqz	a2,1791e <strlen+0x52e>
   17824:	b6c2                	fsd	fa6,360(sp)
   17826:	cec8                	sw	a0,28(a3)
   17828:	25aa                	fld	fa1,136(sp)
   1782a:	322e                	fld	ft4,232(sp)
   1782c:	b666                	fsd	fs9,296(sp)
   1782e:	0dc8                	addi	a0,sp,724
   17830:	000a                	c.slli	zero,0x2
   17832:	0000                	unimp
   17834:	2020                	fld	fs0,64(s0)
   17836:	0d20                	addi	s0,sp,664
   17838:	000a                	c.slli	zero,0x2
   1783a:	0000                	unimp
   1783c:	2020                	fld	fs0,64(s0)
   1783e:	bea1                	j	17396 <__clzsi2+0x1c>
   17840:	7355                	lui	t1,0xffff5
   17842:	7265                	lui	tp,0xffff9
   17844:	e1cc                	fsw	fa1,4(a1)
   17846:	beca                	fsd	fs2,376(sp)
   17848:	bfa1                	j	177a0 <strlen+0x3b0>
   1784a:	abbdbaa3          	0xabbdbaa3
   1784e:	f8bd                	bnez	s1,177c4 <strlen+0x3d4>
   17850:	ebc8                	fsw	fa0,20(a5)
   17852:	7355                	lui	t1,0xffff5
   17854:	7265                	lui	tp,0xffff9
   17856:	c4b5                	beqz	s1,178c2 <strlen+0x4d2>
   17858:	616d                	addi	sp,sp,240
   1785a:	6e69                	lui	t3,0x1a
   1785c:	afba                	fsd	fa4,472(sp)
   1785e:	fdca                	fsw	fs2,248(sp)
   17860:	b4d6                	fsd	fs5,104(sp)
   17862:	d0d0                	sw	a2,36(s1)
   17864:	2e2e                	fld	ft8,200(sp)
   17866:	0d2e                	slli	s10,s10,0xb
   17868:	0a0a                	slli	s4,s4,0x2
   1786a:	0000                	unimp
   1786c:	ce50                	sw	a2,28(a2)
   1786e:	ffff                	0xffff
   17870:	ced2                	sw	s4,92(sp)
   17872:	ffff                	0xffff
   17874:	ced2                	sw	s4,92(sp)
   17876:	ffff                	0xffff
   17878:	ce5c                	sw	a5,28(a2)
   1787a:	ffff                	0xffff
   1787c:	ced2                	sw	s4,92(sp)
   1787e:	ffff                	0xffff
   17880:	ced2                	sw	s4,92(sp)
   17882:	ffff                	0xffff
   17884:	ced2                	sw	s4,92(sp)
   17886:	ffff                	0xffff
   17888:	ced2                	sw	s4,92(sp)
   1788a:	ffff                	0xffff
   1788c:	ced2                	sw	s4,92(sp)
   1788e:	ffff                	0xffff
   17890:	ced2                	sw	s4,92(sp)
   17892:	ffff                	0xffff
   17894:	ced2                	sw	s4,92(sp)
   17896:	ffff                	0xffff
   17898:	ce4a                	sw	s2,28(sp)
   1789a:	ffff                	0xffff
   1789c:	ced2                	sw	s4,92(sp)
   1789e:	ffff                	0xffff
   178a0:	ce26                	sw	s1,28(sp)
   178a2:	ffff                	0xffff
   178a4:	ced2                	sw	s4,92(sp)
   178a6:	ffff                	0xffff
   178a8:	ced2                	sw	s4,92(sp)
   178aa:	ffff                	0xffff
   178ac:	ce56                	sw	s5,28(sp)
   178ae:	ffff                	0xffff
   178b0:	d0be                	sw	a5,96(sp)
   178b2:	ffff                	0xffff
   178b4:	d34c                	sw	a1,36(a4)
   178b6:	ffff                	0xffff
   178b8:	d34c                	sw	a1,36(a4)
   178ba:	ffff                	0xffff
   178bc:	d34c                	sw	a1,36(a4)
   178be:	ffff                	0xffff
   178c0:	d34c                	sw	a1,36(a4)
   178c2:	ffff                	0xffff
   178c4:	d34c                	sw	a1,36(a4)
   178c6:	ffff                	0xffff
   178c8:	d34c                	sw	a1,36(a4)
   178ca:	ffff                	0xffff
   178cc:	d34c                	sw	a1,36(a4)
   178ce:	ffff                	0xffff
   178d0:	d34c                	sw	a1,36(a4)
   178d2:	ffff                	0xffff
   178d4:	d34c                	sw	a1,36(a4)
   178d6:	ffff                	0xffff
   178d8:	d1c2                	sw	a6,224(sp)
   178da:	ffff                	0xffff
   178dc:	d29e                	sw	t2,100(sp)
   178de:	ffff                	0xffff
   178e0:	cece                	sw	s3,92(sp)
   178e2:	ffff                	0xffff
   178e4:	d34c                	sw	a1,36(a4)
   178e6:	ffff                	0xffff
   178e8:	cf76                	sw	t4,156(sp)
   178ea:	ffff                	0xffff
   178ec:	d34c                	sw	a1,36(a4)
   178ee:	ffff                	0xffff
   178f0:	d34c                	sw	a1,36(a4)
   178f2:	ffff                	0xffff
   178f4:	cece                	sw	s3,92(sp)
   178f6:	ffff                	0xffff
   178f8:	d34c                	sw	a1,36(a4)
   178fa:	ffff                	0xffff
   178fc:	d34c                	sw	a1,36(a4)
   178fe:	ffff                	0xffff
   17900:	d34c                	sw	a1,36(a4)
   17902:	ffff                	0xffff
   17904:	d34c                	sw	a1,36(a4)
   17906:	ffff                	0xffff
   17908:	d340                	sw	s0,36(a4)
   1790a:	ffff                	0xffff
   1790c:	d18a                	sw	sp,224(sp)
   1790e:	ffff                	0xffff
   17910:	d1e2                	sw	s8,224(sp)
   17912:	ffff                	0xffff
   17914:	d34c                	sw	a1,36(a4)
   17916:	ffff                	0xffff
   17918:	d34c                	sw	a1,36(a4)
   1791a:	ffff                	0xffff
   1791c:	d2b6                	sw	a3,100(sp)
   1791e:	ffff                	0xffff
   17920:	d34c                	sw	a1,36(a4)
   17922:	ffff                	0xffff
   17924:	d202                	sw	zero,36(sp)
   17926:	ffff                	0xffff
   17928:	d34c                	sw	a1,36(a4)
   1792a:	ffff                	0xffff
   1792c:	d34c                	sw	a1,36(a4)
   1792e:	ffff                	0xffff
   17930:	d0be                	sw	a5,96(sp)
   17932:	ffff                	0xffff
	...
   1793c:	0000                	unimp
   1793e:	4024                	lw	s1,64(s0)
   17940:	999a                	add	s3,s3,t1
   17942:	9999                	andi	a1,a1,-26
   17944:	9999                	andi	a1,a1,-26
   17946:	3fb9                	jal	178a4 <strlen+0x4b4>
   17948:	e45e                	fsw	fs7,8(sp)
   1794a:	ffff                	0xffff
   1794c:	e2da                	fsw	fs6,68(sp)
   1794e:	ffff                	0xffff
   17950:	e3f2                	fsw	ft8,196(sp)
   17952:	ffff                	0xffff
   17954:	e3fa                	fsw	ft10,196(sp)
   17956:	ffff                	0xffff
   17958:	e3f2                	fsw	ft8,196(sp)
   1795a:	ffff                	0xffff
   1795c:	e30a                	fsw	ft2,132(sp)
   1795e:	ffff                	0xffff
   17960:	e3f2                	fsw	ft8,196(sp)
   17962:	ffff                	0xffff
   17964:	e3fa                	fsw	ft10,196(sp)
   17966:	ffff                	0xffff
   17968:	e2da                	fsw	fs6,68(sp)
   1796a:	ffff                	0xffff
   1796c:	e2da                	fsw	fs6,68(sp)
   1796e:	ffff                	0xffff
   17970:	e30a                	fsw	ft2,132(sp)
   17972:	ffff                	0xffff
   17974:	e3fa                	fsw	ft10,196(sp)
   17976:	ffff                	0xffff
   17978:	e454                	fsw	fa3,12(s0)
   1797a:	ffff                	0xffff
   1797c:	e454                	fsw	fa3,12(s0)
   1797e:	ffff                	0xffff
   17980:	e454                	fsw	fa3,12(s0)
   17982:	ffff                	0xffff
   17984:	e30a                	fsw	ft2,132(sp)
   17986:	ffff                	0xffff
   17988:	ead0                	fsw	fa2,20(a3)
   1798a:	ffff                	0xffff
   1798c:	e9ba                	fsw	fa4,208(sp)
   1798e:	ffff                	0xffff
   17990:	e9ba                	fsw	fa4,208(sp)
   17992:	ffff                	0xffff
   17994:	e9b8                	fsw	fa4,80(a1)
   17996:	ffff                	0xffff
   17998:	e9c0                	fsw	fs0,20(a1)
   1799a:	ffff                	0xffff
   1799c:	e9c0                	fsw	fs0,20(a1)
   1799e:	ffff                	0xffff
   179a0:	e986                	fsw	ft1,208(sp)
   179a2:	ffff                	0xffff
   179a4:	e9b8                	fsw	fa4,80(a1)
   179a6:	ffff                	0xffff
   179a8:	e9c0                	fsw	fs0,20(a1)
   179aa:	ffff                	0xffff
   179ac:	e986                	fsw	ft1,208(sp)
   179ae:	ffff                	0xffff
   179b0:	e9c0                	fsw	fs0,20(a1)
   179b2:	ffff                	0xffff
   179b4:	e9b8                	fsw	fa4,80(a1)
   179b6:	ffff                	0xffff
   179b8:	eabc                	fsw	fa5,80(a3)
   179ba:	ffff                	0xffff
   179bc:	eabc                	fsw	fa5,80(a3)
   179be:	ffff                	0xffff
   179c0:	eabc                	fsw	fa5,80(a3)
   179c2:	ffff                	0xffff
   179c4:	e986                	fsw	ft1,208(sp)
   179c6:	ffff                	0xffff

000179c8 <__clz_tab>:
   179c8:	0100 0202 0303 0303 0404 0404 0404 0404     ................
   179d8:	0505 0505 0505 0505 0505 0505 0505 0505     ................
   179e8:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   179f8:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   17a08:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   17a18:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   17a28:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   17a38:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   17a48:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17a58:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17a68:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17a78:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17a88:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17a98:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17aa8:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   17ab8:	0808 0808 0808 0808 0808 0808 0808 0808     ................
