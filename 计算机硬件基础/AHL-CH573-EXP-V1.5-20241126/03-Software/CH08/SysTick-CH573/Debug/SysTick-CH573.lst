
SysTick-CH573.elf:     file format elf32-littleriscv
SysTick-CH573.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00012000

Program Header:
    LOAD off    0x00001000 vaddr 0x00012000 paddr 0x00012000 align 2**12
         filesz 0x000000ec memsz 0x000000ec flags r-x
    LOAD off    0x00002000 vaddr 0x00013000 paddr 0x00013000 align 2**12
         filesz 0x000034e0 memsz 0x000034e0 flags r-x
    LOAD off    0x00005600 vaddr 0x20005600 paddr 0x000164e0 align 2**12
         filesz 0x00000000 memsz 0x00000080 flags rw-
    LOAD off    0x00005680 vaddr 0x20005680 paddr 0x000164e0 align 2**12
         filesz 0x00000000 memsz 0x0000000c flags rw-

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .init           00000004  00012000  00012000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector         000000e8  00012004  00012004  00001004  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .highcodelalign 00000000  00013000  00013000  000054e0  2**0  CONTENTS
  3 .highcode       00000000  20005600  20005600  000054e0  2**0  CONTENTS
  4 .text           000034e0  00013000  00013000  00002000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini           00000000  000164e0  000164e0  000054e0  2**0  CONTENTS, ALLOC, LOAD, CODE
  6 .dalign         00000080  20005600  000164e0  00005600  2**0  ALLOC
  7 .dlalign        00000000  000164e0  000164e0  000054e0  2**0  CONTENTS
  8 .data           00000000  20005680  20005680  000054e0  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 .bss            0000000c  20005680  000164e0  00005680  2**2  ALLOC
 10 .stack          00000000  20008000  20008000  000054e0  2**0  CONTENTS
 11 .debug_info     00006667  00000000  00000000  000054e0  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev   0000166b  00000000  00000000  0000bb47  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc      00003048  00000000  00000000  0000d1b2  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  00000268  00000000  00000000  00010200  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   00000240  00000000  00000000  00010468  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_line     00005d6b  00000000  00000000  000106a8  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str      00000cdb  00000000  00000000  00016413  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment        00000033  00000000  00000000  000170ee  2**0  CONTENTS, READONLY
 19 .debug_frame    000006d0  00000000  00000000  00017124  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00012000 l    d  .init	00000000 .init
00012004 l    d  .vector	00000000 .vector
00013000 l    d  .highcodelalign	00000000 .highcodelalign
20005600 l    d  .highcode	00000000 .highcode
00013000 l    d  .text	00000000 .text
000164e0 l    d  .fini	00000000 .fini
20005600 l    d  .dalign	00000000 .dalign
000164e0 l    d  .dlalign	00000000 .dlalign
20005680 l    d  .data	00000000 .data
20005680 l    d  .bss	00000000 .bss
20008000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_CH573.o
00012004 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 SysTick.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
20005680 l     O .bss	00000001 SysTickCount.3172
00000000 l    df *ABS*	00000000 printf.c
00013d1a l     F .text	0000003c printk_putc
00013d56 l     F .text	00000082 printk_mknumstr
00013dd8 l     F .text	0000003c printk_pad_space
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixunsdfdi.c
00000000 l    df *ABS*	00000000 floatundidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 libgcc2.c
000133d0 g     F .text	000000cc flash_write
00014f52 g     F .text	0000006a .hidden __eqdf2
20005e80 g       .data	00000000 __global_pointer$
00000025 g       *ABS*	00000000 GEC_USER_SECTOR_END
00012098  w      .vector	00000000 HardFault_Handler
000120ac  w      .vector	00000000 GPIOB_IRQHandler
000120a8  w      .vector	00000000 GPIOA_IRQHandler
00013cd0 g     F .text	0000004a SysTick_Handler
00012094  w      .vector	00000000 NMI_Handler
000120cc  w      .vector	00000000 UART1_IRQHandler
00013a5c g     F .text	000000c6 uart_enable_re_int
20005680 g       .bss	00000000 _sbss
00000012 g       *ABS*	00000000 GEC_USER_SECTOR_START
00013c38 g     F .text	00000042 UART0_IRQHandler
00014fbc g     F .text	000000b6 .hidden __ltdf2
00012004 g       .init	00000000 _einit
000120b4  w      .vector	00000000 BB_IRQHandler
0001335c g     F .text	00000026 flash_erase
00013382 g     F .text	00000028 flash_Best
000120a4  w      .vector	00000000 TMR0_IRQHandler
00014bc4 g     F .text	0000038e .hidden __umoddi3
0001482c g     F .text	00000398 .hidden __udivdi3
00013e2c g     F .text	000002e8 printk_mkfloatstr
000120d0  w      .vector	00000000 RTC_IRQHandler
2000568c g       .bss	00000000 _ebss
00001000 g       *ABS*	00000000 MCU_SECTORSIZE
00013b22 g     F .text	00000116 uart_get_re_int
000131bc g     F .text	0000000a systick_clear_int
00014fbc g     F .text	000000b6 .hidden __ledf2
20007fff g       *ABS*	00000000 GEC_USER_RAM_END
000147f6 g     F .text	00000036 myprintf
000120e0  w      .vector	00000000 UART2_IRQHandler
000120d8  w      .vector	00000000 PWMX_IRQHandler
00015eb2 g     F .text	00000076 .hidden __clzsi2
000136a8 g     F .text	00000228 uart_init
20005684 g     O .bss	00000003 gTime
00012000 g       .init	00000000 _start
20005688 g     O .bss	00000004 component_fun
00015d1e g     F .text	00000194 .hidden __floatundidf
20005600 g       *ABS*	00000000 GEC_USER_RAM_START
000120d4  w      .vector	00000000 ADC_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_start
00013168 g     F .text	00000054 systick_init
000120c4  w      .vector	00000000 TMR2_IRQHandler
20005680 g       .data	00000000 _data_vma
00013e14 g     F .text	00000018 out_char
000120bc  w      .vector	00000000 USB_IRQHandler
00014114 g     F .text	000006e2 printk
000133aa g     F .text	00000026 flash_read_logic
00015072 g     F .text	000004c8 .hidden __muldf3
000139de g     F .text	0000007e uart_re1
000130c0 g     F .text	000000a8 memset
000131c6 g     F .text	00000196 main
0001358c g     F .text	000000b8 IRQ_OPC_CHANGE
00013c7a g     F .text	00000056 SecAdd1
00013000 g       .highcodelalign	00000000 _highcode_lma
00014f52 g     F .text	0000006a .hidden __nedf2
00015c80 g     F .text	0000009e .hidden __fixunsdfdi
000163e0 g     O .text	00000100 .hidden __clz_tab
000120b8  w      .vector	00000000 LLE_IRQHandler
00012000 g       .init	00000000 _sinit
000120e8  w      .vector	00000000 WDOG_BAT_IRQHandler
000120dc  w      .vector	00000000 TMR3_IRQHandler
20008000 g       .stack	00000000 _eusrstack
000120a0  w      .vector	00000000 SW_Handler
00013644 g     F .text	00000064 Vectors_Init
20005680 g       .data	00000000 _edata
000120b0  w      .vector	00000000 SPI0_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_end
000164e0 g       .dlalign	00000000 _data_lma
00013000  w      .text	00000000 handle_reset
00015f28 g     F .text	00000012 strlen
000120e4  w      .vector	00000000 UART3_IRQHandler
000138d0 g     F .text	0000010e uart_send1
0001349c g     F .text	00000072 gpio_set
0001350e g     F .text	0000007e gpio_init
0001553a g     F .text	00000746 .hidden __subdf3
000120c0  w      .vector	00000000 TMR1_IRQHandler
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START



Disassembly of section .init:

00012000 <_sinit>:
_start():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:14
	.section	.init,"ax",@progbits   /*ax是 allocation  execute的缩写，表示该节区可分配并且可执行，progbits是类型*/
	.global	_start   /*将_start标签定义为全局可见*/
	.align	1   /*将当前PC地址推进到2的1次方个字节对齐的位置*/
    .option	norelax  /*	不允许链接松弛*/
_start:     /*定义此处的标签为_start*/
	j	handle_reset     /*跳转指令跳转到标签handle_reset所在的位置*/
   12000:	0000106f          	j	13000 <_highcode_lma>

Disassembly of section .vector:

00012004 <_vector_base>:
_vector_base():
   12004:	8000                	0x8000
   12006:	2000                	fld	fs0,0(s0)
   12008:	0000                	unimp
   1200a:	0000                	unimp
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:22
    .align  1
_vector_base:
    .option norvc; /*表示接下来的汇编程序不可以被汇编生成16位宽的压缩指令*/
    .word   _eusrstack
    .word   0
        j   NMI_Handler                 /* NMI Handler */
   1200c:	0880006f          	j	12094 <NMI_Handler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:23
        j   HardFault_Handler           /* Hard Fault Handler */
   12010:	0880006f          	j	12098 <HardFault_Handler>
	...
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:32
    .word   0
    .word   0
    .word   0
    .word   0
    .word   0
        j   SysTick_Handler            /* SysTick Handler */
   12034:	49d0106f          	j	13cd0 <SysTick_Handler>
   12038:	0000                	unimp
   1203a:	0000                	unimp
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:34
    .word   0
        j   SW_Handler                 /* SW Handler */
   1203c:	0640006f          	j	120a0 <SW_Handler>
   12040:	0000                	unimp
   12042:	0000                	unimp
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:37
    .word   0
    /* External Interrupts */
        j   TMR0_IRQHandler            /* 0:  TMR0 */
   12044:	0600006f          	j	120a4 <TMR0_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:38
        j   GPIOA_IRQHandler           /* GPIOA */
   12048:	0600006f          	j	120a8 <GPIOA_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:39
        j   GPIOB_IRQHandler           /* GPIOB */
   1204c:	0600006f          	j	120ac <GPIOB_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:40
        j   SPI0_IRQHandler            /* SPI0 */
   12050:	0600006f          	j	120b0 <SPI0_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:41
        j   BB_IRQHandler              /* BLEB */
   12054:	0600006f          	j	120b4 <BB_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:42
        j   LLE_IRQHandler             /* BLEL */
   12058:	0600006f          	j	120b8 <LLE_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:43
        j   USB_IRQHandler             /* USB */
   1205c:	0600006f          	j	120bc <USB_IRQHandler>
   12060:	0000                	unimp
   12062:	0000                	unimp
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:45
        .word   0
        j   TMR1_IRQHandler            /* TMR1 */
   12064:	05c0006f          	j	120c0 <TMR1_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:46
        j   TMR2_IRQHandler            /* TMR2 */
   12068:	05c0006f          	j	120c4 <TMR2_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:47
        j   UART0_IRQHandler           /* UART0 */
   1206c:	3cd0106f          	j	13c38 <UART0_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:48
        j   UART1_IRQHandler           /* UART1 */
   12070:	05c0006f          	j	120cc <UART1_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:49
        j   RTC_IRQHandler             /* RTC */
   12074:	05c0006f          	j	120d0 <RTC_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:50
        j   ADC_IRQHandler             /* ADC */
   12078:	05c0006f          	j	120d4 <ADC_IRQHandler>
   1207c:	0000                	unimp
   1207e:	0000                	unimp
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:52
        .word   0
        j   PWMX_IRQHandler            /* PWMX */
   12080:	0580006f          	j	120d8 <PWMX_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:53
        j   TMR3_IRQHandler            /* TMR3 */
   12084:	0580006f          	j	120dc <TMR3_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:54
        j   UART2_IRQHandler           /* UART2 */
   12088:	0580006f          	j	120e0 <UART2_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:55
        j   UART3_IRQHandler           /* UART3 */
   1208c:	0580006f          	j	120e4 <UART3_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:56
        j   WDOG_BAT_IRQHandler        /* WDOG_BAT */
   12090:	0580006f          	j	120e8 <WDOG_BAT_IRQHandler>

00012094 <NMI_Handler>:
NMI_Handler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:84
    .weak   TMR3_IRQHandler
    .weak   UART2_IRQHandler
    .weak   UART3_IRQHandler
    .weak   WDOG_BAT_IRQHandler

NMI_Handler:  1:  j 1b     /* 在被引用之时，数字标签通常需要带上一个字母“f”或者“b”的后缀，“f”表示下一行，“b”表示向上一行*/
   12094:	0000006f          	j	12094 <NMI_Handler>

00012098 <HardFault_Handler>:
HardFault_Handler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:85
HardFault_Handler:  1:  j 1b
   12098:	0000006f          	j	12098 <HardFault_Handler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:86
SysTick_Handler:  1:  j 1b
   1209c:	0000006f          	j	1209c <HardFault_Handler+0x4>

000120a0 <SW_Handler>:
SW_Handler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:87
SW_Handler:  1:  j 1b
   120a0:	0000006f          	j	120a0 <SW_Handler>

000120a4 <TMR0_IRQHandler>:
TMR0_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:88
TMR0_IRQHandler:  1:  j 1b
   120a4:	0000006f          	j	120a4 <TMR0_IRQHandler>

000120a8 <GPIOA_IRQHandler>:
GPIOA_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:89
GPIOA_IRQHandler:  1:  j 1b
   120a8:	0000006f          	j	120a8 <GPIOA_IRQHandler>

000120ac <GPIOB_IRQHandler>:
GPIOB_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:90
GPIOB_IRQHandler:  1:  j 1b
   120ac:	0000006f          	j	120ac <GPIOB_IRQHandler>

000120b0 <SPI0_IRQHandler>:
SPI0_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:91
SPI0_IRQHandler:  1:  j 1b
   120b0:	0000006f          	j	120b0 <SPI0_IRQHandler>

000120b4 <BB_IRQHandler>:
BB_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:92
BB_IRQHandler:  1:  j 1b
   120b4:	0000006f          	j	120b4 <BB_IRQHandler>

000120b8 <LLE_IRQHandler>:
LLE_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:93
LLE_IRQHandler:  1:  j 1b
   120b8:	0000006f          	j	120b8 <LLE_IRQHandler>

000120bc <USB_IRQHandler>:
USB_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:94
USB_IRQHandler:  1:  j 1b
   120bc:	0000006f          	j	120bc <USB_IRQHandler>

000120c0 <TMR1_IRQHandler>:
TMR1_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:95
TMR1_IRQHandler:  1:  j 1b
   120c0:	0000006f          	j	120c0 <TMR1_IRQHandler>

000120c4 <TMR2_IRQHandler>:
TMR2_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:96
TMR2_IRQHandler:  1:  j 1b
   120c4:	0000006f          	j	120c4 <TMR2_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:97
UART0_IRQHandler:  1:  j 1b
   120c8:	0000006f          	j	120c8 <TMR2_IRQHandler+0x4>

000120cc <UART1_IRQHandler>:
UART1_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:98
UART1_IRQHandler:  1:  j 1b
   120cc:	0000006f          	j	120cc <UART1_IRQHandler>

000120d0 <RTC_IRQHandler>:
RTC_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:99
RTC_IRQHandler:  1:  j 1b
   120d0:	0000006f          	j	120d0 <RTC_IRQHandler>

000120d4 <ADC_IRQHandler>:
ADC_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:100
ADC_IRQHandler:  1:  j 1b
   120d4:	0000006f          	j	120d4 <ADC_IRQHandler>

000120d8 <PWMX_IRQHandler>:
PWMX_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:101
PWMX_IRQHandler:  1:  j 1b
   120d8:	0000006f          	j	120d8 <PWMX_IRQHandler>

000120dc <TMR3_IRQHandler>:
TMR3_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:102
TMR3_IRQHandler:  1:  j 1b
   120dc:	0000006f          	j	120dc <TMR3_IRQHandler>

000120e0 <UART2_IRQHandler>:
UART2_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:103
UART2_IRQHandler:  1:  j 1b
   120e0:	0000006f          	j	120e0 <UART2_IRQHandler>

000120e4 <UART3_IRQHandler>:
UART3_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:104
UART3_IRQHandler:  1:  j 1b
   120e4:	0000006f          	j	120e4 <UART3_IRQHandler>

000120e8 <WDOG_BAT_IRQHandler>:
WDOG_BAT_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:105
WDOG_BAT_IRQHandler:  1:  j 1b
   120e8:	0000006f          	j	120e8 <WDOG_BAT_IRQHandler>

Disassembly of section .text:

00013000 <handle_reset>:
handle_reset():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:113
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
   13000:	1fff3197          	auipc	gp,0x1fff3
   13004:	e8018193          	addi	gp,gp,-384 # 20005e80 <__global_pointer$>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:116
.option	pop 
1:
	la sp, _eusrstack 
   13008:	1fff5117          	auipc	sp,0x1fff5
   1300c:	ff810113          	addi	sp,sp,-8 # 20008000 <_eusrstack>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:120

/* Load highcode code  section from flash to RAM */
2:
    la a0, _highcode_lma
   13010:	00000517          	auipc	a0,0x0
   13014:	ff050513          	addi	a0,a0,-16 # 13000 <handle_reset>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:121
    la a1, _highcode_vma_start
   13018:	1fff2597          	auipc	a1,0x1fff2
   1301c:	5e858593          	addi	a1,a1,1512 # 20005600 <GEC_USER_RAM_START>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:122
    la a2, _highcode_vma_end
   13020:	1fff2617          	auipc	a2,0x1fff2
   13024:	5e060613          	addi	a2,a2,1504 # 20005600 <GEC_USER_RAM_START>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:123
    bgeu a1, a2, 2f
   13028:	00c5fc63          	bgeu	a1,a2,13040 <handle_reset+0x40>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:125
1:
    lw t0, (a0)
   1302c:	00052283          	lw	t0,0(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:126
    sw t0, (a1)
   13030:	0055a023          	sw	t0,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:127
    addi a0, a0, 4
   13034:	00450513          	addi	a0,a0,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:128
    addi a1, a1, 4
   13038:	00458593          	addi	a1,a1,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:129
    bltu a1, a2, 1b
   1303c:	fec5e8e3          	bltu	a1,a2,1302c <handle_reset+0x2c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:133

/* Load data section from flash to RAM */
2:
	la a0, _data_lma
   13040:	00003517          	auipc	a0,0x3
   13044:	4a050513          	addi	a0,a0,1184 # 164e0 <_data_lma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:134
	la a1, _data_vma
   13048:	1fff2597          	auipc	a1,0x1fff2
   1304c:	63858593          	addi	a1,a1,1592 # 20005680 <_data_vma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:135
	la a2, _edata
   13050:	1fff2617          	auipc	a2,0x1fff2
   13054:	63060613          	addi	a2,a2,1584 # 20005680 <_data_vma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:136
	bgeu a1, a2, 2f
   13058:	00c5fc63          	bgeu	a1,a2,13070 <handle_reset+0x70>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:138
1:
	lw t0, (a0)
   1305c:	00052283          	lw	t0,0(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:139
	sw t0, (a1)
   13060:	0055a023          	sw	t0,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:140
	addi a0, a0, 4
   13064:	00450513          	addi	a0,a0,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:141
	addi a1, a1, 4
   13068:	00458593          	addi	a1,a1,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:142
	bltu a1, a2, 1b
   1306c:	fec5e8e3          	bltu	a1,a2,1305c <handle_reset+0x5c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:145
2:
	/* clear bss section */
	la a0, _sbss
   13070:	1fff2517          	auipc	a0,0x1fff2
   13074:	61050513          	addi	a0,a0,1552 # 20005680 <_data_vma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:146
	la a1, _ebss
   13078:	1fff2597          	auipc	a1,0x1fff2
   1307c:	61458593          	addi	a1,a1,1556 # 2000568c <_ebss>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:147
	bgeu a0, a1, 2f
   13080:	00b57863          	bgeu	a0,a1,13090 <handle_reset+0x90>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:149
1:
	sw zero, (a0)
   13084:	00052023          	sw	zero,0(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:150
	addi a0, a0, 4
   13088:	00450513          	addi	a0,a0,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:151
	bltu a0, a1, 1b
   1308c:	feb56ce3          	bltu	a0,a1,13084 <handle_reset+0x84>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:153
2:
    li t0, 0x1880
   13090:	000022b7          	lui	t0,0x2
   13094:	88028293          	addi	t0,t0,-1920 # 1880 <MCU_SECTORSIZE+0x880>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:154
    csrs mstatus, t0
   13098:	3002a073          	csrs	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:156

    jal  Vectors_Init	    /* 跳转并链接到Vectors_Init函数，Vectors_Init：User对BIOS中断向量表的部分继承,构件库函数指针初始化 */		
   1309c:	5a8000ef          	jal	ra,13644 <Vectors_Init>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:157
	la t0, _vector_base
   130a0:	fffff297          	auipc	t0,0xfffff
   130a4:	f6428293          	addi	t0,t0,-156 # 12004 <_einit>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:158
    ori t0, t0, 1
   130a8:	0012e293          	ori	t0,t0,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:159
	csrw mtvec, t0
   130ac:	30529073          	csrw	mtvec,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:160
	la t0, main
   130b0:	00000297          	auipc	t0,0x0
   130b4:	11628293          	addi	t0,t0,278 # 131c6 <main>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:161
	csrw mepc, t0
   130b8:	34129073          	csrw	mepc,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcs/startup_CH573.S:168
	/* enable vector relocation
	li t0, 0xE000ED14
	li t1, 1
	sw t1, 0(t0)*/
	
	mret
   130bc:	30200073          	mret

000130c0 <memset>:
memset():
   130c0:	433d                	li	t1,15
   130c2:	872a                	mv	a4,a0
   130c4:	02c37363          	bgeu	t1,a2,130ea <memset+0x2a>
   130c8:	00f77793          	andi	a5,a4,15
   130cc:	efbd                	bnez	a5,1314a <memset+0x8a>
   130ce:	e5ad                	bnez	a1,13138 <memset+0x78>
   130d0:	ff067693          	andi	a3,a2,-16
   130d4:	8a3d                	andi	a2,a2,15
   130d6:	96ba                	add	a3,a3,a4
   130d8:	c30c                	sw	a1,0(a4)
   130da:	c34c                	sw	a1,4(a4)
   130dc:	c70c                	sw	a1,8(a4)
   130de:	c74c                	sw	a1,12(a4)
   130e0:	0741                	addi	a4,a4,16
   130e2:	fed76be3          	bltu	a4,a3,130d8 <memset+0x18>
   130e6:	e211                	bnez	a2,130ea <memset+0x2a>
   130e8:	8082                	ret
   130ea:	40c306b3          	sub	a3,t1,a2
   130ee:	068a                	slli	a3,a3,0x2
   130f0:	00000297          	auipc	t0,0x0
   130f4:	9696                	add	a3,a3,t0
   130f6:	00a68067          	jr	10(a3)
   130fa:	00b70723          	sb	a1,14(a4)
   130fe:	00b706a3          	sb	a1,13(a4)
   13102:	00b70623          	sb	a1,12(a4)
   13106:	00b705a3          	sb	a1,11(a4)
   1310a:	00b70523          	sb	a1,10(a4)
   1310e:	00b704a3          	sb	a1,9(a4)
   13112:	00b70423          	sb	a1,8(a4)
   13116:	00b703a3          	sb	a1,7(a4)
   1311a:	00b70323          	sb	a1,6(a4)
   1311e:	00b702a3          	sb	a1,5(a4)
   13122:	00b70223          	sb	a1,4(a4)
   13126:	00b701a3          	sb	a1,3(a4)
   1312a:	00b70123          	sb	a1,2(a4)
   1312e:	00b700a3          	sb	a1,1(a4)
   13132:	00b70023          	sb	a1,0(a4)
   13136:	8082                	ret
   13138:	0ff5f593          	andi	a1,a1,255
   1313c:	00859693          	slli	a3,a1,0x8
   13140:	8dd5                	or	a1,a1,a3
   13142:	01059693          	slli	a3,a1,0x10
   13146:	8dd5                	or	a1,a1,a3
   13148:	b761                	j	130d0 <memset+0x10>
   1314a:	00279693          	slli	a3,a5,0x2
   1314e:	00000297          	auipc	t0,0x0
   13152:	9696                	add	a3,a3,t0
   13154:	8286                	mv	t0,ra
   13156:	fa8680e7          	jalr	-88(a3)
   1315a:	8096                	mv	ra,t0
   1315c:	17c1                	addi	a5,a5,-16
   1315e:	8f1d                	sub	a4,a4,a5
   13160:	963e                	add	a2,a2,a5
   13162:	f8c374e3          	bgeu	t1,a2,130ea <memset+0x2a>
   13166:	b7a5                	j	130ce <memset+0xe>

00013168 <systick_init>:
PFIC_SetPriority():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:163
*                  priority: bit7:pre-emption priority
*                            bit6-bit4: subpriority
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void PFIC_SetPriority(IRQn_Type IRQn, UINT8 priority){
    PFIC->IPRIOR[(UINT32)(IRQn)] = priority;
   13168:	e000e7b7          	lui	a5,0xe000e
   1316c:	5741                	li	a4,-16
   1316e:	40e78623          	sb	a4,1036(a5) # e000e40c <_eusrstack+0xc000640c>
systick_init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:24
    //【1】参数保护
    if ((int_ms) > 1000) int_ms=1000;
    //【2】设定中断优先级（15）
    PFIC_SetPriority(SysTick_IRQn,0xf0);
    //【3】复位SysTick定时器  
    SysTick->CTLR = 0;               
   13172:	e000f7b7          	lui	a5,0xe000f
   13176:	0007a023          	sw	zero,0(a5) # e000f000 <_eusrstack+0xc0007000>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:25
    SysTick->CNT = 0;            
   1317a:	0007a223          	sw	zero,4(a5)
   1317e:	0007a423          	sw	zero,8(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:27
    //【4】设置重载寄存器（时钟源频率60MHz）
    SysTick->CMP =60000*int_ms;  
   13182:	3e800793          	li	a5,1000
   13186:	00a7f463          	bgeu	a5,a0,1318e <systick_init+0x26>
   1318a:	3e800513          	li	a0,1000
   1318e:	67bd                	lui	a5,0xf
   13190:	a6078793          	addi	a5,a5,-1440 # ea60 <MCU_SECTORSIZE+0xda60>
   13194:	02f50533          	mul	a0,a0,a5
   13198:	e000f7b7          	lui	a5,0xe000f
   1319c:	c7c8                	sw	a0,12(a5)
   1319e:	0007a823          	sw	zero,16(a5) # e000f010 <_eusrstack+0xc0007010>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:29
    //【5】选择时钟源、设置重载寄存器、允许中断、启动计数
    SysTick->CTLR = 0x0106;    //选择时钟源、设置重载寄存器、允许中断
   131a2:	10600713          	li	a4,262
   131a6:	c398                	sw	a4,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:30
    SysTick->CTLR|= 0x01;      //启动计数
   131a8:	4398                	lw	a4,0(a5)
   131aa:	00176713          	ori	a4,a4,1
   131ae:	c398                	sw	a4,0(a5)
PFIC_EnableIRQ():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:87
    PFIC->IENR[((UINT32)(IRQn) >> 5)] = (1 << ((UINT32)(IRQn) & 0x1F));
   131b0:	e000e7b7          	lui	a5,0xe000e
   131b4:	6705                	lui	a4,0x1
   131b6:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
systick_init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:33
    //【6】开放模块中断
    PFIC_EnableIRQ(SysTick_IRQn);
}
   131ba:	8082                	ret

000131bc <systick_clear_int>:
systick_clear_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:43
//参数说明：无
//功能概要：清除systick中断标志
//======================================================================
void systick_clear_int(void)
{
    SysTick->CNTFG = 0;    //清除"计数器减为0标志位"
   131bc:	e000f7b7          	lui	a5,0xe000f
   131c0:	0007aa23          	sw	zero,20(a5) # e000f014 <_eusrstack+0xc0007014>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/SysTick.c:44
   131c4:	8082                	ret

000131c6 <main>:
main():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:17

//main.c使用的内部函数声明处---------------------------------------------

// 主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程）-----------
int main(void)
{
   131c6:	7179                	addi	sp,sp,-48
   131c8:	d606                	sw	ra,44(sp)
   131ca:	d422                	sw	s0,40(sp)
   131cc:	d226                	sw	s1,36(sp)
   131ce:	d04a                	sw	s2,32(sp)
   131d0:	ce4e                	sw	s3,28(sp)
   131d2:	cc52                	sw	s4,24(sp)
   131d4:	ca56                	sw	s5,20(sp)
   131d6:	c85a                	sw	s6,16(sp)
   131d8:	c65e                	sw	s7,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:18
    printf("----------------------------------------------------------\n"); 
   131da:	00003517          	auipc	a0,0x3
   131de:	d6250513          	addi	a0,a0,-670 # 15f3c <strlen+0x14>
   131e2:	00001097          	auipc	ra,0x1
   131e6:	614080e7          	jalr	1556(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:19
    printf("金葫芦提示：                                               \n");
   131ea:	00003517          	auipc	a0,0x3
   131ee:	d8e50513          	addi	a0,a0,-626 # 15f78 <strlen+0x50>
   131f2:	00001097          	auipc	ra,0x1
   131f6:	604080e7          	jalr	1540(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:20
    printf(" （1）蓝灯闪烁                                             \n");
   131fa:	00003517          	auipc	a0,0x3
   131fe:	dbe50513          	addi	a0,a0,-578 # 15fb8 <strlen+0x90>
   13202:	00001097          	auipc	ra,0x1
   13206:	5f4080e7          	jalr	1524(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:21
   	printf(" （2）每10ms中断触发SysTick定时器中断处理程序一次。          \n");
   1320a:	00003517          	auipc	a0,0x3
   1320e:	dee50513          	addi	a0,a0,-530 # 15ff8 <strlen+0xd0>
   13212:	00001097          	auipc	ra,0x1
   13216:	5e4080e7          	jalr	1508(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:22
   	printf(" （3）进入SysTick定时器中断处理程序后，静态变量10ms单元+1，  \n");
   1321a:	00003517          	auipc	a0,0x3
   1321e:	e1e50513          	addi	a0,a0,-482 # 16038 <strlen+0x110>
   13222:	00001097          	auipc	ra,0x1
   13226:	5d4080e7          	jalr	1492(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:23
   	printf(" （4）达到一秒时，调用秒+1，程序，计算“时、分、秒”。        \n");
   1322a:	00003517          	auipc	a0,0x3
   1322e:	e4e50513          	addi	a0,a0,-434 # 16078 <strlen+0x150>
   13232:	00001097          	auipc	ra,0x1
   13236:	5c4080e7          	jalr	1476(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:24
   	printf(" （5）使用全局变量字节型数组gTime[3]，分别存储“时、分、秒”。\n");
   1323a:	00003517          	auipc	a0,0x3
   1323e:	e7e50513          	addi	a0,a0,-386 # 160b8 <strlen+0x190>
   13242:	00001097          	auipc	ra,0x1
   13246:	5b4080e7          	jalr	1460(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:25
   	printf(" （6）可通过时间测试程序C#测试30秒的时间间隔来校准Systick    \n");
   1324a:	00003517          	auipc	a0,0x3
   1324e:	eae50513          	addi	a0,a0,-338 # 160f8 <strlen+0x1d0>
   13252:	00001097          	auipc	ra,0x1
   13256:	5a4080e7          	jalr	1444(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:26
   	printf(" （7）注意其中静态变量的使用                                \n");
   1325a:	00003517          	auipc	a0,0x3
   1325e:	ede50513          	addi	a0,a0,-290 # 16138 <strlen+0x210>
   13262:	00001097          	auipc	ra,0x1
   13266:	594080e7          	jalr	1428(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:27
    printf("-----------------------------------------------------------\n"); 
   1326a:	00003517          	auipc	a0,0x3
   1326e:	f0e50513          	addi	a0,a0,-242 # 16178 <strlen+0x250>
   13272:	00001097          	auipc	ra,0x1
   13276:	584080e7          	jalr	1412(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:36
    //（1.1）【根据本函数所用的变量声明】声明main函数使用的局部变量
    uint8_t   mFlag;          //灯的状态标志
    uint8_t  mSec;	         //记当前秒的值
    
    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
   1327a:	42a1                	li	t0,8
   1327c:	3002b073          	csrc	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:43
    //（1.3）【根据本函数所用的变量赋初值】给主函数使用的局部变量赋初值
    mFlag='A';           //灯的状态标志
    
    //（1.4）【根据includes.h文件中声明的全局变量】给全局变量赋初值
    //"时分秒"缓存初始化(00:00:00)
   	gTime[0] = 0;       //时
   13280:	1fff2797          	auipc	a5,0x1fff2
   13284:	40478793          	addi	a5,a5,1028 # 20005684 <gTime>
   13288:	00078023          	sb	zero,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:44
   	gTime[1] = 0;	  	//分
   1328c:	000780a3          	sb	zero,1(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:45
   	gTime[2] = 0;	  	//秒
   13290:	00078123          	sb	zero,2(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:48
   	mSec = 0;	//记住当前秒的值
    //（1.5）【根据所用到的外部硬件设备】用户外设模块初始化
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_ON);	//初始化蓝灯
   13294:	4601                	li	a2,0
   13296:	4585                	li	a1,1
   13298:	10e00513          	li	a0,270
   1329c:	00000097          	auipc	ra,0x0
   132a0:	272080e7          	jalr	626(ra) # 1350e <gpio_init>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:49
    uart_init(UART_User, 115200);
   132a4:	65f1                	lui	a1,0x1c
   132a6:	20058593          	addi	a1,a1,512 # 1c200 <_data_lma+0x5d20>
   132aa:	4501                	li	a0,0
   132ac:	00000097          	auipc	ra,0x0
   132b0:	3fc080e7          	jalr	1020(ra) # 136a8 <uart_init>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:50
    systick_init(10);
   132b4:	4529                	li	a0,10
   132b6:	00000097          	auipc	ra,0x0
   132ba:	eb2080e7          	jalr	-334(ra) # 13168 <systick_init>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:53

    //（1.6）【根据所使用的硬件模块中断】使能模块中断
    uart_enable_re_int(UART_User);     //使能用户串口接收中断
   132be:	4501                	li	a0,0
   132c0:	00000097          	auipc	ra,0x0
   132c4:	79c080e7          	jalr	1948(ra) # 13a5c <uart_enable_re_int>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:56
    
    //（1.7）【不变】开总中断
    ENABLE_INTERRUPTS;
   132c8:	42a1                	li	t0,8
   132ca:	3002a073          	csrs	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:46
   	mSec = 0;	//记住当前秒的值
   132ce:	4901                	li	s2,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:39
    mFlag='A';           //灯的状态标志
   132d0:	04100993          	li	s3,65
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:64

  
//【2】主循环部分（开头）==============================================
    while(1)   //while无限循环（开头）
    {
    	printf("");
   132d4:	00003a97          	auipc	s5,0x3
   132d8:	ce0a8a93          	addi	s5,s5,-800 # 15fb4 <strlen+0x8c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:66
    	//（2.1）未到一秒，继续循环
    	if (gTime[2] == mSec) continue;
   132dc:	1fff2417          	auipc	s0,0x1fff2
   132e0:	3a840413          	addi	s0,s0,936 # 20005684 <gTime>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:71
    	//（2.2）到达一秒
   		mSec=gTime[2]; 
        //（2.3）达到主循环次数设定值，执行下列语句，进行灯的亮暗处理
        //（2.3.1）如灯状态标志mFlag为'L'，灯的闪烁次数+1并显示，改变灯状态及标志
        if (mFlag=='L')                    //判断灯的状态标志
   132e4:	04c00a13          	li	s4,76
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:82
        //（2.3.2）如灯状态标志mFlag为'A'，改变灯状态及标志
        else
        {
            mFlag='L';                       //灯的状态标志
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
            printf("%d:%d:%d\n",gTime[0],gTime[1],gTime[2]);
   132e8:	00003b17          	auipc	s6,0x3
   132ec:	ed0b0b13          	addi	s6,s6,-304 # 161b8 <strlen+0x290>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:73
            mFlag='A';                       //灯的状态标志
   132f0:	04100b93          	li	s7,65
   132f4:	a02d                	j	1331e <main+0x158>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:81
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
   132f6:	4585                	li	a1,1
   132f8:	10e00513          	li	a0,270
   132fc:	00000097          	auipc	ra,0x0
   13300:	1a0080e7          	jalr	416(ra) # 1349c <gpio_set>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:82
            printf("%d:%d:%d\n",gTime[0],gTime[1],gTime[2]);
   13304:	00244683          	lbu	a3,2(s0)
   13308:	00144603          	lbu	a2,1(s0)
   1330c:	00044583          	lbu	a1,0(s0)
   13310:	855a                	mv	a0,s6
   13312:	00001097          	auipc	ra,0x1
   13316:	4e4080e7          	jalr	1252(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:80
            mFlag='L';                       //灯的状态标志
   1331a:	89d2                	mv	s3,s4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:66
    	if (gTime[2] == mSec) continue;
   1331c:	8926                	mv	s2,s1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:64
    	printf("");
   1331e:	8556                	mv	a0,s5
   13320:	00001097          	auipc	ra,0x1
   13324:	4d6080e7          	jalr	1238(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:66
    	if (gTime[2] == mSec) continue;
   13328:	00244483          	lbu	s1,2(s0)
   1332c:	ff2489e3          	beq	s1,s2,1331e <main+0x158>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:71
        if (mFlag=='L')                    //判断灯的状态标志
   13330:	fd4993e3          	bne	s3,s4,132f6 <main+0x130>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:74
            gpio_set(LIGHT_BLUE,LIGHT_ON);  //灯“亮”
   13334:	4581                	li	a1,0
   13336:	10e00513          	li	a0,270
   1333a:	00000097          	auipc	ra,0x0
   1333e:	162080e7          	jalr	354(ra) # 1349c <gpio_set>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:75
            printf("%d:%d:%d\n",gTime[0],gTime[1],gTime[2]);
   13342:	00244683          	lbu	a3,2(s0)
   13346:	00144603          	lbu	a2,1(s0)
   1334a:	00044583          	lbu	a1,0(s0)
   1334e:	855a                	mv	a0,s6
   13350:	00001097          	auipc	ra,0x1
   13354:	4a6080e7          	jalr	1190(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/main.c:73
            mFlag='A';                       //灯的状态标志
   13358:	89de                	mv	s3,s7
   1335a:	b7c9                	j	1331c <main+0x156>

0001335c <flash_erase>:
flash_erase():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:66
//函数返回：函数执行执行状态：0=正常；1=异常。
//参数说明：sect：目标扇区号（范围取决于实际芯片
//功能概要：擦除flash存储器的sect扇区
//======================================================================
uint8_t flash_erase(uint16_t sect)
{
   1335c:	1141                	addi	sp,sp,-16
   1335e:	c606                	sw	ra,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:70
    uint32_t StartAddr;
    uint8_t flag;
    StartAddr = (uint32_t)(sect * Flash_Sect_size + Flash_Address);
    flag = FLASH_ROM_ERASE(StartAddr,4096);
   13360:	1fff2797          	auipc	a5,0x1fff2
   13364:	32878793          	addi	a5,a5,808 # 20005688 <component_fun>
   13368:	439c                	lw	a5,0(a5)
   1336a:	57fc                	lw	a5,108(a5)
   1336c:	6685                	lui	a3,0x1
   1336e:	4601                	li	a2,0
   13370:	00c51593          	slli	a1,a0,0xc
   13374:	4505                	li	a0,1
   13376:	9782                	jalr	a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:73
    return flag;

}
   13378:	0ff57513          	andi	a0,a0,255
   1337c:	40b2                	lw	ra,12(sp)
   1337e:	0141                	addi	sp,sp,16
   13380:	8082                	ret

00013382 <flash_Best>:
flash_Best():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:176
//            buf:待写入数据的首地址
//功能概要：首位地址都对齐的情况下的数据写入
//编程参考：暂无
//======================================================================
uint8_t flash_Best(uint16_t sect,uint16_t offset,uint16_t N,uint8_t *buf)
{
   13382:	1141                	addi	sp,sp,-16
   13384:	c606                	sw	ra,12(sp)
   13386:	8736                	mv	a4,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:178
    uint32_t addr;
    addr = (uint32_t)(Flash_Address+sect*Flash_Sect_size+offset);
   13388:	0532                	slli	a0,a0,0xc
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:179
    uint8_t flag=FLASH_ROM_WRITE(addr,buf,N);
   1338a:	1fff2797          	auipc	a5,0x1fff2
   1338e:	2fe78793          	addi	a5,a5,766 # 20005688 <component_fun>
   13392:	439c                	lw	a5,0(a5)
   13394:	57fc                	lw	a5,108(a5)
   13396:	86b2                	mv	a3,a2
   13398:	863a                	mv	a2,a4
   1339a:	95aa                	add	a1,a1,a0
   1339c:	4509                	li	a0,2
   1339e:	9782                	jalr	a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:181
    return flag;
}
   133a0:	0ff57513          	andi	a0,a0,255
   133a4:	40b2                	lw	ra,12(sp)
   133a6:	0141                	addi	sp,sp,16
   133a8:	8082                	ret

000133aa <flash_read_logic>:
flash_read_logic():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:198
//编程参考：暂无
//=======================================================================
void flash_read_logic(uint8_t* Buffer,uint16_t sect,uint16_t offset,uint32_t N)
{

    uint32_t i, Length = ( N + 3 ) >> 2;
   133aa:	068d                	addi	a3,a3,3
   133ac:	8289                	srli	a3,a3,0x2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:199
    uint32_t* pCode = ( uint32_t* ) (sect * Flash_Sect_size + offset + Flash_Address);
   133ae:	05b2                	slli	a1,a1,0xc
   133b0:	962e                	add	a2,a2,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:202
    uint32_t* pBuf = ( uint32_t* ) Buffer;

    for ( i = 0; i < Length; i++ )
   133b2:	ce91                	beqz	a3,133ce <flash_read_logic+0x24>
   133b4:	068a                	slli	a3,a3,0x2
   133b6:	96aa                	add	a3,a3,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:200
    uint32_t* pBuf = ( uint32_t* ) Buffer;
   133b8:	87aa                	mv	a5,a0
   133ba:	40a60533          	sub	a0,a2,a0
   133be:	00a78733          	add	a4,a5,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:204 (discriminator 3)
    {
      *pBuf++ = *pCode++;
   133c2:	0791                	addi	a5,a5,4
   133c4:	4318                	lw	a4,0(a4)
   133c6:	fee7ae23          	sw	a4,-4(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:202 (discriminator 3)
    for ( i = 0; i < Length; i++ )
   133ca:	fed79ae3          	bne	a5,a3,133be <flash_read_logic+0x14>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:207
    }

}
   133ce:	8082                	ret

000133d0 <flash_write>:
flash_write():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:107
{
   133d0:	7179                	addi	sp,sp,-48
   133d2:	d606                	sw	ra,44(sp)
   133d4:	d422                	sw	s0,40(sp)
   133d6:	d226                	sw	s1,36(sp)
   133d8:	d04a                	sw	s2,32(sp)
   133da:	ce4e                	sw	s3,28(sp)
   133dc:	737d                	lui	t1,0xfffff
   133de:	911a                	add	sp,sp,t1
   133e0:	89aa                	mv	s3,a0
   133e2:	892e                	mv	s2,a1
   133e4:	84b2                	mv	s1,a2
   133e6:	8436                	mv	s0,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:112
    if(offset+N>Flash_Sect_size)
   133e8:	00b60733          	add	a4,a2,a1
   133ec:	6785                	lui	a5,0x1
   133ee:	04e7d663          	bge	a5,a4,1343a <flash_write+0x6a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:116
        flash_write(sect,offset,Flash_Sect_size-offset,buf);
   133f2:	6605                	lui	a2,0x1
   133f4:	8e0d                	sub	a2,a2,a1
   133f6:	0642                	slli	a2,a2,0x10
   133f8:	8241                	srli	a2,a2,0x10
   133fa:	00000097          	auipc	ra,0x0
   133fe:	fd6080e7          	jalr	-42(ra) # 133d0 <flash_write>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:118
        flash_write(sect+1,0,N-(Flash_Sect_size-offset),buf+(Flash_Sect_size-offset));
   13402:	6685                	lui	a3,0x1
   13404:	412686b3          	sub	a3,a3,s2
   13408:	767d                	lui	a2,0xfffff
   1340a:	9626                	add	a2,a2,s1
   1340c:	964a                	add	a2,a2,s2
   1340e:	00198513          	addi	a0,s3,1
   13412:	96a2                	add	a3,a3,s0
   13414:	0642                	slli	a2,a2,0x10
   13416:	8241                	srli	a2,a2,0x10
   13418:	4581                	li	a1,0
   1341a:	0542                	slli	a0,a0,0x10
   1341c:	8141                	srli	a0,a0,0x10
   1341e:	00000097          	auipc	ra,0x0
   13422:	fb2080e7          	jalr	-78(ra) # 133d0 <flash_write>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:134
}
   13426:	4501                	li	a0,0
   13428:	6305                	lui	t1,0x1
   1342a:	911a                	add	sp,sp,t1
   1342c:	50b2                	lw	ra,44(sp)
   1342e:	5422                	lw	s0,40(sp)
   13430:	5492                	lw	s1,36(sp)
   13432:	5902                	lw	s2,32(sp)
   13434:	49f2                	lw	s3,28(sp)
   13436:	6145                	addi	sp,sp,48
   13438:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:124
         flash_read_logic(data,sect,0,Flash_Sect_size); //将当前扇区的全部值读入数组中
   1343a:	6685                	lui	a3,0x1
   1343c:	4601                	li	a2,0
   1343e:	85aa                	mv	a1,a0
   13440:	757d                	lui	a0,0xfffff
   13442:	6785                	lui	a5,0x1
   13444:	0818                	addi	a4,sp,16
   13446:	97ba                	add	a5,a5,a4
   13448:	953e                	add	a0,a0,a5
   1344a:	00000097          	auipc	ra,0x0
   1344e:	f60080e7          	jalr	-160(ra) # 133aa <flash_read_logic>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:126
         for(i = 0;i<N;i++)
   13452:	c885                	beqz	s1,13482 <flash_write+0xb2>
   13454:	87a2                	mv	a5,s0
   13456:	777d                	lui	a4,0xfffff
   13458:	6685                	lui	a3,0x1
   1345a:	0810                	addi	a2,sp,16
   1345c:	96b2                	add	a3,a3,a2
   1345e:	9736                	add	a4,a4,a3
   13460:	c63a                	sw	a4,12(sp)
   13462:	012705b3          	add	a1,a4,s2
   13466:	0405                	addi	s0,s0,1
   13468:	fff48693          	addi	a3,s1,-1
   1346c:	06c2                	slli	a3,a3,0x10
   1346e:	82c1                	srli	a3,a3,0x10
   13470:	96a2                	add	a3,a3,s0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:128 (discriminator 3)
             data[offset+i] = buf[i];
   13472:	0007c703          	lbu	a4,0(a5) # 1000 <MCU_SECTORSIZE>
   13476:	00e58023          	sb	a4,0(a1)
   1347a:	0785                	addi	a5,a5,1
   1347c:	0585                	addi	a1,a1,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:126 (discriminator 3)
         for(i = 0;i<N;i++)
   1347e:	fed79ae3          	bne	a5,a3,13472 <flash_write+0xa2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/flash.c:131
         flash_Best(sect,0,Flash_Sect_size,data);
   13482:	76fd                	lui	a3,0xfffff
   13484:	6785                	lui	a5,0x1
   13486:	0818                	addi	a4,sp,16
   13488:	97ba                	add	a5,a5,a4
   1348a:	96be                	add	a3,a3,a5
   1348c:	6605                	lui	a2,0x1
   1348e:	4581                	li	a1,0
   13490:	854e                	mv	a0,s3
   13492:	00000097          	auipc	ra,0x0
   13496:	ef0080e7          	jalr	-272(ra) # 13382 <flash_Best>
   1349a:	b771                	j	13426 <flash_write+0x56>

0001349c <gpio_set>:
gpio_get_port_pin():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:372
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
    *port = (port_pin>>8);
   1349c:	00855793          	srli	a5,a0,0x8
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   134a0:	0ff57513          	andi	a0,a0,255
gpio_set():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:70
   switch(port)
   134a4:	c789                	beqz	a5,134ae <gpio_set+0x12>
   134a6:	4705                	li	a4,1
   134a8:	02e78b63          	beq	a5,a4,134de <gpio_set+0x42>
   134ac:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:74
       if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   134ae:	4785                	li	a5,1
   134b0:	00f58d63          	beq	a1,a5,134ca <gpio_set+0x2e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:77
           R32_PA_CLR |= (1<<pin);
   134b4:	40001737          	lui	a4,0x40001
   134b8:	0ac72683          	lw	a3,172(a4) # 400010ac <_eusrstack+0x1fff90ac>
   134bc:	4785                	li	a5,1
   134be:	00a79533          	sll	a0,a5,a0
   134c2:	8d55                	or	a0,a0,a3
   134c4:	0aa72623          	sw	a0,172(a4)
   134c8:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:75
           R32_PA_OUT |= (1<<pin);
   134ca:	40001737          	lui	a4,0x40001
   134ce:	0a872683          	lw	a3,168(a4) # 400010a8 <_eusrstack+0x1fff90a8>
   134d2:	00a79533          	sll	a0,a5,a0
   134d6:	8d55                	or	a0,a0,a3
   134d8:	0aa72423          	sw	a0,168(a4)
   134dc:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:81
      if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   134de:	4785                	li	a5,1
   134e0:	00f58d63          	beq	a1,a5,134fa <gpio_set+0x5e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:84
          R32_PB_CLR |= (1<<pin);
   134e4:	40001737          	lui	a4,0x40001
   134e8:	0cc72683          	lw	a3,204(a4) # 400010cc <_eusrstack+0x1fff90cc>
   134ec:	4785                	li	a5,1
   134ee:	00a79533          	sll	a0,a5,a0
   134f2:	8d55                	or	a0,a0,a3
   134f4:	0ca72623          	sw	a0,204(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:88
}
   134f8:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:82
          R32_PB_OUT |= (1<<pin);
   134fa:	40001737          	lui	a4,0x40001
   134fe:	0c872683          	lw	a3,200(a4) # 400010c8 <_eusrstack+0x1fff90c8>
   13502:	00a79533          	sll	a0,a5,a0
   13506:	8d55                	or	a0,a0,a3
   13508:	0ca72423          	sw	a0,200(a4)
   1350c:	8082                	ret

0001350e <gpio_init>:
gpio_init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:24
{
   1350e:	1141                	addi	sp,sp,-16
   13510:	c606                	sw	ra,12(sp)
gpio_get_port_pin():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:372
    *port = (port_pin>>8);
   13512:	00855793          	srli	a5,a0,0x8
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   13516:	0ff57693          	andi	a3,a0,255
gpio_init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:29
    switch(port)
   1351a:	c799                	beqz	a5,13528 <gpio_init+0x1a>
   1351c:	4705                	li	a4,1
   1351e:	02e78e63          	beq	a5,a4,1355a <gpio_init+0x4c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:55
}
   13522:	40b2                	lw	ra,12(sp)
   13524:	0141                	addi	sp,sp,16
   13526:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:32
        if(dir == 1)  //定义为输出引脚
   13528:	4785                	li	a5,1
   1352a:	00f58963          	beq	a1,a5,1353c <gpio_init+0x2e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:39
            R32_PA_DIR &=~(GPIO_INPUT << pin );
   1352e:	400017b7          	lui	a5,0x40001
   13532:	0a07a703          	lw	a4,160(a5) # 400010a0 <_eusrstack+0x1fff90a0>
   13536:	0ae7a023          	sw	a4,160(a5)
   1353a:	b7e5                	j	13522 <gpio_init+0x14>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:34
            R32_PA_DIR |= (GPIO_OUTPUT << pin );
   1353c:	40001737          	lui	a4,0x40001
   13540:	0a072583          	lw	a1,160(a4) # 400010a0 <_eusrstack+0x1fff90a0>
   13544:	00d796b3          	sll	a3,a5,a3
   13548:	8ecd                	or	a3,a3,a1
   1354a:	0ad72023          	sw	a3,160(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:35
            gpio_set(port_pin,state);
   1354e:	85b2                	mv	a1,a2
   13550:	00000097          	auipc	ra,0x0
   13554:	f4c080e7          	jalr	-180(ra) # 1349c <gpio_set>
   13558:	b7e9                	j	13522 <gpio_init+0x14>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:43
        if(dir == 1)  //定义为输出引脚
   1355a:	4785                	li	a5,1
   1355c:	00f58963          	beq	a1,a5,1356e <gpio_init+0x60>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:50
            R32_PB_DIR &=~(GPIO_INPUT << pin );
   13560:	400017b7          	lui	a5,0x40001
   13564:	0c07a703          	lw	a4,192(a5) # 400010c0 <_eusrstack+0x1fff90c0>
   13568:	0ce7a023          	sw	a4,192(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:55
}
   1356c:	bf5d                	j	13522 <gpio_init+0x14>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:45
            R32_PB_DIR |= (GPIO_OUTPUT << pin );
   1356e:	40001737          	lui	a4,0x40001
   13572:	0c072583          	lw	a1,192(a4) # 400010c0 <_eusrstack+0x1fff90c0>
   13576:	00d796b3          	sll	a3,a5,a3
   1357a:	8ecd                	or	a3,a3,a1
   1357c:	0cd72023          	sw	a3,192(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gpio.c:46
            gpio_set(port_pin,state);
   13580:	85b2                	mv	a1,a2
   13582:	00000097          	auipc	ra,0x0
   13586:	f1a080e7          	jalr	-230(ra) # 1349c <gpio_set>
   1358a:	bf61                	j	13522 <gpio_init+0x14>

0001358c <IRQ_OPC_CHANGE>:
IRQ_OPC_CHANGE():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:25
    static uint32_t opcode = 0;
    uint32_t bios_addr=0, user_addr=0;  //函数入口地址
    uint32_t user_opc=0;
    uint32_t imm1=0,imm2=0;
    uint32_t user_pc=0;
    if(IRQ_NUM == SysTick_IRQn)     //对SysTick_Handler中断进行重定向
   1358c:	47b1                	li	a5,12
   1358e:	02f50563          	beq	a0,a5,135b8 <IRQ_OPC_CHANGE+0x2c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:31
    {
        user_addr = (uint32_t)SysTick_Handler;
        bios_addr = (uint32_t)component_fun[28];
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
    }
    else if(IRQ_NUM == SWI_IRQn)    //对SysTick_Handler中断进行重定向
   13592:	47b9                	li	a5,14
   13594:	08f50763          	beq	a0,a5,13622 <IRQ_OPC_CHANGE+0x96>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:37
    {
        user_addr = (uint32_t)SW_Handler;
        bios_addr = (uint32_t)component_fun[29];
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
    }
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   13598:	476d                	li	a4,27
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:44
        user_addr = (uint32_t)UART1_IRQHandler;
        bios_addr = (uint32_t)component_fun[30];
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
    }
    else                            //仅支持SysTick_Handler、SW_Handler、UART1_IRQHandler的重定向
       return 0;
   1359a:	4781                	li	a5,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:37
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   1359c:	08e51163          	bne	a0,a4,1361e <IRQ_OPC_CHANGE+0x92>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:39
        user_addr = (uint32_t)UART1_IRQHandler;
   135a0:	fffff817          	auipc	a6,0xfffff
   135a4:	b2c80813          	addi	a6,a6,-1236 # 120cc <UART1_IRQHandler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:40
        bios_addr = (uint32_t)component_fun[30];
   135a8:	1fff2797          	auipc	a5,0x1fff2
   135ac:	0e078793          	addi	a5,a5,224 # 20005688 <component_fun>
   135b0:	439c                	lw	a5,0(a5)
   135b2:	5fb0                	lw	a2,120(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:41
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
   135b4:	59b8                	lw	a4,112(a1)
   135b6:	a821                	j	135ce <IRQ_OPC_CHANGE+0x42>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:27
        user_addr = (uint32_t)SysTick_Handler;
   135b8:	00000817          	auipc	a6,0x0
   135bc:	71880813          	addi	a6,a6,1816 # 13cd0 <SysTick_Handler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:28
        bios_addr = (uint32_t)component_fun[28];
   135c0:	1fff2797          	auipc	a5,0x1fff2
   135c4:	0c878793          	addi	a5,a5,200 # 20005688 <component_fun>
   135c8:	439c                	lw	a5,0(a5)
   135ca:	5bb0                	lw	a2,112(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:29
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
   135cc:	59d8                	lw	a4,52(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:50
    // printf("addr1:%lx\r\n", user_addr);
    // printf("addr2:%lx\r\n", bios_addr);
    // printf("opc:%lx\r\n", user_opc);

    //判断该指令是否为向前跳转，如果是向前跳转说明已经修改过了中断向量表，无需再次修改
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   135ce:	06074663          	bltz	a4,1363a <IRQ_OPC_CHANGE+0xae>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:52

    imm1 = ( ((user_opc&0x80000000)>>11) | ((user_opc&0x7FE00000)>>20) | ((user_opc&0x00100000)>>9) | ((user_opc&0x000FF000)) );
   135d2:	00975793          	srli	a5,a4,0x9
   135d6:	6685                	lui	a3,0x1
   135d8:	80068693          	addi	a3,a3,-2048 # 800 <GEC_USER_SECTOR_END+0x7db>
   135dc:	8ff5                	and	a5,a5,a3
   135de:	000ff6b7          	lui	a3,0xff
   135e2:	00d775b3          	and	a1,a4,a3
   135e6:	8fcd                	or	a5,a5,a1
   135e8:	8351                	srli	a4,a4,0x14
   135ea:	7fe77713          	andi	a4,a4,2046
   135ee:	8fd9                	or	a5,a5,a4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:58
    if(imm1>>20==1)         //向前跳转，补符号位
        imm1 = 0xFFE00000 | imm1;
    // printf("imm1:%lx\r\n", imm1);
    user_pc = user_addr - imm1;
    // printf("pc:%lx\r\n", user_pc);
    imm2 = bios_addr - user_pc;
   135f0:	41060633          	sub	a2,a2,a6
   135f4:	97b2                	add	a5,a5,a2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:60
    // printf("imm2:%lx\r\n", imm2);
    opcode = (((imm2&0x100000)<<11) | ((imm2&0x7FE)<<20) | ((imm2&0x800)<<9) | (imm2&0xFF000)) | (0x0) | (0x6f);
   135f6:	00b79513          	slli	a0,a5,0xb
   135fa:	80000737          	lui	a4,0x80000
   135fe:	8d79                	and	a0,a0,a4
   13600:	00979713          	slli	a4,a5,0x9
   13604:	00100637          	lui	a2,0x100
   13608:	8f71                	and	a4,a4,a2
   1360a:	8d59                	or	a0,a0,a4
   1360c:	8efd                	and	a3,a3,a5
   1360e:	8d55                	or	a0,a0,a3
   13610:	07d2                	slli	a5,a5,0x14
   13612:	7fe00737          	lui	a4,0x7fe00
   13616:	8ff9                	and	a5,a5,a4
   13618:	8fc9                	or	a5,a5,a0
   1361a:	06f7e793          	ori	a5,a5,111
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:63
    // printf("opcode:%lx\r\n", opcode);
    return opcode;
}
   1361e:	853e                	mv	a0,a5
   13620:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:33
        user_addr = (uint32_t)SW_Handler;
   13622:	fffff817          	auipc	a6,0xfffff
   13626:	a7e80813          	addi	a6,a6,-1410 # 120a0 <SW_Handler>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:34
        bios_addr = (uint32_t)component_fun[29];
   1362a:	1fff2797          	auipc	a5,0x1fff2
   1362e:	05e78793          	addi	a5,a5,94 # 20005688 <component_fun>
   13632:	439c                	lw	a5,0(a5)
   13634:	5bf0                	lw	a2,116(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:35
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
   13636:	5dd8                	lw	a4,60(a1)
   13638:	bf59                	j	135ce <IRQ_OPC_CHANGE+0x42>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:50 (discriminator 1)
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   1363a:	0505                	addi	a0,a0,1
   1363c:	050a                	slli	a0,a0,0x2
   1363e:	952e                	add	a0,a0,a1
   13640:	411c                	lw	a5,0(a0)
   13642:	bff1                	j	1361e <IRQ_OPC_CHANGE+0x92>

00013644 <Vectors_Init>:
Vectors_Init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:72
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
   13644:	716d                	addi	sp,sp,-272
   13646:	10112623          	sw	ra,268(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:82
    // {
    //     flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    //     MCU_FLASH_ADDR_START,24,(uint8_t *)"0123456789ABCDEF20200716");
    // }
    //（1）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+GEC_COMPONENT_LST_START*MCU_SECTORSIZE);
   1364a:	67c1                	lui	a5,0x10
   1364c:	1fff2717          	auipc	a4,0x1fff2
   13650:	02f72e23          	sw	a5,60(a4) # 20005688 <component_fun>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:87
    
    uint8_t user[MCU_SECTORSIZE/16];                    //User向量表变量数组
    uint32_t opcode;
    //（2.1）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_read_logic(user,GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16);
   13654:	10000693          	li	a3,256
   13658:	4601                	li	a2,0
   1365a:	45c9                	li	a1,18
   1365c:	850a                	mv	a0,sp
   1365e:	00000097          	auipc	ra,0x0
   13662:	d4c080e7          	jalr	-692(ra) # 133aa <flash_read_logic>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:89
    // （2.2）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_erase(GEC_USER_SECTOR_START);
   13666:	4549                	li	a0,18
   13668:	00000097          	auipc	ra,0x0
   1366c:	cf4080e7          	jalr	-780(ra) # 1335c <flash_erase>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:92
    //重定向 UART1_IRQHandler
    // user[112]=(uint8_t)(0x6f); user[113]=(uint8_t)(0x40); user[114]=(uint8_t)(0xaf); user[115]=(uint8_t)(0x8a);
    opcode = IRQ_OPC_CHANGE(UART1_IRQn, user);
   13670:	858a                	mv	a1,sp
   13672:	456d                	li	a0,27
   13674:	00000097          	auipc	ra,0x0
   13678:	f18080e7          	jalr	-232(ra) # 1358c <IRQ_OPC_CHANGE>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:93
    ((uint32_t *)user)[UART1_IRQn+1] = opcode;
   1367c:	d8aa                	sw	a0,112(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:105
        // user[52]=(uint8_t)(0x6f); user[53]=(uint8_t)(0x40); user[54]=(uint8_t)(0x0f); user[55]=(uint8_t)(0x86);
        opcode = IRQ_OPC_CHANGE(SysTick_IRQn, user);
        ((uint32_t *)user)[SysTick_IRQn+1] = opcode;
    #endif
    //（2.3）将修改后的user数组写回User中断向量表
    flash_write(GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16,user);
   1367e:	868a                	mv	a3,sp
   13680:	10000613          	li	a2,256
   13684:	4581                	li	a1,0
   13686:	4549                	li	a0,18
   13688:	00000097          	auipc	ra,0x0
   1368c:	d48080e7          	jalr	-696(ra) # 133d0 <flash_write>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:108

    //（4）printf提示
    printf("  【User提示】：将进入User的main函数执行...\r\n\n");
   13690:	00003517          	auipc	a0,0x3
   13694:	b3450513          	addi	a0,a0,-1228 # 161c4 <strlen+0x29c>
   13698:	00001097          	auipc	ra,0x1
   1369c:	15e080e7          	jalr	350(ra) # 147f6 <myprintf>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/gec.c:111

    // #endif
}
   136a0:	10c12083          	lw	ra,268(sp)
   136a4:	6151                	addi	sp,sp,272
   136a6:	8082                	ret

000136a8 <uart_init>:
uart_init():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:31
void uart_init(uint8_t uartNo, uint32_t baud_rate)
{
    uint32_t x;

//    SetSysClock( CLK_SOURCE_PLL_60MHz );
    switch (uartNo)
   136a8:	4805                	li	a6,1
   136aa:	09050e63          	beq	a0,a6,13746 <uart_init+0x9e>
   136ae:	01851813          	slli	a6,a0,0x18
   136b2:	41885813          	srai	a6,a6,0x18
   136b6:	00080963          	beqz	a6,136c8 <uart_init+0x20>
   136ba:	4809                	li	a6,2
   136bc:	11050663          	beq	a0,a6,137c8 <uart_init+0x120>
   136c0:	480d                	li	a6,3
   136c2:	19050863          	beq	a0,a6,13852 <uart_init+0x1aa>
   136c6:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:40
            //
            switch (UART0_GROUP)
            {
                case 0:

                   R32_PB_OUT |= ((uint32_t)(bTXD0));
   136c8:	400017b7          	lui	a5,0x40001
   136cc:	0c87a703          	lw	a4,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   136d0:	08076713          	ori	a4,a4,128
   136d4:	0ce7a423          	sw	a4,200(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:42
                   //PB4->RX
                   R32_PB_PD_DRV &= ~((uint32_t)(bRXD0));
   136d8:	0d47a703          	lw	a4,212(a5)
   136dc:	9b3d                	andi	a4,a4,-17
   136de:	0ce7aa23          	sw	a4,212(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:43
                   R32_PB_PU     |= ((uint32_t)(bRXD0));
   136e2:	0d07a703          	lw	a4,208(a5)
   136e6:	01076713          	ori	a4,a4,16
   136ea:	0ce7a823          	sw	a4,208(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:44
                   R32_PB_DIR    &= ~((uint32_t)(bRXD0));
   136ee:	0c07a703          	lw	a4,192(a5)
   136f2:	9b3d                	andi	a4,a4,-17
   136f4:	0ce7a023          	sw	a4,192(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:46
                   //PB7->TX
                   R32_PB_PD_DRV &= ~((uint32_t)(bTXD0));
   136f8:	0d47a703          	lw	a4,212(a5)
   136fc:	f7f77713          	andi	a4,a4,-129
   13700:	0ce7aa23          	sw	a4,212(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:47
                   R32_PB_DIR    |= ((uint32_t)(bTXD0));
   13704:	0c07a703          	lw	a4,192(a5)
   13708:	08076713          	ori	a4,a4,128
   1370c:	0ce7a023          	sw	a4,192(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:50

//                   R8_UART0_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;     // FIFO打开，触发点4字节
                   R8_UART0_LCR = RB_LCR_WORD_SZ;
   13710:	40003737          	lui	a4,0x40003
   13714:	478d                	li	a5,3
   13716:	00f701a3          	sb	a5,3(a4) # 40003003 <_eusrstack+0x1fffb003>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:51
                   R8_UART0_IER = RB_IER_TXD_EN;
   1371a:	04000793          	li	a5,64
   1371e:	00f700a3          	sb	a5,1(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:52
                   R8_UART0_DIV = 1;
   13722:	4785                	li	a5,1
   13724:	00f70723          	sb	a5,14(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:55

                   //配置波特率115200
                   x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13728:	04787637          	lui	a2,0x4787
   1372c:	8c060613          	addi	a2,a2,-1856 # 47868c0 <_data_lma+0x47703e0>
   13730:	02b657b3          	divu	a5,a2,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:56
                   x = (x + 5) / 10;
   13734:	0795                	addi	a5,a5,5
   13736:	4629                	li	a2,10
   13738:	02c7d7b3          	divu	a5,a5,a2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:57
                   R16_UART0_DL = (uint16_t)x;
   1373c:	07c2                	slli	a5,a5,0x10
   1373e:	83c1                	srli	a5,a5,0x10
   13740:	00f71623          	sh	a5,12(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:86
                  break;
                default:
                    break;
            }
#endif
            break;
   13744:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:93
#ifdef UART1_GROUP
            //
            switch (UART1_GROUP) {
                case 0:

                    R32_PA_OUT |= ((uint32_t)(bTXD1));
   13746:	400017b7          	lui	a5,0x40001
   1374a:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   1374e:	20076713          	ori	a4,a4,512
   13752:	0ae7a423          	sw	a4,168(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:95
                    //PA8->RX
                    R32_PA_PD_DRV &= ~((uint32_t)(bRXD1));
   13756:	0b47a703          	lw	a4,180(a5)
   1375a:	eff77713          	andi	a4,a4,-257
   1375e:	0ae7aa23          	sw	a4,180(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:96
                    R32_PA_PU     |= ((uint32_t)(bRXD1));
   13762:	0b07a703          	lw	a4,176(a5)
   13766:	10076713          	ori	a4,a4,256
   1376a:	0ae7a823          	sw	a4,176(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:97
                    R32_PA_DIR    &= ~((uint32_t)(bRXD1));
   1376e:	0a07a703          	lw	a4,160(a5)
   13772:	eff77713          	andi	a4,a4,-257
   13776:	0ae7a023          	sw	a4,160(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:100

                    //PA9->TX
                    R32_PA_PD_DRV &= ~((uint32_t)(bTXD1));
   1377a:	0b47a703          	lw	a4,180(a5)
   1377e:	dff77713          	andi	a4,a4,-513
   13782:	0ae7aa23          	sw	a4,180(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:101
                    R32_PA_DIR    |= ((uint32_t)(bTXD1));
   13786:	0a07a703          	lw	a4,160(a5)
   1378a:	20076713          	ori	a4,a4,512
   1378e:	0ae7a023          	sw	a4,160(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:104

//                    R8_UART1_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                    R8_UART1_LCR = RB_LCR_WORD_SZ;
   13792:	40003737          	lui	a4,0x40003
   13796:	478d                	li	a5,3
   13798:	40f701a3          	sb	a5,1027(a4) # 40003403 <_eusrstack+0x1fffb403>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:105
                    R8_UART1_IER = RB_IER_TXD_EN;
   1379c:	04000793          	li	a5,64
   137a0:	40f700a3          	sb	a5,1025(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:106
                    R8_UART1_DIV = 1;
   137a4:	4785                	li	a5,1
   137a6:	40f70723          	sb	a5,1038(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:109

                    //配置波特率115200
                    x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   137aa:	047876b7          	lui	a3,0x4787
   137ae:	8c068693          	addi	a3,a3,-1856 # 47868c0 <_data_lma+0x47703e0>
   137b2:	02b6d7b3          	divu	a5,a3,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:110
                    x = (x + 5) / 10;
   137b6:	0795                	addi	a5,a5,5
   137b8:	46a9                	li	a3,10
   137ba:	02d7d7b3          	divu	a5,a5,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:111
                    R16_UART1_DL = (uint16_t)x;
   137be:	07c2                	slli	a5,a5,0x10
   137c0:	83c1                	srli	a5,a5,0x10
   137c2:	40f71623          	sh	a5,1036(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:140
                    break;
                default:
                    break;
            }
#endif
            break;
   137c6:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:143
        case UART_2:

              R32_PB_OUT |= ((uint32_t)(bTXD2));
   137c8:	400017b7          	lui	a5,0x40001
   137cc:	0c87a683          	lw	a3,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   137d0:	00800537          	lui	a0,0x800
   137d4:	8ec9                	or	a3,a3,a0
   137d6:	0cd7a423          	sw	a3,200(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:145
              //PB22->RX
              R32_PB_PD_DRV &= ~((uint32_t)(bRXD2));
   137da:	0d47a683          	lw	a3,212(a5)
   137de:	ffc00737          	lui	a4,0xffc00
   137e2:	177d                	addi	a4,a4,-1
   137e4:	8ef9                	and	a3,a3,a4
   137e6:	0cd7aa23          	sw	a3,212(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:146
              R32_PB_PU     |= ((uint32_t)(bRXD2));
   137ea:	0d07a683          	lw	a3,208(a5)
   137ee:	00400637          	lui	a2,0x400
   137f2:	8ed1                	or	a3,a3,a2
   137f4:	0cd7a823          	sw	a3,208(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:147
              R32_PB_DIR    &= ~((uint32_t)(bRXD2));
   137f8:	0c07a683          	lw	a3,192(a5)
   137fc:	8f75                	and	a4,a4,a3
   137fe:	0ce7a023          	sw	a4,192(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:149
              //PB23->TX
              R32_PB_PD_DRV &= ~((uint32_t)(bTXD2));
   13802:	0d47a683          	lw	a3,212(a5)
   13806:	ff800637          	lui	a2,0xff800
   1380a:	167d                	addi	a2,a2,-1
   1380c:	8ef1                	and	a3,a3,a2
   1380e:	0cd7aa23          	sw	a3,212(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:150
              R32_PB_DIR    |= ((uint32_t)(bTXD2));
   13812:	0c07a703          	lw	a4,192(a5)
   13816:	8f49                	or	a4,a4,a0
   13818:	0ce7a023          	sw	a4,192(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:153

//              R8_UART2_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;      // FIFO打开，触发点4字节
              R8_UART2_LCR = RB_LCR_WORD_SZ;
   1381c:	400046b7          	lui	a3,0x40004
   13820:	478d                	li	a5,3
   13822:	80f681a3          	sb	a5,-2045(a3) # 40003803 <_eusrstack+0x1fffb803>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:154
              R8_UART2_IER = RB_IER_TXD_EN;
   13826:	04000793          	li	a5,64
   1382a:	80f680a3          	sb	a5,-2047(a3)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:155
              R8_UART2_DIV = 1;
   1382e:	4785                	li	a5,1
   13830:	80f68723          	sb	a5,-2034(a3)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:158

              //配置波特率115200
              x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13834:	04787737          	lui	a4,0x4787
   13838:	8c070713          	addi	a4,a4,-1856 # 47868c0 <_data_lma+0x47703e0>
   1383c:	02b757b3          	divu	a5,a4,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:159
              x = (x + 5) / 10;
   13840:	0795                	addi	a5,a5,5
   13842:	4729                	li	a4,10
   13844:	02e7d7b3          	divu	a5,a5,a4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:160
              R16_UART2_DL = (uint16_t)x;
   13848:	07c2                	slli	a5,a5,0x10
   1384a:	83c1                	srli	a5,a5,0x10
   1384c:	80f69623          	sh	a5,-2036(a3)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:161
              break;
   13850:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:164
        case UART_3:

                R32_PA_OUT |= ((uint32_t)(bTXD3));
   13852:	400017b7          	lui	a5,0x40001
   13856:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   1385a:	02076713          	ori	a4,a4,32
   1385e:	0ae7a423          	sw	a4,168(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:166
                //PA4->RX
                R32_PA_PD_DRV &= ~((uint32_t)(bRXD3));
   13862:	0b47a703          	lw	a4,180(a5)
   13866:	9b3d                	andi	a4,a4,-17
   13868:	0ae7aa23          	sw	a4,180(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:167
                R32_PA_PU     |= ((uint32_t)(bRXD3));
   1386c:	0b07a703          	lw	a4,176(a5)
   13870:	01076713          	ori	a4,a4,16
   13874:	0ae7a823          	sw	a4,176(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:168
                R32_PA_DIR    &= ~((uint32_t)(bRXD3));
   13878:	0a07a703          	lw	a4,160(a5)
   1387c:	9b3d                	andi	a4,a4,-17
   1387e:	0ae7a023          	sw	a4,160(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:170
                //PA5->TX
                R32_PA_PD_DRV &= ~((uint32_t)(bTXD3));
   13882:	0b47a703          	lw	a4,180(a5)
   13886:	fdf77713          	andi	a4,a4,-33
   1388a:	0ae7aa23          	sw	a4,180(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:171
                R32_PA_DIR    |= ((uint32_t)(bTXD3));
   1388e:	0a07a703          	lw	a4,160(a5)
   13892:	02076713          	ori	a4,a4,32
   13896:	0ae7a023          	sw	a4,160(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:174

//                R8_UART3_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                R8_UART3_LCR = RB_LCR_WORD_SZ;
   1389a:	40004737          	lui	a4,0x40004
   1389e:	478d                	li	a5,3
   138a0:	c0f701a3          	sb	a5,-1021(a4) # 40003c03 <_eusrstack+0x1fffbc03>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:175
                R8_UART3_IER = RB_IER_TXD_EN;
   138a4:	04000793          	li	a5,64
   138a8:	c0f700a3          	sb	a5,-1023(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:176
                R8_UART3_DIV = 1;
   138ac:	4785                	li	a5,1
   138ae:	c0f70723          	sb	a5,-1010(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:179

               //配置波特率115200
                x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   138b2:	047877b7          	lui	a5,0x4787
   138b6:	8c078793          	addi	a5,a5,-1856 # 47868c0 <_data_lma+0x47703e0>
   138ba:	02b7d7b3          	divu	a5,a5,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:180
                x = (x + 5) / 10;
   138be:	0795                	addi	a5,a5,5
   138c0:	46a9                	li	a3,10
   138c2:	02d7d7b3          	divu	a5,a5,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:181
                R16_UART3_DL = (uint16_t)x;
   138c6:	07c2                	slli	a5,a5,0x10
   138c8:	83c1                	srli	a5,a5,0x10
   138ca:	c0f71623          	sh	a5,-1012(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:187
                break;
        default:
            break;
    }

}
   138ce:	8082                	ret

000138d0 <uart_send1>:
uart_send1():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:201
uint8_t uart_send1(uint8_t uartNo,uint8_t ch)
{
  uint32_t t;

    //判断传入串口号参数是否有误，有误直接退出
    if(uart_is_uartNo(uartNo)==0)
   138d0:	470d                	li	a4,3
   138d2:	10a76463          	bltu	a4,a0,139da <uart_send1+0x10a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:206
    {
        return 0;
    }
    //判断UARTx号
    switch (uartNo)
   138d6:	4705                	li	a4,1
   138d8:	06e50863          	beq	a0,a4,13948 <uart_send1+0x78>
   138dc:	01851713          	slli	a4,a0,0x18
   138e0:	8761                	srai	a4,a4,0x18
   138e2:	cb49                	beqz	a4,13974 <uart_send1+0xa4>
   138e4:	4709                	li	a4,2
   138e6:	02e50b63          	beq	a0,a4,1391c <uart_send1+0x4c>
   138ea:	470d                	li	a4,3
   138ec:	0ae51f63          	bne	a0,a4,139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:238
          }
            break;
        case 3:
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
          {
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   138f0:	400047b7          	lui	a5,0x40004
   138f4:	c057c783          	lbu	a5,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
   138f8:	0207f793          	andi	a5,a5,32
   138fc:	ebe9                	bnez	a5,139ce <uart_send1+0xfe>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   138fe:	4785                	li	a5,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13900:	40004637          	lui	a2,0x40004
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13904:	66c1                	lui	a3,0x10
   13906:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   1390a:	c0564703          	lbu	a4,-1019(a2) # 40003c05 <_eusrstack+0x1fffbc05>
   1390e:	02077713          	andi	a4,a4,32
   13912:	ef5d                	bnez	a4,139d0 <uart_send1+0x100>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:236 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13914:	0785                	addi	a5,a5,1
   13916:	fed79ae3          	bne	a5,a3,1390a <uart_send1+0x3a>
   1391a:	a841                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   1391c:	400047b7          	lui	a5,0x40004
   13920:	8057c783          	lbu	a5,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
   13924:	0207f793          	andi	a5,a5,32
   13928:	efc9                	bnez	a5,139c2 <uart_send1+0xf2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1392a:	4785                	li	a5,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   1392c:	40004637          	lui	a2,0x40004
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13930:	66c1                	lui	a3,0x10
   13932:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13936:	80564703          	lbu	a4,-2043(a2) # 40003805 <_eusrstack+0x1fffb805>
   1393a:	02077713          	andi	a4,a4,32
   1393e:	e359                	bnez	a4,139c4 <uart_send1+0xf4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:227 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13940:	0785                	addi	a5,a5,1
   13942:	fed79ae3          	bne	a5,a3,13936 <uart_send1+0x66>
   13946:	a095                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13948:	400037b7          	lui	a5,0x40003
   1394c:	4057c783          	lbu	a5,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
   13950:	0207f793          	andi	a5,a5,32
   13954:	e3ad                	bnez	a5,139b6 <uart_send1+0xe6>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13956:	4785                	li	a5,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13958:	40003637          	lui	a2,0x40003
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1395c:	66c1                	lui	a3,0x10
   1395e:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13962:	40564703          	lbu	a4,1029(a2) # 40003405 <_eusrstack+0x1fffb405>
   13966:	02077713          	andi	a4,a4,32
   1396a:	e739                	bnez	a4,139b8 <uart_send1+0xe8>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:218 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1396c:	0785                	addi	a5,a5,1
   1396e:	fed79ae3          	bne	a5,a3,13962 <uart_send1+0x92>
   13972:	a825                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13974:	400037b7          	lui	a5,0x40003
   13978:	0057c783          	lbu	a5,5(a5) # 40003005 <_eusrstack+0x1fffb005>
   1397c:	0207f793          	andi	a5,a5,32
   13980:	e385                	bnez	a5,139a0 <uart_send1+0xd0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13982:	4785                	li	a5,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13984:	40003637          	lui	a2,0x40003
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13988:	66c1                	lui	a3,0x10
   1398a:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   1398e:	00564703          	lbu	a4,5(a2) # 40003005 <_eusrstack+0x1fffb005>
   13992:	02077713          	andi	a4,a4,32
   13996:	e711                	bnez	a4,139a2 <uart_send1+0xd2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:209 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13998:	0785                	addi	a5,a5,1
   1399a:	fed79ae3          	bne	a5,a3,1398e <uart_send1+0xbe>
   1399e:	a031                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:209
   139a0:	4781                	li	a5,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:212
              R8_UART0_THR = ch;
   139a2:	40003737          	lui	a4,0x40003
   139a6:	00b70423          	sb	a1,8(a4) # 40003008 <_eusrstack+0x1fffb008>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:203
        return 0;
   139aa:	6541                	lui	a0,0x10
   139ac:	bbb50513          	addi	a0,a0,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
   139b0:	00a7b533          	sltu	a0,a5,a0
   139b4:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139b6:	4781                	li	a5,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:221
              R8_UART1_THR = ch;
   139b8:	40003737          	lui	a4,0x40003
   139bc:	40b70423          	sb	a1,1032(a4) # 40003408 <_eusrstack+0x1fffb408>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:222
              break;
   139c0:	b7ed                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139c2:	4781                	li	a5,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:230
              R8_UART2_THR = ch;
   139c4:	40004737          	lui	a4,0x40004
   139c8:	80b70423          	sb	a1,-2040(a4) # 40003808 <_eusrstack+0x1fffb808>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:231
              break;
   139cc:	bff9                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139ce:	4781                	li	a5,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:239
              R8_UART3_THR = ch;
   139d0:	40004737          	lui	a4,0x40004
   139d4:	c0b70423          	sb	a1,-1016(a4) # 40003c08 <_eusrstack+0x1fffbc08>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:240
              break;
   139d8:	bfc9                	j	139aa <uart_send1+0xda>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:203
        return 0;
   139da:	4501                	li	a0,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:252

    if (t >= 0xFBBB)
        return 0; //发送超时，发送失败
    else
        return 1; //成功发送
}
   139dc:	8082                	ret

000139de <uart_re1>:
uart_re1():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:428
//======================================================================
uint8_t uart_re1(uint8_t uartNo,uint8_t *fp)
{
    uint8_t dat;
    uint8_t flag;
    switch (uartNo)
   139de:	4705                	li	a4,1
   139e0:	02e50a63          	beq	a0,a4,13a14 <uart_re1+0x36>
   139e4:	01851713          	slli	a4,a0,0x18
   139e8:	8761                	srai	a4,a4,0x18
   139ea:	cb09                	beqz	a4,139fc <uart_re1+0x1e>
   139ec:	4709                	li	a4,2
   139ee:	02e50f63          	beq	a0,a4,13a2c <uart_re1+0x4e>
   139f2:	470d                	li	a4,3
   139f4:	04e50863          	beq	a0,a4,13a44 <uart_re1+0x66>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:454
            break;
        default:
            break;
    }
    return (dat);
}
   139f8:	853e                	mv	a0,a5
   139fa:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:431
            *fp =1;
   139fc:	4785                	li	a5,1
   139fe:	00f58023          	sb	a5,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:432
            flag = R8_UART0_LSR;
   13a02:	400037b7          	lui	a5,0x40003
   13a06:	0057c703          	lbu	a4,5(a5) # 40003005 <_eusrstack+0x1fffb005>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:433
            return R8_UART0_RBR;
   13a0a:	0087c783          	lbu	a5,8(a5)
   13a0e:	0ff7f793          	andi	a5,a5,255
   13a12:	b7dd                	j	139f8 <uart_re1+0x1a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:436
            *fp =1;
   13a14:	4785                	li	a5,1
   13a16:	00f58023          	sb	a5,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:437
            flag = R8_UART1_LSR;
   13a1a:	400037b7          	lui	a5,0x40003
   13a1e:	4057c703          	lbu	a4,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:438
            dat = R8_UART1_RBR;
   13a22:	4087c783          	lbu	a5,1032(a5)
   13a26:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:439
            break;
   13a2a:	b7f9                	j	139f8 <uart_re1+0x1a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:441
            *fp =1;
   13a2c:	4785                	li	a5,1
   13a2e:	00f58023          	sb	a5,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:442
            flag = R8_UART2_LSR;
   13a32:	400047b7          	lui	a5,0x40004
   13a36:	8057c703          	lbu	a4,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:443
            dat = R8_UART2_RBR;
   13a3a:	8087c783          	lbu	a5,-2040(a5)
   13a3e:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:444
            break;
   13a42:	bf5d                	j	139f8 <uart_re1+0x1a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:446
            *fp =1;
   13a44:	4785                	li	a5,1
   13a46:	00f58023          	sb	a5,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:447
            flag = R8_UART3_LSR;
   13a4a:	400047b7          	lui	a5,0x40004
   13a4e:	c057c703          	lbu	a4,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:448
            dat = R8_UART3_RBR;
   13a52:	c087c783          	lbu	a5,-1016(a5)
   13a56:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:449
            break;
   13a5a:	bf79                	j	139f8 <uart_re1+0x1a>

00013a5c <uart_enable_re_int>:
uart_enable_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:497
//功能概要：开串口接收中断
//======================================================================
void uart_enable_re_int(uint8_t uartNo)
{
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
   13a5c:	478d                	li	a5,3
   13a5e:	0ca7e163          	bltu	a5,a0,13b20 <uart_enable_re_int+0xc4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:502
    {
        return;
    }

    switch (uartNo)
   13a62:	4785                	li	a5,1
   13a64:	04f50263          	beq	a0,a5,13aa8 <uart_enable_re_int+0x4c>
   13a68:	01851793          	slli	a5,a0,0x18
   13a6c:	87e1                	srai	a5,a5,0x18
   13a6e:	cb81                	beqz	a5,13a7e <uart_enable_re_int+0x22>
   13a70:	4789                	li	a5,2
   13a72:	06f50063          	beq	a0,a5,13ad2 <uart_enable_re_int+0x76>
   13a76:	478d                	li	a5,3
   13a78:	08f50163          	beq	a0,a5,13afa <uart_enable_re_int+0x9e>
   13a7c:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:507
    {
        case 0:
//            R8_UART0_FCR = (R8_UART0_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);
//            R8_UART0_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART0_IER |= RB_IER_RECV_RDY;
   13a7e:	400037b7          	lui	a5,0x40003
   13a82:	0017c703          	lbu	a4,1(a5) # 40003001 <_eusrstack+0x1fffb001>
   13a86:	00176713          	ori	a4,a4,1
   13a8a:	00e780a3          	sb	a4,1(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:508
            R8_UART0_MCR |= RB_MCR_INT_OE;
   13a8e:	0007c703          	lbu	a4,0(a5)
   13a92:	00876713          	ori	a4,a4,8
   13a96:	00e78023          	sb	a4,0(a5)
PFIC_EnableIRQ():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:87
   13a9a:	e000e7b7          	lui	a5,0xe000e
   13a9e:	04000737          	lui	a4,0x4000
   13aa2:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   13aa6:	8082                	ret
uart_enable_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:515
            break;
        case 1:
//            R8_UART1_FCR = (R8_UART1_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);

//            R8_UART1_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART1_IER |= RB_IER_RECV_RDY;
   13aa8:	400037b7          	lui	a5,0x40003
   13aac:	4017c703          	lbu	a4,1025(a5) # 40003401 <_eusrstack+0x1fffb401>
   13ab0:	00176713          	ori	a4,a4,1
   13ab4:	40e780a3          	sb	a4,1025(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:516
            R8_UART1_MCR |= RB_MCR_INT_OE;
   13ab8:	4007c703          	lbu	a4,1024(a5)
   13abc:	00876713          	ori	a4,a4,8
   13ac0:	40e78023          	sb	a4,1024(a5)
PFIC_EnableIRQ():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:87
   13ac4:	e000e7b7          	lui	a5,0xe000e
   13ac8:	08000737          	lui	a4,0x8000
   13acc:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   13ad0:	8082                	ret
uart_enable_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:521
            PFIC_EnableIRQ( UART1_IRQn );
            break;
        case 2:
//            R8_UART2_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART2_IER |= RB_IER_RECV_RDY;
   13ad2:	400047b7          	lui	a5,0x40004
   13ad6:	8017c703          	lbu	a4,-2047(a5) # 40003801 <_eusrstack+0x1fffb801>
   13ada:	00176713          	ori	a4,a4,1
   13ade:	80e780a3          	sb	a4,-2047(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:522
            R8_UART2_MCR |= RB_MCR_INT_OE;
   13ae2:	8007c703          	lbu	a4,-2048(a5)
   13ae6:	00876713          	ori	a4,a4,8
   13aea:	80e78023          	sb	a4,-2048(a5)
PFIC_EnableIRQ():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:87
   13aee:	e000e7b7          	lui	a5,0xe000e
   13af2:	4709                	li	a4,2
   13af4:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
   13af8:	8082                	ret
uart_enable_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:527
            PFIC_EnableIRQ( UART2_IRQn );
            break;
        case 3:
//            R8_UART3_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART3_IER |= RB_IER_RECV_RDY;
   13afa:	400047b7          	lui	a5,0x40004
   13afe:	c017c703          	lbu	a4,-1023(a5) # 40003c01 <_eusrstack+0x1fffbc01>
   13b02:	00176713          	ori	a4,a4,1
   13b06:	c0e780a3          	sb	a4,-1023(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:528
            R8_UART3_MCR |= RB_MCR_INT_OE;
   13b0a:	c007c703          	lbu	a4,-1024(a5)
   13b0e:	00876713          	ori	a4,a4,8
   13b12:	c0e78023          	sb	a4,-1024(a5)
PFIC_EnableIRQ():
e:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\02_CPU/core_riscv.h:87
   13b16:	e000e7b7          	lui	a5,0xe000e
   13b1a:	4711                	li	a4,4
   13b1c:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
uart_enable_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:536

        default:
            break;
    }

}
   13b20:	8082                	ret

00013b22 <uart_get_re_int>:
uart_get_re_int():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:589
uint8_t uart_get_re_int(uint8_t uartNo)
{
    uint8_t event;
    uint8_t flag;
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
   13b22:	478d                	li	a5,3
   13b24:	10a7e763          	bltu	a5,a0,13c32 <uart_get_re_int+0x110>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:594
    {
        return 0;
    }
    //获取当前接收中断标志，
    switch (uartNo)
   13b28:	4785                	li	a5,1
   13b2a:	06f50c63          	beq	a0,a5,13ba2 <uart_get_re_int+0x80>
   13b2e:	01851793          	slli	a5,a0,0x18
   13b32:	87e1                	srai	a5,a5,0x18
   13b34:	cb8d                	beqz	a5,13b66 <uart_get_re_int+0x44>
   13b36:	4789                	li	a5,2
   13b38:	0af50363          	beq	a0,a5,13bde <uart_get_re_int+0xbc>
   13b3c:	478d                	li	a5,3
   13b3e:	0ef51b63          	bne	a0,a5,13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:676
           default:
               break;
          }
            break;
       case 3:
          event = R8_UART3_IIR&RB_IIR_INT_MASK;
   13b42:	400047b7          	lui	a5,0x40004
   13b46:	c047c783          	lbu	a5,-1020(a5) # 40003c04 <_eusrstack+0x1fffbc04>
   13b4a:	8bbd                	andi	a5,a5,15
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:677
          switch (event)
   13b4c:	46b1                	li	a3,12
   13b4e:	0ef6e363          	bltu	a3,a5,13c34 <uart_get_re_int+0x112>
   13b52:	00279613          	slli	a2,a5,0x2
   13b56:	00002597          	auipc	a1,0x2
   13b5a:	69e58593          	addi	a1,a1,1694 # 161f4 <strlen+0x2cc>
   13b5e:	962e                	add	a2,a2,a1
   13b60:	4214                	lw	a3,0(a2)
   13b62:	96ae                	add	a3,a3,a1
   13b64:	8682                	jr	a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:597
            event = R8_UART0_IIR&RB_IIR_INT_MASK;
   13b66:	400037b7          	lui	a5,0x40003
   13b6a:	0047c783          	lbu	a5,4(a5) # 40003004 <_eusrstack+0x1fffb004>
   13b6e:	8bbd                	andi	a5,a5,15
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:598
           switch (event)
   13b70:	46b1                	li	a3,12
   13b72:	0cf6e163          	bltu	a3,a5,13c34 <uart_get_re_int+0x112>
   13b76:	00279613          	slli	a2,a5,0x2
   13b7a:	00002597          	auipc	a1,0x2
   13b7e:	6ae58593          	addi	a1,a1,1710 # 16228 <strlen+0x300>
   13b82:	962e                	add	a2,a2,a1
   13b84:	4214                	lw	a3,0(a2)
   13b86:	96ae                	add	a3,a3,a1
   13b88:	8682                	jr	a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:601
                flag = 6;
   13b8a:	873e                	mv	a4,a5
   13b8c:	a065                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:604
                flag = 4;
   13b8e:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:605
                break;
   13b90:	a055                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:607
                flag = 12;
   13b92:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:608
                break;
   13b94:	a045                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:610
                flag = 2;
   13b96:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:611
                break;
   13b98:	a871                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:613
                flag = 0;
   13b9a:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:614
                break;
   13b9c:	a861                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:616
                flag = 1;
   13b9e:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:617
                break;
   13ba0:	a851                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:623
            event = R8_UART1_IIR&RB_IIR_INT_MASK;
   13ba2:	400037b7          	lui	a5,0x40003
   13ba6:	4047c783          	lbu	a5,1028(a5) # 40003404 <_eusrstack+0x1fffb404>
   13baa:	8bbd                	andi	a5,a5,15
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:624
           switch (event)
   13bac:	46b1                	li	a3,12
   13bae:	08f6e363          	bltu	a3,a5,13c34 <uart_get_re_int+0x112>
   13bb2:	00279613          	slli	a2,a5,0x2
   13bb6:	00002597          	auipc	a1,0x2
   13bba:	6a658593          	addi	a1,a1,1702 # 1625c <strlen+0x334>
   13bbe:	962e                	add	a2,a2,a1
   13bc0:	4214                	lw	a3,0(a2)
   13bc2:	96ae                	add	a3,a3,a1
   13bc4:	8682                	jr	a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:627
                flag = 6;
   13bc6:	873e                	mv	a4,a5
   13bc8:	a0b5                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:630
                flag = 4;
   13bca:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:631
                break;
   13bcc:	a0a5                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:633
                flag = 12;
   13bce:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:634
                break;
   13bd0:	a095                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:636
                flag = 2;
   13bd2:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:637
                break;
   13bd4:	a085                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:639
                flag = 0;
   13bd6:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:640
                break;
   13bd8:	a8b1                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:642
                flag = 1;
   13bda:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:643
                break;
   13bdc:	a8a1                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:650
           event = R8_UART2_IIR&RB_IIR_INT_MASK;
   13bde:	400047b7          	lui	a5,0x40004
   13be2:	8047c783          	lbu	a5,-2044(a5) # 40003804 <_eusrstack+0x1fffb804>
   13be6:	8bbd                	andi	a5,a5,15
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:651
           switch (event)
   13be8:	46b1                	li	a3,12
   13bea:	04f6e563          	bltu	a3,a5,13c34 <uart_get_re_int+0x112>
   13bee:	00279613          	slli	a2,a5,0x2
   13bf2:	00002597          	auipc	a1,0x2
   13bf6:	69e58593          	addi	a1,a1,1694 # 16290 <strlen+0x368>
   13bfa:	962e                	add	a2,a2,a1
   13bfc:	4214                	lw	a3,0(a2)
   13bfe:	96ae                	add	a3,a3,a1
   13c00:	8682                	jr	a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:654
                flag = 6;
   13c02:	873e                	mv	a4,a5
   13c04:	a805                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:657
                flag = 4;
   13c06:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:658
                break;
   13c08:	a035                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:660
                flag = 12;
   13c0a:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:661
                break;
   13c0c:	a025                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:663
                flag = 2;
   13c0e:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:664
                break;
   13c10:	a015                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:666
                flag = 0;
   13c12:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:667
                break;
   13c14:	a005                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:669
                flag = 1;
   13c16:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:670
                break;
   13c18:	a831                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:680
          {
           case UART_II_LINE_STAT:
               flag = 6;
   13c1a:	873e                	mv	a4,a5
   13c1c:	a821                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:683
               break;
           case UART_II_RECV_RDY:
               flag = 4;
   13c1e:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:684
               break;
   13c20:	a811                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:686
           case UART_II_RECV_TOUT:
               flag = 12;
   13c22:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:687
               break;
   13c24:	a801                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:689
           case UART_II_THR_EMPTY:
               flag = 2;
   13c26:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:690
               break;
   13c28:	a031                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:692
           case UART_II_MODEM_CHG:
               flag = 0;
   13c2a:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:693
               break;
   13c2c:	a021                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:695
           case UART_II_NO_INTER:
               flag = 1;
   13c2e:	873e                	mv	a4,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:696
               break;
   13c30:	a011                	j	13c34 <uart_get_re_int+0x112>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:591
        return 0;
   13c32:	4701                	li	a4,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/uart.c:705
           break;
    default:
        break;
    }
    return flag;
}
   13c34:	853a                	mv	a0,a4
   13c36:	8082                	ret

00013c38 <UART0_IRQHandler>:
UART0_IRQHandler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:17
// 触发条件：UART_User串口收到一个字节触发
// 备   注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler(void)
{
   13c38:	1141                	addi	sp,sp,-16
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:19
    //【1】关中断
    DISABLE_INTERRUPTS;
   13c3a:	42a1                	li	t0,8
   13c3c:	3002b073          	csrc	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:25

    //【2】声明临时变量
    uint8_t flag,ch;

    //【3】判断是否为本中断触发
    if (!uart_get_re_int(UART_User)) goto UART_User_Handler_exit;
   13c40:	4501                	li	a0,0
   13c42:	00000097          	auipc	ra,0x0
   13c46:	ee0080e7          	jalr	-288(ra) # 13b22 <uart_get_re_int>
   13c4a:	e519                	bnez	a0,13c58 <UART0_IRQHandler+0x20>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:38
        uart_send1(UART_User,ch);   //回发接收到的字节
    }

    // 【6】开中断
UART_User_Handler_exit:
    ENABLE_INTERRUPTS;
   13c4c:	42a1                	li	t0,8
   13c4e:	3002a073          	csrs	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:39
}
   13c52:	0141                	addi	sp,sp,16
   13c54:	30200073          	mret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:28
    ch=uart_re1(UART_User,&flag);   //调用接收一个字节的函数，清接收中断位
   13c58:	00f10593          	addi	a1,sp,15
   13c5c:	4501                	li	a0,0
   13c5e:	00000097          	auipc	ra,0x0
   13c62:	d80080e7          	jalr	-640(ra) # 139de <uart_re1>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:31
    if (flag)                       //有数据
   13c66:	00f14783          	lbu	a5,15(sp)
   13c6a:	d3ed                	beqz	a5,13c4c <UART0_IRQHandler+0x14>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:33
        uart_send1(UART_User,ch);   //回发接收到的字节
   13c6c:	85aa                	mv	a1,a0
   13c6e:	4501                	li	a0,0
   13c70:	00000097          	auipc	ra,0x0
   13c74:	c60080e7          	jalr	-928(ra) # 138d0 <uart_send1>
   13c78:	bfd1                	j	13c4c <UART0_IRQHandler+0x14>

00013c7a <SecAdd1>:
SecAdd1():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:76
//功能概要：秒单元+1，并处理时分单元（00:00:00-23:59:59)
//===========================================================================
void SecAdd1(uint8_t *p)
{
	//【1】秒+1
	*(p+2)+=1;  
   13c7a:	00254783          	lbu	a5,2(a0)
   13c7e:	0785                	addi	a5,a5,1
   13c80:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:78
	//【2】没到1分钟，退出
	if (*(p+2)<60) goto SecAdd1_Exit;
   13c84:	03b00713          	li	a4,59
   13c88:	02f77a63          	bgeu	a4,a5,13cbc <SecAdd1+0x42>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:80
	//【3】到1分钟
    *(p+2)=0;       //清秒
   13c8c:	00050123          	sb	zero,2(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:81
	*(p+1)+=1;      //分+1
   13c90:	00154783          	lbu	a5,1(a0)
   13c94:	0785                	addi	a5,a5,1
   13c96:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:83
	//【4】没到1小时，退出
	if (*(p+1)<60) goto SecAdd1_Exit;
   13c9a:	03b00713          	li	a4,59
   13c9e:	02f77363          	bgeu	a4,a5,13cc4 <SecAdd1+0x4a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:85
	//【5】到1小时
	*(p+1)=0;      //清分
   13ca2:	000500a3          	sb	zero,1(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:86
	*p+=1;         //时+1
   13ca6:	00054783          	lbu	a5,0(a0)
   13caa:	0785                	addi	a5,a5,1
   13cac:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:88
	//【6】没到1天，退出
	if (*p<24)  goto SecAdd1_Exit;
   13cb0:	475d                	li	a4,23
   13cb2:	00f77c63          	bgeu	a4,a5,13cca <SecAdd1+0x50>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:90
	//【7】到1天
	*p=0;         //清时
   13cb6:	00050023          	sb	zero,0(a0)
   13cba:	a019                	j	13cc0 <SecAdd1+0x46>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:76
	*(p+2)+=1;  
   13cbc:	00f50123          	sb	a5,2(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:92
SecAdd1_Exit:
    __asm ("nop");
   13cc0:	0001                	nop
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:93
}
   13cc2:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:81
	*(p+1)+=1;      //分+1
   13cc4:	00f500a3          	sb	a5,1(a0)
   13cc8:	bfe5                	j	13cc0 <SecAdd1+0x46>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:86
	*p+=1;         //时+1
   13cca:	00f50023          	sb	a5,0(a0)
   13cce:	bfcd                	j	13cc0 <SecAdd1+0x46>

00013cd0 <SysTick_Handler>:
SysTick_Handler():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:52
    DISABLE_INTERRUPTS;
   13cd0:	42a1                	li	t0,8
   13cd2:	3002b073          	csrc	mstatus,t0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:56
	systick_clear_int(); 
   13cd6:	fffff097          	auipc	ra,0xfffff
   13cda:	4e6080e7          	jalr	1254(ra) # 131bc <systick_clear_int>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:58
	SysTickCount++;   
   13cde:	1fff2797          	auipc	a5,0x1fff2
   13ce2:	9a27c783          	lbu	a5,-1630(a5) # 20005680 <_data_vma>
   13ce6:	0785                	addi	a5,a5,1
   13ce8:	0ff7f793          	andi	a5,a5,255
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:60
	if (SysTickCount >= 100)
   13cec:	06300713          	li	a4,99
   13cf0:	00f76863          	bltu	a4,a5,13d00 <SysTick_Handler+0x30>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:58
	SysTickCount++;   
   13cf4:	1fff2717          	auipc	a4,0x1fff2
   13cf8:	98f70623          	sb	a5,-1652(a4) # 20005680 <_data_vma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:65
}
   13cfc:	30200073          	mret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:62
		SysTickCount = 0;
   13d00:	1fff2797          	auipc	a5,0x1fff2
   13d04:	98078023          	sb	zero,-1664(a5) # 20005680 <_data_vma>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:63
		SecAdd1(gTime);  //调用秒+1函数
   13d08:	1fff2517          	auipc	a0,0x1fff2
   13d0c:	97c50513          	addi	a0,a0,-1668 # 20005684 <gTime>
   13d10:	00000097          	auipc	ra,0x0
   13d14:	f6a080e7          	jalr	-150(ra) # 13c7a <SecAdd1>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/isr.c:65
}
   13d18:	b7d5                	j	13cfc <SysTick_Handler+0x2c>

00013d1a <printk_putc>:
printk_putc():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:28
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
   13d1a:	1141                	addi	sp,sp,-16
   13d1c:	c606                	sw	ra,12(sp)
   13d1e:	c422                	sw	s0,8(sp)
   13d20:	842e                	mv	s0,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:29
	switch (info->dest) {
   13d22:	421c                	lw	a5,0(a2)
   13d24:	4705                	li	a4,1
   13d26:	00e78c63          	beq	a5,a4,13d3e <printk_putc+0x24>
   13d2a:	4709                	li	a4,2
   13d2c:	00e78e63          	beq	a5,a4,13d48 <printk_putc+0x2e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:40
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
   13d30:	401c                	lw	a5,0(s0)
   13d32:	0785                	addi	a5,a5,1
   13d34:	c01c                	sw	a5,0(s0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:41
}
   13d36:	40b2                	lw	ra,12(sp)
   13d38:	4422                	lw	s0,8(sp)
   13d3a:	0141                	addi	sp,sp,16
   13d3c:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:31
		info->func((char) c);
   13d3e:	425c                	lw	a5,4(a2)
   13d40:	0562                	slli	a0,a0,0x18
   13d42:	8561                	srai	a0,a0,0x18
   13d44:	9782                	jalr	a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:32
		break;
   13d46:	b7ed                	j	13d30 <printk_putc+0x16>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:34
		*(info->loc) = (unsigned char) c;
   13d48:	461c                	lw	a5,8(a2)
   13d4a:	00a78023          	sb	a0,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:35
		++(info->loc);
   13d4e:	461c                	lw	a5,8(a2)
   13d50:	0785                	addi	a5,a5,1
   13d52:	c61c                	sw	a5,8(a2)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:36
		break;
   13d54:	bff1                	j	13d30 <printk_putc+0x16>

00013d56 <printk_mknumstr>:
printk_mknumstr():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:131
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
   13d56:	00150793          	addi	a5,a0,1
   13d5a:	00050023          	sb	zero,0(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:133

	if (neg) {
   13d5e:	ce1d                	beqz	a2,13d9c <printk_mknumstr+0x46>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:134
		a = *(int *) nump;
   13d60:	4198                	lw	a4,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:144
		}
		while (a != 0) {
			b = (int) a / (int) radix;
			c = (int) a - ((int) b * (int) radix);
			if (c < 0) {
				c = ~c + 1 + '0';
   13d62:	03000813          	li	a6,48
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:135
		if (a == 0) {
   13d66:	e315                	bnez	a4,13d8a <printk_mknumstr+0x34>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:136
			*nstrp = '0';
   13d68:	03000793          	li	a5,48
   13d6c:	00f500a3          	sb	a5,1(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:137
			++nlen;
   13d70:	4605                	li	a2,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:173
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
   13d72:	8532                	mv	a0,a2
   13d74:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:144
				c = ~c + 1 + '0';
   13d76:	40e80633          	sub	a2,a6,a4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:149
			*nstrp++ = (char) c;
   13d7a:	0785                	addi	a5,a5,1
   13d7c:	fec78fa3          	sb	a2,-1(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:150
			++nlen;
   13d80:	fff78613          	addi	a2,a5,-1
   13d84:	8e09                	sub	a2,a2,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:148
			a = b;
   13d86:	872e                	mv	a4,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:140
		while (a != 0) {
   13d88:	d5ed                	beqz	a1,13d72 <printk_mknumstr+0x1c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:141
			b = (int) a / (int) radix;
   13d8a:	02d745b3          	div	a1,a4,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:142
			c = (int) a - ((int) b * (int) radix);
   13d8e:	02d76733          	rem	a4,a4,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:146
				c = c + '0';
   13d92:	03070613          	addi	a2,a4,48
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:143
			if (c < 0) {
   13d96:	fe0752e3          	bgez	a4,13d7a <printk_mknumstr+0x24>
   13d9a:	bff1                	j	13d76 <printk_mknumstr+0x20>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:153
		ua = *(unsigned int *) nump;
   13d9c:	4198                	lw	a4,0(a1)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   13d9e:	8336                	mv	t1,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   13da0:	48a5                	li	a7,9
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:154
		if (ua == 0) {
   13da2:	e305                	bnez	a4,13dc2 <printk_mknumstr+0x6c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:155
			*nstrp = '0';
   13da4:	03000793          	li	a5,48
   13da8:	00f500a3          	sb	a5,1(a0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:156
			++nlen;
   13dac:	4605                	li	a2,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:157
			goto done;
   13dae:	b7d1                	j	13d72 <printk_mknumstr+0x1c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:168
			*nstrp++ = (char) uc;
   13db0:	0785                	addi	a5,a5,1
   13db2:	feb78fa3          	sb	a1,-1(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:169
			++nlen;
   13db6:	fff78613          	addi	a2,a5,-1
   13dba:	8e09                	sub	a2,a2,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:159
		while (ua != 0) {
   13dbc:	fa676be3          	bltu	a4,t1,13d72 <printk_mknumstr+0x1c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:167
			ua = ub;
   13dc0:	8742                	mv	a4,a6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   13dc2:	02d75833          	divu	a6,a4,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:161
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
   13dc6:	02d77633          	remu	a2,a4,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:165
				uc = uc - 10 + 'A';
   13dca:	03760593          	addi	a1,a2,55
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   13dce:	fec8e1e3          	bltu	a7,a2,13db0 <printk_mknumstr+0x5a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:163
				uc = uc + '0';
   13dd2:	03060593          	addi	a1,a2,48
   13dd6:	bfe9                	j	13db0 <printk_mknumstr+0x5a>

00013dd8 <printk_pad_space>:
printk_pad_space():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:186
	}
}

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
   13dd8:	1101                	addi	sp,sp,-32
   13dda:	ce06                	sw	ra,28(sp)
   13ddc:	cc22                	sw	s0,24(sp)
   13dde:	ca26                	sw	s1,20(sp)
   13de0:	c84a                	sw	s2,16(sp)
   13de2:	c64e                	sw	s3,12(sp)
   13de4:	842a                	mv	s0,a0
   13de6:	84ae                	mv	s1,a1
   13de8:	89b2                	mv	s3,a2
   13dea:	8936                	mv	s2,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:189
	int i;

	for (i = curlen; i < field_width; i++) {
   13dec:	00b55d63          	bge	a0,a1,13e06 <printk_pad_space+0x2e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:190 (discriminator 3)
		printk_putc(' ', count, info);
   13df0:	864a                	mv	a2,s2
   13df2:	85ce                	mv	a1,s3
   13df4:	02000513          	li	a0,32
   13df8:	00000097          	auipc	ra,0x0
   13dfc:	f22080e7          	jalr	-222(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:189 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
   13e00:	0405                	addi	s0,s0,1
   13e02:	fe8497e3          	bne	s1,s0,13df0 <printk_pad_space+0x18>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:192
	}
}
   13e06:	40f2                	lw	ra,28(sp)
   13e08:	4462                	lw	s0,24(sp)
   13e0a:	44d2                	lw	s1,20(sp)
   13e0c:	4942                	lw	s2,16(sp)
   13e0e:	49b2                	lw	s3,12(sp)
   13e10:	6105                	addi	sp,sp,32
   13e12:	8082                	ret

00013e14 <out_char>:
out_char():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:18
void out_char(char data) {
   13e14:	1141                	addi	sp,sp,-16
   13e16:	c606                	sw	ra,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:19
	uart_send1(UART_printf, data);
   13e18:	0ff57593          	andi	a1,a0,255
   13e1c:	4505                	li	a0,1
   13e1e:	00000097          	auipc	ra,0x0
   13e22:	ab2080e7          	jalr	-1358(ra) # 138d0 <uart_send1>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:20
}
   13e26:	40b2                	lw	ra,12(sp)
   13e28:	0141                	addi	sp,sp,16
   13e2a:	8082                	ret

00013e2c <printk_mkfloatstr>:
printk_mkfloatstr():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:50
{
   13e2c:	c8010113          	addi	sp,sp,-896
   13e30:	36112e23          	sw	ra,892(sp)
   13e34:	36812c23          	sw	s0,888(sp)
   13e38:	36912a23          	sw	s1,884(sp)
   13e3c:	37212823          	sw	s2,880(sp)
   13e40:	37312623          	sw	s3,876(sp)
   13e44:	37412423          	sw	s4,872(sp)
   13e48:	37512223          	sw	s5,868(sp)
   13e4c:	37612023          	sw	s6,864(sp)
   13e50:	35712e23          	sw	s7,860(sp)
   13e54:	35812c23          	sw	s8,856(sp)
   13e58:	35912a23          	sw	s9,852(sp)
   13e5c:	35a12823          	sw	s10,848(sp)
   13e60:	35b12623          	sw	s11,844(sp)
   13e64:	842a                	mv	s0,a0
   13e66:	8b2e                	mv	s6,a1
   13e68:	8c32                	mv	s8,a2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13e6a:	19000613          	li	a2,400
   13e6e:	4581                	li	a1,0
   13e70:	1b08                	addi	a0,sp,432
   13e72:	fffff097          	auipc	ra,0xfffff
   13e76:	24e080e7          	jalr	590(ra) # 130c0 <memset>
   13e7a:	19000613          	li	a2,400
   13e7e:	4581                	li	a1,0
   13e80:	1008                	addi	a0,sp,32
   13e82:	fffff097          	auipc	ra,0xfffff
   13e86:	23e080e7          	jalr	574(ra) # 130c0 <memset>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:59
	p=(uint64_t)*f;//整数部分
   13e8a:	4044                	lw	s1,4(s0)
   13e8c:	4000                	lw	s0,0(s0)
   13e8e:	8522                	mv	a0,s0
   13e90:	85a6                	mv	a1,s1
   13e92:	00002097          	auipc	ra,0x2
   13e96:	dee080e7          	jalr	-530(ra) # 15c80 <__fixunsdfdi>
   13e9a:	8caa                	mv	s9,a0
   13e9c:	8bae                	mv	s7,a1
   13e9e:	8aaa                	mv	s5,a0
   13ea0:	8a2e                	mv	s4,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:60
	tempf=(*f-p);
   13ea2:	00002097          	auipc	ra,0x2
   13ea6:	e7c080e7          	jalr	-388(ra) # 15d1e <__floatundidf>
   13eaa:	862a                	mv	a2,a0
   13eac:	86ae                	mv	a3,a1
   13eae:	8522                	mv	a0,s0
   13eb0:	85a6                	mv	a1,s1
   13eb2:	00001097          	auipc	ra,0x1
   13eb6:	688080e7          	jalr	1672(ra) # 1553a <__subdf3>
   13eba:	842a                	mv	s0,a0
   13ebc:	84ae                	mv	s1,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:61
	while(precision_width--)    tempf*=10;
   13ebe:	020c0663          	beqz	s8,13eea <printk_mkfloatstr+0xbe>
   13ec2:	fffc0d13          	addi	s10,s8,-1
   13ec6:	00002797          	auipc	a5,0x2
   13eca:	4ca78793          	addi	a5,a5,1226 # 16390 <strlen+0x468>
   13ece:	0007a903          	lw	s2,0(a5)
   13ed2:	0047a983          	lw	s3,4(a5)
   13ed6:	5dfd                	li	s11,-1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:61 (discriminator 2)
   13ed8:	864a                	mv	a2,s2
   13eda:	86ce                	mv	a3,s3
   13edc:	00001097          	auipc	ra,0x1
   13ee0:	196080e7          	jalr	406(ra) # 15072 <__muldf3>
   13ee4:	1d7d                	addi	s10,s10,-1
   13ee6:	ffbd19e3          	bne	s10,s11,13ed8 <printk_mkfloatstr+0xac>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:62
    q=tempf;
   13eea:	00002097          	auipc	ra,0x2
   13eee:	d96080e7          	jalr	-618(ra) # 15c80 <__fixunsdfdi>
   13ef2:	ce2a                	sw	a0,28(sp)
   13ef4:	8dae                	mv	s11,a1
   13ef6:	8d2a                	mv	s10,a0
   13ef8:	89ae                	mv	s3,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13efa:	00002797          	auipc	a5,0x2
   13efe:	49e78793          	addi	a5,a5,1182 # 16398 <strlen+0x470>
   13f02:	4390                	lw	a2,0(a5)
   13f04:	43d4                	lw	a3,4(a5)
   13f06:	8522                	mv	a0,s0
   13f08:	85a6                	mv	a1,s1
   13f0a:	00001097          	auipc	ra,0x1
   13f0e:	0b2080e7          	jalr	178(ra) # 14fbc <__ledf2>
   13f12:	0e055e63          	bgez	a0,1400e <printk_mkfloatstr+0x1e2>
   13f16:	4601                	li	a2,0
   13f18:	4681                	li	a3,0
   13f1a:	8522                	mv	a0,s0
   13f1c:	85a6                	mv	a1,s1
   13f1e:	00001097          	auipc	ra,0x1
   13f22:	034080e7          	jalr	52(ra) # 14f52 <__eqdf2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13f26:	4901                	li	s2,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13f28:	c56d                	beqz	a0,14012 <printk_mkfloatstr+0x1e6>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   13f2a:	00002797          	auipc	a5,0x2
   13f2e:	46678793          	addi	a5,a5,1126 # 16390 <strlen+0x468>
   13f32:	0047a803          	lw	a6,4(a5)
   13f36:	439c                	lw	a5,0(a5)
   13f38:	c83e                	sw	a5,16(sp)
   13f3a:	ca42                	sw	a6,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13f3c:	00002797          	auipc	a5,0x2
   13f40:	45c78793          	addi	a5,a5,1116 # 16398 <strlen+0x470>
   13f44:	0047a803          	lw	a6,4(a5)
   13f48:	439c                	lw	a5,0(a5)
   13f4a:	c43e                	sw	a5,8(sp)
   13f4c:	c642                	sw	a6,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   13f4e:	4642                	lw	a2,16(sp)
   13f50:	46d2                	lw	a3,20(sp)
   13f52:	8522                	mv	a0,s0
   13f54:	85a6                	mv	a1,s1
   13f56:	00001097          	auipc	ra,0x1
   13f5a:	11c080e7          	jalr	284(ra) # 15072 <__muldf3>
   13f5e:	842a                	mv	s0,a0
   13f60:	84ae                	mv	s1,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:69
		k++;			
   13f62:	0905                	addi	s2,s2,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13f64:	4622                	lw	a2,8(sp)
   13f66:	46b2                	lw	a3,12(sp)
   13f68:	00001097          	auipc	ra,0x1
   13f6c:	054080e7          	jalr	84(ra) # 14fbc <__ledf2>
   13f70:	00055b63          	bgez	a0,13f86 <printk_mkfloatstr+0x15a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:66 (discriminator 1)
   13f74:	4601                	li	a2,0
   13f76:	4681                	li	a3,0
   13f78:	8522                	mv	a0,s0
   13f7a:	85a6                	mv	a1,s1
   13f7c:	00001097          	auipc	ra,0x1
   13f80:	fd6080e7          	jalr	-42(ra) # 14f52 <__eqdf2>
   13f84:	f569                	bnez	a0,13f4e <printk_mkfloatstr+0x122>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   13f86:	019bebb3          	or	s7,s7,s9
   13f8a:	080b9663          	bnez	s7,14016 <printk_mkfloatstr+0x1ea>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:73
		c[i++]='0';
   13f8e:	03000793          	li	a5,48
   13f92:	00fb0023          	sb	a5,0(s6)
   13f96:	4485                	li	s1,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:87
	c[i++]='.';   //小数点
   13f98:	00148413          	addi	s0,s1,1
   13f9c:	009b07b3          	add	a5,s6,s1
   13fa0:	02e00713          	li	a4,46
   13fa4:	00e78023          	sb	a4,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   13fa8:	4772                	lw	a4,28(sp)
   13faa:	00ededb3          	or	s11,s11,a4
   13fae:	0c0d9a63          	bnez	s11,14082 <printk_mkfloatstr+0x256>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:89
		while(zeroNum--) c[i++]='0';     //【20201119】-3/3   原为 c[i++]='0';
   13fb2:	000c0d63          	beqz	s8,13fcc <printk_mkfloatstr+0x1a0>
   13fb6:	018b0733          	add	a4,s6,s8
   13fba:	94ba                	add	s1,s1,a4
   13fbc:	03000713          	li	a4,48
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:89 (discriminator 2)
   13fc0:	00e780a3          	sb	a4,1(a5)
   13fc4:	0785                	addi	a5,a5,1
   13fc6:	fef49de3          	bne	s1,a5,13fc0 <printk_mkfloatstr+0x194>
   13fca:	9462                	add	s0,s0,s8
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:109
	c[i]='\0';
   13fcc:	9b22                	add	s6,s6,s0
   13fce:	000b0023          	sb	zero,0(s6)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:111
}
   13fd2:	8522                	mv	a0,s0
   13fd4:	37c12083          	lw	ra,892(sp)
   13fd8:	37812403          	lw	s0,888(sp)
   13fdc:	37412483          	lw	s1,884(sp)
   13fe0:	37012903          	lw	s2,880(sp)
   13fe4:	36c12983          	lw	s3,876(sp)
   13fe8:	36812a03          	lw	s4,872(sp)
   13fec:	36412a83          	lw	s5,868(sp)
   13ff0:	36012b03          	lw	s6,864(sp)
   13ff4:	35c12b83          	lw	s7,860(sp)
   13ff8:	35812c03          	lw	s8,856(sp)
   13ffc:	35412c83          	lw	s9,852(sp)
   14000:	35012d03          	lw	s10,848(sp)
   14004:	34c12d83          	lw	s11,844(sp)
   14008:	38010113          	addi	sp,sp,896
   1400c:	8082                	ret
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   1400e:	4901                	li	s2,0
   14010:	bf9d                	j	13f86 <printk_mkfloatstr+0x15a>
   14012:	4901                	li	s2,0
   14014:	bf8d                	j	13f86 <printk_mkfloatstr+0x15a>
   14016:	1b010c93          	addi	s9,sp,432
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   1401a:	8466                	mv	s0,s9
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   1401c:	4b81                	li	s7,0
   1401e:	a021                	j	14026 <printk_mkfloatstr+0x1fa>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:79
			p/=10;
   14020:	8aaa                	mv	s5,a0
   14022:	8a2e                	mv	s4,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:78
			a[j++]=p%10;
   14024:	8ba6                	mv	s7,s1
   14026:	001b8493          	addi	s1,s7,1
   1402a:	4629                	li	a2,10
   1402c:	4681                	li	a3,0
   1402e:	8556                	mv	a0,s5
   14030:	85d2                	mv	a1,s4
   14032:	00001097          	auipc	ra,0x1
   14036:	b92080e7          	jalr	-1134(ra) # 14bc4 <__umoddi3>
   1403a:	c008                	sw	a0,0(s0)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:79
			p/=10;
   1403c:	4629                	li	a2,10
   1403e:	4681                	li	a3,0
   14040:	8556                	mv	a0,s5
   14042:	85d2                	mv	a1,s4
   14044:	00000097          	auipc	ra,0x0
   14048:	7e8080e7          	jalr	2024(ra) # 1482c <__udivdi3>
   1404c:	0411                	addi	s0,s0,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:76
		while(p!=0)//倒序的数字
   1404e:	fc0a19e3          	bnez	s4,14020 <printk_mkfloatstr+0x1f4>
   14052:	000a1563          	bnez	s4,1405c <printk_mkfloatstr+0x230>
   14056:	47a5                	li	a5,9
   14058:	fd57e4e3          	bltu	a5,s5,14020 <printk_mkfloatstr+0x1f4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   1405c:	dc95                	beqz	s1,13f98 <printk_mkfloatstr+0x16c>
   1405e:	0b8a                	slli	s7,s7,0x2
   14060:	1b1c                	addi	a5,sp,432
   14062:	9bbe                	add	s7,s7,a5
   14064:	875a                	mv	a4,s6
   14066:	a011                	j	1406a <printk_mkfloatstr+0x23e>
   14068:	8bbe                	mv	s7,a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:83
			c[i++]=a[j-1]+'0';
   1406a:	000ba783          	lw	a5,0(s7)
   1406e:	03078793          	addi	a5,a5,48
   14072:	00f70023          	sb	a5,0(a4)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:84
			j--;
   14076:	ffcb8793          	addi	a5,s7,-4
   1407a:	0705                	addi	a4,a4,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   1407c:	ff9b96e3          	bne	s7,s9,14068 <printk_mkfloatstr+0x23c>
   14080:	bf21                	j	13f98 <printk_mkfloatstr+0x16c>
   14082:	02010a13          	addi	s4,sp,32
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   14086:	8ad2                	mv	s5,s4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:92
		j=0;
   14088:	4481                	li	s1,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   1408a:	4ba5                	li	s7,9
   1408c:	a019                	j	14092 <printk_mkfloatstr+0x266>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:96
			q/=10;
   1408e:	8d2a                	mv	s10,a0
   14090:	89ae                	mv	s3,a1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:95
			b[j++]=q%10;
   14092:	0485                	addi	s1,s1,1
   14094:	4629                	li	a2,10
   14096:	4681                	li	a3,0
   14098:	856a                	mv	a0,s10
   1409a:	85ce                	mv	a1,s3
   1409c:	00001097          	auipc	ra,0x1
   140a0:	b28080e7          	jalr	-1240(ra) # 14bc4 <__umoddi3>
   140a4:	00aaa023          	sw	a0,0(s5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:96
			q/=10;
   140a8:	4629                	li	a2,10
   140aa:	4681                	li	a3,0
   140ac:	856a                	mv	a0,s10
   140ae:	85ce                	mv	a1,s3
   140b0:	00000097          	auipc	ra,0x0
   140b4:	77c080e7          	jalr	1916(ra) # 1482c <__udivdi3>
   140b8:	0a91                	addi	s5,s5,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   140ba:	fc099ae3          	bnez	s3,1408e <printk_mkfloatstr+0x262>
   140be:	00099463          	bnez	s3,140c6 <printk_mkfloatstr+0x29a>
   140c2:	fdabe6e3          	bltu	s7,s10,1408e <printk_mkfloatstr+0x262>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   140c6:	00090f63          	beqz	s2,140e4 <printk_mkfloatstr+0x2b8>
   140ca:	00249793          	slli	a5,s1,0x2
   140ce:	1018                	addi	a4,sp,32
   140d0:	97ba                	add	a5,a5,a4
   140d2:	94ca                	add	s1,s1,s2
   140d4:	00249713          	slli	a4,s1,0x2
   140d8:	9752                	add	a4,a4,s4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:100
			b[j++]=0;
   140da:	0007a023          	sw	zero,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:101
			k--;
   140de:	0791                	addi	a5,a5,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   140e0:	fee79de3          	bne	a5,a4,140da <printk_mkfloatstr+0x2ae>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   140e4:	ee0484e3          	beqz	s1,13fcc <printk_mkfloatstr+0x1a0>
   140e8:	00249793          	slli	a5,s1,0x2
   140ec:	0698                	addi	a4,sp,832
   140ee:	97ba                	add	a5,a5,a4
   140f0:	cdc78793          	addi	a5,a5,-804
   140f4:	008b06b3          	add	a3,s6,s0
   140f8:	a011                	j	140fc <printk_mkfloatstr+0x2d0>
   140fa:	87ba                	mv	a5,a4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:105
			c[i++]=b[j-1]+'0';
   140fc:	4398                	lw	a4,0(a5)
   140fe:	03070713          	addi	a4,a4,48
   14102:	00e68023          	sb	a4,0(a3)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:106
			j--;
   14106:	ffc78713          	addi	a4,a5,-4
   1410a:	0685                	addi	a3,a3,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   1410c:	fefa17e3          	bne	s4,a5,140fa <printk_mkfloatstr+0x2ce>
   14110:	9426                	add	s0,s0,s1
   14112:	bd6d                	j	13fcc <printk_mkfloatstr+0x1a0>

00014114 <printk>:
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:202
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
   14114:	7175                	addi	sp,sp,-144
   14116:	c706                	sw	ra,140(sp)
   14118:	c522                	sw	s0,136(sp)
   1411a:	c326                	sw	s1,132(sp)
   1411c:	c14a                	sw	s2,128(sp)
   1411e:	dece                	sw	s3,124(sp)
   14120:	dcd2                	sw	s4,120(sp)
   14122:	dad6                	sw	s5,116(sp)
   14124:	d8da                	sw	s6,112(sp)
   14126:	d6de                	sw	s7,108(sp)
   14128:	d4e2                	sw	s8,104(sp)
   1412a:	d2e6                	sw	s9,100(sp)
   1412c:	d0ea                	sw	s10,96(sp)
   1412e:	ceee                	sw	s11,92(sp)
   14130:	8a2a                	mv	s4,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:226

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
   14132:	d602                	sw	zero,44(sp)
   14134:	d802                	sw	zero,48(sp)
   14136:	da02                	sw	zero,52(sp)
   14138:	dc02                	sw	zero,56(sp)
   1413a:	de02                	sw	zero,60(sp)
   1413c:	c082                	sw	zero,64(sp)
   1413e:	c282                	sw	zero,68(sp)
   14140:	c482                	sw	zero,72(sp)
   14142:	04010623          	sb	zero,76(sp)
   14146:	03000793          	li	a5,48
   1414a:	02f10623          	sb	a5,44(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:247
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
   1414e:	d402                	sw	zero,40(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
   14150:	00058503          	lb	a0,0(a1)
   14154:	68050163          	beqz	a0,147d6 <printk+0x6c2>
   14158:	8b2e                	mv	s6,a1
   1415a:	8bb2                	mv	s7,a2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:249
	precision_used=TRUE;
   1415c:	4d05                	li	s10,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:248
	length_modifier=0;
   1415e:	4c81                	li	s9,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:279
		//此时字符为%  查看百分号后的第一个格式字符，对输出格式字符并做出相应输出判断
		//检查相应的修改标志
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
   14160:	00002417          	auipc	s0,0x2
   14164:	16440413          	addi	s0,s0,356 # 162c4 <strlen+0x39c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:387
			--p;
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
   14168:	00002c17          	auipc	s8,0x2
   1416c:	1a0c0c13          	addi	s8,s8,416 # 16308 <strlen+0x3e0>
   14170:	a035                	j	1419c <printk+0x88>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:263
				printk_putc(0x0D /* CR */, &count, info);
   14172:	8652                	mv	a2,s4
   14174:	102c                	addi	a1,sp,40
   14176:	4535                	li	a0,13
   14178:	00000097          	auipc	ra,0x0
   1417c:	ba2080e7          	jalr	-1118(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:264
				printk_putc(0x0A /* LF */, &count, info);
   14180:	8652                	mv	a2,s4
   14182:	102c                	addi	a1,sp,40
   14184:	4529                	li	a0,10
   14186:	00000097          	auipc	ra,0x0
   1418a:	b94080e7          	jalr	-1132(ra) # 13d1a <printk_putc>
   1418e:	8ada                	mv	s5,s6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:251 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
   14190:	001a8b13          	addi	s6,s5,1
   14194:	001a8503          	lb	a0,1(s5)
   14198:	62050f63          	beqz	a0,147d6 <printk+0x6c2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:254
		if (c != '%')
   1419c:	02500793          	li	a5,37
   141a0:	00f50d63          	beq	a0,a5,141ba <printk+0xa6>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:258
			if (c != '\n') {
   141a4:	47a9                	li	a5,10
   141a6:	fcf506e3          	beq	a0,a5,14172 <printk+0x5e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:259
				printk_putc(c, &count, info);
   141aa:	8652                	mv	a2,s4
   141ac:	102c                	addi	a1,sp,40
   141ae:	00000097          	auipc	ra,0x0
   141b2:	b6c080e7          	jalr	-1172(ra) # 13d1a <printk_putc>
   141b6:	8ada                	mv	s5,s6
   141b8:	bfe1                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:276
		flags_used = 0;
   141ba:	4481                	li	s1,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   141bc:	4641                	li	a2,16
   141be:	a021                	j	141c6 <printk+0xb2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:281
				flags_used |= FLAGS_MINUS;
   141c0:	0014e493          	ori	s1,s1,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:282
				break;
   141c4:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   141c6:	001b0693          	addi	a3,s6,1
   141ca:	001b4783          	lbu	a5,1(s6)
   141ce:	1781                	addi	a5,a5,-32
   141d0:	0ff7f713          	andi	a4,a5,255
   141d4:	08e66c63          	bltu	a2,a4,1426c <printk+0x158>
   141d8:	00271793          	slli	a5,a4,0x2
   141dc:	97a2                	add	a5,a5,s0
   141de:	439c                	lw	a5,0(a5)
   141e0:	97a2                	add	a5,a5,s0
   141e2:	8782                	jr	a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:284
				flags_used |= FLAGS_PLUS;
   141e4:	0024e493          	ori	s1,s1,2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:285
				break;
   141e8:	bff1                	j	141c4 <printk+0xb0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:287
				flags_used |= FLAGS_SPACE;
   141ea:	0044e493          	ori	s1,s1,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:288
				break;
   141ee:	bfd9                	j	141c4 <printk+0xb0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:290
				flags_used |= FLAGS_ZERO;
   141f0:	0084e493          	ori	s1,s1,8
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:291
				break;
   141f4:	bfc1                	j	141c4 <printk+0xb0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:293
				flags_used |= FLAGS_POUND;
   141f6:	0104e493          	ori	s1,s1,16
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:294
				break;
   141fa:	b7e9                	j	141c4 <printk+0xb0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:319
				field_width = (field_width * 10) + (c - '0');
   141fc:	00291793          	slli	a5,s2,0x2
   14200:	993e                	add	s2,s2,a5
   14202:	0906                	slli	s2,s2,0x1
   14204:	993a                	add	s2,s2,a4
   14206:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   14208:	001b0693          	addi	a3,s6,1
   1420c:	001b0703          	lb	a4,1(s6)
   14210:	fd070713          	addi	a4,a4,-48
   14214:	fee674e3          	bgeu	a2,a4,141fc <printk+0xe8>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   14218:	001b0703          	lb	a4,1(s6)
   1421c:	02e00793          	li	a5,46
   14220:	04f70963          	beq	a4,a5,14272 <printk+0x15e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:366
			precision_width = 0;
   14224:	4981                	li	s3,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:365
			precision_used = FALSE;
   14226:	4d01                	li	s10,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14228:	001b0693          	addi	a3,s6,1
   1422c:	001b0783          	lb	a5,1(s6)
   14230:	06800713          	li	a4,104
   14234:	06e78a63          	beq	a5,a4,142a8 <printk+0x194>
   14238:	06c00713          	li	a4,108
   1423c:	04e78e63          	beq	a5,a4,14298 <printk+0x184>
   14240:	04c00713          	li	a4,76
   14244:	04e78e63          	beq	a5,a4,142a0 <printk+0x18c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:387
		switch (c = *++p) {
   14248:	001b0a93          	addi	s5,s6,1
   1424c:	001b0503          	lb	a0,1(s6)
   14250:	fa850793          	addi	a5,a0,-88
   14254:	0ff7f693          	andi	a3,a5,255
   14258:	02000713          	li	a4,32
   1425c:	4cd76763          	bltu	a4,a3,1472a <printk+0x616>
   14260:	00269793          	slli	a5,a3,0x2
   14264:	97e2                	add	a5,a5,s8
   14266:	439c                	lw	a5,0(a5)
   14268:	97e2                	add	a5,a5,s8
   1426a:	8782                	jr	a5
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:305
		field_width = 0;
   1426c:	4901                	li	s2,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   1426e:	4625                	li	a2,9
   14270:	bf61                	j	14208 <printk+0xf4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   14272:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:335
			precision_width = 0;
   14274:	4981                	li	s3,0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14276:	4625                	li	a2,9
   14278:	a039                	j	14286 <printk+0x172>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:350
				precision_width = (precision_width * 10) +	(c - '0');
   1427a:	00299793          	slli	a5,s3,0x2
   1427e:	99be                	add	s3,s3,a5
   14280:	0986                	slli	s3,s3,0x1
   14282:	99ba                	add	s3,s3,a4
   14284:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14286:	001b0693          	addi	a3,s6,1
   1428a:	001b0703          	lb	a4,1(s6)
   1428e:	fd070713          	addi	a4,a4,-48
   14292:	fee674e3          	bgeu	a2,a4,1427a <printk+0x166>
   14296:	bf49                	j	14228 <printk+0x114>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:375
			 length_modifier |= LENMOD_l;
   14298:	001cec93          	ori	s9,s9,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   1429c:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:376
			break;
   1429e:	b76d                	j	14248 <printk+0x134>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:378
			 length_modifier |= LENMOD_L;
   142a0:	002cec93          	ori	s9,s9,2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   142a4:	8b36                	mv	s6,a3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:379
			break;
   142a6:	b74d                	j	14248 <printk+0x134>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   142a8:	8b36                	mv	s6,a3
   142aa:	bf79                	j	14248 <printk+0x134>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
		case 'd':
		case 'i':
			 //此时ap为指向可变参数列表的第一个参数
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   142ac:	004b8793          	addi	a5,s7,4
   142b0:	c63e                	sw	a5,12(sp)
   142b2:	000ba783          	lw	a5,0(s7)
   142b6:	d23e                	sw	a5,36(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:392
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);//将整型转换成字符型保存在vstr中，返回字符数vlen
   142b8:	46a9                	li	a3,10
   142ba:	4605                	li	a2,1
   142bc:	104c                	addi	a1,sp,36
   142be:	1068                	addi	a0,sp,44
   142c0:	00000097          	auipc	ra,0x0
   142c4:	a96080e7          	jalr	-1386(ra) # 13d56 <printk_mknumstr>
   142c8:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:393
			vstrp = &vstr[vlen];  //指向转换后的最后一个字符
   142ca:	107c                	addi	a5,sp,44
   142cc:	00a789b3          	add	s3,a5,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:396

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
   142d0:	5792                	lw	a5,36(sp)
   142d2:	0007ca63          	bltz	a5,142e6 <printk+0x1d2>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:402
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   142d6:	0024f793          	andi	a5,s1,2
   142da:	cf8d                	beqz	a5,14314 <printk+0x200>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:404
					schar = '+';
					++vlen;
   142dc:	00150b13          	addi	s6,a0,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:403
					schar = '+';
   142e0:	02b00d93          	li	s11,43
   142e4:	a029                	j	142ee <printk+0x1da>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:398
				++vlen;
   142e6:	00150b13          	addi	s6,a0,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:397
				schar = '-';
   142ea:	02d00d93          	li	s11,45
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:419
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   142ee:	0084f793          	andi	a5,s1,8
   142f2:	eb95                	bnez	a5,14326 <printk+0x212>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   142f4:	0014f793          	andi	a5,s1,1
   142f8:	4a078e63          	beqz	a5,147b4 <printk+0x6a0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   142fc:	4bb2                	lw	s7,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:437
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
   142fe:	280d8d63          	beqz	s11,14598 <printk+0x484>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:438
				printk_putc(schar, &count, info);
   14302:	8652                	mv	a2,s4
   14304:	102c                	addi	a1,sp,40
   14306:	856e                	mv	a0,s11
   14308:	00000097          	auipc	ra,0x0
   1430c:	a12080e7          	jalr	-1518(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14310:	4bb2                	lw	s7,12(sp)
   14312:	a459                	j	14598 <printk+0x484>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:406
					if (IS_FLAG_SPACE(flags_used)) {
   14314:	0044f793          	andi	a5,s1,4
   14318:	46078663          	beqz	a5,14784 <printk+0x670>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:408
						++vlen;
   1431c:	00150b13          	addi	s6,a0,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:407
						schar = ' ';
   14320:	02000d93          	li	s11,32
   14324:	b7e9                	j	142ee <printk+0x1da>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:421
					printk_putc(schar, &count, info);  //输出符号
   14326:	8652                	mv	a2,s4
   14328:	102c                	addi	a1,sp,40
   1432a:	856e                	mv	a0,s11
   1432c:	00000097          	auipc	ra,0x0
   14330:	9ee080e7          	jalr	-1554(ra) # 13d1a <printk_putc>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14334:	332b5963          	bge	s6,s2,14666 <printk+0x552>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14338:	8652                	mv	a2,s4
   1433a:	102c                	addi	a1,sp,40
   1433c:	03000513          	li	a0,48
   14340:	00000097          	auipc	ra,0x0
   14344:	9da080e7          	jalr	-1574(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14348:	0b05                	addi	s6,s6,1
   1434a:	ff2b17e3          	bne	s6,s2,14338 <printk+0x224>
   1434e:	8b4a                	mv	s6,s2
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14350:	4bb2                	lw	s7,12(sp)
   14352:	a4e9                	j	1461c <printk+0x508>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:452
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg1(ap,double);
   14354:	00cb8b13          	addi	s6,s7,12
   14358:	004bad83          	lw	s11,4(s7)
   1435c:	008bab83          	lw	s7,8(s7)
   14360:	cc6e                	sw	s11,24(sp)
   14362:	ce5e                	sw	s7,28(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:456
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
   14364:	4601                	li	a2,0
   14366:	4681                	li	a3,0
   14368:	856e                	mv	a0,s11
   1436a:	85de                	mv	a1,s7
   1436c:	00001097          	auipc	ra,0x1
   14370:	c50080e7          	jalr	-944(ra) # 14fbc <__ledf2>
   14374:	00054e63          	bltz	a0,14390 <printk+0x27c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   14378:	0024f793          	andi	a5,s1,2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:464
					schar = '+';
   1437c:	02b00b93          	li	s7,43
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:463
				if (IS_FLAG_PLUS(flags_used)) {
   14380:	e385                	bnez	a5,143a0 <printk+0x28c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:467
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
   14382:	0044fb93          	andi	s7,s1,4
   14386:	000b8d63          	beqz	s7,143a0 <printk+0x28c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:468
						schar = ' ';
   1438a:	02000b93          	li	s7,32
   1438e:	a809                	j	143a0 <printk+0x28c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:458
				fval = -fval;				//负数取它的正数
   14390:	cc6e                	sw	s11,24(sp)
   14392:	800007b7          	lui	a5,0x80000
   14396:	0177c7b3          	xor	a5,a5,s7
   1439a:	ce3e                	sw	a5,28(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:457
				schar = '-';
   1439c:	02d00b93          	li	s7,45
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:478
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
   143a0:	060d1c63          	bnez	s10,14418 <printk+0x304>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:485
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{
				if(length_modifier==0)   //浮点型精度到小数点后8位
   143a4:	080c9363          	bnez	s9,1442a <printk+0x316>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:487
				{
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   143a8:	4619                	li	a2,6
   143aa:	106c                	addi	a1,sp,44
   143ac:	0828                	addi	a0,sp,24
   143ae:	00000097          	auipc	ra,0x0
   143b2:	a7e080e7          	jalr	-1410(ra) # 13e2c <printk_mkfloatstr>
   143b6:	89aa                	mv	s3,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:503
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   143b8:	0084f793          	andi	a5,s1,8
   143bc:	cbc1                	beqz	a5,1444c <printk+0x338>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:504
				if (schar)
   143be:	060b9f63          	bnez	s7,1443c <printk+0x328>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   143c2:	0129dd63          	bge	s3,s2,143dc <printk+0x2c8>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   143c6:	8652                	mv	a2,s4
   143c8:	102c                	addi	a1,sp,40
   143ca:	03000513          	li	a0,48
   143ce:	00000097          	auipc	ra,0x0
   143d2:	94c080e7          	jalr	-1716(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   143d6:	0985                	addi	s3,s3,1
   143d8:	ff2997e3          	bne	s3,s2,143c6 <printk+0x2b2>
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:524
			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
				printk_putc(schar, &count, info);
			}
			while (*vstrp)
   143dc:	02c10503          	lb	a0,44(sp)
   143e0:	89ca                	mv	s3,s2
   143e2:	cd09                	beqz	a0,143fc <printk+0x2e8>
   143e4:	02c10b93          	addi	s7,sp,44
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:525
				printk_putc(*vstrp++, &count, info);
   143e8:	0b85                	addi	s7,s7,1
   143ea:	8652                	mv	a2,s4
   143ec:	102c                	addi	a1,sp,40
   143ee:	00000097          	auipc	ra,0x0
   143f2:	92c080e7          	jalr	-1748(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   143f6:	000b8503          	lb	a0,0(s7)
   143fa:	f57d                	bnez	a0,143e8 <printk+0x2d4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   143fc:	8885                	andi	s1,s1,1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   143fe:	8bda                	mv	s7,s6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   14400:	d80488e3          	beqz	s1,14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:527
				printk_pad_space(vlen, field_width, &count, info);
   14404:	86d2                	mv	a3,s4
   14406:	1030                	addi	a2,sp,40
   14408:	85ca                	mv	a1,s2
   1440a:	854e                	mv	a0,s3
   1440c:	00000097          	auipc	ra,0x0
   14410:	9cc080e7          	jalr	-1588(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   14414:	8bda                	mv	s7,s6
   14416:	bbad                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:480
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
   14418:	864e                	mv	a2,s3
   1441a:	106c                	addi	a1,sp,44
   1441c:	0828                	addi	a0,sp,24
   1441e:	00000097          	auipc	ra,0x0
   14422:	a0e080e7          	jalr	-1522(ra) # 13e2c <printk_mkfloatstr>
   14426:	89aa                	mv	s3,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:481
				vstrp = &vstr[0];  //指向转换后的第一个字符
   14428:	bf41                	j	143b8 <printk+0x2a4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:492
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   1442a:	4619                	li	a2,6
   1442c:	106c                	addi	a1,sp,44
   1442e:	0828                	addi	a0,sp,24
   14430:	00000097          	auipc	ra,0x0
   14434:	9fc080e7          	jalr	-1540(ra) # 13e2c <printk_mkfloatstr>
   14438:	89aa                	mv	s3,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:493
					vstrp = &vstr[0];  //指向转换后的第一个字符
   1443a:	bfbd                	j	143b8 <printk+0x2a4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:505
					printk_putc(schar, &count, info);  //输出符号
   1443c:	8652                	mv	a2,s4
   1443e:	102c                	addi	a1,sp,40
   14440:	855e                	mv	a0,s7
   14442:	00000097          	auipc	ra,0x0
   14446:	8d8080e7          	jalr	-1832(ra) # 13d1a <printk_putc>
   1444a:	bfa5                	j	143c2 <printk+0x2ae>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:510
				if (!IS_FLAG_MINUS(flags_used)) {
   1444c:	0014f793          	andi	a5,s1,1
   14450:	c799                	beqz	a5,1445e <printk+0x34a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:521
			if (!dschar && schar) {
   14452:	020b9d63          	bnez	s7,1448c <printk+0x378>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14456:	02c10503          	lb	a0,44(sp)
   1445a:	f549                	bnez	a0,143e4 <printk+0x2d0>
   1445c:	b765                	j	14404 <printk+0x2f0>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:511
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   1445e:	86d2                	mv	a3,s4
   14460:	1030                	addi	a2,sp,40
   14462:	85ca                	mv	a1,s2
   14464:	854e                	mv	a0,s3
   14466:	00000097          	auipc	ra,0x0
   1446a:	972080e7          	jalr	-1678(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:513
					if (schar)
   1446e:	000b9763          	bnez	s7,1447c <printk+0x368>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14472:	02c10503          	lb	a0,44(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   14476:	8bda                	mv	s7,s6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14478:	f535                	bnez	a0,143e4 <printk+0x2d0>
   1447a:	bb19                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:514
						printk_putc(schar, &count, info);
   1447c:	8652                	mv	a2,s4
   1447e:	102c                	addi	a1,sp,40
   14480:	855e                	mv	a0,s7
   14482:	00000097          	auipc	ra,0x0
   14486:	898080e7          	jalr	-1896(ra) # 13d1a <printk_putc>
   1448a:	b7e5                	j	14472 <printk+0x35e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:522
				printk_putc(schar, &count, info);
   1448c:	8652                	mv	a2,s4
   1448e:	102c                	addi	a1,sp,40
   14490:	855e                	mv	a0,s7
   14492:	00000097          	auipc	ra,0x0
   14496:	888080e7          	jalr	-1912(ra) # 13d1a <printk_putc>
   1449a:	bf75                	j	14456 <printk+0x342>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1449c:	004b8d93          	addi	s11,s7,4
   144a0:	000ba783          	lw	a5,0(s7)
   144a4:	ca3e                	sw	a5,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:534
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   144a6:	46c1                	li	a3,16
   144a8:	4601                	li	a2,0
   144aa:	084c                	addi	a1,sp,20
   144ac:	1068                	addi	a0,sp,44
   144ae:	00000097          	auipc	ra,0x0
   144b2:	8a8080e7          	jalr	-1880(ra) # 13d56 <printk_mknumstr>
   144b6:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:535
			vstrp = &vstr[vlen];
   144b8:	107c                	addi	a5,sp,44
   144ba:	00a789b3          	add	s3,a5,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:538

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
   144be:	0084f793          	andi	a5,s1,8
   144c2:	c3a5                	beqz	a5,14522 <printk+0x40e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:539
				if (IS_FLAG_POUND(flags_used)) {
   144c4:	0104fb93          	andi	s7,s1,16
   144c8:	020b9863          	bnez	s7,144f8 <printk+0x3e4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:537
			dschar = FALSE;
   144cc:	c65e                	sw	s7,12(sp)
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   144ce:	29255b63          	bge	a0,s2,14764 <printk+0x650>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   144d2:	8652                	mv	a2,s4
   144d4:	102c                	addi	a1,sp,40
   144d6:	03000513          	li	a0,48
   144da:	00000097          	auipc	ra,0x0
   144de:	840080e7          	jalr	-1984(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   144e2:	0b05                	addi	s6,s6,1
   144e4:	ff2b47e3          	blt	s6,s2,144d2 <printk+0x3be>
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:561
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   144e8:	180b8563          	beqz	s7,14672 <printk+0x55e>
   144ec:	8b4a                	mv	s6,s2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533 (discriminator 1)
			uval = (unsigned int) va_arg1(ap, unsigned int);
   144ee:	8bee                	mv	s7,s11
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:561 (discriminator 1)
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   144f0:	47b2                	lw	a5,12(sp)
   144f2:	12079563          	bnez	a5,1461c <printk+0x508>
   144f6:	a4a1                	j	1473e <printk+0x62a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:540
					printk_putc('0', &count, info);
   144f8:	8652                	mv	a2,s4
   144fa:	102c                	addi	a1,sp,40
   144fc:	03000513          	li	a0,48
   14500:	00000097          	auipc	ra,0x0
   14504:	81a080e7          	jalr	-2022(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:541
					printk_putc('x', &count, info);
   14508:	8652                	mv	a2,s4
   1450a:	102c                	addi	a1,sp,40
   1450c:	07800513          	li	a0,120
   14510:	00000097          	auipc	ra,0x0
   14514:	80a080e7          	jalr	-2038(ra) # 13d1a <printk_putc>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14518:	152b5a63          	bge	s6,s2,1466c <printk+0x558>
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:543
					dschar = TRUE;
   1451c:	4785                	li	a5,1
   1451e:	c63e                	sw	a5,12(sp)
   14520:	bf4d                	j	144d2 <printk+0x3be>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:548
				if (!IS_FLAG_MINUS(flags_used)) {
   14522:	0014f793          	andi	a5,s1,1
   14526:	20079963          	bnez	a5,14738 <printk+0x624>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:549
					if (IS_FLAG_POUND(flags_used)) {
   1452a:	0104f793          	andi	a5,s1,16
   1452e:	22078e63          	beqz	a5,1476a <printk+0x656>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:550
						vlen += 2;
   14532:	00250b13          	addi	s6,a0,2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14536:	86d2                	mv	a3,s4
   14538:	1030                	addi	a2,sp,40
   1453a:	85ca                	mv	a1,s2
   1453c:	855a                	mv	a0,s6
   1453e:	00000097          	auipc	ra,0x0
   14542:	89a080e7          	jalr	-1894(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:554
						printk_putc('0', &count, info);
   14546:	8652                	mv	a2,s4
   14548:	102c                	addi	a1,sp,40
   1454a:	03000513          	li	a0,48
   1454e:	fffff097          	auipc	ra,0xfffff
   14552:	7cc080e7          	jalr	1996(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:555
						printk_putc('x', &count, info);
   14556:	8652                	mv	a2,s4
   14558:	102c                	addi	a1,sp,40
   1455a:	07800513          	li	a0,120
   1455e:	fffff097          	auipc	ra,0xfffff
   14562:	7bc080e7          	jalr	1980(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14566:	ac09                	j	14778 <printk+0x664>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:569
				vlen += 2;
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14568:	004b8993          	addi	s3,s7,4
   1456c:	000ba783          	lw	a5,0(s7)
   14570:	ca3e                	sw	a5,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:570
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
   14572:	46a1                	li	a3,8
   14574:	4601                	li	a2,0
   14576:	084c                	addi	a1,sp,20
   14578:	1068                	addi	a0,sp,44
   1457a:	fffff097          	auipc	ra,0xfffff
   1457e:	7dc080e7          	jalr	2012(ra) # 13d56 <printk_mknumstr>
   14582:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:569
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14584:	8bce                	mv	s7,s3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:586
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg1(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
   14586:	107c                	addi	a5,sp,44
   14588:	016789b3          	add	s3,a5,s6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:588

			if (IS_FLAG_ZERO(flags_used)) {
   1458c:	0084f793          	andi	a5,s1,8
   14590:	eba5                	bnez	a5,14600 <printk+0x4ec>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:592
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   14592:	0014f793          	andi	a5,s1,1
   14596:	cfc5                	beqz	a5,1464e <printk+0x53a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
					printk_pad_space(vlen, field_width, &count, info);
				}
			}

			cont_xd: while (*vstrp)
   14598:	00098503          	lb	a0,0(s3)
   1459c:	e159                	bnez	a0,14622 <printk+0x50e>
   1459e:	a879                	j	1463c <printk+0x528>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   145a0:	004b8993          	addi	s3,s7,4
   145a4:	000ba783          	lw	a5,0(s7)
   145a8:	ca3e                	sw	a5,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:575
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
   145aa:	4689                	li	a3,2
   145ac:	4601                	li	a2,0
   145ae:	084c                	addi	a1,sp,20
   145b0:	1068                	addi	a0,sp,44
   145b2:	fffff097          	auipc	ra,0xfffff
   145b6:	7a4080e7          	jalr	1956(ra) # 13d56 <printk_mknumstr>
   145ba:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   145bc:	8bce                	mv	s7,s3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:576
			goto cont_u;
   145be:	b7e1                	j	14586 <printk+0x472>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   145c0:	004b8993          	addi	s3,s7,4
   145c4:	000ba783          	lw	a5,0(s7)
   145c8:	ca3e                	sw	a5,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:580
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   145ca:	46c1                	li	a3,16
   145cc:	4601                	li	a2,0
   145ce:	084c                	addi	a1,sp,20
   145d0:	1068                	addi	a0,sp,44
   145d2:	fffff097          	auipc	ra,0xfffff
   145d6:	784080e7          	jalr	1924(ra) # 13d56 <printk_mknumstr>
   145da:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   145dc:	8bce                	mv	s7,s3
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:581
			goto cont_u;
   145de:	b765                	j	14586 <printk+0x472>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   145e0:	004b8993          	addi	s3,s7,4
   145e4:	000ba783          	lw	a5,0(s7)
   145e8:	ca3e                	sw	a5,20(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:584
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
   145ea:	46a9                	li	a3,10
   145ec:	4601                	li	a2,0
   145ee:	084c                	addi	a1,sp,20
   145f0:	1068                	addi	a0,sp,44
   145f2:	fffff097          	auipc	ra,0xfffff
   145f6:	764080e7          	jalr	1892(ra) # 13d56 <printk_mknumstr>
   145fa:	8b2a                	mv	s6,a0
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   145fc:	8bce                	mv	s7,s3
   145fe:	b761                	j	14586 <printk+0x472>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14600:	072b5c63          	bge	s6,s2,14678 <printk+0x564>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14604:	8652                	mv	a2,s4
   14606:	102c                	addi	a1,sp,40
   14608:	03000513          	li	a0,48
   1460c:	fffff097          	auipc	ra,0xfffff
   14610:	70e080e7          	jalr	1806(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14614:	0b05                	addi	s6,s6,1
   14616:	ff2b17e3          	bne	s6,s2,14604 <printk+0x4f0>
   1461a:	8b4a                	mv	s6,s2
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597 (discriminator 1)
			cont_xd: while (*vstrp)
   1461c:	00098503          	lb	a0,0(s3)
   14620:	c919                	beqz	a0,14636 <printk+0x522>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:598
				printk_putc(*vstrp--, &count, info);
   14622:	19fd                	addi	s3,s3,-1
   14624:	8652                	mv	a2,s4
   14626:	102c                	addi	a1,sp,40
   14628:	fffff097          	auipc	ra,0xfffff
   1462c:	6f2080e7          	jalr	1778(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14630:	00098503          	lb	a0,0(s3)
   14634:	f57d                	bnez	a0,14622 <printk+0x50e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:600

			if (IS_FLAG_MINUS(flags_used)) {
   14636:	8885                	andi	s1,s1,1
   14638:	b4048ce3          	beqz	s1,14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:601
				printk_pad_space(vlen, field_width, &count, info);
   1463c:	86d2                	mv	a3,s4
   1463e:	1030                	addi	a2,sp,40
   14640:	85ca                	mv	a1,s2
   14642:	855a                	mv	a0,s6
   14644:	fffff097          	auipc	ra,0xfffff
   14648:	794080e7          	jalr	1940(ra) # 13dd8 <printk_pad_space>
   1464c:	b691                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:593
					printk_pad_space(vlen, field_width, &count, info);
   1464e:	86d2                	mv	a3,s4
   14650:	1030                	addi	a2,sp,40
   14652:	85ca                	mv	a1,s2
   14654:	855a                	mv	a0,s6
   14656:	fffff097          	auipc	ra,0xfffff
   1465a:	782080e7          	jalr	1922(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   1465e:	00098503          	lb	a0,0(s3)
   14662:	f161                	bnez	a0,14622 <printk+0x50e>
   14664:	b635                	j	14190 <printk+0x7c>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14666:	8b4a                	mv	s6,s2
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14668:	4bb2                	lw	s7,12(sp)
   1466a:	bf4d                	j	1461c <printk+0x508>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1466c:	8b4a                	mv	s6,s2
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1466e:	8bee                	mv	s7,s11
   14670:	b775                	j	1461c <printk+0x508>
   14672:	8b4a                	mv	s6,s2
   14674:	8bee                	mv	s7,s11
   14676:	b75d                	j	1461c <printk+0x508>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14678:	8b4a                	mv	s6,s2
   1467a:	b74d                	j	1461c <printk+0x508>
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:607
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg1(ap, unsigned int);
   1467c:	004b8493          	addi	s1,s7,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:608
			printk_putc(cval, &count, info);
   14680:	8652                	mv	a2,s4
   14682:	102c                	addi	a1,sp,40
   14684:	000b8503          	lb	a0,0(s7)
   14688:	fffff097          	auipc	ra,0xfffff
   1468c:	692080e7          	jalr	1682(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:607
			cval = (char) va_arg1(ap, unsigned int);
   14690:	8ba6                	mv	s7,s1
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:609
			break;
   14692:	bcfd                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:611
		case 's':
			sval = (char *) va_arg1(ap, char *);
   14694:	004b8d93          	addi	s11,s7,4
   14698:	000bab03          	lw	s6,0(s7)
   1469c:	8bee                	mv	s7,s11
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:612
			if (sval) {
   1469e:	ae0b09e3          	beqz	s6,14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:613
				vlen = strlen(sval);
   146a2:	855a                	mv	a0,s6
   146a4:	00002097          	auipc	ra,0x2
   146a8:	884080e7          	jalr	-1916(ra) # 15f28 <strlen>
   146ac:	c62a                	sw	a0,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:614
				if (!IS_FLAG_MINUS(flags_used)) {
   146ae:	8885                	andi	s1,s1,1
   146b0:	cc85                	beqz	s1,146e8 <printk+0x5d4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:617
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
   146b2:	04099363          	bnez	s3,146f8 <printk+0x5e4>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:628
							printk_putc(*sval++, &count, info);					
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
   146b6:	000b0503          	lb	a0,0(s6)
   146ba:	c919                	beqz	a0,146d0 <printk+0x5bc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:629
					   printk_putc(*sval++, &count, info);
   146bc:	0b05                	addi	s6,s6,1
   146be:	8652                	mv	a2,s4
   146c0:	102c                	addi	a1,sp,40
   146c2:	fffff097          	auipc	ra,0xfffff
   146c6:	658080e7          	jalr	1624(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:628
					while (*sval)
   146ca:	000b0503          	lb	a0,0(s6)
   146ce:	f57d                	bnez	a0,146bc <printk+0x5a8>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:611
			sval = (char *) va_arg1(ap, char *);
   146d0:	8bee                	mv	s7,s11
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:631
				}
				if (IS_FLAG_MINUS(flags_used)) {
   146d2:	aa048fe3          	beqz	s1,14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:632
					printk_pad_space(vlen, field_width, &count, info);
   146d6:	86d2                	mv	a3,s4
   146d8:	1030                	addi	a2,sp,40
   146da:	85ca                	mv	a1,s2
   146dc:	4532                	lw	a0,12(sp)
   146de:	fffff097          	auipc	ra,0xfffff
   146e2:	6fa080e7          	jalr	1786(ra) # 13dd8 <printk_pad_space>
   146e6:	b46d                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:615
					printk_pad_space(vlen, field_width, &count, info);
   146e8:	86d2                	mv	a3,s4
   146ea:	1030                	addi	a2,sp,40
   146ec:	85ca                	mv	a1,s2
   146ee:	fffff097          	auipc	ra,0xfffff
   146f2:	6ea080e7          	jalr	1770(ra) # 13dd8 <printk_pad_space>
   146f6:	bf75                	j	146b2 <printk+0x59e>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   146f8:	fd305ce3          	blez	s3,146d0 <printk+0x5bc>
   146fc:	000b0503          	lb	a0,0(s6)
   14700:	d961                	beqz	a0,146d0 <printk+0x5bc>
   14702:	99da                	add	s3,s3,s6
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:623
							printk_putc(*sval++, &count, info);					
   14704:	0b05                	addi	s6,s6,1
   14706:	8652                	mv	a2,s4
   14708:	102c                	addi	a1,sp,40
   1470a:	fffff097          	auipc	ra,0xfffff
   1470e:	610080e7          	jalr	1552(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   14712:	fb3b0fe3          	beq	s6,s3,146d0 <printk+0x5bc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:620 (discriminator 1)
   14716:	000b0503          	lb	a0,0(s6)
   1471a:	f56d                	bnez	a0,14704 <printk+0x5f0>
   1471c:	bf55                	j	146d0 <printk+0x5bc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:637
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg1(ap, int *);
   1471e:	000ba783          	lw	a5,0(s7)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:638
			*ivalp = count;
   14722:	5722                	lw	a4,40(sp)
   14724:	c398                	sw	a4,0(a5)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:637
			ivalp = (int *) va_arg1(ap, int *);
   14726:	0b91                	addi	s7,s7,4
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:639
			break;
   14728:	b4a5                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:642

		default:
			printk_putc(c, &count, info);
   1472a:	8652                	mv	a2,s4
   1472c:	102c                	addi	a1,sp,40
   1472e:	fffff097          	auipc	ra,0xfffff
   14732:	5ec080e7          	jalr	1516(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:643
			break;
   14736:	bca9                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14738:	0104f793          	andi	a5,s1,16
   1473c:	c7b5                	beqz	a5,147a8 <printk+0x694>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:562
				printk_putc('0', &count, info);
   1473e:	8652                	mv	a2,s4
   14740:	102c                	addi	a1,sp,40
   14742:	03000513          	li	a0,48
   14746:	fffff097          	auipc	ra,0xfffff
   1474a:	5d4080e7          	jalr	1492(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:563
				printk_putc('x', &count, info);
   1474e:	8652                	mv	a2,s4
   14750:	102c                	addi	a1,sp,40
   14752:	07800513          	li	a0,120
   14756:	fffff097          	auipc	ra,0xfffff
   1475a:	5c4080e7          	jalr	1476(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:564
				vlen += 2;
   1475e:	0b09                	addi	s6,s6,2
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14760:	8bee                	mv	s7,s11
   14762:	bd6d                	j	1461c <printk+0x508>
printk_pad_zero():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14764:	8b4a                	mv	s6,s2
printk():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14766:	8bee                	mv	s7,s11
   14768:	bd55                	j	1461c <printk+0x508>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   1476a:	86d2                	mv	a3,s4
   1476c:	1030                	addi	a2,sp,40
   1476e:	85ca                	mv	a1,s2
   14770:	fffff097          	auipc	ra,0xfffff
   14774:	668080e7          	jalr	1640(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14778:	00098503          	lb	a0,0(s3)
   1477c:	8bee                	mv	s7,s11
   1477e:	ea0512e3          	bnez	a0,14622 <printk+0x50e>
   14782:	b439                	j	14190 <printk+0x7c>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:419
			if (IS_FLAG_ZERO(flags_used)) {
   14784:	0084fd93          	andi	s11,s1,8
   14788:	ba0d96e3          	bnez	s11,14334 <printk+0x220>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:426
				if (!IS_FLAG_MINUS(flags_used)) {
   1478c:	0014f793          	andi	a5,s1,1
   14790:	b60796e3          	bnez	a5,142fc <printk+0x1e8>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14794:	86d2                	mv	a3,s4
   14796:	1030                	addi	a2,sp,40
   14798:	85ca                	mv	a1,s2
   1479a:	855a                	mv	a0,s6
   1479c:	fffff097          	auipc	ra,0xfffff
   147a0:	63c080e7          	jalr	1596(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   147a4:	4bb2                	lw	s7,12(sp)
   147a6:	bd65                	j	1465e <printk+0x54a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   147a8:	00098503          	lb	a0,0(s3)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   147ac:	8bee                	mv	s7,s11
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   147ae:	e6051ae3          	bnez	a0,14622 <printk+0x50e>
   147b2:	b569                	j	1463c <printk+0x528>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   147b4:	86d2                	mv	a3,s4
   147b6:	1030                	addi	a2,sp,40
   147b8:	85ca                	mv	a1,s2
   147ba:	855a                	mv	a0,s6
   147bc:	fffff097          	auipc	ra,0xfffff
   147c0:	61c080e7          	jalr	1564(ra) # 13dd8 <printk_pad_space>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:430
						printk_putc(schar, &count, info);
   147c4:	8652                	mv	a2,s4
   147c6:	102c                	addi	a1,sp,40
   147c8:	856e                	mv	a0,s11
   147ca:	fffff097          	auipc	ra,0xfffff
   147ce:	550080e7          	jalr	1360(ra) # 13d1a <printk_putc>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   147d2:	4bb2                	lw	s7,12(sp)
   147d4:	b569                	j	1465e <printk+0x54a>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:646
		}
	}
	return count;
   147d6:	5522                	lw	a0,40(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:647
}
   147d8:	40ba                	lw	ra,140(sp)
   147da:	442a                	lw	s0,136(sp)
   147dc:	449a                	lw	s1,132(sp)
   147de:	490a                	lw	s2,128(sp)
   147e0:	59f6                	lw	s3,124(sp)
   147e2:	5a66                	lw	s4,120(sp)
   147e4:	5ad6                	lw	s5,116(sp)
   147e6:	5b46                	lw	s6,112(sp)
   147e8:	5bb6                	lw	s7,108(sp)
   147ea:	5c26                	lw	s8,104(sp)
   147ec:	5c96                	lw	s9,100(sp)
   147ee:	5d06                	lw	s10,96(sp)
   147f0:	4df6                	lw	s11,92(sp)
   147f2:	6149                	addi	sp,sp,144
   147f4:	8082                	ret

000147f6 <myprintf>:
myprintf():
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:656
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
   147f6:	7139                	addi	sp,sp,-64
   147f8:	ce06                	sw	ra,28(sp)
   147fa:	d22e                	sw	a1,36(sp)
   147fc:	d432                	sw	a2,40(sp)
   147fe:	d636                	sw	a3,44(sp)
   14800:	d83a                	sw	a4,48(sp)
   14802:	da3e                	sw	a5,52(sp)
   14804:	dc42                	sw	a6,56(sp)
   14806:	de46                	sw	a7,60(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:662
	//char * ap;
  va_list ap;
	char c;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
   14808:	4785                	li	a5,1
   1480a:	c03e                	sw	a5,0(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:663
	info.func = &out_char;     //调用的串口输出函数
   1480c:	fffff797          	auipc	a5,0xfffff
   14810:	60878793          	addi	a5,a5,1544 # 13e14 <out_char>
   14814:	c23e                	sw	a5,4(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:664
	va_start(ap, fmt);  //对ap 进行初始化，让它指向可变参数表里面的第一个参数
   14816:	1050                	addi	a2,sp,36
   14818:	c632                	sw	a2,12(sp)
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:665
	rvalue = printk(&info, fmt, ap);
   1481a:	85aa                	mv	a1,a0
   1481c:	850a                	mv	a0,sp
   1481e:	00000097          	auipc	ra,0x0
   14822:	8f6080e7          	jalr	-1802(ra) # 14114 <printk>
E:\16-24-BOOK\20-24-Machinery\22-24-CHB-20211026-20241126\06-User\AHL-CH573-EXP-V1.5-20241126\03-Software\CH08\SysTick-CH573\Debug/srcc/printf.c:670
    
	va_end(ap);

	return rvalue;
}
   14826:	40f2                	lw	ra,28(sp)
   14828:	6121                	addi	sp,sp,64
   1482a:	8082                	ret

0001482c <__udivdi3>:
__udivdi3():
   1482c:	87b6                	mv	a5,a3
   1482e:	88b2                	mv	a7,a2
   14830:	832a                	mv	t1,a0
   14832:	882e                	mv	a6,a1
   14834:	14069d63          	bnez	a3,1498e <__udivdi3+0x162>
   14838:	0ac5f963          	bgeu	a1,a2,148ea <__udivdi3+0xbe>
   1483c:	6741                	lui	a4,0x10
   1483e:	1ae66e63          	bltu	a2,a4,149fa <__udivdi3+0x1ce>
   14842:	010007b7          	lui	a5,0x1000
   14846:	34f66363          	bltu	a2,a5,14b8c <__udivdi3+0x360>
   1484a:	01865693          	srli	a3,a2,0x18
   1484e:	47e1                	li	a5,24
   14850:	00002717          	auipc	a4,0x2
   14854:	b9070713          	addi	a4,a4,-1136 # 163e0 <__clz_tab>
   14858:	9736                	add	a4,a4,a3
   1485a:	00074703          	lbu	a4,0(a4)
   1485e:	97ba                	add	a5,a5,a4
   14860:	02000713          	li	a4,32
   14864:	8f1d                	sub	a4,a4,a5
   14866:	cb19                	beqz	a4,1487c <__udivdi3+0x50>
   14868:	00e59833          	sll	a6,a1,a4
   1486c:	00f557b3          	srl	a5,a0,a5
   14870:	00e618b3          	sll	a7,a2,a4
   14874:	0107e833          	or	a6,a5,a6
   14878:	00e51333          	sll	t1,a0,a4
   1487c:	0108d613          	srli	a2,a7,0x10
   14880:	02c85533          	divu	a0,a6,a2
   14884:	01089693          	slli	a3,a7,0x10
   14888:	82c1                	srli	a3,a3,0x10
   1488a:	01035793          	srli	a5,t1,0x10
   1488e:	02c87733          	remu	a4,a6,a2
   14892:	02a685b3          	mul	a1,a3,a0
   14896:	0742                	slli	a4,a4,0x10
   14898:	00f76833          	or	a6,a4,a5
   1489c:	00b87a63          	bgeu	a6,a1,148b0 <__udivdi3+0x84>
   148a0:	9846                	add	a6,a6,a7
   148a2:	fff50793          	addi	a5,a0,-1
   148a6:	01186463          	bltu	a6,a7,148ae <__udivdi3+0x82>
   148aa:	30b86763          	bltu	a6,a1,14bb8 <__udivdi3+0x38c>
   148ae:	853e                	mv	a0,a5
   148b0:	40b80833          	sub	a6,a6,a1
   148b4:	02c85733          	divu	a4,a6,a2
   148b8:	0342                	slli	t1,t1,0x10
   148ba:	01035313          	srli	t1,t1,0x10
   148be:	02c87833          	remu	a6,a6,a2
   148c2:	02e686b3          	mul	a3,a3,a4
   148c6:	0842                	slli	a6,a6,0x10
   148c8:	00686833          	or	a6,a6,t1
   148cc:	00d87b63          	bgeu	a6,a3,148e2 <__udivdi3+0xb6>
   148d0:	9846                	add	a6,a6,a7
   148d2:	fff70793          	addi	a5,a4,-1
   148d6:	01186563          	bltu	a6,a7,148e0 <__udivdi3+0xb4>
   148da:	1779                	addi	a4,a4,-2
   148dc:	00d86363          	bltu	a6,a3,148e2 <__udivdi3+0xb6>
   148e0:	873e                	mv	a4,a5
   148e2:	0542                	slli	a0,a0,0x10
   148e4:	8d59                	or	a0,a0,a4
   148e6:	4581                	li	a1,0
   148e8:	8082                	ret
   148ea:	e601                	bnez	a2,148f2 <__udivdi3+0xc6>
   148ec:	4705                	li	a4,1
   148ee:	02c758b3          	divu	a7,a4,a2
   148f2:	6741                	lui	a4,0x10
   148f4:	0ee8ea63          	bltu	a7,a4,149e8 <__udivdi3+0x1bc>
   148f8:	010007b7          	lui	a5,0x1000
   148fc:	28f8ec63          	bltu	a7,a5,14b94 <__udivdi3+0x368>
   14900:	0188d693          	srli	a3,a7,0x18
   14904:	47e1                	li	a5,24
   14906:	00002717          	auipc	a4,0x2
   1490a:	ada70713          	addi	a4,a4,-1318 # 163e0 <__clz_tab>
   1490e:	9736                	add	a4,a4,a3
   14910:	00074683          	lbu	a3,0(a4)
   14914:	96be                	add	a3,a3,a5
   14916:	02000793          	li	a5,32
   1491a:	8f95                	sub	a5,a5,a3
   1491c:	ebe5                	bnez	a5,14a0c <__udivdi3+0x1e0>
   1491e:	01089e93          	slli	t4,a7,0x10
   14922:	41158733          	sub	a4,a1,a7
   14926:	0108df13          	srli	t5,a7,0x10
   1492a:	010ede93          	srli	t4,t4,0x10
   1492e:	4585                	li	a1,1
   14930:	01035793          	srli	a5,t1,0x10
   14934:	03e75533          	divu	a0,a4,t5
   14938:	03e77733          	remu	a4,a4,t5
   1493c:	03d506b3          	mul	a3,a0,t4
   14940:	0742                	slli	a4,a4,0x10
   14942:	8fd9                	or	a5,a5,a4
   14944:	00d7fa63          	bgeu	a5,a3,14958 <__udivdi3+0x12c>
   14948:	97c6                	add	a5,a5,a7
   1494a:	fff50713          	addi	a4,a0,-1
   1494e:	0117e463          	bltu	a5,a7,14956 <__udivdi3+0x12a>
   14952:	26d7e663          	bltu	a5,a3,14bbe <__udivdi3+0x392>
   14956:	853a                	mv	a0,a4
   14958:	8f95                	sub	a5,a5,a3
   1495a:	03e7d733          	divu	a4,a5,t5
   1495e:	0342                	slli	t1,t1,0x10
   14960:	01035313          	srli	t1,t1,0x10
   14964:	03e7f7b3          	remu	a5,a5,t5
   14968:	03d70eb3          	mul	t4,a4,t4
   1496c:	07c2                	slli	a5,a5,0x10
   1496e:	0067e7b3          	or	a5,a5,t1
   14972:	01d7fb63          	bgeu	a5,t4,14988 <__udivdi3+0x15c>
   14976:	97c6                	add	a5,a5,a7
   14978:	fff70693          	addi	a3,a4,-1
   1497c:	0117e563          	bltu	a5,a7,14986 <__udivdi3+0x15a>
   14980:	1779                	addi	a4,a4,-2
   14982:	01d7e363          	bltu	a5,t4,14988 <__udivdi3+0x15c>
   14986:	8736                	mv	a4,a3
   14988:	0542                	slli	a0,a0,0x10
   1498a:	8d59                	or	a0,a0,a4
   1498c:	8082                	ret
   1498e:	04d5e263          	bltu	a1,a3,149d2 <__udivdi3+0x1a6>
   14992:	67c1                	lui	a5,0x10
   14994:	04f6e263          	bltu	a3,a5,149d8 <__udivdi3+0x1ac>
   14998:	010007b7          	lui	a5,0x1000
   1499c:	1ef6e463          	bltu	a3,a5,14b84 <__udivdi3+0x358>
   149a0:	0186d713          	srli	a4,a3,0x18
   149a4:	4861                	li	a6,24
   149a6:	00002797          	auipc	a5,0x2
   149aa:	a3a78793          	addi	a5,a5,-1478 # 163e0 <__clz_tab>
   149ae:	97ba                	add	a5,a5,a4
   149b0:	0007c703          	lbu	a4,0(a5)
   149b4:	02000e13          	li	t3,32
   149b8:	9742                	add	a4,a4,a6
   149ba:	40ee0e33          	sub	t3,t3,a4
   149be:	0c0e1a63          	bnez	t3,14a92 <__udivdi3+0x266>
   149c2:	1cb6ed63          	bltu	a3,a1,14b9c <__udivdi3+0x370>
   149c6:	00c53533          	sltu	a0,a0,a2
   149ca:	00154513          	xori	a0,a0,1
   149ce:	4581                	li	a1,0
   149d0:	8082                	ret
   149d2:	4581                	li	a1,0
   149d4:	4501                	li	a0,0
   149d6:	8082                	ret
   149d8:	0ff00793          	li	a5,255
   149dc:	1cd7f363          	bgeu	a5,a3,14ba2 <__udivdi3+0x376>
   149e0:	0086d713          	srli	a4,a3,0x8
   149e4:	4821                	li	a6,8
   149e6:	b7c1                	j	149a6 <__udivdi3+0x17a>
   149e8:	0ff00713          	li	a4,255
   149ec:	86c6                	mv	a3,a7
   149ee:	f1177ce3          	bgeu	a4,a7,14906 <__udivdi3+0xda>
   149f2:	0088d693          	srli	a3,a7,0x8
   149f6:	47a1                	li	a5,8
   149f8:	b739                	j	14906 <__udivdi3+0xda>
   149fa:	0ff00713          	li	a4,255
   149fe:	86b2                	mv	a3,a2
   14a00:	e4c778e3          	bgeu	a4,a2,14850 <__udivdi3+0x24>
   14a04:	00865693          	srli	a3,a2,0x8
   14a08:	47a1                	li	a5,8
   14a0a:	b599                	j	14850 <__udivdi3+0x24>
   14a0c:	00f898b3          	sll	a7,a7,a5
   14a10:	00d5d633          	srl	a2,a1,a3
   14a14:	0108df13          	srli	t5,a7,0x10
   14a18:	03e65e33          	divu	t3,a2,t5
   14a1c:	00f59733          	sll	a4,a1,a5
   14a20:	00d556b3          	srl	a3,a0,a3
   14a24:	8f55                	or	a4,a4,a3
   14a26:	01089e93          	slli	t4,a7,0x10
   14a2a:	010ede93          	srli	t4,t4,0x10
   14a2e:	00f51333          	sll	t1,a0,a5
   14a32:	01075593          	srli	a1,a4,0x10
   14a36:	03e676b3          	remu	a3,a2,t5
   14a3a:	03ce87b3          	mul	a5,t4,t3
   14a3e:	06c2                	slli	a3,a3,0x10
   14a40:	8ecd                	or	a3,a3,a1
   14a42:	00f6fb63          	bgeu	a3,a5,14a58 <__udivdi3+0x22c>
   14a46:	96c6                	add	a3,a3,a7
   14a48:	fffe0613          	addi	a2,t3,-1
   14a4c:	1716e463          	bltu	a3,a7,14bb4 <__udivdi3+0x388>
   14a50:	16f6f263          	bgeu	a3,a5,14bb4 <__udivdi3+0x388>
   14a54:	1e79                	addi	t3,t3,-2
   14a56:	96c6                	add	a3,a3,a7
   14a58:	8e9d                	sub	a3,a3,a5
   14a5a:	03e6d633          	divu	a2,a3,t5
   14a5e:	01071793          	slli	a5,a4,0x10
   14a62:	83c1                	srli	a5,a5,0x10
   14a64:	03e6f6b3          	remu	a3,a3,t5
   14a68:	02ce8533          	mul	a0,t4,a2
   14a6c:	01069713          	slli	a4,a3,0x10
   14a70:	8f5d                	or	a4,a4,a5
   14a72:	00a77b63          	bgeu	a4,a0,14a88 <__udivdi3+0x25c>
   14a76:	9746                	add	a4,a4,a7
   14a78:	fff60793          	addi	a5,a2,-1
   14a7c:	13176863          	bltu	a4,a7,14bac <__udivdi3+0x380>
   14a80:	12a77663          	bgeu	a4,a0,14bac <__udivdi3+0x380>
   14a84:	1679                	addi	a2,a2,-2
   14a86:	9746                	add	a4,a4,a7
   14a88:	010e1593          	slli	a1,t3,0x10
   14a8c:	8f09                	sub	a4,a4,a0
   14a8e:	8dd1                	or	a1,a1,a2
   14a90:	b545                	j	14930 <__udivdi3+0x104>
   14a92:	00e657b3          	srl	a5,a2,a4
   14a96:	01c696b3          	sll	a3,a3,t3
   14a9a:	8edd                	or	a3,a3,a5
   14a9c:	00e5d333          	srl	t1,a1,a4
   14aa0:	0106df13          	srli	t5,a3,0x10
   14aa4:	03e357b3          	divu	a5,t1,t5
   14aa8:	01069e93          	slli	t4,a3,0x10
   14aac:	010ede93          	srli	t4,t4,0x10
   14ab0:	01c59833          	sll	a6,a1,t3
   14ab4:	00e55733          	srl	a4,a0,a4
   14ab8:	01076833          	or	a6,a4,a6
   14abc:	01085893          	srli	a7,a6,0x10
   14ac0:	01c61633          	sll	a2,a2,t3
   14ac4:	03e37333          	remu	t1,t1,t5
   14ac8:	02fe85b3          	mul	a1,t4,a5
   14acc:	0342                	slli	t1,t1,0x10
   14ace:	011368b3          	or	a7,t1,a7
   14ad2:	00b8fb63          	bgeu	a7,a1,14ae8 <__udivdi3+0x2bc>
   14ad6:	98b6                	add	a7,a7,a3
   14ad8:	fff78713          	addi	a4,a5,-1
   14adc:	0cd8ea63          	bltu	a7,a3,14bb0 <__udivdi3+0x384>
   14ae0:	0cb8f863          	bgeu	a7,a1,14bb0 <__udivdi3+0x384>
   14ae4:	17f9                	addi	a5,a5,-2
   14ae6:	98b6                	add	a7,a7,a3
   14ae8:	40b888b3          	sub	a7,a7,a1
   14aec:	03e8d733          	divu	a4,a7,t5
   14af0:	0842                	slli	a6,a6,0x10
   14af2:	01085813          	srli	a6,a6,0x10
   14af6:	03e8f8b3          	remu	a7,a7,t5
   14afa:	02ee8333          	mul	t1,t4,a4
   14afe:	08c2                	slli	a7,a7,0x10
   14b00:	0108e5b3          	or	a1,a7,a6
   14b04:	0065fb63          	bgeu	a1,t1,14b1a <__udivdi3+0x2ee>
   14b08:	95b6                	add	a1,a1,a3
   14b0a:	fff70813          	addi	a6,a4,-1
   14b0e:	08d5ed63          	bltu	a1,a3,14ba8 <__udivdi3+0x37c>
   14b12:	0865fb63          	bgeu	a1,t1,14ba8 <__udivdi3+0x37c>
   14b16:	1779                	addi	a4,a4,-2
   14b18:	95b6                	add	a1,a1,a3
   14b1a:	07c2                	slli	a5,a5,0x10
   14b1c:	6f41                	lui	t5,0x10
   14b1e:	8fd9                	or	a5,a5,a4
   14b20:	ffff0713          	addi	a4,t5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14b24:	00e7f6b3          	and	a3,a5,a4
   14b28:	0107d893          	srli	a7,a5,0x10
   14b2c:	8f71                	and	a4,a4,a2
   14b2e:	8241                	srli	a2,a2,0x10
   14b30:	02e68eb3          	mul	t4,a3,a4
   14b34:	406585b3          	sub	a1,a1,t1
   14b38:	02c686b3          	mul	a3,a3,a2
   14b3c:	010ed813          	srli	a6,t4,0x10
   14b40:	02e88733          	mul	a4,a7,a4
   14b44:	96ba                	add	a3,a3,a4
   14b46:	96c2                	add	a3,a3,a6
   14b48:	02c88633          	mul	a2,a7,a2
   14b4c:	00e6f363          	bgeu	a3,a4,14b52 <__udivdi3+0x326>
   14b50:	967a                	add	a2,a2,t5
   14b52:	0106d893          	srli	a7,a3,0x10
   14b56:	9646                	add	a2,a2,a7
   14b58:	02c5e263          	bltu	a1,a2,14b7c <__udivdi3+0x350>
   14b5c:	00c58563          	beq	a1,a2,14b66 <__udivdi3+0x33a>
   14b60:	853e                	mv	a0,a5
   14b62:	4581                	li	a1,0
   14b64:	8082                	ret
   14b66:	6741                	lui	a4,0x10
   14b68:	177d                	addi	a4,a4,-1
   14b6a:	8ef9                	and	a3,a3,a4
   14b6c:	06c2                	slli	a3,a3,0x10
   14b6e:	00eefeb3          	and	t4,t4,a4
   14b72:	01c51533          	sll	a0,a0,t3
   14b76:	96f6                	add	a3,a3,t4
   14b78:	fed574e3          	bgeu	a0,a3,14b60 <__udivdi3+0x334>
   14b7c:	fff78513          	addi	a0,a5,-1
   14b80:	4581                	li	a1,0
   14b82:	8082                	ret
   14b84:	0106d713          	srli	a4,a3,0x10
   14b88:	4841                	li	a6,16
   14b8a:	bd31                	j	149a6 <__udivdi3+0x17a>
   14b8c:	01065693          	srli	a3,a2,0x10
   14b90:	47c1                	li	a5,16
   14b92:	b97d                	j	14850 <__udivdi3+0x24>
   14b94:	0108d693          	srli	a3,a7,0x10
   14b98:	47c1                	li	a5,16
   14b9a:	b3b5                	j	14906 <__udivdi3+0xda>
   14b9c:	4581                	li	a1,0
   14b9e:	4505                	li	a0,1
   14ba0:	8082                	ret
   14ba2:	8736                	mv	a4,a3
   14ba4:	4801                	li	a6,0
   14ba6:	b501                	j	149a6 <__udivdi3+0x17a>
   14ba8:	8742                	mv	a4,a6
   14baa:	bf85                	j	14b1a <__udivdi3+0x2ee>
   14bac:	863e                	mv	a2,a5
   14bae:	bde9                	j	14a88 <__udivdi3+0x25c>
   14bb0:	87ba                	mv	a5,a4
   14bb2:	bf1d                	j	14ae8 <__udivdi3+0x2bc>
   14bb4:	8e32                	mv	t3,a2
   14bb6:	b54d                	j	14a58 <__udivdi3+0x22c>
   14bb8:	1579                	addi	a0,a0,-2
   14bba:	9846                	add	a6,a6,a7
   14bbc:	b9d5                	j	148b0 <__udivdi3+0x84>
   14bbe:	1579                	addi	a0,a0,-2
   14bc0:	97c6                	add	a5,a5,a7
   14bc2:	bb59                	j	14958 <__udivdi3+0x12c>

00014bc4 <__umoddi3>:
__umoddi3():
   14bc4:	87b6                	mv	a5,a3
   14bc6:	8832                	mv	a6,a2
   14bc8:	832a                	mv	t1,a0
   14bca:	872e                	mv	a4,a1
   14bcc:	8e2e                	mv	t3,a1
   14bce:	14069363          	bnez	a3,14d14 <__umoddi3+0x150>
   14bd2:	0ac5f163          	bgeu	a1,a2,14c74 <__umoddi3+0xb0>
   14bd6:	6741                	lui	a4,0x10
   14bd8:	1ae67863          	bgeu	a2,a4,14d88 <__umoddi3+0x1c4>
   14bdc:	0ff00713          	li	a4,255
   14be0:	86b2                	mv	a3,a2
   14be2:	00c77563          	bgeu	a4,a2,14bec <__umoddi3+0x28>
   14be6:	00865693          	srli	a3,a2,0x8
   14bea:	47a1                	li	a5,8
   14bec:	00001717          	auipc	a4,0x1
   14bf0:	7f470713          	addi	a4,a4,2036 # 163e0 <__clz_tab>
   14bf4:	9736                	add	a4,a4,a3
   14bf6:	00074703          	lbu	a4,0(a4)
   14bfa:	02000893          	li	a7,32
   14bfe:	97ba                	add	a5,a5,a4
   14c00:	40f888b3          	sub	a7,a7,a5
   14c04:	00088c63          	beqz	a7,14c1c <__umoddi3+0x58>
   14c08:	011595b3          	sll	a1,a1,a7
   14c0c:	00f557b3          	srl	a5,a0,a5
   14c10:	01161833          	sll	a6,a2,a7
   14c14:	00b7ee33          	or	t3,a5,a1
   14c18:	01151333          	sll	t1,a0,a7
   14c1c:	01085613          	srli	a2,a6,0x10
   14c20:	02ce57b3          	divu	a5,t3,a2
   14c24:	01081513          	slli	a0,a6,0x10
   14c28:	8141                	srli	a0,a0,0x10
   14c2a:	01035693          	srli	a3,t1,0x10
   14c2e:	02ce7e33          	remu	t3,t3,a2
   14c32:	02f507b3          	mul	a5,a0,a5
   14c36:	0e42                	slli	t3,t3,0x10
   14c38:	00de6733          	or	a4,t3,a3
   14c3c:	00f77863          	bgeu	a4,a5,14c4c <__umoddi3+0x88>
   14c40:	9742                	add	a4,a4,a6
   14c42:	01076563          	bltu	a4,a6,14c4c <__umoddi3+0x88>
   14c46:	00f77363          	bgeu	a4,a5,14c4c <__umoddi3+0x88>
   14c4a:	9742                	add	a4,a4,a6
   14c4c:	8f1d                	sub	a4,a4,a5
   14c4e:	02c756b3          	divu	a3,a4,a2
   14c52:	01031793          	slli	a5,t1,0x10
   14c56:	83c1                	srli	a5,a5,0x10
   14c58:	02c77733          	remu	a4,a4,a2
   14c5c:	02d50533          	mul	a0,a0,a3
   14c60:	0742                	slli	a4,a4,0x10
   14c62:	8fd9                	or	a5,a5,a4
   14c64:	08a7ec63          	bltu	a5,a0,14cfc <__umoddi3+0x138>
   14c68:	40a78533          	sub	a0,a5,a0
   14c6c:	01155533          	srl	a0,a0,a7
   14c70:	4581                	li	a1,0
   14c72:	8082                	ret
   14c74:	e601                	bnez	a2,14c7c <__umoddi3+0xb8>
   14c76:	4705                	li	a4,1
   14c78:	02c75833          	divu	a6,a4,a2
   14c7c:	6741                	lui	a4,0x10
   14c7e:	0ee86c63          	bltu	a6,a4,14d76 <__umoddi3+0x1b2>
   14c82:	010007b7          	lui	a5,0x1000
   14c86:	2af86563          	bltu	a6,a5,14f30 <__umoddi3+0x36c>
   14c8a:	01885693          	srli	a3,a6,0x18
   14c8e:	47e1                	li	a5,24
   14c90:	00001717          	auipc	a4,0x1
   14c94:	75070713          	addi	a4,a4,1872 # 163e0 <__clz_tab>
   14c98:	9736                	add	a4,a4,a3
   14c9a:	00074703          	lbu	a4,0(a4)
   14c9e:	02000893          	li	a7,32
   14ca2:	97ba                	add	a5,a5,a4
   14ca4:	40f888b3          	sub	a7,a7,a5
   14ca8:	1e089a63          	bnez	a7,14e9c <__umoddi3+0x2d8>
   14cac:	01081e13          	slli	t3,a6,0x10
   14cb0:	410585b3          	sub	a1,a1,a6
   14cb4:	01085613          	srli	a2,a6,0x10
   14cb8:	010e5e13          	srli	t3,t3,0x10
   14cbc:	01035713          	srli	a4,t1,0x10
   14cc0:	02c5d6b3          	divu	a3,a1,a2
   14cc4:	02c5f5b3          	remu	a1,a1,a2
   14cc8:	03c686b3          	mul	a3,a3,t3
   14ccc:	05c2                	slli	a1,a1,0x10
   14cce:	8f4d                	or	a4,a4,a1
   14cd0:	00d77763          	bgeu	a4,a3,14cde <__umoddi3+0x11a>
   14cd4:	9742                	add	a4,a4,a6
   14cd6:	01076463          	bltu	a4,a6,14cde <__umoddi3+0x11a>
   14cda:	26d76a63          	bltu	a4,a3,14f4e <__umoddi3+0x38a>
   14cde:	8f15                	sub	a4,a4,a3
   14ce0:	02c75533          	divu	a0,a4,a2
   14ce4:	0342                	slli	t1,t1,0x10
   14ce6:	01035313          	srli	t1,t1,0x10
   14cea:	02c77733          	remu	a4,a4,a2
   14cee:	03c50533          	mul	a0,a0,t3
   14cf2:	0742                	slli	a4,a4,0x10
   14cf4:	006767b3          	or	a5,a4,t1
   14cf8:	00a7f863          	bgeu	a5,a0,14d08 <__umoddi3+0x144>
   14cfc:	97c2                	add	a5,a5,a6
   14cfe:	0107e563          	bltu	a5,a6,14d08 <__umoddi3+0x144>
   14d02:	00a7f363          	bgeu	a5,a0,14d08 <__umoddi3+0x144>
   14d06:	97c2                	add	a5,a5,a6
   14d08:	40a78533          	sub	a0,a5,a0
   14d0c:	01155533          	srl	a0,a0,a7
   14d10:	4581                	li	a1,0
   14d12:	8082                	ret
   14d14:	882a                	mv	a6,a0
   14d16:	f4d5eee3          	bltu	a1,a3,14c72 <__umoddi3+0xae>
   14d1a:	67c1                	lui	a5,0x10
   14d1c:	04f6e563          	bltu	a3,a5,14d66 <__umoddi3+0x1a2>
   14d20:	010007b7          	lui	a5,0x1000
   14d24:	20f6e263          	bltu	a3,a5,14f28 <__umoddi3+0x364>
   14d28:	0186d313          	srli	t1,a3,0x18
   14d2c:	48e1                	li	a7,24
   14d2e:	00001797          	auipc	a5,0x1
   14d32:	6b278793          	addi	a5,a5,1714 # 163e0 <__clz_tab>
   14d36:	979a                	add	a5,a5,t1
   14d38:	0007ce03          	lbu	t3,0(a5)
   14d3c:	02000313          	li	t1,32
   14d40:	9e46                	add	t3,t3,a7
   14d42:	41c30333          	sub	t1,t1,t3
   14d46:	04031963          	bnez	t1,14d98 <__umoddi3+0x1d4>
   14d4a:	00b6e463          	bltu	a3,a1,14d52 <__umoddi3+0x18e>
   14d4e:	00c56963          	bltu	a0,a2,14d60 <__umoddi3+0x19c>
   14d52:	40c50833          	sub	a6,a0,a2
   14d56:	8d95                	sub	a1,a1,a3
   14d58:	01053733          	sltu	a4,a0,a6
   14d5c:	40e58733          	sub	a4,a1,a4
   14d60:	8542                	mv	a0,a6
   14d62:	85ba                	mv	a1,a4
   14d64:	8082                	ret
   14d66:	0ff00793          	li	a5,255
   14d6a:	1cd7fb63          	bgeu	a5,a3,14f40 <__umoddi3+0x37c>
   14d6e:	0086d313          	srli	t1,a3,0x8
   14d72:	48a1                	li	a7,8
   14d74:	bf6d                	j	14d2e <__umoddi3+0x16a>
   14d76:	0ff00713          	li	a4,255
   14d7a:	86c2                	mv	a3,a6
   14d7c:	f1077ae3          	bgeu	a4,a6,14c90 <__umoddi3+0xcc>
   14d80:	00885693          	srli	a3,a6,0x8
   14d84:	47a1                	li	a5,8
   14d86:	b729                	j	14c90 <__umoddi3+0xcc>
   14d88:	010007b7          	lui	a5,0x1000
   14d8c:	1af66663          	bltu	a2,a5,14f38 <__umoddi3+0x374>
   14d90:	01865693          	srli	a3,a2,0x18
   14d94:	47e1                	li	a5,24
   14d96:	bd99                	j	14bec <__umoddi3+0x28>
   14d98:	01c657b3          	srl	a5,a2,t3
   14d9c:	006696b3          	sll	a3,a3,t1
   14da0:	8edd                	or	a3,a3,a5
   14da2:	01c5d8b3          	srl	a7,a1,t3
   14da6:	0106d713          	srli	a4,a3,0x10
   14daa:	02e8deb3          	divu	t4,a7,a4
   14dae:	01069f13          	slli	t5,a3,0x10
   14db2:	01c557b3          	srl	a5,a0,t3
   14db6:	010f5f13          	srli	t5,t5,0x10
   14dba:	006595b3          	sll	a1,a1,t1
   14dbe:	8ddd                	or	a1,a1,a5
   14dc0:	0105d813          	srli	a6,a1,0x10
   14dc4:	00661633          	sll	a2,a2,t1
   14dc8:	00651533          	sll	a0,a0,t1
   14dcc:	02e8f8b3          	remu	a7,a7,a4
   14dd0:	03df07b3          	mul	a5,t5,t4
   14dd4:	08c2                	slli	a7,a7,0x10
   14dd6:	0108e833          	or	a6,a7,a6
   14dda:	00f87b63          	bgeu	a6,a5,14df0 <__umoddi3+0x22c>
   14dde:	9836                	add	a6,a6,a3
   14de0:	fffe8893          	addi	a7,t4,-1
   14de4:	16d86363          	bltu	a6,a3,14f4a <__umoddi3+0x386>
   14de8:	16f87163          	bgeu	a6,a5,14f4a <__umoddi3+0x386>
   14dec:	1ef9                	addi	t4,t4,-2
   14dee:	9836                	add	a6,a6,a3
   14df0:	40f80833          	sub	a6,a6,a5
   14df4:	02e857b3          	divu	a5,a6,a4
   14df8:	05c2                	slli	a1,a1,0x10
   14dfa:	81c1                	srli	a1,a1,0x10
   14dfc:	02e87833          	remu	a6,a6,a4
   14e00:	02ff0f33          	mul	t5,t5,a5
   14e04:	01081713          	slli	a4,a6,0x10
   14e08:	8f4d                	or	a4,a4,a1
   14e0a:	01e77b63          	bgeu	a4,t5,14e20 <__umoddi3+0x25c>
   14e0e:	9736                	add	a4,a4,a3
   14e10:	fff78593          	addi	a1,a5,-1 # ffffff <_data_lma+0xfe9b1f>
   14e14:	12d76963          	bltu	a4,a3,14f46 <__umoddi3+0x382>
   14e18:	13e77763          	bgeu	a4,t5,14f46 <__umoddi3+0x382>
   14e1c:	17f9                	addi	a5,a5,-2
   14e1e:	9736                	add	a4,a4,a3
   14e20:	0ec2                	slli	t4,t4,0x10
   14e22:	62c1                	lui	t0,0x10
   14e24:	00feeeb3          	or	t4,t4,a5
   14e28:	fff28813          	addi	a6,t0,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14e2c:	010ef8b3          	and	a7,t4,a6
   14e30:	01065593          	srli	a1,a2,0x10
   14e34:	010ede93          	srli	t4,t4,0x10
   14e38:	01067833          	and	a6,a2,a6
   14e3c:	03088fb3          	mul	t6,a7,a6
   14e40:	41e70733          	sub	a4,a4,t5
   14e44:	030e8833          	mul	a6,t4,a6
   14e48:	010fd793          	srli	a5,t6,0x10
   14e4c:	02b888b3          	mul	a7,a7,a1
   14e50:	98c2                	add	a7,a7,a6
   14e52:	97c6                	add	a5,a5,a7
   14e54:	02be8eb3          	mul	t4,t4,a1
   14e58:	0107f363          	bgeu	a5,a6,14e5e <__umoddi3+0x29a>
   14e5c:	9e96                	add	t4,t4,t0
   14e5e:	6841                	lui	a6,0x10
   14e60:	187d                	addi	a6,a6,-1
   14e62:	0107d593          	srli	a1,a5,0x10
   14e66:	0107f7b3          	and	a5,a5,a6
   14e6a:	07c2                	slli	a5,a5,0x10
   14e6c:	010fffb3          	and	t6,t6,a6
   14e70:	95f6                	add	a1,a1,t4
   14e72:	97fe                	add	a5,a5,t6
   14e74:	0ab76263          	bltu	a4,a1,14f18 <__umoddi3+0x354>
   14e78:	08b70e63          	beq	a4,a1,14f14 <__umoddi3+0x350>
   14e7c:	40f507b3          	sub	a5,a0,a5
   14e80:	00f53533          	sltu	a0,a0,a5
   14e84:	40b705b3          	sub	a1,a4,a1
   14e88:	8d89                	sub	a1,a1,a0
   14e8a:	01c59e33          	sll	t3,a1,t3
   14e8e:	0067d533          	srl	a0,a5,t1
   14e92:	00ae6533          	or	a0,t3,a0
   14e96:	0065d5b3          	srl	a1,a1,t1
   14e9a:	8082                	ret
   14e9c:	01181833          	sll	a6,a6,a7
   14ea0:	00f5d733          	srl	a4,a1,a5
   14ea4:	01085613          	srli	a2,a6,0x10
   14ea8:	02c756b3          	divu	a3,a4,a2
   14eac:	01081e13          	slli	t3,a6,0x10
   14eb0:	00f557b3          	srl	a5,a0,a5
   14eb4:	010e5e13          	srli	t3,t3,0x10
   14eb8:	011595b3          	sll	a1,a1,a7
   14ebc:	8ddd                	or	a1,a1,a5
   14ebe:	0105de93          	srli	t4,a1,0x10
   14ec2:	01151333          	sll	t1,a0,a7
   14ec6:	02c77733          	remu	a4,a4,a2
   14eca:	02de07b3          	mul	a5,t3,a3
   14ece:	01071693          	slli	a3,a4,0x10
   14ed2:	01d6e6b3          	or	a3,a3,t4
   14ed6:	00f6f863          	bgeu	a3,a5,14ee6 <__umoddi3+0x322>
   14eda:	96c2                	add	a3,a3,a6
   14edc:	0106e563          	bltu	a3,a6,14ee6 <__umoddi3+0x322>
   14ee0:	00f6f363          	bgeu	a3,a5,14ee6 <__umoddi3+0x322>
   14ee4:	96c2                	add	a3,a3,a6
   14ee6:	8e9d                	sub	a3,a3,a5
   14ee8:	02c6d733          	divu	a4,a3,a2
   14eec:	01059793          	slli	a5,a1,0x10
   14ef0:	83c1                	srli	a5,a5,0x10
   14ef2:	02c6f6b3          	remu	a3,a3,a2
   14ef6:	02ee0733          	mul	a4,t3,a4
   14efa:	01069593          	slli	a1,a3,0x10
   14efe:	8ddd                	or	a1,a1,a5
   14f00:	00e5f863          	bgeu	a1,a4,14f10 <__umoddi3+0x34c>
   14f04:	95c2                	add	a1,a1,a6
   14f06:	0105e563          	bltu	a1,a6,14f10 <__umoddi3+0x34c>
   14f0a:	00e5f363          	bgeu	a1,a4,14f10 <__umoddi3+0x34c>
   14f0e:	95c2                	add	a1,a1,a6
   14f10:	8d99                	sub	a1,a1,a4
   14f12:	b36d                	j	14cbc <__umoddi3+0xf8>
   14f14:	f6f574e3          	bgeu	a0,a5,14e7c <__umoddi3+0x2b8>
   14f18:	40c78633          	sub	a2,a5,a2
   14f1c:	00c7b7b3          	sltu	a5,a5,a2
   14f20:	97b6                	add	a5,a5,a3
   14f22:	8d9d                	sub	a1,a1,a5
   14f24:	87b2                	mv	a5,a2
   14f26:	bf99                	j	14e7c <__umoddi3+0x2b8>
   14f28:	0106d313          	srli	t1,a3,0x10
   14f2c:	48c1                	li	a7,16
   14f2e:	b501                	j	14d2e <__umoddi3+0x16a>
   14f30:	01085693          	srli	a3,a6,0x10
   14f34:	47c1                	li	a5,16
   14f36:	bba9                	j	14c90 <__umoddi3+0xcc>
   14f38:	01065693          	srli	a3,a2,0x10
   14f3c:	47c1                	li	a5,16
   14f3e:	b17d                	j	14bec <__umoddi3+0x28>
   14f40:	8336                	mv	t1,a3
   14f42:	4881                	li	a7,0
   14f44:	b3ed                	j	14d2e <__umoddi3+0x16a>
   14f46:	87ae                	mv	a5,a1
   14f48:	bde1                	j	14e20 <__umoddi3+0x25c>
   14f4a:	8ec6                	mv	t4,a7
   14f4c:	b555                	j	14df0 <__umoddi3+0x22c>
   14f4e:	9742                	add	a4,a4,a6
   14f50:	b379                	j	14cde <__umoddi3+0x11a>

00014f52 <__eqdf2>:
__eqdf2():
   14f52:	0145d713          	srli	a4,a1,0x14
   14f56:	001007b7          	lui	a5,0x100
   14f5a:	17fd                	addi	a5,a5,-1
   14f5c:	0146d813          	srli	a6,a3,0x14
   14f60:	7ff77713          	andi	a4,a4,2047
   14f64:	7ff00893          	li	a7,2047
   14f68:	00b7fe33          	and	t3,a5,a1
   14f6c:	8eaa                	mv	t4,a0
   14f6e:	8ff5                	and	a5,a5,a3
   14f70:	81fd                	srli	a1,a1,0x1f
   14f72:	8f32                	mv	t5,a2
   14f74:	7ff87813          	andi	a6,a6,2047
   14f78:	82fd                	srli	a3,a3,0x1f
   14f7a:	01170b63          	beq	a4,a7,14f90 <__eqdf2+0x3e>
   14f7e:	4305                	li	t1,1
   14f80:	01180663          	beq	a6,a7,14f8c <__eqdf2+0x3a>
   14f84:	01071463          	bne	a4,a6,14f8c <__eqdf2+0x3a>
   14f88:	00fe0d63          	beq	t3,a5,14fa2 <__eqdf2+0x50>
   14f8c:	851a                	mv	a0,t1
   14f8e:	8082                	ret
   14f90:	00ae68b3          	or	a7,t3,a0
   14f94:	4305                	li	t1,1
   14f96:	fe089be3          	bnez	a7,14f8c <__eqdf2+0x3a>
   14f9a:	fee819e3          	bne	a6,a4,14f8c <__eqdf2+0x3a>
   14f9e:	8fd1                	or	a5,a5,a2
   14fa0:	f7f5                	bnez	a5,14f8c <__eqdf2+0x3a>
   14fa2:	4305                	li	t1,1
   14fa4:	ffee94e3          	bne	t4,t5,14f8c <__eqdf2+0x3a>
   14fa8:	4301                	li	t1,0
   14faa:	fed581e3          	beq	a1,a3,14f8c <__eqdf2+0x3a>
   14fae:	4305                	li	t1,1
   14fb0:	ff71                	bnez	a4,14f8c <__eqdf2+0x3a>
   14fb2:	00ae6533          	or	a0,t3,a0
   14fb6:	00a03333          	snez	t1,a0
   14fba:	bfc9                	j	14f8c <__eqdf2+0x3a>

00014fbc <__ledf2>:
__ltdf2():
   14fbc:	0145d713          	srli	a4,a1,0x14
   14fc0:	001007b7          	lui	a5,0x100
   14fc4:	17fd                	addi	a5,a5,-1
   14fc6:	0146d813          	srli	a6,a3,0x14
   14fca:	7ff77713          	andi	a4,a4,2047
   14fce:	7ff00893          	li	a7,2047
   14fd2:	00b7fe33          	and	t3,a5,a1
   14fd6:	8eaa                	mv	t4,a0
   14fd8:	8ff5                	and	a5,a5,a3
   14fda:	81fd                	srli	a1,a1,0x1f
   14fdc:	8f32                	mv	t5,a2
   14fde:	7ff87813          	andi	a6,a6,2047
   14fe2:	82fd                	srli	a3,a3,0x1f
   14fe4:	03170e63          	beq	a4,a7,15020 <__ledf2+0x64>
   14fe8:	01180d63          	beq	a6,a7,15002 <__ledf2+0x46>
   14fec:	e329                	bnez	a4,1502e <__ledf2+0x72>
   14fee:	00ae68b3          	or	a7,t3,a0
   14ff2:	00081f63          	bnez	a6,15010 <__ledf2+0x54>
   14ff6:	8e5d                	or	a2,a2,a5
   14ff8:	ee01                	bnez	a2,15010 <__ledf2+0x54>
   14ffa:	4301                	li	t1,0
   14ffc:	04088c63          	beqz	a7,15054 <__ledf2+0x98>
   15000:	a821                	j	15018 <__ledf2+0x5c>
   15002:	00c7e8b3          	or	a7,a5,a2
   15006:	4309                	li	t1,2
   15008:	04089663          	bnez	a7,15054 <__ledf2+0x98>
   1500c:	d36d                	beqz	a4,14fee <__ledf2+0x32>
   1500e:	a005                	j	1502e <__ledf2+0x72>
   15010:	04088463          	beqz	a7,15058 <__ledf2+0x9c>
   15014:	02d58563          	beq	a1,a3,1503e <__ledf2+0x82>
   15018:	4305                	li	t1,1
   1501a:	cd8d                	beqz	a1,15054 <__ledf2+0x98>
   1501c:	537d                	li	t1,-1
   1501e:	a81d                	j	15054 <__ledf2+0x98>
   15020:	00ae68b3          	or	a7,t3,a0
   15024:	4309                	li	t1,2
   15026:	02089763          	bnez	a7,15054 <__ledf2+0x98>
   1502a:	02e80a63          	beq	a6,a4,1505e <__ledf2+0xa2>
   1502e:	00081463          	bnez	a6,15036 <__ledf2+0x7a>
   15032:	8e5d                	or	a2,a2,a5
   15034:	d275                	beqz	a2,15018 <__ledf2+0x5c>
   15036:	fed591e3          	bne	a1,a3,15018 <__ledf2+0x5c>
   1503a:	fce84fe3          	blt	a6,a4,15018 <__ledf2+0x5c>
   1503e:	01074963          	blt	a4,a6,15050 <__ledf2+0x94>
   15042:	fdc7ebe3          	bltu	a5,t3,15018 <__ledf2+0x5c>
   15046:	00fe0f63          	beq	t3,a5,15064 <__ledf2+0xa8>
   1504a:	4301                	li	t1,0
   1504c:	00fe7463          	bgeu	t3,a5,15054 <__ledf2+0x98>
   15050:	d5f1                	beqz	a1,1501c <__ledf2+0x60>
   15052:	4305                	li	t1,1
   15054:	851a                	mv	a0,t1
   15056:	8082                	ret
   15058:	feed                	bnez	a3,15052 <__ledf2+0x96>
   1505a:	537d                	li	t1,-1
   1505c:	bfe5                	j	15054 <__ledf2+0x98>
   1505e:	8e5d                	or	a2,a2,a5
   15060:	da79                	beqz	a2,15036 <__ledf2+0x7a>
   15062:	bfcd                	j	15054 <__ledf2+0x98>
   15064:	fbdf6ae3          	bltu	t5,t4,15018 <__ledf2+0x5c>
   15068:	4301                	li	t1,0
   1506a:	ffeef5e3          	bgeu	t4,t5,15054 <__ledf2+0x98>
   1506e:	f1f5                	bnez	a1,15052 <__ledf2+0x96>
   15070:	b775                	j	1501c <__ledf2+0x60>

00015072 <__muldf3>:
__muldf3():
   15072:	7139                	addi	sp,sp,-64
   15074:	d84a                	sw	s2,48(sp)
   15076:	0145d913          	srli	s2,a1,0x14
   1507a:	d64e                	sw	s3,44(sp)
   1507c:	d452                	sw	s4,40(sp)
   1507e:	d256                	sw	s5,36(sp)
   15080:	00c59993          	slli	s3,a1,0xc
   15084:	de06                	sw	ra,60(sp)
   15086:	dc22                	sw	s0,56(sp)
   15088:	da26                	sw	s1,52(sp)
   1508a:	d05a                	sw	s6,32(sp)
   1508c:	ce5e                	sw	s7,28(sp)
   1508e:	7ff97913          	andi	s2,s2,2047
   15092:	8a2a                	mv	s4,a0
   15094:	00c9d993          	srli	s3,s3,0xc
   15098:	01f5da93          	srli	s5,a1,0x1f
   1509c:	0e090d63          	beqz	s2,15196 <__muldf3+0x124>
   150a0:	7ff00793          	li	a5,2047
   150a4:	18f90a63          	beq	s2,a5,15238 <__muldf3+0x1c6>
   150a8:	01d55413          	srli	s0,a0,0x1d
   150ac:	098e                	slli	s3,s3,0x3
   150ae:	013469b3          	or	s3,s0,s3
   150b2:	00800437          	lui	s0,0x800
   150b6:	0089e433          	or	s0,s3,s0
   150ba:	00351493          	slli	s1,a0,0x3
   150be:	c0190913          	addi	s2,s2,-1023
   150c2:	4981                	li	s3,0
   150c4:	4b81                	li	s7,0
   150c6:	0146d713          	srli	a4,a3,0x14
   150ca:	00c69a13          	slli	s4,a3,0xc
   150ce:	7ff77713          	andi	a4,a4,2047
   150d2:	85b2                	mv	a1,a2
   150d4:	00ca5a13          	srli	s4,s4,0xc
   150d8:	01f6db13          	srli	s6,a3,0x1f
   150dc:	10070d63          	beqz	a4,151f6 <__muldf3+0x184>
   150e0:	7ff00793          	li	a5,2047
   150e4:	04f70363          	beq	a4,a5,1512a <__muldf3+0xb8>
   150e8:	01d65793          	srli	a5,a2,0x1d
   150ec:	0a0e                	slli	s4,s4,0x3
   150ee:	0147ea33          	or	s4,a5,s4
   150f2:	c0170713          	addi	a4,a4,-1023
   150f6:	008007b7          	lui	a5,0x800
   150fa:	00fa67b3          	or	a5,s4,a5
   150fe:	00361593          	slli	a1,a2,0x3
   15102:	993a                	add	s2,s2,a4
   15104:	4881                	li	a7,0
   15106:	016ac733          	xor	a4,s5,s6
   1510a:	46bd                	li	a3,15
   1510c:	853a                	mv	a0,a4
   1510e:	00190813          	addi	a6,s2,1
   15112:	1736ec63          	bltu	a3,s3,1528a <__muldf3+0x218>
   15116:	00001617          	auipc	a2,0x1
   1511a:	28a60613          	addi	a2,a2,650 # 163a0 <strlen+0x478>
   1511e:	098a                	slli	s3,s3,0x2
   15120:	99b2                	add	s3,s3,a2
   15122:	0009a683          	lw	a3,0(s3)
   15126:	96b2                	add	a3,a3,a2
   15128:	8682                	jr	a3
   1512a:	00ca67b3          	or	a5,s4,a2
   1512e:	7ff90913          	addi	s2,s2,2047
   15132:	12079d63          	bnez	a5,1526c <__muldf3+0x1fa>
   15136:	0029e993          	ori	s3,s3,2
   1513a:	4581                	li	a1,0
   1513c:	4889                	li	a7,2
   1513e:	b7e1                	j	15106 <__muldf3+0x94>
   15140:	4701                	li	a4,0
   15142:	7ff00793          	li	a5,2047
   15146:	00080437          	lui	s0,0x80
   1514a:	4481                	li	s1,0
   1514c:	0432                	slli	s0,s0,0xc
   1514e:	07d2                	slli	a5,a5,0x14
   15150:	8031                	srli	s0,s0,0xc
   15152:	077e                	slli	a4,a4,0x1f
   15154:	8c5d                	or	s0,s0,a5
   15156:	8c59                	or	s0,s0,a4
   15158:	85a2                	mv	a1,s0
   1515a:	50f2                	lw	ra,60(sp)
   1515c:	5462                	lw	s0,56(sp)
   1515e:	8526                	mv	a0,s1
   15160:	5942                	lw	s2,48(sp)
   15162:	54d2                	lw	s1,52(sp)
   15164:	59b2                	lw	s3,44(sp)
   15166:	5a22                	lw	s4,40(sp)
   15168:	5a92                	lw	s5,36(sp)
   1516a:	5b02                	lw	s6,32(sp)
   1516c:	4bf2                	lw	s7,28(sp)
   1516e:	6121                	addi	sp,sp,64
   15170:	8082                	ret
   15172:	855a                	mv	a0,s6
   15174:	843e                	mv	s0,a5
   15176:	84ae                	mv	s1,a1
   15178:	8bc6                	mv	s7,a7
   1517a:	4789                	li	a5,2
   1517c:	10fb8163          	beq	s7,a5,1527e <__muldf3+0x20c>
   15180:	478d                	li	a5,3
   15182:	fafb8fe3          	beq	s7,a5,15140 <__muldf3+0xce>
   15186:	4785                	li	a5,1
   15188:	872a                	mv	a4,a0
   1518a:	3afb9663          	bne	s7,a5,15536 <__muldf3+0x4c4>
   1518e:	4781                	li	a5,0
   15190:	4401                	li	s0,0
   15192:	4481                	li	s1,0
   15194:	bf65                	j	1514c <__muldf3+0xda>
   15196:	00a9e433          	or	s0,s3,a0
   1519a:	c461                	beqz	s0,15262 <__muldf3+0x1f0>
   1519c:	c636                	sw	a3,12(sp)
   1519e:	c432                	sw	a2,8(sp)
   151a0:	2c098263          	beqz	s3,15464 <__muldf3+0x3f2>
   151a4:	854e                	mv	a0,s3
   151a6:	00001097          	auipc	ra,0x1
   151aa:	d0c080e7          	jalr	-756(ra) # 15eb2 <__clzsi2>
   151ae:	4622                	lw	a2,8(sp)
   151b0:	46b2                	lw	a3,12(sp)
   151b2:	87aa                	mv	a5,a0
   151b4:	ff550713          	addi	a4,a0,-11
   151b8:	4475                	li	s0,29
   151ba:	ff878493          	addi	s1,a5,-8 # 7ffff8 <_data_lma+0x7e9b18>
   151be:	8c19                	sub	s0,s0,a4
   151c0:	009999b3          	sll	s3,s3,s1
   151c4:	008a5433          	srl	s0,s4,s0
   151c8:	01346433          	or	s0,s0,s3
   151cc:	009a14b3          	sll	s1,s4,s1
   151d0:	0146d713          	srli	a4,a3,0x14
   151d4:	c0d00913          	li	s2,-1011
   151d8:	00c69a13          	slli	s4,a3,0xc
   151dc:	7ff77713          	andi	a4,a4,2047
   151e0:	40f90933          	sub	s2,s2,a5
   151e4:	4981                	li	s3,0
   151e6:	4b81                	li	s7,0
   151e8:	85b2                	mv	a1,a2
   151ea:	00ca5a13          	srli	s4,s4,0xc
   151ee:	01f6db13          	srli	s6,a3,0x1f
   151f2:	ee0717e3          	bnez	a4,150e0 <__muldf3+0x6e>
   151f6:	00ca67b3          	or	a5,s4,a2
   151fa:	cba1                	beqz	a5,1524a <__muldf3+0x1d8>
   151fc:	240a0163          	beqz	s4,1543e <__muldf3+0x3cc>
   15200:	8552                	mv	a0,s4
   15202:	c432                	sw	a2,8(sp)
   15204:	00001097          	auipc	ra,0x1
   15208:	cae080e7          	jalr	-850(ra) # 15eb2 <__clzsi2>
   1520c:	4622                	lw	a2,8(sp)
   1520e:	872a                	mv	a4,a0
   15210:	ff550693          	addi	a3,a0,-11
   15214:	47f5                	li	a5,29
   15216:	ff870593          	addi	a1,a4,-8
   1521a:	8f95                	sub	a5,a5,a3
   1521c:	00ba1a33          	sll	s4,s4,a1
   15220:	00f657b3          	srl	a5,a2,a5
   15224:	0147e7b3          	or	a5,a5,s4
   15228:	00b615b3          	sll	a1,a2,a1
   1522c:	40e90933          	sub	s2,s2,a4
   15230:	c0d90913          	addi	s2,s2,-1011
   15234:	4881                	li	a7,0
   15236:	bdc1                	j	15106 <__muldf3+0x94>
   15238:	00a9e433          	or	s0,s3,a0
   1523c:	ec01                	bnez	s0,15254 <__muldf3+0x1e2>
   1523e:	49a1                	li	s3,8
   15240:	4481                	li	s1,0
   15242:	7ff00913          	li	s2,2047
   15246:	4b89                	li	s7,2
   15248:	bdbd                	j	150c6 <__muldf3+0x54>
   1524a:	0019e993          	ori	s3,s3,1
   1524e:	4581                	li	a1,0
   15250:	4885                	li	a7,1
   15252:	bd55                	j	15106 <__muldf3+0x94>
   15254:	844e                	mv	s0,s3
   15256:	84aa                	mv	s1,a0
   15258:	49b1                	li	s3,12
   1525a:	7ff00913          	li	s2,2047
   1525e:	4b8d                	li	s7,3
   15260:	b59d                	j	150c6 <__muldf3+0x54>
   15262:	4991                	li	s3,4
   15264:	4481                	li	s1,0
   15266:	4901                	li	s2,0
   15268:	4b85                	li	s7,1
   1526a:	bdb1                	j	150c6 <__muldf3+0x54>
   1526c:	0039e993          	ori	s3,s3,3
   15270:	87d2                	mv	a5,s4
   15272:	488d                	li	a7,3
   15274:	bd49                	j	15106 <__muldf3+0x94>
   15276:	4789                	li	a5,2
   15278:	8556                	mv	a0,s5
   1527a:	f0fb93e3          	bne	s7,a5,15180 <__muldf3+0x10e>
   1527e:	872a                	mv	a4,a0
   15280:	7ff00793          	li	a5,2047
   15284:	4401                	li	s0,0
   15286:	4481                	li	s1,0
   15288:	b5d1                	j	1514c <__muldf3+0xda>
   1528a:	6ec1                	lui	t4,0x10
   1528c:	fffe8613          	addi	a2,t4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   15290:	0104d693          	srli	a3,s1,0x10
   15294:	0105de13          	srli	t3,a1,0x10
   15298:	8cf1                	and	s1,s1,a2
   1529a:	8df1                	and	a1,a1,a2
   1529c:	02958633          	mul	a2,a1,s1
   152a0:	02b68333          	mul	t1,a3,a1
   152a4:	01065893          	srli	a7,a2,0x10
   152a8:	029e0533          	mul	a0,t3,s1
   152ac:	951a                	add	a0,a0,t1
   152ae:	98aa                	add	a7,a7,a0
   152b0:	03c682b3          	mul	t0,a3,t3
   152b4:	0068f363          	bgeu	a7,t1,152ba <__muldf3+0x248>
   152b8:	92f6                	add	t0,t0,t4
   152ba:	6fc1                	lui	t6,0x10
   152bc:	ffff8313          	addi	t1,t6,-1 # ffff <MCU_SECTORSIZE+0xefff>
   152c0:	0067f533          	and	a0,a5,t1
   152c4:	0107d393          	srli	t2,a5,0x10
   152c8:	0068f7b3          	and	a5,a7,t1
   152cc:	07c2                	slli	a5,a5,0x10
   152ce:	00667333          	and	t1,a2,t1
   152d2:	933e                	add	t1,t1,a5
   152d4:	02950633          	mul	a2,a0,s1
   152d8:	0108d893          	srli	a7,a7,0x10
   152dc:	02a687b3          	mul	a5,a3,a0
   152e0:	01065f13          	srli	t5,a2,0x10
   152e4:	029384b3          	mul	s1,t2,s1
   152e8:	94be                	add	s1,s1,a5
   152ea:	94fa                	add	s1,s1,t5
   152ec:	02768eb3          	mul	t4,a3,t2
   152f0:	00f4f363          	bgeu	s1,a5,152f6 <__muldf3+0x284>
   152f4:	9efe                	add	t4,t4,t6
   152f6:	6a41                	lui	s4,0x10
   152f8:	fffa0793          	addi	a5,s4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   152fc:	01045f93          	srli	t6,s0,0x10
   15300:	00f476b3          	and	a3,s0,a5
   15304:	00f4f9b3          	and	s3,s1,a5
   15308:	8e7d                	and	a2,a2,a5
   1530a:	80c1                	srli	s1,s1,0x10
   1530c:	02d58433          	mul	s0,a1,a3
   15310:	09c2                	slli	s3,s3,0x10
   15312:	01d48f33          	add	t5,s1,t4
   15316:	99b2                	add	s3,s3,a2
   15318:	98ce                	add	a7,a7,s3
   1531a:	02de07b3          	mul	a5,t3,a3
   1531e:	01045e93          	srli	t4,s0,0x10
   15322:	02bf85b3          	mul	a1,t6,a1
   15326:	97ae                	add	a5,a5,a1
   15328:	9ebe                	add	t4,t4,a5
   1532a:	03fe0e33          	mul	t3,t3,t6
   1532e:	00bef363          	bgeu	t4,a1,15334 <__muldf3+0x2c2>
   15332:	9e52                	add	t3,t3,s4
   15334:	67c1                	lui	a5,0x10
   15336:	fff78593          	addi	a1,a5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   1533a:	00bef633          	and	a2,t4,a1
   1533e:	8c6d                	and	s0,s0,a1
   15340:	0642                	slli	a2,a2,0x10
   15342:	9622                	add	a2,a2,s0
   15344:	010ede93          	srli	t4,t4,0x10
   15348:	02d505b3          	mul	a1,a0,a3
   1534c:	9e76                	add	t3,t3,t4
   1534e:	02af8533          	mul	a0,t6,a0
   15352:	0105d413          	srli	s0,a1,0x10
   15356:	02d386b3          	mul	a3,t2,a3
   1535a:	96aa                	add	a3,a3,a0
   1535c:	96a2                	add	a3,a3,s0
   1535e:	03f38fb3          	mul	t6,t2,t6
   15362:	00a6f363          	bgeu	a3,a0,15368 <__muldf3+0x2f6>
   15366:	9fbe                	add	t6,t6,a5
   15368:	6541                	lui	a0,0x10
   1536a:	157d                	addi	a0,a0,-1
   1536c:	00a6f7b3          	and	a5,a3,a0
   15370:	07c2                	slli	a5,a5,0x10
   15372:	8d6d                	and	a0,a0,a1
   15374:	97aa                	add	a5,a5,a0
   15376:	005885b3          	add	a1,a7,t0
   1537a:	0135b9b3          	sltu	s3,a1,s3
   1537e:	97fa                	add	a5,a5,t5
   15380:	95b2                	add	a1,a1,a2
   15382:	01378433          	add	s0,a5,s3
   15386:	00c5b633          	sltu	a2,a1,a2
   1538a:	01c40eb3          	add	t4,s0,t3
   1538e:	00ce8533          	add	a0,t4,a2
   15392:	01343433          	sltu	s0,s0,s3
   15396:	01e7b7b3          	sltu	a5,a5,t5
   1539a:	8fc1                	or	a5,a5,s0
   1539c:	01cebe33          	sltu	t3,t4,t3
   153a0:	0106d413          	srli	s0,a3,0x10
   153a4:	00c53633          	sltu	a2,a0,a2
   153a8:	943e                	add	s0,s0,a5
   153aa:	00ce6633          	or	a2,t3,a2
   153ae:	00959493          	slli	s1,a1,0x9
   153b2:	9432                	add	s0,s0,a2
   153b4:	947e                	add	s0,s0,t6
   153b6:	0064e4b3          	or	s1,s1,t1
   153ba:	0426                	slli	s0,s0,0x9
   153bc:	01755693          	srli	a3,a0,0x17
   153c0:	009034b3          	snez	s1,s1
   153c4:	81dd                	srli	a1,a1,0x17
   153c6:	00951793          	slli	a5,a0,0x9
   153ca:	8ccd                	or	s1,s1,a1
   153cc:	8c55                	or	s0,s0,a3
   153ce:	8cdd                	or	s1,s1,a5
   153d0:	00741793          	slli	a5,s0,0x7
   153d4:	0007db63          	bgez	a5,153ea <__muldf3+0x378>
   153d8:	0014d793          	srli	a5,s1,0x1
   153dc:	8885                	andi	s1,s1,1
   153de:	01f41693          	slli	a3,s0,0x1f
   153e2:	8cdd                	or	s1,s1,a5
   153e4:	8cd5                	or	s1,s1,a3
   153e6:	8005                	srli	s0,s0,0x1
   153e8:	8942                	mv	s2,a6
   153ea:	3ff90793          	addi	a5,s2,1023
   153ee:	08f05d63          	blez	a5,15488 <__muldf3+0x416>
   153f2:	0074f693          	andi	a3,s1,7
   153f6:	ce81                	beqz	a3,1540e <__muldf3+0x39c>
   153f8:	00f4f693          	andi	a3,s1,15
   153fc:	4611                	li	a2,4
   153fe:	00c68863          	beq	a3,a2,1540e <__muldf3+0x39c>
   15402:	00448693          	addi	a3,s1,4
   15406:	0096b4b3          	sltu	s1,a3,s1
   1540a:	9426                	add	s0,s0,s1
   1540c:	84b6                	mv	s1,a3
   1540e:	00741693          	slli	a3,s0,0x7
   15412:	0006d863          	bgez	a3,15422 <__muldf3+0x3b0>
   15416:	ff0007b7          	lui	a5,0xff000
   1541a:	17fd                	addi	a5,a5,-1
   1541c:	8c7d                	and	s0,s0,a5
   1541e:	40090793          	addi	a5,s2,1024
   15422:	7fe00693          	li	a3,2046
   15426:	10f6c363          	blt	a3,a5,1552c <__muldf3+0x4ba>
   1542a:	0034d693          	srli	a3,s1,0x3
   1542e:	01d41493          	slli	s1,s0,0x1d
   15432:	0426                	slli	s0,s0,0x9
   15434:	8cd5                	or	s1,s1,a3
   15436:	8031                	srli	s0,s0,0xc
   15438:	7ff7f793          	andi	a5,a5,2047
   1543c:	bb01                	j	1514c <__muldf3+0xda>
   1543e:	8532                	mv	a0,a2
   15440:	c432                	sw	a2,8(sp)
   15442:	00001097          	auipc	ra,0x1
   15446:	a70080e7          	jalr	-1424(ra) # 15eb2 <__clzsi2>
   1544a:	01550693          	addi	a3,a0,21 # 10015 <MCU_SECTORSIZE+0xf015>
   1544e:	47f1                	li	a5,28
   15450:	02050713          	addi	a4,a0,32
   15454:	4622                	lw	a2,8(sp)
   15456:	dad7dfe3          	bge	a5,a3,15214 <__muldf3+0x1a2>
   1545a:	1561                	addi	a0,a0,-8
   1545c:	00a617b3          	sll	a5,a2,a0
   15460:	4581                	li	a1,0
   15462:	b3e9                	j	1522c <__muldf3+0x1ba>
   15464:	00001097          	auipc	ra,0x1
   15468:	a4e080e7          	jalr	-1458(ra) # 15eb2 <__clzsi2>
   1546c:	01550713          	addi	a4,a0,21
   15470:	45f1                	li	a1,28
   15472:	02050793          	addi	a5,a0,32
   15476:	4622                	lw	a2,8(sp)
   15478:	46b2                	lw	a3,12(sp)
   1547a:	d2e5dfe3          	bge	a1,a4,151b8 <__muldf3+0x146>
   1547e:	1561                	addi	a0,a0,-8
   15480:	00aa1433          	sll	s0,s4,a0
   15484:	4481                	li	s1,0
   15486:	b3a9                	j	151d0 <__muldf3+0x15e>
   15488:	4685                	li	a3,1
   1548a:	8e9d                	sub	a3,a3,a5
   1548c:	e7b1                	bnez	a5,154d8 <__muldf3+0x466>
   1548e:	41e90913          	addi	s2,s2,1054
   15492:	012497b3          	sll	a5,s1,s2
   15496:	00d4d4b3          	srl	s1,s1,a3
   1549a:	01241933          	sll	s2,s0,s2
   1549e:	00f037b3          	snez	a5,a5
   154a2:	009964b3          	or	s1,s2,s1
   154a6:	8cdd                	or	s1,s1,a5
   154a8:	0074f793          	andi	a5,s1,7
   154ac:	00d456b3          	srl	a3,s0,a3
   154b0:	cf81                	beqz	a5,154c8 <__muldf3+0x456>
   154b2:	00f4f793          	andi	a5,s1,15
   154b6:	4611                	li	a2,4
   154b8:	00c78863          	beq	a5,a2,154c8 <__muldf3+0x456>
   154bc:	00448793          	addi	a5,s1,4
   154c0:	0097b4b3          	sltu	s1,a5,s1
   154c4:	96a6                	add	a3,a3,s1
   154c6:	84be                	mv	s1,a5
   154c8:	00869793          	slli	a5,a3,0x8
   154cc:	0407d863          	bgez	a5,1551c <__muldf3+0x4aa>
   154d0:	4785                	li	a5,1
   154d2:	4401                	li	s0,0
   154d4:	4481                	li	s1,0
   154d6:	b99d                	j	1514c <__muldf3+0xda>
   154d8:	03800613          	li	a2,56
   154dc:	cad649e3          	blt	a2,a3,1518e <__muldf3+0x11c>
   154e0:	467d                	li	a2,31
   154e2:	fad656e3          	bge	a2,a3,1548e <__muldf3+0x41c>
   154e6:	5605                	li	a2,-31
   154e8:	40f607b3          	sub	a5,a2,a5
   154ec:	02000593          	li	a1,32
   154f0:	00f45633          	srl	a2,s0,a5
   154f4:	00b68763          	beq	a3,a1,15502 <__muldf3+0x490>
   154f8:	43e90913          	addi	s2,s2,1086
   154fc:	012417b3          	sll	a5,s0,s2
   15500:	8cdd                	or	s1,s1,a5
   15502:	009034b3          	snez	s1,s1
   15506:	8cd1                	or	s1,s1,a2
   15508:	0074f693          	andi	a3,s1,7
   1550c:	4401                	li	s0,0
   1550e:	ca99                	beqz	a3,15524 <__muldf3+0x4b2>
   15510:	00f4f793          	andi	a5,s1,15
   15514:	4611                	li	a2,4
   15516:	4681                	li	a3,0
   15518:	fac792e3          	bne	a5,a2,154bc <__muldf3+0x44a>
   1551c:	00969413          	slli	s0,a3,0x9
   15520:	8031                	srli	s0,s0,0xc
   15522:	06f6                	slli	a3,a3,0x1d
   15524:	808d                	srli	s1,s1,0x3
   15526:	8cd5                	or	s1,s1,a3
   15528:	4781                	li	a5,0
   1552a:	b10d                	j	1514c <__muldf3+0xda>
   1552c:	7ff00793          	li	a5,2047
   15530:	4401                	li	s0,0
   15532:	4481                	li	s1,0
   15534:	b921                	j	1514c <__muldf3+0xda>
   15536:	8942                	mv	s2,a6
   15538:	bd4d                	j	153ea <__muldf3+0x378>

0001553a <__subdf3>:
__subdf3():
   1553a:	00100737          	lui	a4,0x100
   1553e:	177d                	addi	a4,a4,-1
   15540:	1101                	addi	sp,sp,-32
   15542:	00b77333          	and	t1,a4,a1
   15546:	0146d893          	srli	a7,a3,0x14
   1554a:	8f75                	and	a4,a4,a3
   1554c:	01d65e93          	srli	t4,a2,0x1d
   15550:	cc22                	sw	s0,24(sp)
   15552:	ca26                	sw	s1,20(sp)
   15554:	030e                	slli	t1,t1,0x3
   15556:	0145d493          	srli	s1,a1,0x14
   1555a:	01d55793          	srli	a5,a0,0x1d
   1555e:	070e                	slli	a4,a4,0x3
   15560:	ce06                	sw	ra,28(sp)
   15562:	c84a                	sw	s2,16(sp)
   15564:	c64e                	sw	s3,12(sp)
   15566:	7ff8f893          	andi	a7,a7,2047
   1556a:	7ff00e13          	li	t3,2047
   1556e:	00eee733          	or	a4,t4,a4
   15572:	7ff4f493          	andi	s1,s1,2047
   15576:	01f5d413          	srli	s0,a1,0x1f
   1557a:	0067e333          	or	t1,a5,t1
   1557e:	00351f13          	slli	t5,a0,0x3
   15582:	82fd                	srli	a3,a3,0x1f
   15584:	00361e93          	slli	t4,a2,0x3
   15588:	19c88263          	beq	a7,t3,1570c <__subdf3+0x1d2>
   1558c:	0016c693          	xori	a3,a3,1
   15590:	411485b3          	sub	a1,s1,a7
   15594:	12d40763          	beq	s0,a3,156c2 <__subdf3+0x188>
   15598:	18b05363          	blez	a1,1571e <__subdf3+0x1e4>
   1559c:	1a088d63          	beqz	a7,15756 <__subdf3+0x21c>
   155a0:	008007b7          	lui	a5,0x800
   155a4:	8f5d                	or	a4,a4,a5
   155a6:	59c48563          	beq	s1,t3,15b30 <__subdf3+0x5f6>
   155aa:	03800793          	li	a5,56
   155ae:	34b7c863          	blt	a5,a1,158fe <__subdf3+0x3c4>
   155b2:	47fd                	li	a5,31
   155b4:	48b7c963          	blt	a5,a1,15a46 <__subdf3+0x50c>
   155b8:	02000793          	li	a5,32
   155bc:	8f8d                	sub	a5,a5,a1
   155be:	00bed9b3          	srl	s3,t4,a1
   155c2:	00f71833          	sll	a6,a4,a5
   155c6:	00fe9eb3          	sll	t4,t4,a5
   155ca:	01386833          	or	a6,a6,s3
   155ce:	00b75733          	srl	a4,a4,a1
   155d2:	01d039b3          	snez	s3,t4
   155d6:	01386833          	or	a6,a6,s3
   155da:	40e30333          	sub	t1,t1,a4
   155de:	410f09b3          	sub	s3,t5,a6
   155e2:	013f37b3          	sltu	a5,t5,s3
   155e6:	40f30633          	sub	a2,t1,a5
   155ea:	00861793          	slli	a5,a2,0x8
   155ee:	2407d563          	bgez	a5,15838 <__subdf3+0x2fe>
   155f2:	00800937          	lui	s2,0x800
   155f6:	197d                	addi	s2,s2,-1
   155f8:	01267933          	and	s2,a2,s2
   155fc:	2e090163          	beqz	s2,158de <__subdf3+0x3a4>
   15600:	854a                	mv	a0,s2
   15602:	00001097          	auipc	ra,0x1
   15606:	8b0080e7          	jalr	-1872(ra) # 15eb2 <__clzsi2>
   1560a:	ff850713          	addi	a4,a0,-8
   1560e:	02000793          	li	a5,32
   15612:	8f99                	sub	a5,a5,a4
   15614:	00f9d7b3          	srl	a5,s3,a5
   15618:	00e91633          	sll	a2,s2,a4
   1561c:	8fd1                	or	a5,a5,a2
   1561e:	00e999b3          	sll	s3,s3,a4
   15622:	2a974463          	blt	a4,s1,158ca <__subdf3+0x390>
   15626:	8f05                	sub	a4,a4,s1
   15628:	00170613          	addi	a2,a4,1 # 100001 <_data_lma+0xe9b21>
   1562c:	46fd                	li	a3,31
   1562e:	3ac6c763          	blt	a3,a2,159dc <__subdf3+0x4a2>
   15632:	02000713          	li	a4,32
   15636:	8f11                	sub	a4,a4,a2
   15638:	00c9d6b3          	srl	a3,s3,a2
   1563c:	00e99833          	sll	a6,s3,a4
   15640:	00e79733          	sll	a4,a5,a4
   15644:	8f55                	or	a4,a4,a3
   15646:	01003833          	snez	a6,a6
   1564a:	010769b3          	or	s3,a4,a6
   1564e:	00c7d633          	srl	a2,a5,a2
   15652:	4481                	li	s1,0
   15654:	0079f793          	andi	a5,s3,7
   15658:	cf81                	beqz	a5,15670 <__subdf3+0x136>
   1565a:	00f9f693          	andi	a3,s3,15
   1565e:	4791                	li	a5,4
   15660:	00f68863          	beq	a3,a5,15670 <__subdf3+0x136>
   15664:	00498693          	addi	a3,s3,4
   15668:	0136b833          	sltu	a6,a3,s3
   1566c:	9642                	add	a2,a2,a6
   1566e:	89b6                	mv	s3,a3
   15670:	00861793          	slli	a5,a2,0x8
   15674:	1c07d663          	bgez	a5,15840 <__subdf3+0x306>
   15678:	00148713          	addi	a4,s1,1
   1567c:	7ff00793          	li	a5,2047
   15680:	8805                	andi	s0,s0,1
   15682:	20f70663          	beq	a4,a5,1588e <__subdf3+0x354>
   15686:	ff8007b7          	lui	a5,0xff800
   1568a:	17fd                	addi	a5,a5,-1
   1568c:	8ff1                	and	a5,a5,a2
   1568e:	01d79813          	slli	a6,a5,0x1d
   15692:	0039d993          	srli	s3,s3,0x3
   15696:	07a6                	slli	a5,a5,0x9
   15698:	01386833          	or	a6,a6,s3
   1569c:	83b1                	srli	a5,a5,0xc
   1569e:	7ff77713          	andi	a4,a4,2047
   156a2:	00c79693          	slli	a3,a5,0xc
   156a6:	0752                	slli	a4,a4,0x14
   156a8:	82b1                	srli	a3,a3,0xc
   156aa:	047e                	slli	s0,s0,0x1f
   156ac:	8ed9                	or	a3,a3,a4
   156ae:	8ec1                	or	a3,a3,s0
   156b0:	40f2                	lw	ra,28(sp)
   156b2:	4462                	lw	s0,24(sp)
   156b4:	44d2                	lw	s1,20(sp)
   156b6:	4942                	lw	s2,16(sp)
   156b8:	49b2                	lw	s3,12(sp)
   156ba:	8542                	mv	a0,a6
   156bc:	85b6                	mv	a1,a3
   156be:	6105                	addi	sp,sp,32
   156c0:	8082                	ret
   156c2:	0ab05663          	blez	a1,1576e <__subdf3+0x234>
   156c6:	12088a63          	beqz	a7,157fa <__subdf3+0x2c0>
   156ca:	008007b7          	lui	a5,0x800
   156ce:	8f5d                	or	a4,a4,a5
   156d0:	2dc48963          	beq	s1,t3,159a2 <__subdf3+0x468>
   156d4:	03800793          	li	a5,56
   156d8:	18b7c763          	blt	a5,a1,15866 <__subdf3+0x32c>
   156dc:	47fd                	li	a5,31
   156de:	3cb7d463          	bge	a5,a1,15aa6 <__subdf3+0x56c>
   156e2:	fe058813          	addi	a6,a1,-32
   156e6:	02000793          	li	a5,32
   156ea:	010759b3          	srl	s3,a4,a6
   156ee:	00f58a63          	beq	a1,a5,15702 <__subdf3+0x1c8>
   156f2:	04000793          	li	a5,64
   156f6:	40b785b3          	sub	a1,a5,a1
   156fa:	00b71733          	sll	a4,a4,a1
   156fe:	00eeeeb3          	or	t4,t4,a4
   15702:	01d03833          	snez	a6,t4
   15706:	01386833          	or	a6,a6,s3
   1570a:	a295                	j	1586e <__subdf3+0x334>
   1570c:	01d767b3          	or	a5,a4,t4
   15710:	80148593          	addi	a1,s1,-2047
   15714:	e399                	bnez	a5,1571a <__subdf3+0x1e0>
   15716:	0016c693          	xori	a3,a3,1
   1571a:	04d40a63          	beq	s0,a3,1576e <__subdf3+0x234>
   1571e:	e1d1                	bnez	a1,157a2 <__subdf3+0x268>
   15720:	00148793          	addi	a5,s1,1
   15724:	7fe7f793          	andi	a5,a5,2046
   15728:	1e079b63          	bnez	a5,1591e <__subdf3+0x3e4>
   1572c:	01e367b3          	or	a5,t1,t5
   15730:	01d76833          	or	a6,a4,t4
   15734:	16049263          	bnez	s1,15898 <__subdf3+0x35e>
   15738:	3c078463          	beqz	a5,15b00 <__subdf3+0x5c6>
   1573c:	42081863          	bnez	a6,15b6c <__subdf3+0x632>
   15740:	00351813          	slli	a6,a0,0x3
   15744:	01d31693          	slli	a3,t1,0x1d
   15748:	00385813          	srli	a6,a6,0x3
   1574c:	0106e833          	or	a6,a3,a6
   15750:	00335793          	srli	a5,t1,0x3
   15754:	a219                	j	1585a <__subdf3+0x320>
   15756:	01d767b3          	or	a5,a4,t4
   1575a:	1a078763          	beqz	a5,15908 <__subdf3+0x3ce>
   1575e:	fff58793          	addi	a5,a1,-1
   15762:	3a078d63          	beqz	a5,15b1c <__subdf3+0x5e2>
   15766:	23c58e63          	beq	a1,t3,159a2 <__subdf3+0x468>
   1576a:	85be                	mv	a1,a5
   1576c:	bd3d                	j	155aa <__subdf3+0x70>
   1576e:	1c059b63          	bnez	a1,15944 <__subdf3+0x40a>
   15772:	00148693          	addi	a3,s1,1
   15776:	7fe6f793          	andi	a5,a3,2046
   1577a:	efc1                	bnez	a5,15812 <__subdf3+0x2d8>
   1577c:	01e367b3          	or	a5,t1,t5
   15780:	36049263          	bnez	s1,15ae4 <__subdf3+0x5aa>
   15784:	44078f63          	beqz	a5,15be2 <__subdf3+0x6a8>
   15788:	01d767b3          	or	a5,a4,t4
   1578c:	46079663          	bnez	a5,15bf8 <__subdf3+0x6be>
   15790:	050e                	slli	a0,a0,0x3
   15792:	01d31813          	slli	a6,t1,0x1d
   15796:	810d                	srli	a0,a0,0x3
   15798:	00a86833          	or	a6,a6,a0
   1579c:	00335793          	srli	a5,t1,0x3
   157a0:	a86d                	j	1585a <__subdf3+0x320>
   157a2:	409885b3          	sub	a1,a7,s1
   157a6:	20049963          	bnez	s1,159b8 <__subdf3+0x47e>
   157aa:	01e367b3          	or	a5,t1,t5
   157ae:	30078f63          	beqz	a5,15acc <__subdf3+0x592>
   157b2:	fff58793          	addi	a5,a1,-1
   157b6:	40078b63          	beqz	a5,15bcc <__subdf3+0x692>
   157ba:	7ff00513          	li	a0,2047
   157be:	20a58563          	beq	a1,a0,159c8 <__subdf3+0x48e>
   157c2:	85be                	mv	a1,a5
   157c4:	03800793          	li	a5,56
   157c8:	2ab7c463          	blt	a5,a1,15a70 <__subdf3+0x536>
   157cc:	47fd                	li	a5,31
   157ce:	3cb7ca63          	blt	a5,a1,15ba2 <__subdf3+0x668>
   157d2:	02000793          	li	a5,32
   157d6:	8f8d                	sub	a5,a5,a1
   157d8:	00f31833          	sll	a6,t1,a5
   157dc:	00bf5633          	srl	a2,t5,a1
   157e0:	00ff17b3          	sll	a5,t5,a5
   157e4:	00c86833          	or	a6,a6,a2
   157e8:	00f039b3          	snez	s3,a5
   157ec:	00b35333          	srl	t1,t1,a1
   157f0:	01386833          	or	a6,a6,s3
   157f4:	40670733          	sub	a4,a4,t1
   157f8:	a441                	j	15a78 <__subdf3+0x53e>
   157fa:	01d767b3          	or	a5,a4,t4
   157fe:	10078563          	beqz	a5,15908 <__subdf3+0x3ce>
   15802:	fff58793          	addi	a5,a1,-1
   15806:	20078163          	beqz	a5,15a08 <__subdf3+0x4ce>
   1580a:	2fc58263          	beq	a1,t3,15aee <__subdf3+0x5b4>
   1580e:	85be                	mv	a1,a5
   15810:	b5d1                	j	156d4 <__subdf3+0x19a>
   15812:	7ff00793          	li	a5,2047
   15816:	06f68b63          	beq	a3,a5,1588c <__subdf3+0x352>
   1581a:	9efa                	add	t4,t4,t5
   1581c:	01eeb633          	sltu	a2,t4,t5
   15820:	00e307b3          	add	a5,t1,a4
   15824:	97b2                	add	a5,a5,a2
   15826:	01f79813          	slli	a6,a5,0x1f
   1582a:	001ede93          	srli	t4,t4,0x1
   1582e:	01d869b3          	or	s3,a6,t4
   15832:	0017d613          	srli	a2,a5,0x1
   15836:	84b6                	mv	s1,a3
   15838:	0079f793          	andi	a5,s3,7
   1583c:	e0079fe3          	bnez	a5,1565a <__subdf3+0x120>
   15840:	01d61793          	slli	a5,a2,0x1d
   15844:	0039d813          	srli	a6,s3,0x3
   15848:	00f86833          	or	a6,a6,a5
   1584c:	85a6                	mv	a1,s1
   1584e:	00365793          	srli	a5,a2,0x3
   15852:	7ff00713          	li	a4,2047
   15856:	06e58063          	beq	a1,a4,158b6 <__subdf3+0x37c>
   1585a:	07b2                	slli	a5,a5,0xc
   1585c:	83b1                	srli	a5,a5,0xc
   1585e:	7ff5f713          	andi	a4,a1,2047
   15862:	8805                	andi	s0,s0,1
   15864:	bd3d                	j	156a2 <__subdf3+0x168>
   15866:	01d76733          	or	a4,a4,t4
   1586a:	00e03833          	snez	a6,a4
   1586e:	01e809b3          	add	s3,a6,t5
   15872:	01e9b7b3          	sltu	a5,s3,t5
   15876:	00678633          	add	a2,a5,t1
   1587a:	00861793          	slli	a5,a2,0x8
   1587e:	fa07dde3          	bgez	a5,15838 <__subdf3+0x2fe>
   15882:	0485                	addi	s1,s1,1
   15884:	7ff00793          	li	a5,2047
   15888:	18f49e63          	bne	s1,a5,15a24 <__subdf3+0x4ea>
   1588c:	8805                	andi	s0,s0,1
   1588e:	7ff00713          	li	a4,2047
   15892:	4781                	li	a5,0
   15894:	4801                	li	a6,0
   15896:	b531                	j	156a2 <__subdf3+0x168>
   15898:	10079363          	bnez	a5,1599e <__subdf3+0x464>
   1589c:	3c080363          	beqz	a6,15c62 <__subdf3+0x728>
   158a0:	00361813          	slli	a6,a2,0x3
   158a4:	01d71793          	slli	a5,a4,0x1d
   158a8:	00385813          	srli	a6,a6,0x3
   158ac:	00f86833          	or	a6,a6,a5
   158b0:	8436                	mv	s0,a3
   158b2:	00375793          	srli	a5,a4,0x3
   158b6:	00f867b3          	or	a5,a6,a5
   158ba:	dbe9                	beqz	a5,1588c <__subdf3+0x352>
   158bc:	4401                	li	s0,0
   158be:	7ff00713          	li	a4,2047
   158c2:	000807b7          	lui	a5,0x80
   158c6:	4801                	li	a6,0
   158c8:	bbe9                	j	156a2 <__subdf3+0x168>
   158ca:	ff800637          	lui	a2,0xff800
   158ce:	167d                	addi	a2,a2,-1
   158d0:	8e7d                	and	a2,a2,a5
   158d2:	0079f793          	andi	a5,s3,7
   158d6:	8c99                	sub	s1,s1,a4
   158d8:	d80791e3          	bnez	a5,1565a <__subdf3+0x120>
   158dc:	b795                	j	15840 <__subdf3+0x306>
   158de:	854e                	mv	a0,s3
   158e0:	00000097          	auipc	ra,0x0
   158e4:	5d2080e7          	jalr	1490(ra) # 15eb2 <__clzsi2>
   158e8:	01850713          	addi	a4,a0,24
   158ec:	47fd                	li	a5,31
   158ee:	d2e7d0e3          	bge	a5,a4,1560e <__subdf3+0xd4>
   158f2:	ff850613          	addi	a2,a0,-8
   158f6:	00c997b3          	sll	a5,s3,a2
   158fa:	4981                	li	s3,0
   158fc:	b31d                	j	15622 <__subdf3+0xe8>
   158fe:	01d76833          	or	a6,a4,t4
   15902:	01003833          	snez	a6,a6
   15906:	b9e1                	j	155de <__subdf3+0xa4>
   15908:	00351813          	slli	a6,a0,0x3
   1590c:	01d31793          	slli	a5,t1,0x1d
   15910:	00385813          	srli	a6,a6,0x3
   15914:	00f86833          	or	a6,a6,a5
   15918:	00335793          	srli	a5,t1,0x3
   1591c:	bf1d                	j	15852 <__subdf3+0x318>
   1591e:	41df09b3          	sub	s3,t5,t4
   15922:	40e30933          	sub	s2,t1,a4
   15926:	013f3633          	sltu	a2,t5,s3
   1592a:	40c90933          	sub	s2,s2,a2
   1592e:	00891793          	slli	a5,s2,0x8
   15932:	2007ca63          	bltz	a5,15b46 <__subdf3+0x60c>
   15936:	0129e833          	or	a6,s3,s2
   1593a:	cc0811e3          	bnez	a6,155fc <__subdf3+0xc2>
   1593e:	4781                	li	a5,0
   15940:	4401                	li	s0,0
   15942:	bf21                	j	1585a <__subdf3+0x320>
   15944:	409885b3          	sub	a1,a7,s1
   15948:	14048163          	beqz	s1,15a8a <__subdf3+0x550>
   1594c:	008006b7          	lui	a3,0x800
   15950:	7ff00793          	li	a5,2047
   15954:	00d36333          	or	t1,t1,a3
   15958:	20f88163          	beq	a7,a5,15b5a <__subdf3+0x620>
   1595c:	03800793          	li	a5,56
   15960:	22b7cc63          	blt	a5,a1,15b98 <__subdf3+0x65e>
   15964:	47fd                	li	a5,31
   15966:	2cb7c963          	blt	a5,a1,15c38 <__subdf3+0x6fe>
   1596a:	02000793          	li	a5,32
   1596e:	8f8d                	sub	a5,a5,a1
   15970:	00f31833          	sll	a6,t1,a5
   15974:	00bf56b3          	srl	a3,t5,a1
   15978:	00ff17b3          	sll	a5,t5,a5
   1597c:	00d86833          	or	a6,a6,a3
   15980:	00f039b3          	snez	s3,a5
   15984:	00b35333          	srl	t1,t1,a1
   15988:	01386833          	or	a6,a6,s3
   1598c:	971a                	add	a4,a4,t1
   1598e:	01d809b3          	add	s3,a6,t4
   15992:	01d9b7b3          	sltu	a5,s3,t4
   15996:	00e78633          	add	a2,a5,a4
   1599a:	84c6                	mv	s1,a7
   1599c:	bdf9                	j	1587a <__subdf3+0x340>
   1599e:	f0081fe3          	bnez	a6,158bc <__subdf3+0x382>
   159a2:	00351813          	slli	a6,a0,0x3
   159a6:	01d31793          	slli	a5,t1,0x1d
   159aa:	00385813          	srli	a6,a6,0x3
   159ae:	00f86833          	or	a6,a6,a5
   159b2:	00335793          	srli	a5,t1,0x3
   159b6:	b701                	j	158b6 <__subdf3+0x37c>
   159b8:	00800537          	lui	a0,0x800
   159bc:	7ff00793          	li	a5,2047
   159c0:	00a36333          	or	t1,t1,a0
   159c4:	e0f890e3          	bne	a7,a5,157c4 <__subdf3+0x28a>
   159c8:	060e                	slli	a2,a2,0x3
   159ca:	01d71813          	slli	a6,a4,0x1d
   159ce:	820d                	srli	a2,a2,0x3
   159d0:	00c86833          	or	a6,a6,a2
   159d4:	00375793          	srli	a5,a4,0x3
   159d8:	8436                	mv	s0,a3
   159da:	bdf1                	j	158b6 <__subdf3+0x37c>
   159dc:	1705                	addi	a4,a4,-31
   159de:	02000693          	li	a3,32
   159e2:	00e7d733          	srl	a4,a5,a4
   159e6:	00d60a63          	beq	a2,a3,159fa <__subdf3+0x4c0>
   159ea:	04000693          	li	a3,64
   159ee:	40c68633          	sub	a2,a3,a2
   159f2:	00c79633          	sll	a2,a5,a2
   159f6:	00c9e9b3          	or	s3,s3,a2
   159fa:	01303833          	snez	a6,s3
   159fe:	00e869b3          	or	s3,a6,a4
   15a02:	4601                	li	a2,0
   15a04:	4481                	li	s1,0
   15a06:	bd0d                	j	15838 <__subdf3+0x2fe>
   15a08:	01df09b3          	add	s3,t5,t4
   15a0c:	00e307b3          	add	a5,t1,a4
   15a10:	01e9bf33          	sltu	t5,s3,t5
   15a14:	01e78633          	add	a2,a5,t5
   15a18:	00861793          	slli	a5,a2,0x8
   15a1c:	4485                	li	s1,1
   15a1e:	e007dde3          	bgez	a5,15838 <__subdf3+0x2fe>
   15a22:	4489                	li	s1,2
   15a24:	ff8007b7          	lui	a5,0xff800
   15a28:	17fd                	addi	a5,a5,-1
   15a2a:	8ff1                	and	a5,a5,a2
   15a2c:	0019d713          	srli	a4,s3,0x1
   15a30:	0019f813          	andi	a6,s3,1
   15a34:	01076833          	or	a6,a4,a6
   15a38:	01f79993          	slli	s3,a5,0x1f
   15a3c:	0109e9b3          	or	s3,s3,a6
   15a40:	0017d613          	srli	a2,a5,0x1
   15a44:	b901                	j	15654 <__subdf3+0x11a>
   15a46:	fe058813          	addi	a6,a1,-32
   15a4a:	02000793          	li	a5,32
   15a4e:	010759b3          	srl	s3,a4,a6
   15a52:	00f58a63          	beq	a1,a5,15a66 <__subdf3+0x52c>
   15a56:	04000793          	li	a5,64
   15a5a:	40b785b3          	sub	a1,a5,a1
   15a5e:	00b71733          	sll	a4,a4,a1
   15a62:	00eeeeb3          	or	t4,t4,a4
   15a66:	01d03833          	snez	a6,t4
   15a6a:	01386833          	or	a6,a6,s3
   15a6e:	be85                	j	155de <__subdf3+0xa4>
   15a70:	01e36333          	or	t1,t1,t5
   15a74:	00603833          	snez	a6,t1
   15a78:	410e89b3          	sub	s3,t4,a6
   15a7c:	013eb7b3          	sltu	a5,t4,s3
   15a80:	40f70633          	sub	a2,a4,a5
   15a84:	84c6                	mv	s1,a7
   15a86:	8436                	mv	s0,a3
   15a88:	b68d                	j	155ea <__subdf3+0xb0>
   15a8a:	01e367b3          	or	a5,t1,t5
   15a8e:	18078763          	beqz	a5,15c1c <__subdf3+0x6e2>
   15a92:	fff58793          	addi	a5,a1,-1
   15a96:	1c078c63          	beqz	a5,15c6e <__subdf3+0x734>
   15a9a:	7ff00693          	li	a3,2047
   15a9e:	0ad58e63          	beq	a1,a3,15b5a <__subdf3+0x620>
   15aa2:	85be                	mv	a1,a5
   15aa4:	bd65                	j	1595c <__subdf3+0x422>
   15aa6:	02000793          	li	a5,32
   15aaa:	8f8d                	sub	a5,a5,a1
   15aac:	00bed9b3          	srl	s3,t4,a1
   15ab0:	00f71833          	sll	a6,a4,a5
   15ab4:	00fe9eb3          	sll	t4,t4,a5
   15ab8:	01386833          	or	a6,a6,s3
   15abc:	00b75733          	srl	a4,a4,a1
   15ac0:	01d039b3          	snez	s3,t4
   15ac4:	01386833          	or	a6,a6,s3
   15ac8:	933a                	add	t1,t1,a4
   15aca:	b355                	j	1586e <__subdf3+0x334>
   15acc:	00361813          	slli	a6,a2,0x3
   15ad0:	01d71793          	slli	a5,a4,0x1d
   15ad4:	00385813          	srli	a6,a6,0x3
   15ad8:	0107e833          	or	a6,a5,a6
   15adc:	8436                	mv	s0,a3
   15ade:	00375793          	srli	a5,a4,0x3
   15ae2:	bb85                	j	15852 <__subdf3+0x318>
   15ae4:	cbbd                	beqz	a5,15b5a <__subdf3+0x620>
   15ae6:	01d76733          	or	a4,a4,t4
   15aea:	dc0719e3          	bnez	a4,158bc <__subdf3+0x382>
   15aee:	050e                	slli	a0,a0,0x3
   15af0:	01d31813          	slli	a6,t1,0x1d
   15af4:	810d                	srli	a0,a0,0x3
   15af6:	00a86833          	or	a6,a6,a0
   15afa:	00335793          	srli	a5,t1,0x3
   15afe:	bb65                	j	158b6 <__subdf3+0x37c>
   15b00:	e2080fe3          	beqz	a6,1593e <__subdf3+0x404>
   15b04:	00361813          	slli	a6,a2,0x3
   15b08:	01d71793          	slli	a5,a4,0x1d
   15b0c:	00385813          	srli	a6,a6,0x3
   15b10:	00f86833          	or	a6,a6,a5
   15b14:	8436                	mv	s0,a3
   15b16:	00375793          	srli	a5,a4,0x3
   15b1a:	b381                	j	1585a <__subdf3+0x320>
   15b1c:	41df09b3          	sub	s3,t5,t4
   15b20:	40e307b3          	sub	a5,t1,a4
   15b24:	013f3f33          	sltu	t5,t5,s3
   15b28:	41e78633          	sub	a2,a5,t5
   15b2c:	4485                	li	s1,1
   15b2e:	bc75                	j	155ea <__subdf3+0xb0>
   15b30:	00351813          	slli	a6,a0,0x3
   15b34:	01d31693          	slli	a3,t1,0x1d
   15b38:	00385813          	srli	a6,a6,0x3
   15b3c:	0106e833          	or	a6,a3,a6
   15b40:	00335793          	srli	a5,t1,0x3
   15b44:	bb8d                	j	158b6 <__subdf3+0x37c>
   15b46:	41ee89b3          	sub	s3,t4,t5
   15b4a:	40670633          	sub	a2,a4,t1
   15b4e:	013eb933          	sltu	s2,t4,s3
   15b52:	41260933          	sub	s2,a2,s2
   15b56:	8436                	mv	s0,a3
   15b58:	b455                	j	155fc <__subdf3+0xc2>
   15b5a:	060e                	slli	a2,a2,0x3
   15b5c:	01d71813          	slli	a6,a4,0x1d
   15b60:	820d                	srli	a2,a2,0x3
   15b62:	00c86833          	or	a6,a6,a2
   15b66:	00375793          	srli	a5,a4,0x3
   15b6a:	b3b1                	j	158b6 <__subdf3+0x37c>
   15b6c:	41df09b3          	sub	s3,t5,t4
   15b70:	40e307b3          	sub	a5,t1,a4
   15b74:	013f3633          	sltu	a2,t5,s3
   15b78:	40c78633          	sub	a2,a5,a2
   15b7c:	00861793          	slli	a5,a2,0x8
   15b80:	0a07d763          	bgez	a5,15c2e <__subdf3+0x6f4>
   15b84:	41ee89b3          	sub	s3,t4,t5
   15b88:	406707b3          	sub	a5,a4,t1
   15b8c:	013ebeb3          	sltu	t4,t4,s3
   15b90:	41d78633          	sub	a2,a5,t4
   15b94:	8436                	mv	s0,a3
   15b96:	bc7d                	j	15654 <__subdf3+0x11a>
   15b98:	01e36333          	or	t1,t1,t5
   15b9c:	00603833          	snez	a6,t1
   15ba0:	b3fd                	j	1598e <__subdf3+0x454>
   15ba2:	fe058813          	addi	a6,a1,-32
   15ba6:	02000793          	li	a5,32
   15baa:	010359b3          	srl	s3,t1,a6
   15bae:	00f58a63          	beq	a1,a5,15bc2 <__subdf3+0x688>
   15bb2:	04000793          	li	a5,64
   15bb6:	40b785b3          	sub	a1,a5,a1
   15bba:	00b31333          	sll	t1,t1,a1
   15bbe:	006f6f33          	or	t5,t5,t1
   15bc2:	01e03833          	snez	a6,t5
   15bc6:	01386833          	or	a6,a6,s3
   15bca:	b57d                	j	15a78 <__subdf3+0x53e>
   15bcc:	41ee89b3          	sub	s3,t4,t5
   15bd0:	406707b3          	sub	a5,a4,t1
   15bd4:	013ebeb3          	sltu	t4,t4,s3
   15bd8:	41d78633          	sub	a2,a5,t4
   15bdc:	8436                	mv	s0,a3
   15bde:	4485                	li	s1,1
   15be0:	b429                	j	155ea <__subdf3+0xb0>
   15be2:	00361813          	slli	a6,a2,0x3
   15be6:	01d71793          	slli	a5,a4,0x1d
   15bea:	00385813          	srli	a6,a6,0x3
   15bee:	00f86833          	or	a6,a6,a5
   15bf2:	00375793          	srli	a5,a4,0x3
   15bf6:	b195                	j	1585a <__subdf3+0x320>
   15bf8:	01df09b3          	add	s3,t5,t4
   15bfc:	00e307b3          	add	a5,t1,a4
   15c00:	01e9bf33          	sltu	t5,s3,t5
   15c04:	01e78633          	add	a2,a5,t5
   15c08:	00861793          	slli	a5,a2,0x8
   15c0c:	c207d6e3          	bgez	a5,15838 <__subdf3+0x2fe>
   15c10:	ff8007b7          	lui	a5,0xff800
   15c14:	17fd                	addi	a5,a5,-1
   15c16:	8e7d                	and	a2,a2,a5
   15c18:	4485                	li	s1,1
   15c1a:	b939                	j	15838 <__subdf3+0x2fe>
   15c1c:	060e                	slli	a2,a2,0x3
   15c1e:	01d71813          	slli	a6,a4,0x1d
   15c22:	820d                	srli	a2,a2,0x3
   15c24:	00c86833          	or	a6,a6,a2
   15c28:	00375793          	srli	a5,a4,0x3
   15c2c:	b11d                	j	15852 <__subdf3+0x318>
   15c2e:	00c9e833          	or	a6,s3,a2
   15c32:	d00806e3          	beqz	a6,1593e <__subdf3+0x404>
   15c36:	b109                	j	15838 <__subdf3+0x2fe>
   15c38:	fe058813          	addi	a6,a1,-32
   15c3c:	02000793          	li	a5,32
   15c40:	010359b3          	srl	s3,t1,a6
   15c44:	00f58a63          	beq	a1,a5,15c58 <__subdf3+0x71e>
   15c48:	04000793          	li	a5,64
   15c4c:	40b785b3          	sub	a1,a5,a1
   15c50:	00b31333          	sll	t1,t1,a1
   15c54:	006f6f33          	or	t5,t5,t1
   15c58:	01e03833          	snez	a6,t5
   15c5c:	01386833          	or	a6,a6,s3
   15c60:	b33d                	j	1598e <__subdf3+0x454>
   15c62:	4401                	li	s0,0
   15c64:	7ff00713          	li	a4,2047
   15c68:	000807b7          	lui	a5,0x80
   15c6c:	bc1d                	j	156a2 <__subdf3+0x168>
   15c6e:	01df09b3          	add	s3,t5,t4
   15c72:	00e307b3          	add	a5,t1,a4
   15c76:	01d9beb3          	sltu	t4,s3,t4
   15c7a:	01d78633          	add	a2,a5,t4
   15c7e:	bb69                	j	15a18 <__subdf3+0x4de>

00015c80 <__fixunsdfdi>:
__fixunsdfdi():
   15c80:	0145d793          	srli	a5,a1,0x14
   15c84:	001006b7          	lui	a3,0x100
   15c88:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xe9b1f>
   15c8c:	7ff7f793          	andi	a5,a5,2047
   15c90:	3fe00613          	li	a2,1022
   15c94:	8f6d                	and	a4,a4,a1
   15c96:	81fd                	srli	a1,a1,0x1f
   15c98:	00f65363          	bge	a2,a5,15c9e <__fixunsdfdi+0x1e>
   15c9c:	c581                	beqz	a1,15ca4 <__fixunsdfdi+0x24>
   15c9e:	4501                	li	a0,0
   15ca0:	4581                	li	a1,0
   15ca2:	8082                	ret
   15ca4:	43e00613          	li	a2,1086
   15ca8:	00f65563          	bge	a2,a5,15cb2 <__fixunsdfdi+0x32>
   15cac:	557d                	li	a0,-1
   15cae:	55fd                	li	a1,-1
   15cb0:	8082                	ret
   15cb2:	43200613          	li	a2,1074
   15cb6:	00d765b3          	or	a1,a4,a3
   15cba:	00f65c63          	bge	a2,a5,15cd2 <__fixunsdfdi+0x52>
   15cbe:	bad78713          	addi	a4,a5,-1107 # 7fbad <_data_lma+0x696cd>
   15cc2:	bcd78793          	addi	a5,a5,-1075
   15cc6:	04074063          	bltz	a4,15d06 <__fixunsdfdi+0x86>
   15cca:	00e515b3          	sll	a1,a0,a4
   15cce:	4501                	li	a0,0
   15cd0:	8082                	ret
   15cd2:	43300693          	li	a3,1075
   15cd6:	8e9d                	sub	a3,a3,a5
   15cd8:	477d                	li	a4,31
   15cda:	00d75b63          	bge	a4,a3,15cf0 <__fixunsdfdi+0x70>
   15cde:	41300713          	li	a4,1043
   15ce2:	40f707b3          	sub	a5,a4,a5
   15ce6:	00f5d7b3          	srl	a5,a1,a5
   15cea:	4581                	li	a1,0
   15cec:	853e                	mv	a0,a5
   15cee:	8082                	ret
   15cf0:	bed78713          	addi	a4,a5,-1043
   15cf4:	00e59733          	sll	a4,a1,a4
   15cf8:	00d55533          	srl	a0,a0,a3
   15cfc:	00a767b3          	or	a5,a4,a0
   15d00:	00d5d5b3          	srl	a1,a1,a3
   15d04:	b7e5                	j	15cec <__fixunsdfdi+0x6c>
   15d06:	46fd                	li	a3,31
   15d08:	00155713          	srli	a4,a0,0x1
   15d0c:	8e9d                	sub	a3,a3,a5
   15d0e:	00d75733          	srl	a4,a4,a3
   15d12:	00f595b3          	sll	a1,a1,a5
   15d16:	8dd9                	or	a1,a1,a4
   15d18:	00f51533          	sll	a0,a0,a5
   15d1c:	8082                	ret

00015d1e <__floatundidf>:
__floatundidf():
   15d1e:	00b567b3          	or	a5,a0,a1
   15d22:	c3b1                	beqz	a5,15d66 <__floatundidf+0x48>
   15d24:	1141                	addi	sp,sp,-16
   15d26:	c422                	sw	s0,8(sp)
   15d28:	c226                	sw	s1,4(sp)
   15d2a:	c04a                	sw	s2,0(sp)
   15d2c:	c606                	sw	ra,12(sp)
   15d2e:	84aa                	mv	s1,a0
   15d30:	892e                	mv	s2,a1
   15d32:	842e                	mv	s0,a1
   15d34:	c1b9                	beqz	a1,15d7a <__floatundidf+0x5c>
   15d36:	852e                	mv	a0,a1
   15d38:	00000097          	auipc	ra,0x0
   15d3c:	17a080e7          	jalr	378(ra) # 15eb2 <__clzsi2>
   15d40:	43e00693          	li	a3,1086
   15d44:	8e89                	sub	a3,a3,a0
   15d46:	43300793          	li	a5,1075
   15d4a:	06d7c763          	blt	a5,a3,15db8 <__floatundidf+0x9a>
   15d4e:	00c91793          	slli	a5,s2,0xc
   15d52:	462d                	li	a2,11
   15d54:	8726                	mv	a4,s1
   15d56:	7ff6f693          	andi	a3,a3,2047
   15d5a:	83b1                	srli	a5,a5,0xc
   15d5c:	0ca65f63          	bge	a2,a0,15e3a <__floatundidf+0x11c>
   15d60:	ff550613          	addi	a2,a0,-11 # 7ffff5 <_data_lma+0x7e9b15>
   15d64:	a825                	j	15d9c <__floatundidf+0x7e>
   15d66:	4781                	li	a5,0
   15d68:	4681                	li	a3,0
   15d6a:	07b2                	slli	a5,a5,0xc
   15d6c:	06d2                	slli	a3,a3,0x14
   15d6e:	83b1                	srli	a5,a5,0xc
   15d70:	4701                	li	a4,0
   15d72:	8fd5                	or	a5,a5,a3
   15d74:	853a                	mv	a0,a4
   15d76:	85be                	mv	a1,a5
   15d78:	8082                	ret
   15d7a:	00000097          	auipc	ra,0x0
   15d7e:	138080e7          	jalr	312(ra) # 15eb2 <__clzsi2>
   15d82:	862a                	mv	a2,a0
   15d84:	43e00693          	li	a3,1086
   15d88:	02050513          	addi	a0,a0,32
   15d8c:	8e89                	sub	a3,a3,a0
   15d8e:	02a00713          	li	a4,42
   15d92:	7ff6f693          	andi	a3,a3,2047
   15d96:	0ca74c63          	blt	a4,a0,15e6e <__floatundidf+0x150>
   15d9a:	0655                	addi	a2,a2,21
   15d9c:	02b00713          	li	a4,43
   15da0:	8f09                	sub	a4,a4,a0
   15da2:	00c917b3          	sll	a5,s2,a2
   15da6:	00e4d733          	srl	a4,s1,a4
   15daa:	8f5d                	or	a4,a4,a5
   15dac:	00c71793          	slli	a5,a4,0xc
   15db0:	83b1                	srli	a5,a5,0xc
   15db2:	00c49733          	sll	a4,s1,a2
   15db6:	a051                	j	15e3a <__floatundidf+0x11c>
   15db8:	43600793          	li	a5,1078
   15dbc:	02d7d963          	bge	a5,a3,15dee <__floatundidf+0xd0>
   15dc0:	01850713          	addi	a4,a0,24
   15dc4:	03850793          	addi	a5,a0,56
   15dc8:	0c074763          	bltz	a4,15e96 <__floatundidf+0x178>
   15dcc:	00e49633          	sll	a2,s1,a4
   15dd0:	4701                	li	a4,0
   15dd2:	4421                	li	s0,8
   15dd4:	8c09                	sub	s0,s0,a0
   15dd6:	8f51                	or	a4,a4,a2
   15dd8:	fe040793          	addi	a5,s0,-32 # 7ffe0 <_data_lma+0x69b00>
   15ddc:	00e03733          	snez	a4,a4
   15de0:	0807cf63          	bltz	a5,15e7e <__floatundidf+0x160>
   15de4:	00f954b3          	srl	s1,s2,a5
   15de8:	4781                	li	a5,0
   15dea:	8cd9                	or	s1,s1,a4
   15dec:	843e                	mv	s0,a5
   15dee:	47a1                	li	a5,8
   15df0:	06a7c163          	blt	a5,a0,15e52 <__floatundidf+0x134>
   15df4:	ff800737          	lui	a4,0xff800
   15df8:	177d                	addi	a4,a4,-1
   15dfa:	0074f613          	andi	a2,s1,7
   15dfe:	00e477b3          	and	a5,s0,a4
   15e02:	c605                	beqz	a2,15e2a <__floatundidf+0x10c>
   15e04:	00f4f613          	andi	a2,s1,15
   15e08:	4591                	li	a1,4
   15e0a:	02b60063          	beq	a2,a1,15e2a <__floatundidf+0x10c>
   15e0e:	00448613          	addi	a2,s1,4
   15e12:	009634b3          	sltu	s1,a2,s1
   15e16:	97a6                	add	a5,a5,s1
   15e18:	00879593          	slli	a1,a5,0x8
   15e1c:	0805d963          	bgez	a1,15eae <__floatundidf+0x190>
   15e20:	43f00693          	li	a3,1087
   15e24:	8ff9                	and	a5,a5,a4
   15e26:	8e89                	sub	a3,a3,a0
   15e28:	84b2                	mv	s1,a2
   15e2a:	01d79713          	slli	a4,a5,0x1d
   15e2e:	808d                	srli	s1,s1,0x3
   15e30:	07a6                	slli	a5,a5,0x9
   15e32:	8f45                	or	a4,a4,s1
   15e34:	83b1                	srli	a5,a5,0xc
   15e36:	7ff6f693          	andi	a3,a3,2047
   15e3a:	40b2                	lw	ra,12(sp)
   15e3c:	4422                	lw	s0,8(sp)
   15e3e:	07b2                	slli	a5,a5,0xc
   15e40:	06d2                	slli	a3,a3,0x14
   15e42:	83b1                	srli	a5,a5,0xc
   15e44:	8fd5                	or	a5,a5,a3
   15e46:	4492                	lw	s1,4(sp)
   15e48:	4902                	lw	s2,0(sp)
   15e4a:	853a                	mv	a0,a4
   15e4c:	85be                	mv	a1,a5
   15e4e:	0141                	addi	sp,sp,16
   15e50:	8082                	ret
   15e52:	02800713          	li	a4,40
   15e56:	ff850613          	addi	a2,a0,-8
   15e5a:	8f09                	sub	a4,a4,a0
   15e5c:	00e4d733          	srl	a4,s1,a4
   15e60:	00c417b3          	sll	a5,s0,a2
   15e64:	00f76433          	or	s0,a4,a5
   15e68:	00c494b3          	sll	s1,s1,a2
   15e6c:	b761                	j	15df4 <__floatundidf+0xd6>
   15e6e:	ff560793          	addi	a5,a2,-11 # ff7ffff5 <_eusrstack+0xdf7f7ff5>
   15e72:	00f497b3          	sll	a5,s1,a5
   15e76:	07b2                	slli	a5,a5,0xc
   15e78:	83b1                	srli	a5,a5,0xc
   15e7a:	4701                	li	a4,0
   15e7c:	bf7d                	j	15e3a <__floatundidf+0x11c>
   15e7e:	467d                	li	a2,31
   15e80:	00191793          	slli	a5,s2,0x1
   15e84:	8e01                	sub	a2,a2,s0
   15e86:	00c797b3          	sll	a5,a5,a2
   15e8a:	0084d4b3          	srl	s1,s1,s0
   15e8e:	8cdd                	or	s1,s1,a5
   15e90:	008957b3          	srl	a5,s2,s0
   15e94:	bf99                	j	15dea <__floatundidf+0xcc>
   15e96:	467d                	li	a2,31
   15e98:	8e1d                	sub	a2,a2,a5
   15e9a:	0014d713          	srli	a4,s1,0x1
   15e9e:	00c75733          	srl	a4,a4,a2
   15ea2:	00f91633          	sll	a2,s2,a5
   15ea6:	8e59                	or	a2,a2,a4
   15ea8:	00f49733          	sll	a4,s1,a5
   15eac:	b71d                	j	15dd2 <__floatundidf+0xb4>
   15eae:	84b2                	mv	s1,a2
   15eb0:	bfad                	j	15e2a <__floatundidf+0x10c>

00015eb2 <__clzsi2>:
__clzsi2():
   15eb2:	67c1                	lui	a5,0x10
   15eb4:	02f57e63          	bgeu	a0,a5,15ef0 <__clzsi2+0x3e>
   15eb8:	0ff00793          	li	a5,255
   15ebc:	02000713          	li	a4,32
   15ec0:	00a7ec63          	bltu	a5,a0,15ed8 <__clzsi2+0x26>
   15ec4:	00000797          	auipc	a5,0x0
   15ec8:	51c78793          	addi	a5,a5,1308 # 163e0 <__clz_tab>
   15ecc:	97aa                	add	a5,a5,a0
   15ece:	0007c503          	lbu	a0,0(a5)
   15ed2:	40a70533          	sub	a0,a4,a0
   15ed6:	8082                	ret
   15ed8:	8121                	srli	a0,a0,0x8
   15eda:	00000797          	auipc	a5,0x0
   15ede:	50678793          	addi	a5,a5,1286 # 163e0 <__clz_tab>
   15ee2:	97aa                	add	a5,a5,a0
   15ee4:	0007c503          	lbu	a0,0(a5)
   15ee8:	4761                	li	a4,24
   15eea:	40a70533          	sub	a0,a4,a0
   15eee:	8082                	ret
   15ef0:	010007b7          	lui	a5,0x1000
   15ef4:	00f56e63          	bltu	a0,a5,15f10 <__clzsi2+0x5e>
   15ef8:	8161                	srli	a0,a0,0x18
   15efa:	00000797          	auipc	a5,0x0
   15efe:	4e678793          	addi	a5,a5,1254 # 163e0 <__clz_tab>
   15f02:	97aa                	add	a5,a5,a0
   15f04:	0007c503          	lbu	a0,0(a5)
   15f08:	4721                	li	a4,8
   15f0a:	40a70533          	sub	a0,a4,a0
   15f0e:	8082                	ret
   15f10:	8141                	srli	a0,a0,0x10
   15f12:	00000797          	auipc	a5,0x0
   15f16:	4ce78793          	addi	a5,a5,1230 # 163e0 <__clz_tab>
   15f1a:	97aa                	add	a5,a5,a0
   15f1c:	0007c503          	lbu	a0,0(a5)
   15f20:	4741                	li	a4,16
   15f22:	40a70533          	sub	a0,a4,a0
   15f26:	8082                	ret

00015f28 <strlen>:
strlen():
   15f28:	87aa                	mv	a5,a0
   15f2a:	0785                	addi	a5,a5,1
   15f2c:	fff7c703          	lbu	a4,-1(a5)
   15f30:	ff6d                	bnez	a4,15f2a <strlen+0x2>
   15f32:	40a78533          	sub	a0,a5,a0
   15f36:	157d                	addi	a0,a0,-1
   15f38:	8082                	ret
   15f3a:	0000                	unimp
   15f3c:	2d2d                	jal	16576 <_data_lma+0x96>
   15f3e:	2d2d                	jal	16578 <_data_lma+0x98>
   15f40:	2d2d                	jal	1657a <_data_lma+0x9a>
   15f42:	2d2d                	jal	1657c <_data_lma+0x9c>
   15f44:	2d2d                	jal	1657e <_data_lma+0x9e>
   15f46:	2d2d                	jal	16580 <_data_lma+0xa0>
   15f48:	2d2d                	jal	16582 <_data_lma+0xa2>
   15f4a:	2d2d                	jal	16584 <_data_lma+0xa4>
   15f4c:	2d2d                	jal	16586 <_data_lma+0xa6>
   15f4e:	2d2d                	jal	16588 <_data_lma+0xa8>
   15f50:	2d2d                	jal	1658a <_data_lma+0xaa>
   15f52:	2d2d                	jal	1658c <_data_lma+0xac>
   15f54:	2d2d                	jal	1658e <_data_lma+0xae>
   15f56:	2d2d                	jal	16590 <_data_lma+0xb0>
   15f58:	2d2d                	jal	16592 <_data_lma+0xb2>
   15f5a:	2d2d                	jal	16594 <_data_lma+0xb4>
   15f5c:	2d2d                	jal	16596 <_data_lma+0xb6>
   15f5e:	2d2d                	jal	16598 <_data_lma+0xb8>
   15f60:	2d2d                	jal	1659a <_data_lma+0xba>
   15f62:	2d2d                	jal	1659c <_data_lma+0xbc>
   15f64:	2d2d                	jal	1659e <_data_lma+0xbe>
   15f66:	2d2d                	jal	165a0 <_data_lma+0xc0>
   15f68:	2d2d                	jal	165a2 <_data_lma+0xc2>
   15f6a:	2d2d                	jal	165a4 <_data_lma+0xc4>
   15f6c:	2d2d                	jal	165a6 <_data_lma+0xc6>
   15f6e:	2d2d                	jal	165a8 <_data_lma+0xc8>
   15f70:	2d2d                	jal	165aa <_data_lma+0xca>
   15f72:	2d2d                	jal	165ac <_data_lma+0xcc>
   15f74:	2d2d                	jal	165ae <_data_lma+0xce>
   15f76:	000a                	c.slli	zero,0x2
   15f78:	f0bd                	bnez	s1,15ede <__clzsi2+0x2c>
   15f7a:	f9ba                	fsw	fa4,240(sp)
   15f7c:	abc2                	fsd	fa6,464(sp)
   15f7e:	e1cc                	fsw	fa1,4(a1)
   15f80:	beca                	fsd	fs2,376(sp)
   15f82:	2020baa3          	0x2020baa3
   15f86:	2020                	fld	fs0,64(s0)
   15f88:	2020                	fld	fs0,64(s0)
   15f8a:	2020                	fld	fs0,64(s0)
   15f8c:	2020                	fld	fs0,64(s0)
   15f8e:	2020                	fld	fs0,64(s0)
   15f90:	2020                	fld	fs0,64(s0)
   15f92:	2020                	fld	fs0,64(s0)
   15f94:	2020                	fld	fs0,64(s0)
   15f96:	2020                	fld	fs0,64(s0)
   15f98:	2020                	fld	fs0,64(s0)
   15f9a:	2020                	fld	fs0,64(s0)
   15f9c:	2020                	fld	fs0,64(s0)
   15f9e:	2020                	fld	fs0,64(s0)
   15fa0:	2020                	fld	fs0,64(s0)
   15fa2:	2020                	fld	fs0,64(s0)
   15fa4:	2020                	fld	fs0,64(s0)
   15fa6:	2020                	fld	fs0,64(s0)
   15fa8:	2020                	fld	fs0,64(s0)
   15faa:	2020                	fld	fs0,64(s0)
   15fac:	2020                	fld	fs0,64(s0)
   15fae:	2020                	fld	fs0,64(s0)
   15fb0:	2020                	fld	fs0,64(s0)
   15fb2:	0a20                	addi	s0,sp,280
   15fb4:	0000                	unimp
   15fb6:	0000                	unimp
   15fb8:	a320                	fsd	fs0,64(a4)
   15fba:	31a8                	fld	fa0,96(a1)
   15fbc:	b6c0a9a3          	sw	a2,-1165(ra)
   15fc0:	c6b5                	beqz	a3,1602c <strlen+0x104>
   15fc2:	c1c9                	beqz	a1,16044 <strlen+0x11c>
   15fc4:	2020b8cb          	fnmsub.s	fa7,ft1,ft2,ft4,rup
   15fc8:	2020                	fld	fs0,64(s0)
   15fca:	2020                	fld	fs0,64(s0)
   15fcc:	2020                	fld	fs0,64(s0)
   15fce:	2020                	fld	fs0,64(s0)
   15fd0:	2020                	fld	fs0,64(s0)
   15fd2:	2020                	fld	fs0,64(s0)
   15fd4:	2020                	fld	fs0,64(s0)
   15fd6:	2020                	fld	fs0,64(s0)
   15fd8:	2020                	fld	fs0,64(s0)
   15fda:	2020                	fld	fs0,64(s0)
   15fdc:	2020                	fld	fs0,64(s0)
   15fde:	2020                	fld	fs0,64(s0)
   15fe0:	2020                	fld	fs0,64(s0)
   15fe2:	2020                	fld	fs0,64(s0)
   15fe4:	2020                	fld	fs0,64(s0)
   15fe6:	2020                	fld	fs0,64(s0)
   15fe8:	2020                	fld	fs0,64(s0)
   15fea:	2020                	fld	fs0,64(s0)
   15fec:	2020                	fld	fs0,64(s0)
   15fee:	2020                	fld	fs0,64(s0)
   15ff0:	2020                	fld	fs0,64(s0)
   15ff2:	0a20                	addi	s0,sp,280
   15ff4:	0000                	unimp
   15ff6:	0000                	unimp
   15ff8:	a320                	fsd	fs0,64(a4)
   15ffa:	32a8                	fld	fa0,96(a3)
   15ffc:	bfc3a9a3          	sw	t3,-1037(t2)
   16000:	3031                	jal	1580c <__subdf3+0x2d2>
   16002:	736d                	lui	t1,0xffffb
   16004:	d0d6                	sw	s5,96(sp)
   16006:	cfb6                	sw	a3,220(sp)
   16008:	a5b4                	fsd	fa3,72(a1)
   1600a:	7953a2b7          	lui	t0,0x7953a
   1600e:	63695473          	csrrwi	s0,0x636,18
   16012:	caa8b66b          	0xcaa8b66b
   16016:	c6b1                	beqz	a3,16062 <strlen+0x13a>
   16018:	b6d0d6f7          	0xb6d0d6f7
   1601c:	c0a6b4cf          	fnmadd.s	fs1,fa3,fa0,fs8,rup
   16020:	b3ed                	j	15e0a <__floatundidf+0xec>
   16022:	d0cc                	sw	a1,36(s1)
   16024:	d2f2                	sw	t3,100(sp)
   16026:	a1ceb4bb          	0xa1ceb4bb
   1602a:	202020a3          	sw	sp,513(zero) # 201 <GEC_USER_SECTOR_END+0x1dc>
   1602e:	2020                	fld	fs0,64(s0)
   16030:	2020                	fld	fs0,64(s0)
   16032:	2020                	fld	fs0,64(s0)
   16034:	0a20                	addi	s0,sp,280
   16036:	0000                	unimp
   16038:	a320                	fsd	fs0,64(a4)
   1603a:	33a8                	fld	fa0,96(a5)
   1603c:	f8bda9a3          	sw	a1,-109(s11)
   16040:	ebc8                	fsw	fa0,20(a5)
   16042:	54737953          	0x54737953
   16046:	6369                	lui	t1,0x1a
   16048:	caa8b66b          	0xcaa8b66b
   1604c:	c6b1                	beqz	a3,16098 <strlen+0x170>
   1604e:	b6d0d6f7          	0xb6d0d6f7
   16052:	c0a6b4cf          	fnmadd.s	fs1,fa3,fa0,fs8,rup
   16056:	b3ed                	j	15e40 <__floatundidf+0x122>
   16058:	d0cc                	sw	a1,36(s1)
   1605a:	baf2                	fsd	ft8,368(sp)
   1605c:	beaca3f3          	csrrs	t2,0xbea,s9
   16060:	ccb2                	sw	a2,88(sp)
   16062:	b1ac                	fsd	fa1,96(a1)
   16064:	c1e4                	sw	s1,68(a1)
   16066:	6d3031bf d4a5b573 	0xd4a5b5736d3031bf
   1606e:	2baa                	fld	fs7,136(sp)
   16070:	a331                	j	1657c <_data_lma+0x9c>
   16072:	20ac                	fld	fa1,64(s1)
   16074:	0a20                	addi	s0,sp,280
   16076:	0000                	unimp
   16078:	a320                	fsd	fs0,64(a4)
   1607a:	34a8                	fld	fa0,104(s1)
   1607c:	efb4a9a3          	sw	s11,-269(s1)
   16080:	bdb5                	j	15efc <__clzsi2+0x4a>
   16082:	bbd2                	fsd	fs4,496(sp)
   16084:	b1caebc3          	fmadd.s	fs7,fs5,ft8,fs6,unknown
   16088:	f7b5aca3          	sw	s11,-135(a1)
   1608c:	ebc3c3d3          	0xebc3c3d3
   16090:	aca3312b          	0xaca3312b
   16094:	f2d0ccb3          	0xf2d0ccb3
   16098:	c6bcaca3          	sw	a1,-903(s9)
   1609c:	b0a1e3cb          	fnmsub.s	ft7,ft3,fa0,fs6,unknown
   160a0:	b1ca                	fsd	fs2,224(sp)
   160a2:	a2a1                	j	161ea <strlen+0x2c2>
   160a4:	a2a1d6b7          	lui	a3,0xa2a1d
   160a8:	b1a1ebc3          	fmadd.s	fs7,ft3,fs10,fs6,unknown
   160ac:	a3a1                	j	165f4 <_data_lma+0x114>
   160ae:	2020                	fld	fs0,64(s0)
   160b0:	2020                	fld	fs0,64(s0)
   160b2:	2020                	fld	fs0,64(s0)
   160b4:	2020                	fld	fs0,64(s0)
   160b6:	000a                	c.slli	zero,0x2
   160b8:	a320                	fsd	fs0,64(a4)
   160ba:	35a8                	fld	fa0,104(a1)
   160bc:	b9caa9a3          	sw	t3,-1133(s5)
   160c0:	abc8c3d3          	0xabc8c3d3
   160c4:	d6be                	sw	a5,108(sp)
   160c6:	e4b1                	bnez	s1,16112 <strlen+0x1ea>
   160c8:	bfc1                	j	16098 <strlen+0x170>
   160ca:	dabdd6d7          	0xdabdd6d7
   160ce:	cdd0                	sw	a2,28(a1)
   160d0:	fdca                	fsw	fs2,248(sp)
   160d2:	5467e9d7          	0x5467e9d7
   160d6:	6d69                	lui	s10,0x1a
   160d8:	5b65                	li	s6,-7
   160da:	aca35d33          	0xaca35d33
   160de:	f0b1d6b7          	lui	a3,0xf0b1d
   160e2:	e6b4                	fsw	fa3,72(a3)
   160e4:	a2b4                	fsd	fa3,64(a3)
   160e6:	b0a1                	j	1592e <__subdf3+0x3f4>
   160e8:	b1ca                	fsd	fs2,224(sp)
   160ea:	a2a1                	j	16232 <strlen+0x30a>
   160ec:	a2a1d6b7          	lui	a3,0xa2a1d
   160f0:	b1a1ebc3          	fmadd.s	fs7,ft3,fs10,fs6,unknown
   160f4:	a3a1                	j	1663c <_data_lma+0x15c>
   160f6:	000a                	c.slli	zero,0x2
   160f8:	a320                	fsd	fs0,64(a4)
   160fa:	36a8                	fld	fa0,104(a3)
   160fc:	c9bfa9a3          	sw	s11,-877(t6)
   16100:	a8cd                	j	161f2 <strlen+0x2ca>
   16102:	fdb9                	bnez	a1,16060 <strlen+0x138>
   16104:	b1ca                	fsd	fs2,224(sp)
   16106:	e4bc                	fsw	fa5,72(s1)
   16108:	e2b2                	fsw	fa2,68(sp)
   1610a:	d4ca                	sw	s2,104(sp)
   1610c:	f2d0ccb3          	0xf2d0ccb3
   16110:	e2b22343          	fmadd.d	ft6,ft4,fa1,ft8,rdn
   16114:	d4ca                	sw	s2,104(sp)
   16116:	ebc33033          	0xebc33033
   1611a:	c4b5                	beqz	s1,16186 <strlen+0x25e>
   1611c:	b1ca                	fsd	fs2,224(sp)
   1611e:	e4bc                	fsw	fa5,72(s1)
   16120:	e4bc                	fsw	fa5,72(s1)
   16122:	f4b8                	fsw	fa4,104(s1)
   16124:	b4c0                	fsd	fs0,168(s1)
   16126:	a3d0                	fsd	fa2,128(a5)
   16128:	7953bcd7          	0x7953bcd7
   1612c:	63697473          	csrrci	s0,0x636,18
   16130:	2020206b          	0x2020206b
   16134:	0a20                	addi	s0,sp,280
   16136:	0000                	unimp
   16138:	a320                	fsd	fs0,64(a4)
   1613a:	37a8                	fld	fa0,104(a5)
   1613c:	a2d7a9a3          	sw	a3,-1485(a5)
   16140:	e2d2                	fsw	fs4,68(sp)
   16142:	e4c6                	fsw	fa7,72(sp)
   16144:	d0d6                	sw	s5,96(sp)
   16146:	b2be                	fsd	fa5,352(sp)
   16148:	accc                	fsd	fa1,152(s1)
   1614a:	e4b1                	bnez	s1,16196 <strlen+0x26e>
   1614c:	bfc1                	j	1611c <strlen+0x1f4>
   1614e:	c4b5                	beqz	s1,161ba <strlen+0x292>
   16150:	b9ca                	fsd	fs2,240(sp)
   16152:	2020c3d3          	0x2020c3d3
   16156:	2020                	fld	fs0,64(s0)
   16158:	2020                	fld	fs0,64(s0)
   1615a:	2020                	fld	fs0,64(s0)
   1615c:	2020                	fld	fs0,64(s0)
   1615e:	2020                	fld	fs0,64(s0)
   16160:	2020                	fld	fs0,64(s0)
   16162:	2020                	fld	fs0,64(s0)
   16164:	2020                	fld	fs0,64(s0)
   16166:	2020                	fld	fs0,64(s0)
   16168:	2020                	fld	fs0,64(s0)
   1616a:	2020                	fld	fs0,64(s0)
   1616c:	2020                	fld	fs0,64(s0)
   1616e:	2020                	fld	fs0,64(s0)
   16170:	2020                	fld	fs0,64(s0)
   16172:	2020                	fld	fs0,64(s0)
   16174:	000a                	c.slli	zero,0x2
   16176:	0000                	unimp
   16178:	2d2d                	jal	167b2 <_data_lma+0x2d2>
   1617a:	2d2d                	jal	167b4 <_data_lma+0x2d4>
   1617c:	2d2d                	jal	167b6 <_data_lma+0x2d6>
   1617e:	2d2d                	jal	167b8 <_data_lma+0x2d8>
   16180:	2d2d                	jal	167ba <_data_lma+0x2da>
   16182:	2d2d                	jal	167bc <_data_lma+0x2dc>
   16184:	2d2d                	jal	167be <_data_lma+0x2de>
   16186:	2d2d                	jal	167c0 <_data_lma+0x2e0>
   16188:	2d2d                	jal	167c2 <_data_lma+0x2e2>
   1618a:	2d2d                	jal	167c4 <_data_lma+0x2e4>
   1618c:	2d2d                	jal	167c6 <_data_lma+0x2e6>
   1618e:	2d2d                	jal	167c8 <_data_lma+0x2e8>
   16190:	2d2d                	jal	167ca <_data_lma+0x2ea>
   16192:	2d2d                	jal	167cc <_data_lma+0x2ec>
   16194:	2d2d                	jal	167ce <_data_lma+0x2ee>
   16196:	2d2d                	jal	167d0 <_data_lma+0x2f0>
   16198:	2d2d                	jal	167d2 <_data_lma+0x2f2>
   1619a:	2d2d                	jal	167d4 <_data_lma+0x2f4>
   1619c:	2d2d                	jal	167d6 <_data_lma+0x2f6>
   1619e:	2d2d                	jal	167d8 <_data_lma+0x2f8>
   161a0:	2d2d                	jal	167da <_data_lma+0x2fa>
   161a2:	2d2d                	jal	167dc <_data_lma+0x2fc>
   161a4:	2d2d                	jal	167de <_data_lma+0x2fe>
   161a6:	2d2d                	jal	167e0 <_data_lma+0x300>
   161a8:	2d2d                	jal	167e2 <_data_lma+0x302>
   161aa:	2d2d                	jal	167e4 <_data_lma+0x304>
   161ac:	2d2d                	jal	167e6 <_data_lma+0x306>
   161ae:	2d2d                	jal	167e8 <_data_lma+0x308>
   161b0:	2d2d                	jal	167ea <_data_lma+0x30a>
   161b2:	0a2d                	addi	s4,s4,11
   161b4:	0000                	unimp
   161b6:	0000                	unimp
   161b8:	6425                	lui	s0,0x9
   161ba:	253a                	fld	fa0,392(sp)
   161bc:	3a64                	fld	fs1,240(a2)
   161be:	6425                	lui	s0,0x9
   161c0:	000a                	c.slli	zero,0x2
   161c2:	0000                	unimp
   161c4:	2020                	fld	fs0,64(s0)
   161c6:	bea1                	j	15d1e <__floatundidf>
   161c8:	7355                	lui	t1,0xffff5
   161ca:	7265                	lui	tp,0xffff9
   161cc:	e1cc                	fsw	fa1,4(a1)
   161ce:	beca                	fsd	fs2,376(sp)
   161d0:	bfa1                	j	16128 <strlen+0x200>
   161d2:	abbdbaa3          	0xabbdbaa3
   161d6:	f8bd                	bnez	s1,1614c <strlen+0x224>
   161d8:	ebc8                	fsw	fa0,20(a5)
   161da:	7355                	lui	t1,0xffff5
   161dc:	7265                	lui	tp,0xffff9
   161de:	c4b5                	beqz	s1,1624a <strlen+0x322>
   161e0:	616d                	addi	sp,sp,240
   161e2:	6e69                	lui	t3,0x1a
   161e4:	afba                	fsd	fa4,472(sp)
   161e6:	fdca                	fsw	fs2,248(sp)
   161e8:	b4d6                	fsd	fs5,104(sp)
   161ea:	d0d0                	sw	a2,36(s1)
   161ec:	2e2e                	fld	ft8,200(sp)
   161ee:	0d2e                	slli	s10,s10,0xb
   161f0:	0a0a                	slli	s4,s4,0x2
   161f2:	0000                	unimp
   161f4:	da36                	sw	a3,52(sp)
   161f6:	ffff                	0xffff
   161f8:	da3a                	sw	a4,52(sp)
   161fa:	ffff                	0xffff
   161fc:	da32                	sw	a2,52(sp)
   161fe:	ffff                	0xffff
   16200:	da40                	sw	s0,52(a2)
   16202:	ffff                	0xffff
   16204:	da2a                	sw	a0,52(sp)
   16206:	ffff                	0xffff
   16208:	da40                	sw	s0,52(a2)
   1620a:	ffff                	0xffff
   1620c:	da26                	sw	s1,52(sp)
   1620e:	ffff                	0xffff
   16210:	da40                	sw	s0,52(a2)
   16212:	ffff                	0xffff
   16214:	da40                	sw	s0,52(a2)
   16216:	ffff                	0xffff
   16218:	da40                	sw	s0,52(a2)
   1621a:	ffff                	0xffff
   1621c:	da40                	sw	s0,52(a2)
   1621e:	ffff                	0xffff
   16220:	da40                	sw	s0,52(a2)
   16222:	ffff                	0xffff
   16224:	da2e                	sw	a1,52(sp)
   16226:	ffff                	0xffff
   16228:	d972                	sw	t3,176(sp)
   1622a:	ffff                	0xffff
   1622c:	d976                	sw	t4,176(sp)
   1622e:	ffff                	0xffff
   16230:	d96e                	sw	s11,176(sp)
   16232:	ffff                	0xffff
   16234:	da0c                	sw	a1,48(a2)
   16236:	ffff                	0xffff
   16238:	d966                	sw	s9,176(sp)
   1623a:	ffff                	0xffff
   1623c:	da0c                	sw	a1,48(a2)
   1623e:	ffff                	0xffff
   16240:	d962                	sw	s8,176(sp)
   16242:	ffff                	0xffff
   16244:	da0c                	sw	a1,48(a2)
   16246:	ffff                	0xffff
   16248:	da0c                	sw	a1,48(a2)
   1624a:	ffff                	0xffff
   1624c:	da0c                	sw	a1,48(a2)
   1624e:	ffff                	0xffff
   16250:	da0c                	sw	a1,48(a2)
   16252:	ffff                	0xffff
   16254:	da0c                	sw	a1,48(a2)
   16256:	ffff                	0xffff
   16258:	d96a                	sw	s10,176(sp)
   1625a:	ffff                	0xffff
   1625c:	d97a                	sw	t5,176(sp)
   1625e:	ffff                	0xffff
   16260:	d97e                	sw	t6,176(sp)
   16262:	ffff                	0xffff
   16264:	d976                	sw	t4,176(sp)
   16266:	ffff                	0xffff
   16268:	d9d8                	sw	a4,52(a1)
   1626a:	ffff                	0xffff
   1626c:	d96e                	sw	s11,176(sp)
   1626e:	ffff                	0xffff
   16270:	d9d8                	sw	a4,52(a1)
   16272:	ffff                	0xffff
   16274:	d96a                	sw	s10,176(sp)
   16276:	ffff                	0xffff
   16278:	d9d8                	sw	a4,52(a1)
   1627a:	ffff                	0xffff
   1627c:	d9d8                	sw	a4,52(a1)
   1627e:	ffff                	0xffff
   16280:	d9d8                	sw	a4,52(a1)
   16282:	ffff                	0xffff
   16284:	d9d8                	sw	a4,52(a1)
   16286:	ffff                	0xffff
   16288:	d9d8                	sw	a4,52(a1)
   1628a:	ffff                	0xffff
   1628c:	d972                	sw	t3,176(sp)
   1628e:	ffff                	0xffff
   16290:	d982                	sw	zero,240(sp)
   16292:	ffff                	0xffff
   16294:	d986                	sw	ra,240(sp)
   16296:	ffff                	0xffff
   16298:	d97e                	sw	t6,176(sp)
   1629a:	ffff                	0xffff
   1629c:	d9a4                	sw	s1,112(a1)
   1629e:	ffff                	0xffff
   162a0:	d976                	sw	t4,176(sp)
   162a2:	ffff                	0xffff
   162a4:	d9a4                	sw	s1,112(a1)
   162a6:	ffff                	0xffff
   162a8:	d972                	sw	t3,176(sp)
   162aa:	ffff                	0xffff
   162ac:	d9a4                	sw	s1,112(a1)
   162ae:	ffff                	0xffff
   162b0:	d9a4                	sw	s1,112(a1)
   162b2:	ffff                	0xffff
   162b4:	d9a4                	sw	s1,112(a1)
   162b6:	ffff                	0xffff
   162b8:	d9a4                	sw	s1,112(a1)
   162ba:	ffff                	0xffff
   162bc:	d9a4                	sw	s1,112(a1)
   162be:	ffff                	0xffff
   162c0:	d97a                	sw	t5,176(sp)
   162c2:	ffff                	0xffff
   162c4:	df26                	sw	s1,188(sp)
   162c6:	ffff                	0xffff
   162c8:	dfa8                	sw	a0,120(a5)
   162ca:	ffff                	0xffff
   162cc:	dfa8                	sw	a0,120(a5)
   162ce:	ffff                	0xffff
   162d0:	df32                	sw	a2,188(sp)
   162d2:	ffff                	0xffff
   162d4:	dfa8                	sw	a0,120(a5)
   162d6:	ffff                	0xffff
   162d8:	dfa8                	sw	a0,120(a5)
   162da:	ffff                	0xffff
   162dc:	dfa8                	sw	a0,120(a5)
   162de:	ffff                	0xffff
   162e0:	dfa8                	sw	a0,120(a5)
   162e2:	ffff                	0xffff
   162e4:	dfa8                	sw	a0,120(a5)
   162e6:	ffff                	0xffff
   162e8:	dfa8                	sw	a0,120(a5)
   162ea:	ffff                	0xffff
   162ec:	dfa8                	sw	a0,120(a5)
   162ee:	ffff                	0xffff
   162f0:	df20                	sw	s0,120(a4)
   162f2:	ffff                	0xffff
   162f4:	dfa8                	sw	a0,120(a5)
   162f6:	ffff                	0xffff
   162f8:	defc                	sw	a5,124(a3)
   162fa:	ffff                	0xffff
   162fc:	dfa8                	sw	a0,120(a5)
   162fe:	ffff                	0xffff
   16300:	dfa8                	sw	a0,120(a5)
   16302:	ffff                	0xffff
   16304:	df2c                	sw	a1,120(a4)
   16306:	ffff                	0xffff
   16308:	e194                	fsw	fa3,0(a1)
   1630a:	ffff                	0xffff
   1630c:	e422                	fsw	fs0,8(sp)
   1630e:	ffff                	0xffff
   16310:	e422                	fsw	fs0,8(sp)
   16312:	ffff                	0xffff
   16314:	e422                	fsw	fs0,8(sp)
   16316:	ffff                	0xffff
   16318:	e422                	fsw	fs0,8(sp)
   1631a:	ffff                	0xffff
   1631c:	e422                	fsw	fs0,8(sp)
   1631e:	ffff                	0xffff
   16320:	e422                	fsw	fs0,8(sp)
   16322:	ffff                	0xffff
   16324:	e422                	fsw	fs0,8(sp)
   16326:	ffff                	0xffff
   16328:	e422                	fsw	fs0,8(sp)
   1632a:	ffff                	0xffff
   1632c:	e422                	fsw	fs0,8(sp)
   1632e:	ffff                	0xffff
   16330:	e298                	fsw	fa4,0(a3)
   16332:	ffff                	0xffff
   16334:	e374                	fsw	fa3,68(a4)
   16336:	ffff                	0xffff
   16338:	dfa4                	sw	s1,120(a5)
   1633a:	ffff                	0xffff
   1633c:	e422                	fsw	fs0,8(sp)
   1633e:	ffff                	0xffff
   16340:	e04c                	fsw	fa1,4(s0)
   16342:	ffff                	0xffff
   16344:	e422                	fsw	fs0,8(sp)
   16346:	ffff                	0xffff
   16348:	e422                	fsw	fs0,8(sp)
   1634a:	ffff                	0xffff
   1634c:	dfa4                	sw	s1,120(a5)
   1634e:	ffff                	0xffff
   16350:	e422                	fsw	fs0,8(sp)
   16352:	ffff                	0xffff
   16354:	e422                	fsw	fs0,8(sp)
   16356:	ffff                	0xffff
   16358:	e422                	fsw	fs0,8(sp)
   1635a:	ffff                	0xffff
   1635c:	e422                	fsw	fs0,8(sp)
   1635e:	ffff                	0xffff
   16360:	e416                	fsw	ft5,8(sp)
   16362:	ffff                	0xffff
   16364:	e260                	fsw	fs0,68(a2)
   16366:	ffff                	0xffff
   16368:	e2b8                	fsw	fa4,64(a3)
   1636a:	ffff                	0xffff
   1636c:	e422                	fsw	fs0,8(sp)
   1636e:	ffff                	0xffff
   16370:	e422                	fsw	fs0,8(sp)
   16372:	ffff                	0xffff
   16374:	e38c                	fsw	fa1,0(a5)
   16376:	ffff                	0xffff
   16378:	e422                	fsw	fs0,8(sp)
   1637a:	ffff                	0xffff
   1637c:	e2d8                	fsw	fa4,4(a3)
   1637e:	ffff                	0xffff
   16380:	e422                	fsw	fs0,8(sp)
   16382:	ffff                	0xffff
   16384:	e422                	fsw	fs0,8(sp)
   16386:	ffff                	0xffff
   16388:	e194                	fsw	fa3,0(a1)
   1638a:	ffff                	0xffff
	...
   16394:	0000                	unimp
   16396:	4024                	lw	s1,64(s0)
   16398:	999a                	add	s3,s3,t1
   1639a:	9999                	andi	a1,a1,-26
   1639c:	9999                	andi	a1,a1,-26
   1639e:	3fb9                	jal	162fc <strlen+0x3d4>
   163a0:	eeea                	fsw	fs10,92(sp)
   163a2:	ffff                	0xffff
   163a4:	edd4                	fsw	fa3,28(a1)
   163a6:	ffff                	0xffff
   163a8:	edd4                	fsw	fa3,28(a1)
   163aa:	ffff                	0xffff
   163ac:	edd2                	fsw	fs4,216(sp)
   163ae:	ffff                	0xffff
   163b0:	edda                	fsw	fs6,216(sp)
   163b2:	ffff                	0xffff
   163b4:	edda                	fsw	fs6,216(sp)
   163b6:	ffff                	0xffff
   163b8:	eda0                	fsw	fs0,88(a1)
   163ba:	ffff                	0xffff
   163bc:	edd2                	fsw	fs4,216(sp)
   163be:	ffff                	0xffff
   163c0:	edda                	fsw	fs6,216(sp)
   163c2:	ffff                	0xffff
   163c4:	eda0                	fsw	fs0,88(a1)
   163c6:	ffff                	0xffff
   163c8:	edda                	fsw	fs6,216(sp)
   163ca:	ffff                	0xffff
   163cc:	edd2                	fsw	fs4,216(sp)
   163ce:	ffff                	0xffff
   163d0:	eed6                	fsw	fs5,92(sp)
   163d2:	ffff                	0xffff
   163d4:	eed6                	fsw	fs5,92(sp)
   163d6:	ffff                	0xffff
   163d8:	eed6                	fsw	fs5,92(sp)
   163da:	ffff                	0xffff
   163dc:	eda0                	fsw	fs0,88(a1)
   163de:	ffff                	0xffff

000163e0 <__clz_tab>:
   163e0:	0100 0202 0303 0303 0404 0404 0404 0404     ................
   163f0:	0505 0505 0505 0505 0505 0505 0505 0505     ................
   16400:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   16410:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   16420:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16430:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16440:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16450:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16460:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16470:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16480:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16490:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   164a0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   164b0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   164c0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   164d0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
