
Flash-CH573.elf:     file format elf32-littleriscv
Flash-CH573.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00012000

Program Header:
    LOAD off    0x00001000 vaddr 0x00012000 paddr 0x00012000 align 2**12
         filesz 0x000000ec memsz 0x000000ec flags r-x
    LOAD off    0x00002000 vaddr 0x00013000 paddr 0x00013000 align 2**12
         filesz 0x00003258 memsz 0x00003258 flags r-x
    LOAD off    0x00005600 vaddr 0x20005600 paddr 0x00016258 align 2**12
         filesz 0x00000000 memsz 0x00000080 flags rw-
    LOAD off    0x00005680 vaddr 0x20005680 paddr 0x00016258 align 2**12
         filesz 0x00000000 memsz 0x00000004 flags rw-

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .init           00000004  00012000  00012000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector         000000e8  00012004  00012004  00001004  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .highcodelalign 00000000  00013000  00013000  00005258  2**0  CONTENTS
  3 .highcode       00000000  20005600  20005600  00005258  2**0  CONTENTS
  4 .text           00003258  00013000  00013000  00002000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini           00000000  00016258  00016258  00005258  2**0  CONTENTS, ALLOC, LOAD, CODE
  6 .dalign         00000080  20005600  00016258  00005600  2**0  ALLOC
  7 .dlalign        00000000  00016258  00016258  00005258  2**0  CONTENTS
  8 .data           00000000  20005680  20005680  00005258  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 .bss            00000004  20005680  00016258  00005680  2**2  ALLOC
 10 .stack          00000000  20008000  20008000  00005258  2**0  CONTENTS
 11 .debug_info     000058f1  00000000  00000000  00005258  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev   000012a5  00000000  00000000  0000ab49  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc      00002fd0  00000000  00000000  0000bdee  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  00000210  00000000  00000000  0000edc0  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   00000208  00000000  00000000  0000efd0  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_line     00005357  00000000  00000000  0000f1d8  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str      00000c10  00000000  00000000  0001452f  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment        00000033  00000000  00000000  0001513f  2**0  CONTENTS, READONLY
 19 .debug_frame    0000068c  00000000  00000000  00015174  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00012000 l    d  .init	00000000 .init
00012004 l    d  .vector	00000000 .vector
00013000 l    d  .highcodelalign	00000000 .highcodelalign
20005600 l    d  .highcode	00000000 .highcode
00013000 l    d  .text	00000000 .text
00016258 l    d  .fini	00000000 .fini
20005600 l    d  .dalign	00000000 .dalign
00016258 l    d  .dlalign	00000000 .dlalign
20005680 l    d  .data	00000000 .data
20005680 l    d  .bss	00000000 .bss
20008000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_CH573.o
00012004 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 printf.c
000139d4 l     F .text	0000003c printk_putc
00013a10 l     F .text	00000082 printk_mknumstr
00013a92 l     F .text	0000003c printk_pad_space
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixunsdfdi.c
00000000 l    df *ABS*	00000000 floatundidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 libgcc2.c
000135c2 g     F .text	000000cc flash_write
000134b8 g     F .text	00000020 flash_read_physical
00014c0c g     F .text	0000006a .hidden __eqdf2
20005e80 g       .data	00000000 __global_pointer$
00000025 g       *ABS*	00000000 GEC_USER_SECTOR_END
00012098  w      .vector	00000000 HardFault_Handler
000120ac  w      .vector	00000000 GPIOB_IRQHandler
000120a8  w      .vector	00000000 GPIOA_IRQHandler
0001209c  w      .vector	00000000 SysTick_Handler
00012094  w      .vector	00000000 NMI_Handler
000120cc  w      .vector	00000000 UART1_IRQHandler
20005680 g       .bss	00000000 _sbss
00000012 g       *ABS*	00000000 GEC_USER_SECTOR_START
000120c8  w      .vector	00000000 UART0_IRQHandler
00015be2 g     F .text	000000b6 memcpy
00014c76 g     F .text	000000b6 .hidden __ltdf2
00012004 g       .init	00000000 _einit
000120b4  w      .vector	00000000 BB_IRQHandler
0001346c g     F .text	00000026 flash_erase
0001359a g     F .text	00000028 flash_Best
000120a4  w      .vector	00000000 TMR0_IRQHandler
0001487e g     F .text	0000038e .hidden __umoddi3
0001344c g     F .text	00000020 flash_init
000144e6 g     F .text	00000398 .hidden __udivdi3
00013ae6 g     F .text	000002e8 printk_mkfloatstr
000120d0  w      .vector	00000000 RTC_IRQHandler
20005684 g       .bss	00000000 _ebss
00001000 g       *ABS*	00000000 MCU_SECTORSIZE
00014c76 g     F .text	000000b6 .hidden __ledf2
20007fff g       *ABS*	00000000 GEC_USER_RAM_END
000144b0 g     F .text	00000036 myprintf
000120e0  w      .vector	00000000 UART2_IRQHandler
000120d8  w      .vector	00000000 PWMX_IRQHandler
00015b6c g     F .text	00000076 .hidden __clzsi2
00012000 g       .init	00000000 _start
20005680 g     O .bss	00000004 component_fun
000159d8 g     F .text	00000194 .hidden __floatundidf
20005600 g       *ABS*	00000000 GEC_USER_RAM_START
000120d4  w      .vector	00000000 ADC_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_start
000120c4  w      .vector	00000000 TMR2_IRQHandler
20005680 g       .data	00000000 _data_vma
00013ace g     F .text	00000018 out_char
000120bc  w      .vector	00000000 USB_IRQHandler
00013dce g     F .text	000006e2 printk
00013492 g     F .text	00000026 flash_read_logic
00014d2c g     F .text	000004c8 .hidden __muldf3
000130c0 g     F .text	000000a8 memset
00013168 g     F .text	000002e4 main
000137aa g     F .text	000000b8 IRQ_OPC_CHANGE
00013000 g       .highcodelalign	00000000 _highcode_lma
00014c0c g     F .text	0000006a .hidden __nedf2
0001593a g     F .text	0000009e .hidden __fixunsdfdi
00016158 g     O .text	00000100 .hidden __clz_tab
000120b8  w      .vector	00000000 LLE_IRQHandler
00012000 g       .init	00000000 _sinit
0001368e g     F .text	0000002c flash_write_physical
000120e8  w      .vector	00000000 WDOG_BAT_IRQHandler
000134d8 g     F .text	000000c2 flash_isempty
000120dc  w      .vector	00000000 TMR3_IRQHandler
20008000 g       .stack	00000000 _eusrstack
000120a0  w      .vector	00000000 SW_Handler
00013862 g     F .text	00000064 Vectors_Init
20005680 g       .data	00000000 _edata
000120b0  w      .vector	00000000 SPI0_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_end
00016258 g       .dlalign	00000000 _data_lma
00013000  w      .text	00000000 handle_reset
00015c98 g     F .text	00000012 strlen
000120e4  w      .vector	00000000 UART3_IRQHandler
000138c6 g     F .text	0000010e uart_send1
000136ba g     F .text	00000072 gpio_set
0001372c g     F .text	0000007e gpio_init
000151f4 g     F .text	00000746 .hidden __subdf3
000120c0  w      .vector	00000000 TMR1_IRQHandler
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START



Disassembly of section .init:

00012000 <_sinit>:
_start():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:14
	.section	.init,"ax",@progbits   /*ax是 allocation  execute的缩写，表示该节区可分配并且可执行，progbits是类型*/
	.global	_start   /*将_start标签定义为全局可见*/
	.align	1   /*将当前PC地址推进到2的1次方个字节对齐的位置*/
    .option	norelax  /*	不允许链接松弛*/
_start:     /*定义此处的标签为_start*/
	j	handle_reset     /*跳转指令跳转到标签handle_reset所在的位置*/
   12000:	0000106f          	j	13000 <_highcode_lma>

Disassembly of section .vector:

00012004 <_vector_base>:
_vector_base():
   12004:	8000                	0x8000
   12006:	2000                	fld	fs0,0(s0)
   12008:	0000                	unimp
   1200a:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:22
    .align  1
_vector_base:
    .option norvc; /*表示接下来的汇编程序不可以被汇编生成16位宽的压缩指令*/
    .word   _eusrstack
    .word   0
        j   NMI_Handler                 /* NMI Handler */
   1200c:	0880006f          	j	12094 <NMI_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:23
        j   HardFault_Handler           /* Hard Fault Handler */
   12010:	0880006f          	j	12098 <HardFault_Handler>
	...
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:32
    .word   0
    .word   0
    .word   0
    .word   0
    .word   0
        j   SysTick_Handler            /* SysTick Handler */
   12034:	0680006f          	j	1209c <SysTick_Handler>
   12038:	0000                	unimp
   1203a:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:34
    .word   0
        j   SW_Handler                 /* SW Handler */
   1203c:	0640006f          	j	120a0 <SW_Handler>
   12040:	0000                	unimp
   12042:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:37
    .word   0
    /* External Interrupts */
        j   TMR0_IRQHandler            /* 0:  TMR0 */
   12044:	0600006f          	j	120a4 <TMR0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:38
        j   GPIOA_IRQHandler           /* GPIOA */
   12048:	0600006f          	j	120a8 <GPIOA_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:39
        j   GPIOB_IRQHandler           /* GPIOB */
   1204c:	0600006f          	j	120ac <GPIOB_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:40
        j   SPI0_IRQHandler            /* SPI0 */
   12050:	0600006f          	j	120b0 <SPI0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:41
        j   BB_IRQHandler              /* BLEB */
   12054:	0600006f          	j	120b4 <BB_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:42
        j   LLE_IRQHandler             /* BLEL */
   12058:	0600006f          	j	120b8 <LLE_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:43
        j   USB_IRQHandler             /* USB */
   1205c:	0600006f          	j	120bc <USB_IRQHandler>
   12060:	0000                	unimp
   12062:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:45
        .word   0
        j   TMR1_IRQHandler            /* TMR1 */
   12064:	05c0006f          	j	120c0 <TMR1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:46
        j   TMR2_IRQHandler            /* TMR2 */
   12068:	05c0006f          	j	120c4 <TMR2_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:47
        j   UART0_IRQHandler           /* UART0 */
   1206c:	05c0006f          	j	120c8 <UART0_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:48
        j   UART1_IRQHandler           /* UART1 */
   12070:	05c0006f          	j	120cc <UART1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:49
        j   RTC_IRQHandler             /* RTC */
   12074:	05c0006f          	j	120d0 <RTC_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:50
        j   ADC_IRQHandler             /* ADC */
   12078:	05c0006f          	j	120d4 <ADC_IRQHandler>
   1207c:	0000                	unimp
   1207e:	0000                	unimp
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:52
        .word   0
        j   PWMX_IRQHandler            /* PWMX */
   12080:	0580006f          	j	120d8 <PWMX_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:53
        j   TMR3_IRQHandler            /* TMR3 */
   12084:	0580006f          	j	120dc <TMR3_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:54
        j   UART2_IRQHandler           /* UART2 */
   12088:	0580006f          	j	120e0 <UART2_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:55
        j   UART3_IRQHandler           /* UART3 */
   1208c:	0580006f          	j	120e4 <UART3_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:56
        j   WDOG_BAT_IRQHandler        /* WDOG_BAT */
   12090:	0580006f          	j	120e8 <WDOG_BAT_IRQHandler>

00012094 <NMI_Handler>:
NMI_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:84
    .weak   TMR3_IRQHandler
    .weak   UART2_IRQHandler
    .weak   UART3_IRQHandler
    .weak   WDOG_BAT_IRQHandler

NMI_Handler:  1:  j 1b     /* 在被引用之时，数字标签通常需要带上一个字母“f”或者“b”的后缀，“f”表示下一行，“b”表示向上一行*/
   12094:	0000006f          	j	12094 <NMI_Handler>

00012098 <HardFault_Handler>:
HardFault_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:85
HardFault_Handler:  1:  j 1b
   12098:	0000006f          	j	12098 <HardFault_Handler>

0001209c <SysTick_Handler>:
SysTick_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:86
SysTick_Handler:  1:  j 1b
   1209c:	0000006f          	j	1209c <SysTick_Handler>

000120a0 <SW_Handler>:
SW_Handler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:87
SW_Handler:  1:  j 1b
   120a0:	0000006f          	j	120a0 <SW_Handler>

000120a4 <TMR0_IRQHandler>:
TMR0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:88
TMR0_IRQHandler:  1:  j 1b
   120a4:	0000006f          	j	120a4 <TMR0_IRQHandler>

000120a8 <GPIOA_IRQHandler>:
GPIOA_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:89
GPIOA_IRQHandler:  1:  j 1b
   120a8:	0000006f          	j	120a8 <GPIOA_IRQHandler>

000120ac <GPIOB_IRQHandler>:
GPIOB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:90
GPIOB_IRQHandler:  1:  j 1b
   120ac:	0000006f          	j	120ac <GPIOB_IRQHandler>

000120b0 <SPI0_IRQHandler>:
SPI0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:91
SPI0_IRQHandler:  1:  j 1b
   120b0:	0000006f          	j	120b0 <SPI0_IRQHandler>

000120b4 <BB_IRQHandler>:
BB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:92
BB_IRQHandler:  1:  j 1b
   120b4:	0000006f          	j	120b4 <BB_IRQHandler>

000120b8 <LLE_IRQHandler>:
LLE_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:93
LLE_IRQHandler:  1:  j 1b
   120b8:	0000006f          	j	120b8 <LLE_IRQHandler>

000120bc <USB_IRQHandler>:
USB_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:94
USB_IRQHandler:  1:  j 1b
   120bc:	0000006f          	j	120bc <USB_IRQHandler>

000120c0 <TMR1_IRQHandler>:
TMR1_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:95
TMR1_IRQHandler:  1:  j 1b
   120c0:	0000006f          	j	120c0 <TMR1_IRQHandler>

000120c4 <TMR2_IRQHandler>:
TMR2_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:96
TMR2_IRQHandler:  1:  j 1b
   120c4:	0000006f          	j	120c4 <TMR2_IRQHandler>

000120c8 <UART0_IRQHandler>:
UART0_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:97
UART0_IRQHandler:  1:  j 1b
   120c8:	0000006f          	j	120c8 <UART0_IRQHandler>

000120cc <UART1_IRQHandler>:
UART1_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:98
UART1_IRQHandler:  1:  j 1b
   120cc:	0000006f          	j	120cc <UART1_IRQHandler>

000120d0 <RTC_IRQHandler>:
RTC_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:99
RTC_IRQHandler:  1:  j 1b
   120d0:	0000006f          	j	120d0 <RTC_IRQHandler>

000120d4 <ADC_IRQHandler>:
ADC_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:100
ADC_IRQHandler:  1:  j 1b
   120d4:	0000006f          	j	120d4 <ADC_IRQHandler>

000120d8 <PWMX_IRQHandler>:
PWMX_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:101
PWMX_IRQHandler:  1:  j 1b
   120d8:	0000006f          	j	120d8 <PWMX_IRQHandler>

000120dc <TMR3_IRQHandler>:
TMR3_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:102
TMR3_IRQHandler:  1:  j 1b
   120dc:	0000006f          	j	120dc <TMR3_IRQHandler>

000120e0 <UART2_IRQHandler>:
UART2_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:103
UART2_IRQHandler:  1:  j 1b
   120e0:	0000006f          	j	120e0 <UART2_IRQHandler>

000120e4 <UART3_IRQHandler>:
UART3_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:104
UART3_IRQHandler:  1:  j 1b
   120e4:	0000006f          	j	120e4 <UART3_IRQHandler>

000120e8 <WDOG_BAT_IRQHandler>:
WDOG_BAT_IRQHandler():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:105
WDOG_BAT_IRQHandler:  1:  j 1b
   120e8:	0000006f          	j	120e8 <WDOG_BAT_IRQHandler>

Disassembly of section .text:

00013000 <handle_reset>:
handle_reset():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:113
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
   13000:	1fff3197          	auipc	gp,0x1fff3
   13004:	e8018193          	addi	gp,gp,-384 # 20005e80 <__global_pointer$>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:116
.option	pop 
1:
	la sp, _eusrstack 
   13008:	1fff5117          	auipc	sp,0x1fff5
   1300c:	ff810113          	addi	sp,sp,-8 # 20008000 <_eusrstack>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:120

/* Load highcode code  section from flash to RAM */
2:
    la a0, _highcode_lma
   13010:	00000517          	auipc	a0,0x0
   13014:	ff050513          	addi	a0,a0,-16 # 13000 <handle_reset>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:121
    la a1, _highcode_vma_start
   13018:	1fff2597          	auipc	a1,0x1fff2
   1301c:	5e858593          	addi	a1,a1,1512 # 20005600 <_highcode_vma_end>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:122
    la a2, _highcode_vma_end
   13020:	1fff2617          	auipc	a2,0x1fff2
   13024:	5e060613          	addi	a2,a2,1504 # 20005600 <_highcode_vma_end>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:123
    bgeu a1, a2, 2f
   13028:	00c5fc63          	bgeu	a1,a2,13040 <handle_reset+0x40>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:125
1:
    lw t0, (a0)
   1302c:	00052283          	lw	t0,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:126
    sw t0, (a1)
   13030:	0055a023          	sw	t0,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:127
    addi a0, a0, 4
   13034:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:128
    addi a1, a1, 4
   13038:	00458593          	addi	a1,a1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:129
    bltu a1, a2, 1b
   1303c:	fec5e8e3          	bltu	a1,a2,1302c <handle_reset+0x2c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:133

/* Load data section from flash to RAM */
2:
	la a0, _data_lma
   13040:	00003517          	auipc	a0,0x3
   13044:	21850513          	addi	a0,a0,536 # 16258 <_data_lma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:134
	la a1, _data_vma
   13048:	1fff2597          	auipc	a1,0x1fff2
   1304c:	63858593          	addi	a1,a1,1592 # 20005680 <_data_vma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:135
	la a2, _edata
   13050:	1fff2617          	auipc	a2,0x1fff2
   13054:	63060613          	addi	a2,a2,1584 # 20005680 <_data_vma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:136
	bgeu a1, a2, 2f
   13058:	00c5fc63          	bgeu	a1,a2,13070 <handle_reset+0x70>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:138
1:
	lw t0, (a0)
   1305c:	00052283          	lw	t0,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:139
	sw t0, (a1)
   13060:	0055a023          	sw	t0,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:140
	addi a0, a0, 4
   13064:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:141
	addi a1, a1, 4
   13068:	00458593          	addi	a1,a1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:142
	bltu a1, a2, 1b
   1306c:	fec5e8e3          	bltu	a1,a2,1305c <handle_reset+0x5c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:145
2:
	/* clear bss section */
	la a0, _sbss
   13070:	1fff2517          	auipc	a0,0x1fff2
   13074:	61050513          	addi	a0,a0,1552 # 20005680 <_data_vma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:146
	la a1, _ebss
   13078:	1fff2597          	auipc	a1,0x1fff2
   1307c:	60c58593          	addi	a1,a1,1548 # 20005684 <_ebss>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:147
	bgeu a0, a1, 2f
   13080:	00b57863          	bgeu	a0,a1,13090 <handle_reset+0x90>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:149
1:
	sw zero, (a0)
   13084:	00052023          	sw	zero,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:150
	addi a0, a0, 4
   13088:	00450513          	addi	a0,a0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:151
	bltu a0, a1, 1b
   1308c:	feb56ce3          	bltu	a0,a1,13084 <handle_reset+0x84>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:153
2:
    li t0, 0x1880
   13090:	000022b7          	lui	t0,0x2
   13094:	88028293          	addi	t0,t0,-1920 # 1880 <MCU_SECTORSIZE+0x880>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:154
    csrs mstatus, t0
   13098:	3002a073          	csrs	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:156

    jal  Vectors_Init	    /* 跳转并链接到Vectors_Init函数，Vectors_Init：User对BIOS中断向量表的部分继承,构件库函数指针初始化 */		
   1309c:	7c6000ef          	jal	ra,13862 <Vectors_Init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:157
	la t0, _vector_base
   130a0:	fffff297          	auipc	t0,0xfffff
   130a4:	f6428293          	addi	t0,t0,-156 # 12004 <_einit>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:158
    ori t0, t0, 1
   130a8:	0012e293          	ori	t0,t0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:159
	csrw mtvec, t0
   130ac:	30529073          	csrw	mtvec,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:160
	la t0, main
   130b0:	00000297          	auipc	t0,0x0
   130b4:	0b828293          	addi	t0,t0,184 # 13168 <main>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:161
	csrw mepc, t0
   130b8:	34129073          	csrw	mepc,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcs/startup_CH573.S:168
	/* enable vector relocation
	li t0, 0xE000ED14
	li t1, 1
	sw t1, 0(t0)*/
	
	mret
   130bc:	30200073          	mret

000130c0 <memset>:
memset():
   130c0:	433d                	li	t1,15
   130c2:	872a                	mv	a4,a0
   130c4:	02c37363          	bgeu	t1,a2,130ea <memset+0x2a>
   130c8:	00f77793          	andi	a5,a4,15
   130cc:	efbd                	bnez	a5,1314a <memset+0x8a>
   130ce:	e5ad                	bnez	a1,13138 <memset+0x78>
   130d0:	ff067693          	andi	a3,a2,-16
   130d4:	8a3d                	andi	a2,a2,15
   130d6:	96ba                	add	a3,a3,a4
   130d8:	c30c                	sw	a1,0(a4)
   130da:	c34c                	sw	a1,4(a4)
   130dc:	c70c                	sw	a1,8(a4)
   130de:	c74c                	sw	a1,12(a4)
   130e0:	0741                	addi	a4,a4,16
   130e2:	fed76be3          	bltu	a4,a3,130d8 <memset+0x18>
   130e6:	e211                	bnez	a2,130ea <memset+0x2a>
   130e8:	8082                	ret
   130ea:	40c306b3          	sub	a3,t1,a2
   130ee:	068a                	slli	a3,a3,0x2
   130f0:	00000297          	auipc	t0,0x0
   130f4:	9696                	add	a3,a3,t0
   130f6:	00a68067          	jr	10(a3)
   130fa:	00b70723          	sb	a1,14(a4)
   130fe:	00b706a3          	sb	a1,13(a4)
   13102:	00b70623          	sb	a1,12(a4)
   13106:	00b705a3          	sb	a1,11(a4)
   1310a:	00b70523          	sb	a1,10(a4)
   1310e:	00b704a3          	sb	a1,9(a4)
   13112:	00b70423          	sb	a1,8(a4)
   13116:	00b703a3          	sb	a1,7(a4)
   1311a:	00b70323          	sb	a1,6(a4)
   1311e:	00b702a3          	sb	a1,5(a4)
   13122:	00b70223          	sb	a1,4(a4)
   13126:	00b701a3          	sb	a1,3(a4)
   1312a:	00b70123          	sb	a1,2(a4)
   1312e:	00b700a3          	sb	a1,1(a4)
   13132:	00b70023          	sb	a1,0(a4)
   13136:	8082                	ret
   13138:	0ff5f593          	andi	a1,a1,255
   1313c:	00859693          	slli	a3,a1,0x8
   13140:	8dd5                	or	a1,a1,a3
   13142:	01059693          	slli	a3,a1,0x10
   13146:	8dd5                	or	a1,a1,a3
   13148:	b761                	j	130d0 <memset+0x10>
   1314a:	00279693          	slli	a3,a5,0x2
   1314e:	00000297          	auipc	t0,0x0
   13152:	9696                	add	a3,a3,t0
   13154:	8286                	mv	t0,ra
   13156:	fa8680e7          	jalr	-88(a3)
   1315a:	8096                	mv	ra,t0
   1315c:	17c1                	addi	a5,a5,-16
   1315e:	8f1d                	sub	a4,a4,a5
   13160:	963e                	add	a2,a2,a5
   13162:	f8c374e3          	bgeu	t1,a2,130ea <memset+0x2a>
   13166:	b7a5                	j	130ce <memset+0xe>

00013168 <main>:
main():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:17
//main.c使用的内部函数声明处---------------------------------------------

//----------------------------------------------------------------------
//主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程，参见书稿）
int main(void)
{
   13168:	7119                	addi	sp,sp,-128
   1316a:	de86                	sw	ra,124(sp)
   1316c:	dca2                	sw	s0,120(sp)
   1316e:	daa6                	sw	s1,116(sp)
   13170:	d8ca                	sw	s2,112(sp)
   13172:	d6ce                	sw	s3,108(sp)
   13174:	d4d2                	sw	s4,104(sp)
   13176:	d2d6                	sw	s5,100(sp)
   13178:	d0da                	sw	s6,96(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:18
	printf("------------------------------------------------------\n");
   1317a:	00003517          	auipc	a0,0x3
   1317e:	b6e50513          	addi	a0,a0,-1170 # 15ce8 <strlen+0x50>
   13182:	00001097          	auipc	ra,0x1
   13186:	32e080e7          	jalr	814(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:19
    printf("★金葫芦提示★                                         \n");
   1318a:	00003517          	auipc	a0,0x3
   1318e:	b9650513          	addi	a0,a0,-1130 # 15d20 <strlen+0x88>
   13192:	00001097          	auipc	ra,0x1
   13196:	31e080e7          	jalr	798(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:20
    printf("【中文名称】GEC的NOS编程框架（Flash扇区读写数据测试)     \n");
   1319a:	00003517          	auipc	a0,0x3
   1319e:	bc250513          	addi	a0,a0,-1086 # 15d5c <strlen+0xc4>
   131a2:	00001097          	auipc	ra,0x1
   131a6:	30e080e7          	jalr	782(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:21
	printf("【程序功能】                                           \n");
   131aa:	00003517          	auipc	a0,0x3
   131ae:	bee50513          	addi	a0,a0,-1042 # 15d98 <strlen+0x100>
   131b2:	00001097          	auipc	ra,0x1
   131b6:	2fe080e7          	jalr	766(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:22
	printf("     ① 蓝色闪烁；                                      \n");
   131ba:	00003517          	auipc	a0,0x3
   131be:	c1a50513          	addi	a0,a0,-998 # 15dd4 <strlen+0x13c>
   131c2:	00001097          	auipc	ra,0x1
   131c6:	2ee080e7          	jalr	750(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:23
	printf("     ② 向FLASH中写入数据，并打印查看                     \n");
   131ca:	00003517          	auipc	a0,0x3
   131ce:	c4650513          	addi	a0,a0,-954 # 15e10 <strlen+0x178>
   131d2:	00001097          	auipc	ra,0x1
   131d6:	2de080e7          	jalr	734(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:24
    printf("【测试过程】                                           \n");
   131da:	00003517          	auipc	a0,0x3
   131de:	c7250513          	addi	a0,a0,-910 # 15e4c <strlen+0x1b4>
   131e2:	00001097          	auipc	ra,0x1
   131e6:	2ce080e7          	jalr	718(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:25
	printf("     ① 向某扇区中写入数据，用printf打印查看              \n");
   131ea:	00003517          	auipc	a0,0x3
   131ee:	c9e50513          	addi	a0,a0,-866 # 15e88 <strlen+0x1f0>
   131f2:	00001097          	auipc	ra,0x1
   131f6:	2be080e7          	jalr	702(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:26
	printf("     ② 向绝对地址处开始写入数据表，用printf查看          \n");
   131fa:	00003517          	auipc	a0,0x3
   131fe:	cca50513          	addi	a0,a0,-822 # 15ec4 <strlen+0x22c>
   13202:	00001097          	auipc	ra,0x1
   13206:	2ae080e7          	jalr	686(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:27
    printf("------------------------------------------------------\n\0");  
   1320a:	00003517          	auipc	a0,0x3
   1320e:	aa250513          	addi	a0,a0,-1374 # 15cac <strlen+0x14>
   13212:	00001097          	auipc	ra,0x1
   13216:	29e080e7          	jalr	670(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:37
    uint8_t  mFlag;           //灯的状态标志
    uint32_t mLightCount;     //灯的状态切换次数
	uint8_t mK1[32];	  //按照逻辑读方式从指定flash区域中读取的数据
	uint8_t mK2[32];      //按照物理读方式从指定flash区域中读取的数据
    
    uint8_t flash_test[32]={'A','B','C','D','E','F','G',' ','t',
   1321a:	00011f23          	sh	zero,30(sp)
   1321e:	04100793          	li	a5,65
   13222:	00f10023          	sb	a5,0(sp)
   13226:	04200793          	li	a5,66
   1322a:	00f100a3          	sb	a5,1(sp)
   1322e:	04300793          	li	a5,67
   13232:	00f10123          	sb	a5,2(sp)
   13236:	04400793          	li	a5,68
   1323a:	00f101a3          	sb	a5,3(sp)
   1323e:	04500793          	li	a5,69
   13242:	00f10223          	sb	a5,4(sp)
   13246:	04600793          	li	a5,70
   1324a:	00f102a3          	sb	a5,5(sp)
   1324e:	04700793          	li	a5,71
   13252:	00f10323          	sb	a5,6(sp)
   13256:	02000713          	li	a4,32
   1325a:	00e103a3          	sb	a4,7(sp)
   1325e:	07400693          	li	a3,116
   13262:	00d10423          	sb	a3,8(sp)
   13266:	06f00793          	li	a5,111
   1326a:	00f104a3          	sb	a5,9(sp)
   1326e:	00e10523          	sb	a4,10(sp)
   13272:	05300613          	li	a2,83
   13276:	00c105a3          	sb	a2,11(sp)
   1327a:	00f10623          	sb	a5,12(sp)
   1327e:	00f106a3          	sb	a5,13(sp)
   13282:	06300613          	li	a2,99
   13286:	00c10723          	sb	a2,14(sp)
   1328a:	06800613          	li	a2,104
   1328e:	00c107a3          	sb	a2,15(sp)
   13292:	00f10823          	sb	a5,16(sp)
   13296:	07700793          	li	a5,119
   1329a:	00f108a3          	sb	a5,17(sp)
   1329e:	00e10923          	sb	a4,18(sp)
   132a2:	05500793          	li	a5,85
   132a6:	00f109a3          	sb	a5,19(sp)
   132aa:	06e00793          	li	a5,110
   132ae:	00f10a23          	sb	a5,20(sp)
   132b2:	06900793          	li	a5,105
   132b6:	00f10aa3          	sb	a5,21(sp)
   132ba:	07600713          	li	a4,118
   132be:	00e10b23          	sb	a4,22(sp)
   132c2:	06500713          	li	a4,101
   132c6:	00e10ba3          	sb	a4,23(sp)
   132ca:	07200713          	li	a4,114
   132ce:	00e10c23          	sb	a4,24(sp)
   132d2:	07300713          	li	a4,115
   132d6:	00e10ca3          	sb	a4,25(sp)
   132da:	00f10d23          	sb	a5,26(sp)
   132de:	00d10da3          	sb	a3,27(sp)
   132e2:	07900793          	li	a5,121
   132e6:	00f10e23          	sb	a5,28(sp)
   132ea:	02100793          	li	a5,33
   132ee:	00f10ea3          	sb	a5,29(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:43
                            'o',' ','S','o','o','c','h','o','w',' ',
                            'U','n','i','v','e','r','s','i','t','y','!'};
	uint8_t result;    //判断扇区是否为空标识

	//（1.2）【不变】关总中断
	DISABLE_INTERRUPTS;
   132f2:	42a1                	li	t0,8
   132f4:	3002b073          	csrc	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:54

    //（1.4）【根据includes.h文件中声明的全局变量】给全局变量赋初值
    
    //（1.5）【根据所用到的外部硬件设备】进行用户外设模块初始化
    //（1.5.1）GPIO 引脚、 输入/输出、  初始状态
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_ON);
   132f8:	4601                	li	a2,0
   132fa:	4585                	li	a1,1
   132fc:	10e00513          	li	a0,270
   13300:	00000097          	auipc	ra,0x0
   13304:	42c080e7          	jalr	1068(ra) # 1372c <gpio_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:56
	//(1.5.2)FLASH初始化
	flash_init();
   13308:	00000097          	auipc	ra,0x0
   1330c:	144080e7          	jalr	324(ra) # 1344c <flash_init>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:61
	
    //（1.6）【根据所使用的硬件模块中断】使能模块中断

    //（1.7）【不变】开总中断
    ENABLE_INTERRUPTS;
   13310:	42a1                	li	t0,8
   13312:	3002a073          	csrs	mstatus,t0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:65
    
    //【1】启动部分（结尾）================================================
    //擦除第TEST_SECT扇区
	flash_erase(TEST_SECT);   
   13316:	06400513          	li	a0,100
   1331a:	00000097          	auipc	ra,0x0
   1331e:	152080e7          	jalr	338(ra) # 1346c <flash_erase>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:67
    //向TEST_SECT扇区第0偏移地址开始写32个字节数据
    flash_write(TEST_SECT,0,32,(uint8_t *) "Welcome to Soochow University!");
   13322:	00003697          	auipc	a3,0x3
   13326:	bde68693          	addi	a3,a3,-1058 # 15f00 <strlen+0x268>
   1332a:	02000613          	li	a2,32
   1332e:	4581                	li	a1,0
   13330:	06400513          	li	a0,100
   13334:	00000097          	auipc	ra,0x0
   13338:	28e080e7          	jalr	654(ra) # 135c2 <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:68
	flash_read_logic(mK1,TEST_SECT,0,32); //从该扇区读取32个字节到mK1中
   1333c:	02000693          	li	a3,32
   13340:	4601                	li	a2,0
   13342:	06400593          	li	a1,100
   13346:	0088                	addi	a0,sp,64
   13348:	00000097          	auipc	ra,0x0
   1334c:	14a080e7          	jalr	330(ra) # 13492 <flash_read_logic>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:69
	printf("（1）逻辑读方式读取第%d扇区的32字节的内容:  %s\n",TEST_SECT,mK1);
   13350:	0090                	addi	a2,sp,64
   13352:	06400593          	li	a1,100
   13356:	00003517          	auipc	a0,0x3
   1335a:	bca50513          	addi	a0,a0,-1078 # 15f20 <strlen+0x288>
   1335e:	00001097          	auipc	ra,0x1
   13362:	152080e7          	jalr	338(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:72
	
	//擦除第TEST_SECT扇区
	flash_erase(TEST_SECT);
   13366:	06400513          	li	a0,100
   1336a:	00000097          	auipc	ra,0x0
   1336e:	102080e7          	jalr	258(ra) # 1346c <flash_erase>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:74
	//向TEST_SECT扇区写32个字节数据，其起始地址TEST_ADDRESS（见user.h）
	flash_write_physical(TEST_ADDR,32,flash_test);
   13372:	860a                	mv	a2,sp
   13374:	02000593          	li	a1,32
   13378:	00064537          	lui	a0,0x64
   1337c:	00000097          	auipc	ra,0x0
   13380:	312080e7          	jalr	786(ra) # 1368e <flash_write_physical>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:75
	flash_read_physical(mK2,TEST_ADDR,32);   //从该扇区读取32个字节到mK2中
   13384:	02000613          	li	a2,32
   13388:	000645b7          	lui	a1,0x64
   1338c:	1008                	addi	a0,sp,32
   1338e:	00000097          	auipc	ra,0x0
   13392:	12a080e7          	jalr	298(ra) # 134b8 <flash_read_physical>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:76
	printf("（2）擦除重写后物理方式读第%d扇区的32字节的内容:  %s\n",TEST_SECT,mK2);
   13396:	1010                	addi	a2,sp,32
   13398:	06400593          	li	a1,100
   1339c:	00003517          	auipc	a0,0x3
   133a0:	bb450513          	addi	a0,a0,-1100 # 15f50 <strlen+0x2b8>
   133a4:	00001097          	auipc	ra,0x1
   133a8:	10c080e7          	jalr	268(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:78

	result = flash_isempty(TEST_SECT,MCU_SECTORSIZE); // 判断扇区是否为空
   133ac:	6585                	lui	a1,0x1
   133ae:	06400513          	li	a0,100
   133b2:	00000097          	auipc	ra,0x0
   133b6:	126080e7          	jalr	294(ra) # 134d8 <flash_isempty>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:79
	printf("（3）判别第%d扇区是否为空，1表示空，0表示不空，结果是：%d\n",TEST_SECT,result);
   133ba:	862a                	mv	a2,a0
   133bc:	06400593          	li	a1,100
   133c0:	00003517          	auipc	a0,0x3
   133c4:	bc850513          	addi	a0,a0,-1080 # 15f88 <strlen+0x2f0>
   133c8:	00001097          	auipc	ra,0x1
   133cc:	0e8080e7          	jalr	232(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:48
    mLightCount=0;       //灯的闪烁次数
   133d0:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:47
    mFlag='A'; 
   133d2:	04100713          	li	a4,65
   133d6:	001e8937          	lui	s2,0x1e8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:92
       if (mMainLoopCount <= MAINLOOP_COUNT) continue; //宏常数在user.h中定义
       //（2.3）达到主循环次数设定值，执行下列语句，进行灯的亮暗处理
       //（2.3.1）清除循环次数变量
       mMainLoopCount=0; 
       //（2.3.2）根据灯的状态标志mFlag是否'L'进行操作
       if (mFlag=='L')  //若为'L'，置灯亮，灯闪烁次数+1，改变灯状态标志
   133da:	04c00413          	li	s0,76
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:103
           mFlag='A';   //改变灯状态标志为'A'，下一循环使用
        }
        else            //若不为'L'（即为'A')
        {
           gpio_set(LIGHT_BLUE,LIGHT_OFF);
           printf(" LIGHT_BLUE:OFF  \n");  
   133de:	00003997          	auipc	s3,0x3
   133e2:	c1a98993          	addi	s3,s3,-998 # 15ff8 <strlen+0x360>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:95
           printf(" LIGHT_BLUE:ON   \n");      //输出提示
   133e6:	00003b17          	auipc	s6,0x3
   133ea:	bdeb0b13          	addi	s6,s6,-1058 # 15fc4 <strlen+0x32c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:97
           printf(" 灯闪烁次数mLightCount = %d\n\n",mLightCount);
   133ee:	00003a97          	auipc	s5,0x3
   133f2:	beaa8a93          	addi	s5,s5,-1046 # 15fd8 <strlen+0x340>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:98
           mFlag='A';   //改变灯状态标志为'A'，下一循环使用
   133f6:	04100a13          	li	s4,65
   133fa:	a831                	j	13416 <main+0x2ae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:102
           gpio_set(LIGHT_BLUE,LIGHT_OFF);
   133fc:	4585                	li	a1,1
   133fe:	10e00513          	li	a0,270
   13402:	00000097          	auipc	ra,0x0
   13406:	2b8080e7          	jalr	696(ra) # 136ba <gpio_set>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:103
           printf(" LIGHT_BLUE:OFF  \n");  
   1340a:	854e                	mv	a0,s3
   1340c:	00001097          	auipc	ra,0x1
   13410:	0a4080e7          	jalr	164(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:104
           mFlag='L';            
   13414:	8722                	mv	a4,s0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:47
    mFlag='A'; 
   13416:	48190793          	addi	a5,s2,1153 # 1e8481 <_data_lma+0x1d2229>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:87
       if (mMainLoopCount <= MAINLOOP_COUNT) continue; //宏常数在user.h中定义
   1341a:	17fd                	addi	a5,a5,-1
   1341c:	fffd                	bnez	a5,1341a <main+0x2b2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:92
       if (mFlag=='L')  //若为'L'，置灯亮，灯闪烁次数+1，改变灯状态标志
   1341e:	fc871fe3          	bne	a4,s0,133fc <main+0x294>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:94
           gpio_set(LIGHT_BLUE,LIGHT_ON);      //置灯亮
   13422:	4581                	li	a1,0
   13424:	10e00513          	li	a0,270
   13428:	00000097          	auipc	ra,0x0
   1342c:	292080e7          	jalr	658(ra) # 136ba <gpio_set>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:95
           printf(" LIGHT_BLUE:ON   \n");      //输出提示
   13430:	855a                	mv	a0,s6
   13432:	00001097          	auipc	ra,0x1
   13436:	07e080e7          	jalr	126(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:96
           mLightCount++;                       //灯闪烁次数+1
   1343a:	0485                	addi	s1,s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:97
           printf(" 灯闪烁次数mLightCount = %d\n\n",mLightCount);
   1343c:	85a6                	mv	a1,s1
   1343e:	8556                	mv	a0,s5
   13440:	00001097          	auipc	ra,0x1
   13444:	070080e7          	jalr	112(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/main.c:98
           mFlag='A';   //改变灯状态标志为'A'，下一循环使用
   13448:	8752                	mv	a4,s4
   1344a:	b7f1                	j	13416 <main+0x2ae>

0001344c <flash_init>:
flash_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:42
//函数返回：无
//参数说明：无
//功能概要：初始化flash模块
//======================================================================
void flash_init(void)
{
   1344c:	1141                	addi	sp,sp,-16
   1344e:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:43
    FLASH_ROM_LOCK(0);     //Flash解锁
   13450:	1fff2797          	auipc	a5,0x1fff2
   13454:	23078793          	addi	a5,a5,560 # 20005680 <_data_vma>
   13458:	439c                	lw	a5,0(a5)
   1345a:	57fc                	lw	a5,108(a5)
   1345c:	4681                	li	a3,0
   1345e:	4601                	li	a2,0
   13460:	4581                	li	a1,0
   13462:	4521                	li	a0,8
   13464:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:44
}
   13466:	40b2                	lw	ra,12(sp)
   13468:	0141                	addi	sp,sp,16
   1346a:	8082                	ret

0001346c <flash_erase>:
flash_erase():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:53
//函数返回：函数执行执行状态：0=正常；1=异常。
//参数说明：sect：目标扇区号（范围取决于实际芯片，例如 CH573:0~119,每扇区4KB）
//功能概要：擦除flash存储器的sect扇区
//======================================================================
uint8_t flash_erase(uint16_t sect)
{
   1346c:	1141                	addi	sp,sp,-16
   1346e:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:57
    uint32_t StartAddr;
    uint8_t flag;
    StartAddr = (uint32_t)(sect * FLASH_SECT_SIZE + FLASH_START_ADDRESS); //目标扇区的起始地址
    flag = FLASH_ROM_ERASE(StartAddr,4096);						//擦除目标扇区
   13470:	1fff2797          	auipc	a5,0x1fff2
   13474:	21078793          	addi	a5,a5,528 # 20005680 <_data_vma>
   13478:	439c                	lw	a5,0(a5)
   1347a:	57fc                	lw	a5,108(a5)
   1347c:	6685                	lui	a3,0x1
   1347e:	4601                	li	a2,0
   13480:	00c51593          	slli	a1,a0,0xc
   13484:	4505                	li	a0,1
   13486:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:59
    return flag;
}
   13488:	0ff57513          	andi	a0,a0,255
   1348c:	40b2                	lw	ra,12(sp)
   1348e:	0141                	addi	sp,sp,16
   13490:	8082                	ret

00013492 <flash_read_logic>:
flash_read_logic():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:136
//功能概要：读取flash存储器的sect扇区的 offset处开始的N字节，到RAM区dest处
//编程参考：暂无
//=======================================================================
void flash_read_logic(uint8_t* dest,uint16_t sect,uint16_t offset,uint32_t N)
{
    uint32_t i, Length = ( N + 3 ) >> 2;
   13492:	068d                	addi	a3,a3,3
   13494:	8289                	srli	a3,a3,0x2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:138
    // pCode：flash存储器的sect扇区的offset处地址，pBuf：读出数据存放地址
    uint32_t* pCode = ( uint32_t* ) (sect * FLASH_SECT_SIZE + offset + FLASH_START_ADDRESS);
   13496:	05b2                	slli	a1,a1,0xc
   13498:	962e                	add	a2,a2,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:141
    uint32_t* pBuf = ( uint32_t* ) dest;
    //数据拷贝
    for ( i = 0; i < Length; i++ )
   1349a:	ce91                	beqz	a3,134b6 <flash_read_logic+0x24>
   1349c:	068a                	slli	a3,a3,0x2
   1349e:	96aa                	add	a3,a3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:139
    uint32_t* pBuf = ( uint32_t* ) dest;
   134a0:	87aa                	mv	a5,a0
   134a2:	40a60533          	sub	a0,a2,a0
   134a6:	00a78733          	add	a4,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:143 (discriminator 3)
    {
        *pBuf++ = *pCode++;
   134aa:	0791                	addi	a5,a5,4
   134ac:	4318                	lw	a4,0(a4)
   134ae:	fee7ae23          	sw	a4,-4(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:141 (discriminator 3)
    for ( i = 0; i < Length; i++ )
   134b2:	fed79ae3          	bne	a5,a3,134a6 <flash_read_logic+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:145
    }
}
   134b6:	8082                	ret

000134b8 <flash_read_physical>:
flash_read_physical():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:157
//         N：读字节数目
//功能概要：读取flash指定地址的内容
//======================================================================
void flash_read_physical(uint8_t *dest,uint32_t addr,uint16_t N)
{
    uint32_t i, Length = ( N + 3 ) >> 2;
   134b8:	060d                	addi	a2,a2,3
   134ba:	8609                	srai	a2,a2,0x2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:161
    uint32_t* pCode = ( uint32_t* ) addr;
    uint32_t* pBuf = ( PUINT32 ) dest;

    for ( i = 0; i < Length; i++ )
   134bc:	ce09                	beqz	a2,134d6 <flash_read_physical+0x1e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:159
    uint32_t* pBuf = ( PUINT32 ) dest;
   134be:	87aa                	mv	a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:161
    for ( i = 0; i < Length; i++ )
   134c0:	4701                	li	a4,0
   134c2:	8d89                	sub	a1,a1,a0
   134c4:	00b786b3          	add	a3,a5,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:163 (discriminator 3)
    {
      *pBuf++ = *pCode++;
   134c8:	0791                	addi	a5,a5,4
   134ca:	4294                	lw	a3,0(a3)
   134cc:	fed7ae23          	sw	a3,-4(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:161 (discriminator 3)
    for ( i = 0; i < Length; i++ )
   134d0:	0705                	addi	a4,a4,1
   134d2:	fee619e3          	bne	a2,a4,134c4 <flash_read_physical+0xc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:165
    }
}
   134d6:	8082                	ret

000134d8 <flash_isempty>:
flash_isempty():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:177
//          N:所需判断的区域大小（该扇区的前N个字节，N不超过4096）
//功能概要：flash判空操作
//【注】：CH573的flash空值与常规芯片的0xff不同，其空值为0xf5f9bda9
//======================================================================
uint8_t flash_isempty(uint16_t sect,uint16_t N)
{
   134d8:	1141                	addi	sp,sp,-16
   134da:	c606                	sw	ra,12(sp)
   134dc:	c422                	sw	s0,8(sp)
   134de:	c226                	sw	s1,4(sp)
   134e0:	c04a                	sw	s2,0(sp)
   134e2:	0800                	addi	s0,sp,16
   134e4:	84ae                	mv	s1,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:180
    //（1）定义变量flag-操作成功标志，dest[]-暂存数据，src目标地址
    uint16_t i,flag;
    uint8_t dest[N];
   134e6:	00f58793          	addi	a5,a1,15 # 100f <MCU_SECTORSIZE+0xf>
   134ea:	8391                	srli	a5,a5,0x4
   134ec:	0792                	slli	a5,a5,0x4
   134ee:	40f10133          	sub	sp,sp,a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:185
    uint8_t *src;
    //（2）变量赋值并读取数据
    flag = 1;
    src = (uint8_t *)(FLASH_START_ADDRESS + sect*FLASH_SECT_SIZE);
    memcpy(dest,src,N);
   134f2:	862e                	mv	a2,a1
   134f4:	00c51593          	slli	a1,a0,0xc
   134f8:	850a                	mv	a0,sp
   134fa:	00002097          	auipc	ra,0x2
   134fe:	6e8080e7          	jalr	1768(ra) # 15be2 <memcpy>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:187
    //（3）判断区域内数据是否为空
    for(i = 0; i < N; i++)    //遍历区域内字节
   13502:	c8c1                	beqz	s1,13592 <flash_isempty+0xba>
   13504:	890a                	mv	s2,sp
   13506:	4701                	li	a4,0
   13508:	4505                	li	a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:195
        {
        	case 0:
        		if(dest[i]!=0xa9) flag = 0;
        		break;
        	case 1:
        		if(dest[i]!=0xbd) flag = 0;
   1350a:	0bd00e13          	li	t3,189
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:192
        		if(dest[i]!=0xa9) flag = 0;
   1350e:	0a900313          	li	t1,169
   13512:	4589                	li	a1,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:198
        		break;
        	case 2:
        		if(dest[i]!=0xf9) flag = 0;
   13514:	0f900893          	li	a7,249
   13518:	460d                	li	a2,3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:201
        		break;
        	case 3:
        		if(dest[i]!=0xf5) flag = 0;
   1351a:	0f500813          	li	a6,245
   1351e:	a829                	j	13538 <flash_isempty+0x60>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:192
        		if(dest[i]!=0xa9) flag = 0;
   13520:	00e907b3          	add	a5,s2,a4
   13524:	0007c783          	lbu	a5,0(a5)
   13528:	06679763          	bne	a5,t1,13596 <flash_isempty+0xbe>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:206 (discriminator 2)
        		break;
        	default:
        		break;
        }
        if(flag == 0)
   1352c:	0705                	addi	a4,a4,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:187 (discriminator 2)
    for(i = 0; i < N; i++)    //遍历区域内字节
   1352e:	01071793          	slli	a5,a4,0x10
   13532:	83c1                	srli	a5,a5,0x10
   13534:	0497f663          	bgeu	a5,s1,13580 <flash_isempty+0xa8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:189
        switch(i%4)
   13538:	00377793          	andi	a5,a4,3
   1353c:	02a78263          	beq	a5,a0,13560 <flash_isempty+0x88>
   13540:	01079693          	slli	a3,a5,0x10
   13544:	86c1                	srai	a3,a3,0x10
   13546:	dee9                	beqz	a3,13520 <flash_isempty+0x48>
   13548:	02b78463          	beq	a5,a1,13570 <flash_isempty+0x98>
   1354c:	fec790e3          	bne	a5,a2,1352c <flash_isempty+0x54>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:201
        		if(dest[i]!=0xf5) flag = 0;
   13550:	00e907b3          	add	a5,s2,a4
   13554:	0007c783          	lbu	a5,0(a5)
   13558:	fd078ae3          	beq	a5,a6,1352c <flash_isempty+0x54>
   1355c:	4501                	li	a0,0
   1355e:	a015                	j	13582 <flash_isempty+0xaa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:195
        		if(dest[i]!=0xbd) flag = 0;
   13560:	00e907b3          	add	a5,s2,a4
   13564:	0007c783          	lbu	a5,0(a5)
   13568:	fdc782e3          	beq	a5,t3,1352c <flash_isempty+0x54>
   1356c:	4501                	li	a0,0
   1356e:	a811                	j	13582 <flash_isempty+0xaa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:198
        		if(dest[i]!=0xf9) flag = 0;
   13570:	00e907b3          	add	a5,s2,a4
   13574:	0007c783          	lbu	a5,0(a5)
   13578:	fb178ae3          	beq	a5,a7,1352c <flash_isempty+0x54>
   1357c:	4501                	li	a0,0
   1357e:	a011                	j	13582 <flash_isempty+0xaa>
   13580:	4505                	li	a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:210
        	break;
    }
    return flag;
}
   13582:	ff040113          	addi	sp,s0,-16
   13586:	40b2                	lw	ra,12(sp)
   13588:	4422                	lw	s0,8(sp)
   1358a:	4492                	lw	s1,4(sp)
   1358c:	4902                	lw	s2,0(sp)
   1358e:	0141                	addi	sp,sp,16
   13590:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:187
    for(i = 0; i < N; i++)    //遍历区域内字节
   13592:	4505                	li	a0,1
   13594:	b7fd                	j	13582 <flash_isempty+0xaa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:192
        		if(dest[i]!=0xa9) flag = 0;
   13596:	4501                	li	a0,0
   13598:	b7ed                	j	13582 <flash_isempty+0xaa>

0001359a <flash_Best>:
flash_Best():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:243
//            buf:待写入数据的首地址
//功能概要：首位地址都对齐的情况下的数据写入
//编程参考：暂无
//======================================================================
uint8_t flash_Best(uint16_t sect,uint16_t offset,uint16_t N,uint8_t *buf)
{
   1359a:	1141                	addi	sp,sp,-16
   1359c:	c606                	sw	ra,12(sp)
   1359e:	8736                	mv	a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:245
    uint32_t addr;
    addr = (uint32_t)(FLASH_START_ADDRESS+sect*FLASH_SECT_SIZE+offset);
   135a0:	0532                	slli	a0,a0,0xc
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:246
    uint8_t flag=FLASH_ROM_WRITE(addr,buf,N);
   135a2:	1fff2797          	auipc	a5,0x1fff2
   135a6:	0de78793          	addi	a5,a5,222 # 20005680 <_data_vma>
   135aa:	439c                	lw	a5,0(a5)
   135ac:	57fc                	lw	a5,108(a5)
   135ae:	86b2                	mv	a3,a2
   135b0:	863a                	mv	a2,a4
   135b2:	95aa                	add	a1,a1,a0
   135b4:	4509                	li	a0,2
   135b6:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:248
    return flag;
}
   135b8:	0ff57513          	andi	a0,a0,255
   135bc:	40b2                	lw	ra,12(sp)
   135be:	0141                	addi	sp,sp,16
   135c0:	8082                	ret

000135c2 <flash_write>:
flash_write():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:72
{
   135c2:	7179                	addi	sp,sp,-48
   135c4:	d606                	sw	ra,44(sp)
   135c6:	d422                	sw	s0,40(sp)
   135c8:	d226                	sw	s1,36(sp)
   135ca:	d04a                	sw	s2,32(sp)
   135cc:	ce4e                	sw	s3,28(sp)
   135ce:	737d                	lui	t1,0xfffff
   135d0:	911a                	add	sp,sp,t1
   135d2:	89aa                	mv	s3,a0
   135d4:	892e                	mv	s2,a1
   135d6:	84b2                	mv	s1,a2
   135d8:	8436                	mv	s0,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:78
    if(offset+N>FLASH_SECT_SIZE)     
   135da:	00b60733          	add	a4,a2,a1
   135de:	6785                	lui	a5,0x1
   135e0:	04e7d663          	bge	a5,a4,1362c <flash_write+0x6a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:81
        flash_write(sect,offset,FLASH_SECT_SIZE-offset,buff);
   135e4:	6605                	lui	a2,0x1
   135e6:	8e0d                	sub	a2,a2,a1
   135e8:	0642                	slli	a2,a2,0x10
   135ea:	8241                	srli	a2,a2,0x10
   135ec:	00000097          	auipc	ra,0x0
   135f0:	fd6080e7          	jalr	-42(ra) # 135c2 <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:83
        flash_write(sect+1,0,N-(FLASH_SECT_SIZE-offset),buff+(FLASH_SECT_SIZE-offset));
   135f4:	6685                	lui	a3,0x1
   135f6:	412686b3          	sub	a3,a3,s2
   135fa:	767d                	lui	a2,0xfffff
   135fc:	9626                	add	a2,a2,s1
   135fe:	964a                	add	a2,a2,s2
   13600:	00198513          	addi	a0,s3,1
   13604:	96a2                	add	a3,a3,s0
   13606:	0642                	slli	a2,a2,0x10
   13608:	8241                	srli	a2,a2,0x10
   1360a:	4581                	li	a1,0
   1360c:	0542                	slli	a0,a0,0x10
   1360e:	8141                	srli	a0,a0,0x10
   13610:	00000097          	auipc	ra,0x0
   13614:	fb2080e7          	jalr	-78(ra) # 135c2 <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:97
}
   13618:	4501                	li	a0,0
   1361a:	6305                	lui	t1,0x1
   1361c:	911a                	add	sp,sp,t1
   1361e:	50b2                	lw	ra,44(sp)
   13620:	5422                	lw	s0,40(sp)
   13622:	5492                	lw	s1,36(sp)
   13624:	5902                	lw	s2,32(sp)
   13626:	49f2                	lw	s3,28(sp)
   13628:	6145                	addi	sp,sp,48
   1362a:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:89
         flash_read_logic(data,sect,0,FLASH_SECT_SIZE); //将当前扇区的全部值读入数组中
   1362c:	6685                	lui	a3,0x1
   1362e:	4601                	li	a2,0
   13630:	85aa                	mv	a1,a0
   13632:	757d                	lui	a0,0xfffff
   13634:	6785                	lui	a5,0x1
   13636:	0818                	addi	a4,sp,16
   13638:	97ba                	add	a5,a5,a4
   1363a:	953e                	add	a0,a0,a5
   1363c:	00000097          	auipc	ra,0x0
   13640:	e56080e7          	jalr	-426(ra) # 13492 <flash_read_logic>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:90
         for(i = 0;i<N;i++)             //将要写入的数据依照对应位置写入数组中
   13644:	c885                	beqz	s1,13674 <flash_write+0xb2>
   13646:	87a2                	mv	a5,s0
   13648:	777d                	lui	a4,0xfffff
   1364a:	6685                	lui	a3,0x1
   1364c:	0810                	addi	a2,sp,16
   1364e:	96b2                	add	a3,a3,a2
   13650:	9736                	add	a4,a4,a3
   13652:	c63a                	sw	a4,12(sp)
   13654:	012705b3          	add	a1,a4,s2
   13658:	0405                	addi	s0,s0,1
   1365a:	fff48693          	addi	a3,s1,-1
   1365e:	06c2                	slli	a3,a3,0x10
   13660:	82c1                	srli	a3,a3,0x10
   13662:	96a2                	add	a3,a3,s0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:92 (discriminator 3)
             data[offset+i] = buff[i];
   13664:	0007c703          	lbu	a4,0(a5) # 1000 <MCU_SECTORSIZE>
   13668:	00e58023          	sb	a4,0(a1)
   1366c:	0785                	addi	a5,a5,1
   1366e:	0585                	addi	a1,a1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:90 (discriminator 3)
         for(i = 0;i<N;i++)             //将要写入的数据依照对应位置写入数组中
   13670:	fed79ae3          	bne	a5,a3,13664 <flash_write+0xa2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:94
         flash_Best(sect,0,FLASH_SECT_SIZE,data);		  //将数组写入扇
   13674:	76fd                	lui	a3,0xfffff
   13676:	6785                	lui	a5,0x1
   13678:	0818                	addi	a4,sp,16
   1367a:	97ba                	add	a5,a5,a4
   1367c:	96be                	add	a3,a3,a5
   1367e:	6605                	lui	a2,0x1
   13680:	4581                	li	a1,0
   13682:	854e                	mv	a0,s3
   13684:	00000097          	auipc	ra,0x0
   13688:	f16080e7          	jalr	-234(ra) # 1359a <flash_Best>
   1368c:	b771                	j	13618 <flash_write+0x56>

0001368e <flash_write_physical>:
flash_write_physical():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:110
{
   1368e:	1141                	addi	sp,sp,-16
   13690:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:116
    sect = (addr-FLASH_START_ADDRESS)/FLASH_SECT_SIZE;		   //物理地址对应的扇区
   13692:	00c55793          	srli	a5,a0,0xc
   13696:	07c2                	slli	a5,a5,0x10
   13698:	83c1                	srli	a5,a5,0x10
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:117
    offset = addr-(sect*FLASH_SECT_SIZE)-FLASH_START_ADDRESS;  //物理地址对应扇区内偏移量
   1369a:	00c79713          	slli	a4,a5,0xc
   1369e:	8d19                	sub	a0,a0,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:119
    flag = flash_write(sect,offset,N,buff);
   136a0:	86b2                	mv	a3,a2
   136a2:	862e                	mv	a2,a1
   136a4:	01051593          	slli	a1,a0,0x10
   136a8:	81c1                	srli	a1,a1,0x10
   136aa:	853e                	mv	a0,a5
   136ac:	00000097          	auipc	ra,0x0
   136b0:	f16080e7          	jalr	-234(ra) # 135c2 <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/flash.c:122
}
   136b4:	40b2                	lw	ra,12(sp)
   136b6:	0141                	addi	sp,sp,16
   136b8:	8082                	ret

000136ba <gpio_set>:
gpio_get_port_pin():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:372
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
    *port = (port_pin>>8);
   136ba:	00855793          	srli	a5,a0,0x8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   136be:	0ff57513          	andi	a0,a0,255
gpio_set():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:70
   switch(port)
   136c2:	c789                	beqz	a5,136cc <gpio_set+0x12>
   136c4:	4705                	li	a4,1
   136c6:	02e78b63          	beq	a5,a4,136fc <gpio_set+0x42>
   136ca:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:74
       if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   136cc:	4785                	li	a5,1
   136ce:	00f58d63          	beq	a1,a5,136e8 <gpio_set+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:77
           R32_PA_CLR |= (1<<pin);
   136d2:	40001737          	lui	a4,0x40001
   136d6:	0ac72683          	lw	a3,172(a4) # 400010ac <_eusrstack+0x1fff90ac>
   136da:	4785                	li	a5,1
   136dc:	00a79533          	sll	a0,a5,a0
   136e0:	8d55                	or	a0,a0,a3
   136e2:	0aa72623          	sw	a0,172(a4)
   136e6:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:75
           R32_PA_OUT |= (1<<pin);
   136e8:	40001737          	lui	a4,0x40001
   136ec:	0a872683          	lw	a3,168(a4) # 400010a8 <_eusrstack+0x1fff90a8>
   136f0:	00a79533          	sll	a0,a5,a0
   136f4:	8d55                	or	a0,a0,a3
   136f6:	0aa72423          	sw	a0,168(a4)
   136fa:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:81
      if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   136fc:	4785                	li	a5,1
   136fe:	00f58d63          	beq	a1,a5,13718 <gpio_set+0x5e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:84
          R32_PB_CLR |= (1<<pin);
   13702:	40001737          	lui	a4,0x40001
   13706:	0cc72683          	lw	a3,204(a4) # 400010cc <_eusrstack+0x1fff90cc>
   1370a:	4785                	li	a5,1
   1370c:	00a79533          	sll	a0,a5,a0
   13710:	8d55                	or	a0,a0,a3
   13712:	0ca72623          	sw	a0,204(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:88
}
   13716:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:82
          R32_PB_OUT |= (1<<pin);
   13718:	40001737          	lui	a4,0x40001
   1371c:	0c872683          	lw	a3,200(a4) # 400010c8 <_eusrstack+0x1fff90c8>
   13720:	00a79533          	sll	a0,a5,a0
   13724:	8d55                	or	a0,a0,a3
   13726:	0ca72423          	sw	a0,200(a4)
   1372a:	8082                	ret

0001372c <gpio_init>:
gpio_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:24
{
   1372c:	1141                	addi	sp,sp,-16
   1372e:	c606                	sw	ra,12(sp)
gpio_get_port_pin():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:372
    *port = (port_pin>>8);
   13730:	00855793          	srli	a5,a0,0x8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:373
    *pin = port_pin;
   13734:	0ff57693          	andi	a3,a0,255
gpio_init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:29
    switch(port)
   13738:	c799                	beqz	a5,13746 <gpio_init+0x1a>
   1373a:	4705                	li	a4,1
   1373c:	02e78e63          	beq	a5,a4,13778 <gpio_init+0x4c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:55
}
   13740:	40b2                	lw	ra,12(sp)
   13742:	0141                	addi	sp,sp,16
   13744:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:32
        if(dir == 1)  //定义为输出引脚
   13746:	4785                	li	a5,1
   13748:	00f58963          	beq	a1,a5,1375a <gpio_init+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:39
            R32_PA_DIR &=~(GPIO_INPUT << pin );
   1374c:	400017b7          	lui	a5,0x40001
   13750:	0a07a703          	lw	a4,160(a5) # 400010a0 <_eusrstack+0x1fff90a0>
   13754:	0ae7a023          	sw	a4,160(a5)
   13758:	b7e5                	j	13740 <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:34
            R32_PA_DIR |= (GPIO_OUTPUT << pin );
   1375a:	40001737          	lui	a4,0x40001
   1375e:	0a072583          	lw	a1,160(a4) # 400010a0 <_eusrstack+0x1fff90a0>
   13762:	00d796b3          	sll	a3,a5,a3
   13766:	8ecd                	or	a3,a3,a1
   13768:	0ad72023          	sw	a3,160(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:35
            gpio_set(port_pin,state);
   1376c:	85b2                	mv	a1,a2
   1376e:	00000097          	auipc	ra,0x0
   13772:	f4c080e7          	jalr	-180(ra) # 136ba <gpio_set>
   13776:	b7e9                	j	13740 <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:43
        if(dir == 1)  //定义为输出引脚
   13778:	4785                	li	a5,1
   1377a:	00f58963          	beq	a1,a5,1378c <gpio_init+0x60>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:50
            R32_PB_DIR &=~(GPIO_INPUT << pin );
   1377e:	400017b7          	lui	a5,0x40001
   13782:	0c07a703          	lw	a4,192(a5) # 400010c0 <_eusrstack+0x1fff90c0>
   13786:	0ce7a023          	sw	a4,192(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:55
}
   1378a:	bf5d                	j	13740 <gpio_init+0x14>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:45
            R32_PB_DIR |= (GPIO_OUTPUT << pin );
   1378c:	40001737          	lui	a4,0x40001
   13790:	0c072583          	lw	a1,192(a4) # 400010c0 <_eusrstack+0x1fff90c0>
   13794:	00d796b3          	sll	a3,a5,a3
   13798:	8ecd                	or	a3,a3,a1
   1379a:	0cd72023          	sw	a3,192(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gpio.c:46
            gpio_set(port_pin,state);
   1379e:	85b2                	mv	a1,a2
   137a0:	00000097          	auipc	ra,0x0
   137a4:	f1a080e7          	jalr	-230(ra) # 136ba <gpio_set>
   137a8:	bf61                	j	13740 <gpio_init+0x14>

000137aa <IRQ_OPC_CHANGE>:
IRQ_OPC_CHANGE():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:25
    static uint32_t opcode = 0;
    uint32_t bios_addr=0, user_addr=0;  //函数入口地址
    uint32_t user_opc=0;
    uint32_t imm1=0,imm2=0;
    uint32_t user_pc=0;
    if(IRQ_NUM == SysTick_IRQn)     //对SysTick_Handler中断进行重定向
   137aa:	47b1                	li	a5,12
   137ac:	02f50563          	beq	a0,a5,137d6 <IRQ_OPC_CHANGE+0x2c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:31
    {
        user_addr = (uint32_t)SysTick_Handler;
        bios_addr = (uint32_t)component_fun[28];
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
    }
    else if(IRQ_NUM == SWI_IRQn)    //对SysTick_Handler中断进行重定向
   137b0:	47b9                	li	a5,14
   137b2:	08f50763          	beq	a0,a5,13840 <IRQ_OPC_CHANGE+0x96>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:37
    {
        user_addr = (uint32_t)SW_Handler;
        bios_addr = (uint32_t)component_fun[29];
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
    }
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   137b6:	476d                	li	a4,27
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:44
        user_addr = (uint32_t)UART1_IRQHandler;
        bios_addr = (uint32_t)component_fun[30];
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
    }
    else                            //仅支持SysTick_Handler、SW_Handler、UART1_IRQHandler的重定向
       return 0;
   137b8:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:37
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   137ba:	08e51163          	bne	a0,a4,1383c <IRQ_OPC_CHANGE+0x92>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:39
        user_addr = (uint32_t)UART1_IRQHandler;
   137be:	fffff817          	auipc	a6,0xfffff
   137c2:	90e80813          	addi	a6,a6,-1778 # 120cc <UART1_IRQHandler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:40
        bios_addr = (uint32_t)component_fun[30];
   137c6:	1fff2797          	auipc	a5,0x1fff2
   137ca:	eba78793          	addi	a5,a5,-326 # 20005680 <_data_vma>
   137ce:	439c                	lw	a5,0(a5)
   137d0:	5fb0                	lw	a2,120(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:41
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
   137d2:	59b8                	lw	a4,112(a1)
   137d4:	a821                	j	137ec <IRQ_OPC_CHANGE+0x42>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:27
        user_addr = (uint32_t)SysTick_Handler;
   137d6:	fffff817          	auipc	a6,0xfffff
   137da:	8c680813          	addi	a6,a6,-1850 # 1209c <SysTick_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:28
        bios_addr = (uint32_t)component_fun[28];
   137de:	1fff2797          	auipc	a5,0x1fff2
   137e2:	ea278793          	addi	a5,a5,-350 # 20005680 <_data_vma>
   137e6:	439c                	lw	a5,0(a5)
   137e8:	5bb0                	lw	a2,112(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:29
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
   137ea:	59d8                	lw	a4,52(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:50
    // printf("addr1:%lx\r\n", user_addr);
    // printf("addr2:%lx\r\n", bios_addr);
    // printf("opc:%lx\r\n", user_opc);

    //判断该指令是否为向前跳转，如果是向前跳转说明已经修改过了中断向量表，无需再次修改
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   137ec:	06074663          	bltz	a4,13858 <IRQ_OPC_CHANGE+0xae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:52

    imm1 = ( ((user_opc&0x80000000)>>11) | ((user_opc&0x7FE00000)>>20) | ((user_opc&0x00100000)>>9) | ((user_opc&0x000FF000)) );
   137f0:	00975793          	srli	a5,a4,0x9
   137f4:	6685                	lui	a3,0x1
   137f6:	80068693          	addi	a3,a3,-2048 # 800 <GEC_USER_SECTOR_END+0x7db>
   137fa:	8ff5                	and	a5,a5,a3
   137fc:	000ff6b7          	lui	a3,0xff
   13800:	00d775b3          	and	a1,a4,a3
   13804:	8fcd                	or	a5,a5,a1
   13806:	8351                	srli	a4,a4,0x14
   13808:	7fe77713          	andi	a4,a4,2046
   1380c:	8fd9                	or	a5,a5,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:58
    if(imm1>>20==1)         //向前跳转，补符号位
        imm1 = 0xFFE00000 | imm1;
    // printf("imm1:%lx\r\n", imm1);
    user_pc = user_addr - imm1;
    // printf("pc:%lx\r\n", user_pc);
    imm2 = bios_addr - user_pc;
   1380e:	41060633          	sub	a2,a2,a6
   13812:	97b2                	add	a5,a5,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:60
    // printf("imm2:%lx\r\n", imm2);
    opcode = (((imm2&0x100000)<<11) | ((imm2&0x7FE)<<20) | ((imm2&0x800)<<9) | (imm2&0xFF000)) | (0x0) | (0x6f);
   13814:	00b79513          	slli	a0,a5,0xb
   13818:	80000737          	lui	a4,0x80000
   1381c:	8d79                	and	a0,a0,a4
   1381e:	00979713          	slli	a4,a5,0x9
   13822:	00100637          	lui	a2,0x100
   13826:	8f71                	and	a4,a4,a2
   13828:	8d59                	or	a0,a0,a4
   1382a:	8efd                	and	a3,a3,a5
   1382c:	8d55                	or	a0,a0,a3
   1382e:	07d2                	slli	a5,a5,0x14
   13830:	7fe00737          	lui	a4,0x7fe00
   13834:	8ff9                	and	a5,a5,a4
   13836:	8fc9                	or	a5,a5,a0
   13838:	06f7e793          	ori	a5,a5,111
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:63
    // printf("opcode:%lx\r\n", opcode);
    return opcode;
}
   1383c:	853e                	mv	a0,a5
   1383e:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:33
        user_addr = (uint32_t)SW_Handler;
   13840:	fffff817          	auipc	a6,0xfffff
   13844:	86080813          	addi	a6,a6,-1952 # 120a0 <SW_Handler>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:34
        bios_addr = (uint32_t)component_fun[29];
   13848:	1fff2797          	auipc	a5,0x1fff2
   1384c:	e3878793          	addi	a5,a5,-456 # 20005680 <_data_vma>
   13850:	439c                	lw	a5,0(a5)
   13852:	5bf0                	lw	a2,116(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:35
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
   13854:	5dd8                	lw	a4,60(a1)
   13856:	bf59                	j	137ec <IRQ_OPC_CHANGE+0x42>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:50 (discriminator 1)
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   13858:	0505                	addi	a0,a0,1
   1385a:	050a                	slli	a0,a0,0x2
   1385c:	952e                	add	a0,a0,a1
   1385e:	411c                	lw	a5,0(a0)
   13860:	bff1                	j	1383c <IRQ_OPC_CHANGE+0x92>

00013862 <Vectors_Init>:
Vectors_Init():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:72
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
   13862:	716d                	addi	sp,sp,-272
   13864:	10112623          	sw	ra,268(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:82
    // {
    //     flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    //     MCU_FLASH_ADDR_START,24,(uint8_t *)"0123456789ABCDEF20200716");
    // }
    //（1）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+GEC_COMPONENT_LST_START*MCU_SECTORSIZE);
   13868:	67c1                	lui	a5,0x10
   1386a:	1fff2717          	auipc	a4,0x1fff2
   1386e:	e0f72b23          	sw	a5,-490(a4) # 20005680 <_data_vma>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:87
    
    uint8_t user[MCU_SECTORSIZE/16];                    //User向量表变量数组
    uint32_t opcode;
    //（2.1）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_read_logic(user,GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16);
   13872:	10000693          	li	a3,256
   13876:	4601                	li	a2,0
   13878:	45c9                	li	a1,18
   1387a:	850a                	mv	a0,sp
   1387c:	00000097          	auipc	ra,0x0
   13880:	c16080e7          	jalr	-1002(ra) # 13492 <flash_read_logic>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:89
    // （2.2）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_erase(GEC_USER_SECTOR_START);
   13884:	4549                	li	a0,18
   13886:	00000097          	auipc	ra,0x0
   1388a:	be6080e7          	jalr	-1050(ra) # 1346c <flash_erase>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:92
    //重定向 UART1_IRQHandler
    // user[112]=(uint8_t)(0x6f); user[113]=(uint8_t)(0x40); user[114]=(uint8_t)(0xaf); user[115]=(uint8_t)(0x8a);
    opcode = IRQ_OPC_CHANGE(UART1_IRQn, user);
   1388e:	858a                	mv	a1,sp
   13890:	456d                	li	a0,27
   13892:	00000097          	auipc	ra,0x0
   13896:	f18080e7          	jalr	-232(ra) # 137aa <IRQ_OPC_CHANGE>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:93
    ((uint32_t *)user)[UART1_IRQn+1] = opcode;
   1389a:	d8aa                	sw	a0,112(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:105
        // user[52]=(uint8_t)(0x6f); user[53]=(uint8_t)(0x40); user[54]=(uint8_t)(0x0f); user[55]=(uint8_t)(0x86);
        opcode = IRQ_OPC_CHANGE(SysTick_IRQn, user);
        ((uint32_t *)user)[SysTick_IRQn+1] = opcode;
    #endif
    //（2.3）将修改后的user数组写回User中断向量表
    flash_write(GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16,user);
   1389c:	868a                	mv	a3,sp
   1389e:	10000613          	li	a2,256
   138a2:	4581                	li	a1,0
   138a4:	4549                	li	a0,18
   138a6:	00000097          	auipc	ra,0x0
   138aa:	d1c080e7          	jalr	-740(ra) # 135c2 <flash_write>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:108

    //（4）printf提示
    printf("  【User提示】：将进入User的main函数执行...\r\n\n");
   138ae:	00002517          	auipc	a0,0x2
   138b2:	75e50513          	addi	a0,a0,1886 # 1600c <strlen+0x374>
   138b6:	00001097          	auipc	ra,0x1
   138ba:	bfa080e7          	jalr	-1030(ra) # 144b0 <myprintf>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/gec.c:111

    // #endif
}
   138be:	10c12083          	lw	ra,268(sp)
   138c2:	6151                	addi	sp,sp,272
   138c4:	8082                	ret

000138c6 <uart_send1>:
uart_send1():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:201
uint8_t uart_send1(uint8_t uartNo,uint8_t ch)
{
  uint32_t t;

    //判断传入串口号参数是否有误，有误直接退出
    if(uart_is_uartNo(uartNo)==0)
   138c6:	470d                	li	a4,3
   138c8:	10a76463          	bltu	a4,a0,139d0 <uart_send1+0x10a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:206
    {
        return 0;
    }
    //判断UARTx号
    switch (uartNo)
   138cc:	4705                	li	a4,1
   138ce:	06e50863          	beq	a0,a4,1393e <uart_send1+0x78>
   138d2:	01851713          	slli	a4,a0,0x18
   138d6:	8761                	srai	a4,a4,0x18
   138d8:	cb49                	beqz	a4,1396a <uart_send1+0xa4>
   138da:	4709                	li	a4,2
   138dc:	02e50b63          	beq	a0,a4,13912 <uart_send1+0x4c>
   138e0:	470d                	li	a4,3
   138e2:	0ae51f63          	bne	a0,a4,139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:238
          }
            break;
        case 3:
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
          {
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   138e6:	400047b7          	lui	a5,0x40004
   138ea:	c057c783          	lbu	a5,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
   138ee:	0207f793          	andi	a5,a5,32
   138f2:	ebe9                	bnez	a5,139c4 <uart_send1+0xfe>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   138f4:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   138f6:	40004637          	lui	a2,0x40004
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   138fa:	66c1                	lui	a3,0x10
   138fc:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13900:	c0564703          	lbu	a4,-1019(a2) # 40003c05 <_eusrstack+0x1fffbc05>
   13904:	02077713          	andi	a4,a4,32
   13908:	ef5d                	bnez	a4,139c6 <uart_send1+0x100>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:236 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1390a:	0785                	addi	a5,a5,1
   1390c:	fed79ae3          	bne	a5,a3,13900 <uart_send1+0x3a>
   13910:	a841                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13912:	400047b7          	lui	a5,0x40004
   13916:	8057c783          	lbu	a5,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
   1391a:	0207f793          	andi	a5,a5,32
   1391e:	efc9                	bnez	a5,139b8 <uart_send1+0xf2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13920:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13922:	40004637          	lui	a2,0x40004
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13926:	66c1                	lui	a3,0x10
   13928:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   1392c:	80564703          	lbu	a4,-2043(a2) # 40003805 <_eusrstack+0x1fffb805>
   13930:	02077713          	andi	a4,a4,32
   13934:	e359                	bnez	a4,139ba <uart_send1+0xf4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:227 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13936:	0785                	addi	a5,a5,1
   13938:	fed79ae3          	bne	a5,a3,1392c <uart_send1+0x66>
   1393c:	a095                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   1393e:	400037b7          	lui	a5,0x40003
   13942:	4057c783          	lbu	a5,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
   13946:	0207f793          	andi	a5,a5,32
   1394a:	e3ad                	bnez	a5,139ac <uart_send1+0xe6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1394c:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   1394e:	40003637          	lui	a2,0x40003
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13952:	66c1                	lui	a3,0x10
   13954:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13958:	40564703          	lbu	a4,1029(a2) # 40003405 <_eusrstack+0x1fffb405>
   1395c:	02077713          	andi	a4,a4,32
   13960:	e739                	bnez	a4,139ae <uart_send1+0xe8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:218 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13962:	0785                	addi	a5,a5,1
   13964:	fed79ae3          	bne	a5,a3,13958 <uart_send1+0x92>
   13968:	a825                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   1396a:	400037b7          	lui	a5,0x40003
   1396e:	0057c783          	lbu	a5,5(a5) # 40003005 <_eusrstack+0x1fffb005>
   13972:	0207f793          	andi	a5,a5,32
   13976:	e385                	bnez	a5,13996 <uart_send1+0xd0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13978:	4785                	li	a5,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   1397a:	40003637          	lui	a2,0x40003
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1397e:	66c1                	lui	a3,0x10
   13980:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13984:	00564703          	lbu	a4,5(a2) # 40003005 <_eusrstack+0x1fffb005>
   13988:	02077713          	andi	a4,a4,32
   1398c:	e711                	bnez	a4,13998 <uart_send1+0xd2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:209 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   1398e:	0785                	addi	a5,a5,1
   13990:	fed79ae3          	bne	a5,a3,13984 <uart_send1+0xbe>
   13994:	a031                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:209
   13996:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:212
              R8_UART0_THR = ch;
   13998:	40003737          	lui	a4,0x40003
   1399c:	00b70423          	sb	a1,8(a4) # 40003008 <_eusrstack+0x1fffb008>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:203
        return 0;
   139a0:	6541                	lui	a0,0x10
   139a2:	bbb50513          	addi	a0,a0,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
   139a6:	00a7b533          	sltu	a0,a5,a0
   139aa:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139ac:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:221
              R8_UART1_THR = ch;
   139ae:	40003737          	lui	a4,0x40003
   139b2:	40b70423          	sb	a1,1032(a4) # 40003408 <_eusrstack+0x1fffb408>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:222
              break;
   139b6:	b7ed                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139b8:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:230
              R8_UART2_THR = ch;
   139ba:	40004737          	lui	a4,0x40004
   139be:	80b70423          	sb	a1,-2040(a4) # 40003808 <_eusrstack+0x1fffb808>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:231
              break;
   139c2:	bff9                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   139c4:	4781                	li	a5,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:239
              R8_UART3_THR = ch;
   139c6:	40004737          	lui	a4,0x40004
   139ca:	c0b70423          	sb	a1,-1016(a4) # 40003c08 <_eusrstack+0x1fffbc08>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:240
              break;
   139ce:	bfc9                	j	139a0 <uart_send1+0xda>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:203
        return 0;
   139d0:	4501                	li	a0,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/uart.c:252

    if (t >= 0xFBBB)
        return 0; //发送超时，发送失败
    else
        return 1; //成功发送
}
   139d2:	8082                	ret

000139d4 <printk_putc>:
printk_putc():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:28
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
   139d4:	1141                	addi	sp,sp,-16
   139d6:	c606                	sw	ra,12(sp)
   139d8:	c422                	sw	s0,8(sp)
   139da:	842e                	mv	s0,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:29
	switch (info->dest) {
   139dc:	421c                	lw	a5,0(a2)
   139de:	4705                	li	a4,1
   139e0:	00e78c63          	beq	a5,a4,139f8 <printk_putc+0x24>
   139e4:	4709                	li	a4,2
   139e6:	00e78e63          	beq	a5,a4,13a02 <printk_putc+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:40
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
   139ea:	401c                	lw	a5,0(s0)
   139ec:	0785                	addi	a5,a5,1
   139ee:	c01c                	sw	a5,0(s0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:41
}
   139f0:	40b2                	lw	ra,12(sp)
   139f2:	4422                	lw	s0,8(sp)
   139f4:	0141                	addi	sp,sp,16
   139f6:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:31
		info->func((char) c);
   139f8:	425c                	lw	a5,4(a2)
   139fa:	0562                	slli	a0,a0,0x18
   139fc:	8561                	srai	a0,a0,0x18
   139fe:	9782                	jalr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:32
		break;
   13a00:	b7ed                	j	139ea <printk_putc+0x16>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:34
		*(info->loc) = (unsigned char) c;
   13a02:	461c                	lw	a5,8(a2)
   13a04:	00a78023          	sb	a0,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:35
		++(info->loc);
   13a08:	461c                	lw	a5,8(a2)
   13a0a:	0785                	addi	a5,a5,1
   13a0c:	c61c                	sw	a5,8(a2)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:36
		break;
   13a0e:	bff1                	j	139ea <printk_putc+0x16>

00013a10 <printk_mknumstr>:
printk_mknumstr():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:131
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
   13a10:	00150793          	addi	a5,a0,1
   13a14:	00050023          	sb	zero,0(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:133

	if (neg) {
   13a18:	ce1d                	beqz	a2,13a56 <printk_mknumstr+0x46>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:134
		a = *(int *) nump;
   13a1a:	4198                	lw	a4,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:144
		}
		while (a != 0) {
			b = (int) a / (int) radix;
			c = (int) a - ((int) b * (int) radix);
			if (c < 0) {
				c = ~c + 1 + '0';
   13a1c:	03000813          	li	a6,48
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:135
		if (a == 0) {
   13a20:	e315                	bnez	a4,13a44 <printk_mknumstr+0x34>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:136
			*nstrp = '0';
   13a22:	03000793          	li	a5,48
   13a26:	00f500a3          	sb	a5,1(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:137
			++nlen;
   13a2a:	4605                	li	a2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:173
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
   13a2c:	8532                	mv	a0,a2
   13a2e:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:144
				c = ~c + 1 + '0';
   13a30:	40e80633          	sub	a2,a6,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:149
			*nstrp++ = (char) c;
   13a34:	0785                	addi	a5,a5,1
   13a36:	fec78fa3          	sb	a2,-1(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:150
			++nlen;
   13a3a:	fff78613          	addi	a2,a5,-1
   13a3e:	8e09                	sub	a2,a2,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:148
			a = b;
   13a40:	872e                	mv	a4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:140
		while (a != 0) {
   13a42:	d5ed                	beqz	a1,13a2c <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:141
			b = (int) a / (int) radix;
   13a44:	02d745b3          	div	a1,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:142
			c = (int) a - ((int) b * (int) radix);
   13a48:	02d76733          	rem	a4,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:146
				c = c + '0';
   13a4c:	03070613          	addi	a2,a4,48
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:143
			if (c < 0) {
   13a50:	fe0752e3          	bgez	a4,13a34 <printk_mknumstr+0x24>
   13a54:	bff1                	j	13a30 <printk_mknumstr+0x20>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:153
		ua = *(unsigned int *) nump;
   13a56:	4198                	lw	a4,0(a1)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   13a58:	8336                	mv	t1,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   13a5a:	48a5                	li	a7,9
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:154
		if (ua == 0) {
   13a5c:	e305                	bnez	a4,13a7c <printk_mknumstr+0x6c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:155
			*nstrp = '0';
   13a5e:	03000793          	li	a5,48
   13a62:	00f500a3          	sb	a5,1(a0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:156
			++nlen;
   13a66:	4605                	li	a2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:157
			goto done;
   13a68:	b7d1                	j	13a2c <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:168
			*nstrp++ = (char) uc;
   13a6a:	0785                	addi	a5,a5,1
   13a6c:	feb78fa3          	sb	a1,-1(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:169
			++nlen;
   13a70:	fff78613          	addi	a2,a5,-1
   13a74:	8e09                	sub	a2,a2,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:159
		while (ua != 0) {
   13a76:	fa676be3          	bltu	a4,t1,13a2c <printk_mknumstr+0x1c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:167
			ua = ub;
   13a7a:	8742                	mv	a4,a6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   13a7c:	02d75833          	divu	a6,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:161
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
   13a80:	02d77633          	remu	a2,a4,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:165
				uc = uc - 10 + 'A';
   13a84:	03760593          	addi	a1,a2,55
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:162
			if (uc < 10) {
   13a88:	fec8e1e3          	bltu	a7,a2,13a6a <printk_mknumstr+0x5a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:163
				uc = uc + '0';
   13a8c:	03060593          	addi	a1,a2,48
   13a90:	bfe9                	j	13a6a <printk_mknumstr+0x5a>

00013a92 <printk_pad_space>:
printk_pad_space():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:186
	}
}

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
   13a92:	1101                	addi	sp,sp,-32
   13a94:	ce06                	sw	ra,28(sp)
   13a96:	cc22                	sw	s0,24(sp)
   13a98:	ca26                	sw	s1,20(sp)
   13a9a:	c84a                	sw	s2,16(sp)
   13a9c:	c64e                	sw	s3,12(sp)
   13a9e:	842a                	mv	s0,a0
   13aa0:	84ae                	mv	s1,a1
   13aa2:	89b2                	mv	s3,a2
   13aa4:	8936                	mv	s2,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:189
	int i;

	for (i = curlen; i < field_width; i++) {
   13aa6:	00b55d63          	bge	a0,a1,13ac0 <printk_pad_space+0x2e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:190 (discriminator 3)
		printk_putc(' ', count, info);
   13aaa:	864a                	mv	a2,s2
   13aac:	85ce                	mv	a1,s3
   13aae:	02000513          	li	a0,32
   13ab2:	00000097          	auipc	ra,0x0
   13ab6:	f22080e7          	jalr	-222(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:189 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
   13aba:	0405                	addi	s0,s0,1
   13abc:	fe8497e3          	bne	s1,s0,13aaa <printk_pad_space+0x18>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:192
	}
}
   13ac0:	40f2                	lw	ra,28(sp)
   13ac2:	4462                	lw	s0,24(sp)
   13ac4:	44d2                	lw	s1,20(sp)
   13ac6:	4942                	lw	s2,16(sp)
   13ac8:	49b2                	lw	s3,12(sp)
   13aca:	6105                	addi	sp,sp,32
   13acc:	8082                	ret

00013ace <out_char>:
out_char():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:18
void out_char(char data) {
   13ace:	1141                	addi	sp,sp,-16
   13ad0:	c606                	sw	ra,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:19
	uart_send1(UART_printf, data);
   13ad2:	0ff57593          	andi	a1,a0,255
   13ad6:	4505                	li	a0,1
   13ad8:	00000097          	auipc	ra,0x0
   13adc:	dee080e7          	jalr	-530(ra) # 138c6 <uart_send1>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:20
}
   13ae0:	40b2                	lw	ra,12(sp)
   13ae2:	0141                	addi	sp,sp,16
   13ae4:	8082                	ret

00013ae6 <printk_mkfloatstr>:
printk_mkfloatstr():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:50
{
   13ae6:	c8010113          	addi	sp,sp,-896
   13aea:	36112e23          	sw	ra,892(sp)
   13aee:	36812c23          	sw	s0,888(sp)
   13af2:	36912a23          	sw	s1,884(sp)
   13af6:	37212823          	sw	s2,880(sp)
   13afa:	37312623          	sw	s3,876(sp)
   13afe:	37412423          	sw	s4,872(sp)
   13b02:	37512223          	sw	s5,868(sp)
   13b06:	37612023          	sw	s6,864(sp)
   13b0a:	35712e23          	sw	s7,860(sp)
   13b0e:	35812c23          	sw	s8,856(sp)
   13b12:	35912a23          	sw	s9,852(sp)
   13b16:	35a12823          	sw	s10,848(sp)
   13b1a:	35b12623          	sw	s11,844(sp)
   13b1e:	842a                	mv	s0,a0
   13b20:	8b2e                	mv	s6,a1
   13b22:	8c32                	mv	s8,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13b24:	19000613          	li	a2,400
   13b28:	4581                	li	a1,0
   13b2a:	1b08                	addi	a0,sp,432
   13b2c:	fffff097          	auipc	ra,0xfffff
   13b30:	594080e7          	jalr	1428(ra) # 130c0 <memset>
   13b34:	19000613          	li	a2,400
   13b38:	4581                	li	a1,0
   13b3a:	1008                	addi	a0,sp,32
   13b3c:	fffff097          	auipc	ra,0xfffff
   13b40:	584080e7          	jalr	1412(ra) # 130c0 <memset>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:59
	p=(uint64_t)*f;//整数部分
   13b44:	4044                	lw	s1,4(s0)
   13b46:	4000                	lw	s0,0(s0)
   13b48:	8522                	mv	a0,s0
   13b4a:	85a6                	mv	a1,s1
   13b4c:	00002097          	auipc	ra,0x2
   13b50:	dee080e7          	jalr	-530(ra) # 1593a <__fixunsdfdi>
   13b54:	8caa                	mv	s9,a0
   13b56:	8bae                	mv	s7,a1
   13b58:	8aaa                	mv	s5,a0
   13b5a:	8a2e                	mv	s4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:60
	tempf=(*f-p);
   13b5c:	00002097          	auipc	ra,0x2
   13b60:	e7c080e7          	jalr	-388(ra) # 159d8 <__floatundidf>
   13b64:	862a                	mv	a2,a0
   13b66:	86ae                	mv	a3,a1
   13b68:	8522                	mv	a0,s0
   13b6a:	85a6                	mv	a1,s1
   13b6c:	00001097          	auipc	ra,0x1
   13b70:	688080e7          	jalr	1672(ra) # 151f4 <__subdf3>
   13b74:	842a                	mv	s0,a0
   13b76:	84ae                	mv	s1,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:61
	while(precision_width--)    tempf*=10;
   13b78:	020c0663          	beqz	s8,13ba4 <printk_mkfloatstr+0xbe>
   13b7c:	fffc0d13          	addi	s10,s8,-1
   13b80:	00002797          	auipc	a5,0x2
   13b84:	58878793          	addi	a5,a5,1416 # 16108 <strlen+0x470>
   13b88:	0007a903          	lw	s2,0(a5)
   13b8c:	0047a983          	lw	s3,4(a5)
   13b90:	5dfd                	li	s11,-1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:61 (discriminator 2)
   13b92:	864a                	mv	a2,s2
   13b94:	86ce                	mv	a3,s3
   13b96:	00001097          	auipc	ra,0x1
   13b9a:	196080e7          	jalr	406(ra) # 14d2c <__muldf3>
   13b9e:	1d7d                	addi	s10,s10,-1
   13ba0:	ffbd19e3          	bne	s10,s11,13b92 <printk_mkfloatstr+0xac>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:62
    q=tempf;
   13ba4:	00002097          	auipc	ra,0x2
   13ba8:	d96080e7          	jalr	-618(ra) # 1593a <__fixunsdfdi>
   13bac:	ce2a                	sw	a0,28(sp)
   13bae:	8dae                	mv	s11,a1
   13bb0:	8d2a                	mv	s10,a0
   13bb2:	89ae                	mv	s3,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13bb4:	00002797          	auipc	a5,0x2
   13bb8:	55c78793          	addi	a5,a5,1372 # 16110 <strlen+0x478>
   13bbc:	4390                	lw	a2,0(a5)
   13bbe:	43d4                	lw	a3,4(a5)
   13bc0:	8522                	mv	a0,s0
   13bc2:	85a6                	mv	a1,s1
   13bc4:	00001097          	auipc	ra,0x1
   13bc8:	0b2080e7          	jalr	178(ra) # 14c76 <__ledf2>
   13bcc:	0e055e63          	bgez	a0,13cc8 <printk_mkfloatstr+0x1e2>
   13bd0:	4601                	li	a2,0
   13bd2:	4681                	li	a3,0
   13bd4:	8522                	mv	a0,s0
   13bd6:	85a6                	mv	a1,s1
   13bd8:	00001097          	auipc	ra,0x1
   13bdc:	034080e7          	jalr	52(ra) # 14c0c <__eqdf2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13be0:	4901                	li	s2,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13be2:	c56d                	beqz	a0,13ccc <printk_mkfloatstr+0x1e6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   13be4:	00002797          	auipc	a5,0x2
   13be8:	52478793          	addi	a5,a5,1316 # 16108 <strlen+0x470>
   13bec:	0047a803          	lw	a6,4(a5)
   13bf0:	439c                	lw	a5,0(a5)
   13bf2:	c83e                	sw	a5,16(sp)
   13bf4:	ca42                	sw	a6,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13bf6:	00002797          	auipc	a5,0x2
   13bfa:	51a78793          	addi	a5,a5,1306 # 16110 <strlen+0x478>
   13bfe:	0047a803          	lw	a6,4(a5)
   13c02:	439c                	lw	a5,0(a5)
   13c04:	c43e                	sw	a5,8(sp)
   13c06:	c642                	sw	a6,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:68
		tempf=tempf*10;
   13c08:	4642                	lw	a2,16(sp)
   13c0a:	46d2                	lw	a3,20(sp)
   13c0c:	8522                	mv	a0,s0
   13c0e:	85a6                	mv	a1,s1
   13c10:	00001097          	auipc	ra,0x1
   13c14:	11c080e7          	jalr	284(ra) # 14d2c <__muldf3>
   13c18:	842a                	mv	s0,a0
   13c1a:	84ae                	mv	s1,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:69
		k++;			
   13c1c:	0905                	addi	s2,s2,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   13c1e:	4622                	lw	a2,8(sp)
   13c20:	46b2                	lw	a3,12(sp)
   13c22:	00001097          	auipc	ra,0x1
   13c26:	054080e7          	jalr	84(ra) # 14c76 <__ledf2>
   13c2a:	00055b63          	bgez	a0,13c40 <printk_mkfloatstr+0x15a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:66 (discriminator 1)
   13c2e:	4601                	li	a2,0
   13c30:	4681                	li	a3,0
   13c32:	8522                	mv	a0,s0
   13c34:	85a6                	mv	a1,s1
   13c36:	00001097          	auipc	ra,0x1
   13c3a:	fd6080e7          	jalr	-42(ra) # 14c0c <__eqdf2>
   13c3e:	f569                	bnez	a0,13c08 <printk_mkfloatstr+0x122>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   13c40:	019bebb3          	or	s7,s7,s9
   13c44:	080b9663          	bnez	s7,13cd0 <printk_mkfloatstr+0x1ea>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:73
		c[i++]='0';
   13c48:	03000793          	li	a5,48
   13c4c:	00fb0023          	sb	a5,0(s6)
   13c50:	4485                	li	s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:87
	c[i++]='.';   //小数点
   13c52:	00148413          	addi	s0,s1,1
   13c56:	009b07b3          	add	a5,s6,s1
   13c5a:	02e00713          	li	a4,46
   13c5e:	00e78023          	sb	a4,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   13c62:	4772                	lw	a4,28(sp)
   13c64:	00ededb3          	or	s11,s11,a4
   13c68:	0c0d9a63          	bnez	s11,13d3c <printk_mkfloatstr+0x256>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:89
		while(zeroNum--) c[i++]='0';     //【20201119】-3/3   原为 c[i++]='0';
   13c6c:	000c0d63          	beqz	s8,13c86 <printk_mkfloatstr+0x1a0>
   13c70:	018b0733          	add	a4,s6,s8
   13c74:	94ba                	add	s1,s1,a4
   13c76:	03000713          	li	a4,48
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:89 (discriminator 2)
   13c7a:	00e780a3          	sb	a4,1(a5)
   13c7e:	0785                	addi	a5,a5,1
   13c80:	fef49de3          	bne	s1,a5,13c7a <printk_mkfloatstr+0x194>
   13c84:	9462                	add	s0,s0,s8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:109
	c[i]='\0';
   13c86:	9b22                	add	s6,s6,s0
   13c88:	000b0023          	sb	zero,0(s6)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:111
}
   13c8c:	8522                	mv	a0,s0
   13c8e:	37c12083          	lw	ra,892(sp)
   13c92:	37812403          	lw	s0,888(sp)
   13c96:	37412483          	lw	s1,884(sp)
   13c9a:	37012903          	lw	s2,880(sp)
   13c9e:	36c12983          	lw	s3,876(sp)
   13ca2:	36812a03          	lw	s4,872(sp)
   13ca6:	36412a83          	lw	s5,868(sp)
   13caa:	36012b03          	lw	s6,864(sp)
   13cae:	35c12b83          	lw	s7,860(sp)
   13cb2:	35812c03          	lw	s8,856(sp)
   13cb6:	35412c83          	lw	s9,852(sp)
   13cba:	35012d03          	lw	s10,848(sp)
   13cbe:	34c12d83          	lw	s11,844(sp)
   13cc2:	38010113          	addi	sp,sp,896
   13cc6:	8082                	ret
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13cc8:	4901                	li	s2,0
   13cca:	bf9d                	j	13c40 <printk_mkfloatstr+0x15a>
   13ccc:	4901                	li	s2,0
   13cce:	bf8d                	j	13c40 <printk_mkfloatstr+0x15a>
   13cd0:	1b010c93          	addi	s9,sp,432
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   13cd4:	8466                	mv	s0,s9
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   13cd6:	4b81                	li	s7,0
   13cd8:	a021                	j	13ce0 <printk_mkfloatstr+0x1fa>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:79
			p/=10;
   13cda:	8aaa                	mv	s5,a0
   13cdc:	8a2e                	mv	s4,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:78
			a[j++]=p%10;
   13cde:	8ba6                	mv	s7,s1
   13ce0:	001b8493          	addi	s1,s7,1
   13ce4:	4629                	li	a2,10
   13ce6:	4681                	li	a3,0
   13ce8:	8556                	mv	a0,s5
   13cea:	85d2                	mv	a1,s4
   13cec:	00001097          	auipc	ra,0x1
   13cf0:	b92080e7          	jalr	-1134(ra) # 1487e <__umoddi3>
   13cf4:	c008                	sw	a0,0(s0)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:79
			p/=10;
   13cf6:	4629                	li	a2,10
   13cf8:	4681                	li	a3,0
   13cfa:	8556                	mv	a0,s5
   13cfc:	85d2                	mv	a1,s4
   13cfe:	00000097          	auipc	ra,0x0
   13d02:	7e8080e7          	jalr	2024(ra) # 144e6 <__udivdi3>
   13d06:	0411                	addi	s0,s0,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:76
		while(p!=0)//倒序的数字
   13d08:	fc0a19e3          	bnez	s4,13cda <printk_mkfloatstr+0x1f4>
   13d0c:	000a1563          	bnez	s4,13d16 <printk_mkfloatstr+0x230>
   13d10:	47a5                	li	a5,9
   13d12:	fd57e4e3          	bltu	a5,s5,13cda <printk_mkfloatstr+0x1f4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   13d16:	dc95                	beqz	s1,13c52 <printk_mkfloatstr+0x16c>
   13d18:	0b8a                	slli	s7,s7,0x2
   13d1a:	1b1c                	addi	a5,sp,432
   13d1c:	9bbe                	add	s7,s7,a5
   13d1e:	875a                	mv	a4,s6
   13d20:	a011                	j	13d24 <printk_mkfloatstr+0x23e>
   13d22:	8bbe                	mv	s7,a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:83
			c[i++]=a[j-1]+'0';
   13d24:	000ba783          	lw	a5,0(s7)
   13d28:	03078793          	addi	a5,a5,48
   13d2c:	00f70023          	sb	a5,0(a4)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:84
			j--;
   13d30:	ffcb8793          	addi	a5,s7,-4
   13d34:	0705                	addi	a4,a4,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   13d36:	ff9b96e3          	bne	s7,s9,13d22 <printk_mkfloatstr+0x23c>
   13d3a:	bf21                	j	13c52 <printk_mkfloatstr+0x16c>
   13d3c:	02010a13          	addi	s4,sp,32
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   13d40:	8ad2                	mv	s5,s4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:92
		j=0;
   13d42:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   13d44:	4ba5                	li	s7,9
   13d46:	a019                	j	13d4c <printk_mkfloatstr+0x266>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:96
			q/=10;
   13d48:	8d2a                	mv	s10,a0
   13d4a:	89ae                	mv	s3,a1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:95
			b[j++]=q%10;
   13d4c:	0485                	addi	s1,s1,1
   13d4e:	4629                	li	a2,10
   13d50:	4681                	li	a3,0
   13d52:	856a                	mv	a0,s10
   13d54:	85ce                	mv	a1,s3
   13d56:	00001097          	auipc	ra,0x1
   13d5a:	b28080e7          	jalr	-1240(ra) # 1487e <__umoddi3>
   13d5e:	00aaa023          	sw	a0,0(s5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:96
			q/=10;
   13d62:	4629                	li	a2,10
   13d64:	4681                	li	a3,0
   13d66:	856a                	mv	a0,s10
   13d68:	85ce                	mv	a1,s3
   13d6a:	00000097          	auipc	ra,0x0
   13d6e:	77c080e7          	jalr	1916(ra) # 144e6 <__udivdi3>
   13d72:	0a91                	addi	s5,s5,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   13d74:	fc099ae3          	bnez	s3,13d48 <printk_mkfloatstr+0x262>
   13d78:	00099463          	bnez	s3,13d80 <printk_mkfloatstr+0x29a>
   13d7c:	fdabe6e3          	bltu	s7,s10,13d48 <printk_mkfloatstr+0x262>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   13d80:	00090f63          	beqz	s2,13d9e <printk_mkfloatstr+0x2b8>
   13d84:	00249793          	slli	a5,s1,0x2
   13d88:	1018                	addi	a4,sp,32
   13d8a:	97ba                	add	a5,a5,a4
   13d8c:	94ca                	add	s1,s1,s2
   13d8e:	00249713          	slli	a4,s1,0x2
   13d92:	9752                	add	a4,a4,s4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:100
			b[j++]=0;
   13d94:	0007a023          	sw	zero,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:101
			k--;
   13d98:	0791                	addi	a5,a5,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:98
		while(k!=0)
   13d9a:	fee79de3          	bne	a5,a4,13d94 <printk_mkfloatstr+0x2ae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   13d9e:	ee0484e3          	beqz	s1,13c86 <printk_mkfloatstr+0x1a0>
   13da2:	00249793          	slli	a5,s1,0x2
   13da6:	0698                	addi	a4,sp,832
   13da8:	97ba                	add	a5,a5,a4
   13daa:	cdc78793          	addi	a5,a5,-804
   13dae:	008b06b3          	add	a3,s6,s0
   13db2:	a011                	j	13db6 <printk_mkfloatstr+0x2d0>
   13db4:	87ba                	mv	a5,a4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:105
			c[i++]=b[j-1]+'0';
   13db6:	4398                	lw	a4,0(a5)
   13db8:	03070713          	addi	a4,a4,48
   13dbc:	00e68023          	sb	a4,0(a3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:106
			j--;
   13dc0:	ffc78713          	addi	a4,a5,-4
   13dc4:	0685                	addi	a3,a3,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   13dc6:	fefa17e3          	bne	s4,a5,13db4 <printk_mkfloatstr+0x2ce>
   13dca:	9426                	add	s0,s0,s1
   13dcc:	bd6d                	j	13c86 <printk_mkfloatstr+0x1a0>

00013dce <printk>:
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:202
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
   13dce:	7175                	addi	sp,sp,-144
   13dd0:	c706                	sw	ra,140(sp)
   13dd2:	c522                	sw	s0,136(sp)
   13dd4:	c326                	sw	s1,132(sp)
   13dd6:	c14a                	sw	s2,128(sp)
   13dd8:	dece                	sw	s3,124(sp)
   13dda:	dcd2                	sw	s4,120(sp)
   13ddc:	dad6                	sw	s5,116(sp)
   13dde:	d8da                	sw	s6,112(sp)
   13de0:	d6de                	sw	s7,108(sp)
   13de2:	d4e2                	sw	s8,104(sp)
   13de4:	d2e6                	sw	s9,100(sp)
   13de6:	d0ea                	sw	s10,96(sp)
   13de8:	ceee                	sw	s11,92(sp)
   13dea:	8a2a                	mv	s4,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:226

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
   13dec:	d602                	sw	zero,44(sp)
   13dee:	d802                	sw	zero,48(sp)
   13df0:	da02                	sw	zero,52(sp)
   13df2:	dc02                	sw	zero,56(sp)
   13df4:	de02                	sw	zero,60(sp)
   13df6:	c082                	sw	zero,64(sp)
   13df8:	c282                	sw	zero,68(sp)
   13dfa:	c482                	sw	zero,72(sp)
   13dfc:	04010623          	sb	zero,76(sp)
   13e00:	03000793          	li	a5,48
   13e04:	02f10623          	sb	a5,44(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:247
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
   13e08:	d402                	sw	zero,40(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
   13e0a:	00058503          	lb	a0,0(a1)
   13e0e:	68050163          	beqz	a0,14490 <printk+0x6c2>
   13e12:	8b2e                	mv	s6,a1
   13e14:	8bb2                	mv	s7,a2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:249
	precision_used=TRUE;
   13e16:	4d05                	li	s10,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:248
	length_modifier=0;
   13e18:	4c81                	li	s9,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:279
		//此时字符为%  查看百分号后的第一个格式字符，对输出格式字符并做出相应输出判断
		//检查相应的修改标志
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
   13e1a:	00002417          	auipc	s0,0x2
   13e1e:	22240413          	addi	s0,s0,546 # 1603c <strlen+0x3a4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:387
			--p;
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
   13e22:	00002c17          	auipc	s8,0x2
   13e26:	25ec0c13          	addi	s8,s8,606 # 16080 <strlen+0x3e8>
   13e2a:	a035                	j	13e56 <printk+0x88>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:263
				printk_putc(0x0D /* CR */, &count, info);
   13e2c:	8652                	mv	a2,s4
   13e2e:	102c                	addi	a1,sp,40
   13e30:	4535                	li	a0,13
   13e32:	00000097          	auipc	ra,0x0
   13e36:	ba2080e7          	jalr	-1118(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:264
				printk_putc(0x0A /* LF */, &count, info);
   13e3a:	8652                	mv	a2,s4
   13e3c:	102c                	addi	a1,sp,40
   13e3e:	4529                	li	a0,10
   13e40:	00000097          	auipc	ra,0x0
   13e44:	b94080e7          	jalr	-1132(ra) # 139d4 <printk_putc>
   13e48:	8ada                	mv	s5,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:251 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
   13e4a:	001a8b13          	addi	s6,s5,1
   13e4e:	001a8503          	lb	a0,1(s5)
   13e52:	62050f63          	beqz	a0,14490 <printk+0x6c2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:254
		if (c != '%')
   13e56:	02500793          	li	a5,37
   13e5a:	00f50d63          	beq	a0,a5,13e74 <printk+0xa6>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:258
			if (c != '\n') {
   13e5e:	47a9                	li	a5,10
   13e60:	fcf506e3          	beq	a0,a5,13e2c <printk+0x5e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:259
				printk_putc(c, &count, info);
   13e64:	8652                	mv	a2,s4
   13e66:	102c                	addi	a1,sp,40
   13e68:	00000097          	auipc	ra,0x0
   13e6c:	b6c080e7          	jalr	-1172(ra) # 139d4 <printk_putc>
   13e70:	8ada                	mv	s5,s6
   13e72:	bfe1                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:276
		flags_used = 0;
   13e74:	4481                	li	s1,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   13e76:	4641                	li	a2,16
   13e78:	a021                	j	13e80 <printk+0xb2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:281
				flags_used |= FLAGS_MINUS;
   13e7a:	0014e493          	ori	s1,s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:282
				break;
   13e7e:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   13e80:	001b0693          	addi	a3,s6,1
   13e84:	001b4783          	lbu	a5,1(s6)
   13e88:	1781                	addi	a5,a5,-32
   13e8a:	0ff7f713          	andi	a4,a5,255
   13e8e:	08e66c63          	bltu	a2,a4,13f26 <printk+0x158>
   13e92:	00271793          	slli	a5,a4,0x2
   13e96:	97a2                	add	a5,a5,s0
   13e98:	439c                	lw	a5,0(a5)
   13e9a:	97a2                	add	a5,a5,s0
   13e9c:	8782                	jr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:284
				flags_used |= FLAGS_PLUS;
   13e9e:	0024e493          	ori	s1,s1,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:285
				break;
   13ea2:	bff1                	j	13e7e <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:287
				flags_used |= FLAGS_SPACE;
   13ea4:	0044e493          	ori	s1,s1,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:288
				break;
   13ea8:	bfd9                	j	13e7e <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:290
				flags_used |= FLAGS_ZERO;
   13eaa:	0084e493          	ori	s1,s1,8
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:291
				break;
   13eae:	bfc1                	j	13e7e <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:293
				flags_used |= FLAGS_POUND;
   13eb0:	0104e493          	ori	s1,s1,16
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:294
				break;
   13eb4:	b7e9                	j	13e7e <printk+0xb0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:319
				field_width = (field_width * 10) + (c - '0');
   13eb6:	00291793          	slli	a5,s2,0x2
   13eba:	993e                	add	s2,s2,a5
   13ebc:	0906                	slli	s2,s2,0x1
   13ebe:	993a                	add	s2,s2,a4
   13ec0:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   13ec2:	001b0693          	addi	a3,s6,1
   13ec6:	001b0703          	lb	a4,1(s6)
   13eca:	fd070713          	addi	a4,a4,-48
   13ece:	fee674e3          	bgeu	a2,a4,13eb6 <printk+0xe8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   13ed2:	001b0703          	lb	a4,1(s6)
   13ed6:	02e00793          	li	a5,46
   13eda:	04f70963          	beq	a4,a5,13f2c <printk+0x15e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:366
			precision_width = 0;
   13ede:	4981                	li	s3,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:365
			precision_used = FALSE;
   13ee0:	4d01                	li	s10,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   13ee2:	001b0693          	addi	a3,s6,1
   13ee6:	001b0783          	lb	a5,1(s6)
   13eea:	06800713          	li	a4,104
   13eee:	06e78a63          	beq	a5,a4,13f62 <printk+0x194>
   13ef2:	06c00713          	li	a4,108
   13ef6:	04e78e63          	beq	a5,a4,13f52 <printk+0x184>
   13efa:	04c00713          	li	a4,76
   13efe:	04e78e63          	beq	a5,a4,13f5a <printk+0x18c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:387
		switch (c = *++p) {
   13f02:	001b0a93          	addi	s5,s6,1
   13f06:	001b0503          	lb	a0,1(s6)
   13f0a:	fa850793          	addi	a5,a0,-88
   13f0e:	0ff7f693          	andi	a3,a5,255
   13f12:	02000713          	li	a4,32
   13f16:	4cd76763          	bltu	a4,a3,143e4 <printk+0x616>
   13f1a:	00269793          	slli	a5,a3,0x2
   13f1e:	97e2                	add	a5,a5,s8
   13f20:	439c                	lw	a5,0(a5)
   13f22:	97e2                	add	a5,a5,s8
   13f24:	8782                	jr	a5
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:305
		field_width = 0;
   13f26:	4901                	li	s2,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:308
			switch (c = *++p) {
   13f28:	4625                	li	a2,9
   13f2a:	bf61                	j	13ec2 <printk+0xf4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   13f2c:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:335
			precision_width = 0;
   13f2e:	4981                	li	s3,0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   13f30:	4625                	li	a2,9
   13f32:	a039                	j	13f40 <printk+0x172>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:350
				precision_width = (precision_width * 10) +	(c - '0');
   13f34:	00299793          	slli	a5,s3,0x2
   13f38:	99be                	add	s3,s3,a5
   13f3a:	0986                	slli	s3,s3,0x1
   13f3c:	99ba                	add	s3,s3,a4
   13f3e:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   13f40:	001b0693          	addi	a3,s6,1
   13f44:	001b0703          	lb	a4,1(s6)
   13f48:	fd070713          	addi	a4,a4,-48
   13f4c:	fee674e3          	bgeu	a2,a4,13f34 <printk+0x166>
   13f50:	bf49                	j	13ee2 <printk+0x114>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:375
			 length_modifier |= LENMOD_l;
   13f52:	001cec93          	ori	s9,s9,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   13f56:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:376
			break;
   13f58:	b76d                	j	13f02 <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:378
			 length_modifier |= LENMOD_L;
   13f5a:	002cec93          	ori	s9,s9,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   13f5e:	8b36                	mv	s6,a3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:379
			break;
   13f60:	b74d                	j	13f02 <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   13f62:	8b36                	mv	s6,a3
   13f64:	bf79                	j	13f02 <printk+0x134>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
		case 'd':
		case 'i':
			 //此时ap为指向可变参数列表的第一个参数
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   13f66:	004b8793          	addi	a5,s7,4
   13f6a:	c63e                	sw	a5,12(sp)
   13f6c:	000ba783          	lw	a5,0(s7)
   13f70:	d23e                	sw	a5,36(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:392
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);//将整型转换成字符型保存在vstr中，返回字符数vlen
   13f72:	46a9                	li	a3,10
   13f74:	4605                	li	a2,1
   13f76:	104c                	addi	a1,sp,36
   13f78:	1068                	addi	a0,sp,44
   13f7a:	00000097          	auipc	ra,0x0
   13f7e:	a96080e7          	jalr	-1386(ra) # 13a10 <printk_mknumstr>
   13f82:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:393
			vstrp = &vstr[vlen];  //指向转换后的最后一个字符
   13f84:	107c                	addi	a5,sp,44
   13f86:	00a789b3          	add	s3,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:396

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
   13f8a:	5792                	lw	a5,36(sp)
   13f8c:	0007ca63          	bltz	a5,13fa0 <printk+0x1d2>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:402
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   13f90:	0024f793          	andi	a5,s1,2
   13f94:	cf8d                	beqz	a5,13fce <printk+0x200>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:404
					schar = '+';
					++vlen;
   13f96:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:403
					schar = '+';
   13f9a:	02b00d93          	li	s11,43
   13f9e:	a029                	j	13fa8 <printk+0x1da>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:398
				++vlen;
   13fa0:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:397
				schar = '-';
   13fa4:	02d00d93          	li	s11,45
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:419
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   13fa8:	0084f793          	andi	a5,s1,8
   13fac:	eb95                	bnez	a5,13fe0 <printk+0x212>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   13fae:	0014f793          	andi	a5,s1,1
   13fb2:	4a078e63          	beqz	a5,1446e <printk+0x6a0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   13fb6:	4bb2                	lw	s7,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:437
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
   13fb8:	280d8d63          	beqz	s11,14252 <printk+0x484>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:438
				printk_putc(schar, &count, info);
   13fbc:	8652                	mv	a2,s4
   13fbe:	102c                	addi	a1,sp,40
   13fc0:	856e                	mv	a0,s11
   13fc2:	00000097          	auipc	ra,0x0
   13fc6:	a12080e7          	jalr	-1518(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   13fca:	4bb2                	lw	s7,12(sp)
   13fcc:	a459                	j	14252 <printk+0x484>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:406
					if (IS_FLAG_SPACE(flags_used)) {
   13fce:	0044f793          	andi	a5,s1,4
   13fd2:	46078663          	beqz	a5,1443e <printk+0x670>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:408
						++vlen;
   13fd6:	00150b13          	addi	s6,a0,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:407
						schar = ' ';
   13fda:	02000d93          	li	s11,32
   13fde:	b7e9                	j	13fa8 <printk+0x1da>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:421
					printk_putc(schar, &count, info);  //输出符号
   13fe0:	8652                	mv	a2,s4
   13fe2:	102c                	addi	a1,sp,40
   13fe4:	856e                	mv	a0,s11
   13fe6:	00000097          	auipc	ra,0x0
   13fea:	9ee080e7          	jalr	-1554(ra) # 139d4 <printk_putc>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   13fee:	332b5963          	bge	s6,s2,14320 <printk+0x552>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   13ff2:	8652                	mv	a2,s4
   13ff4:	102c                	addi	a1,sp,40
   13ff6:	03000513          	li	a0,48
   13ffa:	00000097          	auipc	ra,0x0
   13ffe:	9da080e7          	jalr	-1574(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14002:	0b05                	addi	s6,s6,1
   14004:	ff2b17e3          	bne	s6,s2,13ff2 <printk+0x224>
   14008:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   1400a:	4bb2                	lw	s7,12(sp)
   1400c:	a4e9                	j	142d6 <printk+0x508>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:452
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg1(ap,double);
   1400e:	00cb8b13          	addi	s6,s7,12
   14012:	004bad83          	lw	s11,4(s7)
   14016:	008bab83          	lw	s7,8(s7)
   1401a:	cc6e                	sw	s11,24(sp)
   1401c:	ce5e                	sw	s7,28(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:456
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
   1401e:	4601                	li	a2,0
   14020:	4681                	li	a3,0
   14022:	856e                	mv	a0,s11
   14024:	85de                	mv	a1,s7
   14026:	00001097          	auipc	ra,0x1
   1402a:	c50080e7          	jalr	-944(ra) # 14c76 <__ledf2>
   1402e:	00054e63          	bltz	a0,1404a <printk+0x27c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   14032:	0024f793          	andi	a5,s1,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:464
					schar = '+';
   14036:	02b00b93          	li	s7,43
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:463
				if (IS_FLAG_PLUS(flags_used)) {
   1403a:	e385                	bnez	a5,1405a <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:467
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
   1403c:	0044fb93          	andi	s7,s1,4
   14040:	000b8d63          	beqz	s7,1405a <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:468
						schar = ' ';
   14044:	02000b93          	li	s7,32
   14048:	a809                	j	1405a <printk+0x28c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:458
				fval = -fval;				//负数取它的正数
   1404a:	cc6e                	sw	s11,24(sp)
   1404c:	800007b7          	lui	a5,0x80000
   14050:	0177c7b3          	xor	a5,a5,s7
   14054:	ce3e                	sw	a5,28(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:457
				schar = '-';
   14056:	02d00b93          	li	s7,45
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:478
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
   1405a:	060d1c63          	bnez	s10,140d2 <printk+0x304>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:485
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{
				if(length_modifier==0)   //浮点型精度到小数点后8位
   1405e:	080c9363          	bnez	s9,140e4 <printk+0x316>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:487
				{
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   14062:	4619                	li	a2,6
   14064:	106c                	addi	a1,sp,44
   14066:	0828                	addi	a0,sp,24
   14068:	00000097          	auipc	ra,0x0
   1406c:	a7e080e7          	jalr	-1410(ra) # 13ae6 <printk_mkfloatstr>
   14070:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:503
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   14072:	0084f793          	andi	a5,s1,8
   14076:	cbc1                	beqz	a5,14106 <printk+0x338>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:504
				if (schar)
   14078:	060b9f63          	bnez	s7,140f6 <printk+0x328>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1407c:	0129dd63          	bge	s3,s2,14096 <printk+0x2c8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14080:	8652                	mv	a2,s4
   14082:	102c                	addi	a1,sp,40
   14084:	03000513          	li	a0,48
   14088:	00000097          	auipc	ra,0x0
   1408c:	94c080e7          	jalr	-1716(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14090:	0985                	addi	s3,s3,1
   14092:	ff2997e3          	bne	s3,s2,14080 <printk+0x2b2>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:524
			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
				printk_putc(schar, &count, info);
			}
			while (*vstrp)
   14096:	02c10503          	lb	a0,44(sp)
   1409a:	89ca                	mv	s3,s2
   1409c:	cd09                	beqz	a0,140b6 <printk+0x2e8>
   1409e:	02c10b93          	addi	s7,sp,44
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:525
				printk_putc(*vstrp++, &count, info);
   140a2:	0b85                	addi	s7,s7,1
   140a4:	8652                	mv	a2,s4
   140a6:	102c                	addi	a1,sp,40
   140a8:	00000097          	auipc	ra,0x0
   140ac:	92c080e7          	jalr	-1748(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   140b0:	000b8503          	lb	a0,0(s7)
   140b4:	f57d                	bnez	a0,140a2 <printk+0x2d4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   140b6:	8885                	andi	s1,s1,1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   140b8:	8bda                	mv	s7,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   140ba:	d80488e3          	beqz	s1,13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:527
				printk_pad_space(vlen, field_width, &count, info);
   140be:	86d2                	mv	a3,s4
   140c0:	1030                	addi	a2,sp,40
   140c2:	85ca                	mv	a1,s2
   140c4:	854e                	mv	a0,s3
   140c6:	00000097          	auipc	ra,0x0
   140ca:	9cc080e7          	jalr	-1588(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   140ce:	8bda                	mv	s7,s6
   140d0:	bbad                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:480
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
   140d2:	864e                	mv	a2,s3
   140d4:	106c                	addi	a1,sp,44
   140d6:	0828                	addi	a0,sp,24
   140d8:	00000097          	auipc	ra,0x0
   140dc:	a0e080e7          	jalr	-1522(ra) # 13ae6 <printk_mkfloatstr>
   140e0:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:481
				vstrp = &vstr[0];  //指向转换后的第一个字符
   140e2:	bf41                	j	14072 <printk+0x2a4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:492
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   140e4:	4619                	li	a2,6
   140e6:	106c                	addi	a1,sp,44
   140e8:	0828                	addi	a0,sp,24
   140ea:	00000097          	auipc	ra,0x0
   140ee:	9fc080e7          	jalr	-1540(ra) # 13ae6 <printk_mkfloatstr>
   140f2:	89aa                	mv	s3,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:493
					vstrp = &vstr[0];  //指向转换后的第一个字符
   140f4:	bfbd                	j	14072 <printk+0x2a4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:505
					printk_putc(schar, &count, info);  //输出符号
   140f6:	8652                	mv	a2,s4
   140f8:	102c                	addi	a1,sp,40
   140fa:	855e                	mv	a0,s7
   140fc:	00000097          	auipc	ra,0x0
   14100:	8d8080e7          	jalr	-1832(ra) # 139d4 <printk_putc>
   14104:	bfa5                	j	1407c <printk+0x2ae>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:510
				if (!IS_FLAG_MINUS(flags_used)) {
   14106:	0014f793          	andi	a5,s1,1
   1410a:	c799                	beqz	a5,14118 <printk+0x34a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:521
			if (!dschar && schar) {
   1410c:	020b9d63          	bnez	s7,14146 <printk+0x378>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14110:	02c10503          	lb	a0,44(sp)
   14114:	f549                	bnez	a0,1409e <printk+0x2d0>
   14116:	b765                	j	140be <printk+0x2f0>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:511
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14118:	86d2                	mv	a3,s4
   1411a:	1030                	addi	a2,sp,40
   1411c:	85ca                	mv	a1,s2
   1411e:	854e                	mv	a0,s3
   14120:	00000097          	auipc	ra,0x0
   14124:	972080e7          	jalr	-1678(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:513
					if (schar)
   14128:	000b9763          	bnez	s7,14136 <printk+0x368>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   1412c:	02c10503          	lb	a0,44(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   14130:	8bda                	mv	s7,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:524
			while (*vstrp)
   14132:	f535                	bnez	a0,1409e <printk+0x2d0>
   14134:	bb19                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:514
						printk_putc(schar, &count, info);
   14136:	8652                	mv	a2,s4
   14138:	102c                	addi	a1,sp,40
   1413a:	855e                	mv	a0,s7
   1413c:	00000097          	auipc	ra,0x0
   14140:	898080e7          	jalr	-1896(ra) # 139d4 <printk_putc>
   14144:	b7e5                	j	1412c <printk+0x35e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:522
				printk_putc(schar, &count, info);
   14146:	8652                	mv	a2,s4
   14148:	102c                	addi	a1,sp,40
   1414a:	855e                	mv	a0,s7
   1414c:	00000097          	auipc	ra,0x0
   14150:	888080e7          	jalr	-1912(ra) # 139d4 <printk_putc>
   14154:	bf75                	j	14110 <printk+0x342>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14156:	004b8d93          	addi	s11,s7,4
   1415a:	000ba783          	lw	a5,0(s7)
   1415e:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:534
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   14160:	46c1                	li	a3,16
   14162:	4601                	li	a2,0
   14164:	084c                	addi	a1,sp,20
   14166:	1068                	addi	a0,sp,44
   14168:	00000097          	auipc	ra,0x0
   1416c:	8a8080e7          	jalr	-1880(ra) # 13a10 <printk_mknumstr>
   14170:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:535
			vstrp = &vstr[vlen];
   14172:	107c                	addi	a5,sp,44
   14174:	00a789b3          	add	s3,a5,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:538

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
   14178:	0084f793          	andi	a5,s1,8
   1417c:	c3a5                	beqz	a5,141dc <printk+0x40e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:539
				if (IS_FLAG_POUND(flags_used)) {
   1417e:	0104fb93          	andi	s7,s1,16
   14182:	020b9863          	bnez	s7,141b2 <printk+0x3e4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:537
			dschar = FALSE;
   14186:	c65e                	sw	s7,12(sp)
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14188:	29255b63          	bge	a0,s2,1441e <printk+0x650>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   1418c:	8652                	mv	a2,s4
   1418e:	102c                	addi	a1,sp,40
   14190:	03000513          	li	a0,48
   14194:	00000097          	auipc	ra,0x0
   14198:	840080e7          	jalr	-1984(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1419c:	0b05                	addi	s6,s6,1
   1419e:	ff2b47e3          	blt	s6,s2,1418c <printk+0x3be>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:561
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   141a2:	180b8563          	beqz	s7,1432c <printk+0x55e>
   141a6:	8b4a                	mv	s6,s2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533 (discriminator 1)
			uval = (unsigned int) va_arg1(ap, unsigned int);
   141a8:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:561 (discriminator 1)
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   141aa:	47b2                	lw	a5,12(sp)
   141ac:	12079563          	bnez	a5,142d6 <printk+0x508>
   141b0:	a4a1                	j	143f8 <printk+0x62a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:540
					printk_putc('0', &count, info);
   141b2:	8652                	mv	a2,s4
   141b4:	102c                	addi	a1,sp,40
   141b6:	03000513          	li	a0,48
   141ba:	00000097          	auipc	ra,0x0
   141be:	81a080e7          	jalr	-2022(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:541
					printk_putc('x', &count, info);
   141c2:	8652                	mv	a2,s4
   141c4:	102c                	addi	a1,sp,40
   141c6:	07800513          	li	a0,120
   141ca:	00000097          	auipc	ra,0x0
   141ce:	80a080e7          	jalr	-2038(ra) # 139d4 <printk_putc>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   141d2:	152b5a63          	bge	s6,s2,14326 <printk+0x558>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:543
					dschar = TRUE;
   141d6:	4785                	li	a5,1
   141d8:	c63e                	sw	a5,12(sp)
   141da:	bf4d                	j	1418c <printk+0x3be>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:548
				if (!IS_FLAG_MINUS(flags_used)) {
   141dc:	0014f793          	andi	a5,s1,1
   141e0:	20079963          	bnez	a5,143f2 <printk+0x624>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:549
					if (IS_FLAG_POUND(flags_used)) {
   141e4:	0104f793          	andi	a5,s1,16
   141e8:	22078e63          	beqz	a5,14424 <printk+0x656>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:550
						vlen += 2;
   141ec:	00250b13          	addi	s6,a0,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   141f0:	86d2                	mv	a3,s4
   141f2:	1030                	addi	a2,sp,40
   141f4:	85ca                	mv	a1,s2
   141f6:	855a                	mv	a0,s6
   141f8:	00000097          	auipc	ra,0x0
   141fc:	89a080e7          	jalr	-1894(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:554
						printk_putc('0', &count, info);
   14200:	8652                	mv	a2,s4
   14202:	102c                	addi	a1,sp,40
   14204:	03000513          	li	a0,48
   14208:	fffff097          	auipc	ra,0xfffff
   1420c:	7cc080e7          	jalr	1996(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:555
						printk_putc('x', &count, info);
   14210:	8652                	mv	a2,s4
   14212:	102c                	addi	a1,sp,40
   14214:	07800513          	li	a0,120
   14218:	fffff097          	auipc	ra,0xfffff
   1421c:	7bc080e7          	jalr	1980(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14220:	ac09                	j	14432 <printk+0x664>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:569
				vlen += 2;
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14222:	004b8993          	addi	s3,s7,4
   14226:	000ba783          	lw	a5,0(s7)
   1422a:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:570
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
   1422c:	46a1                	li	a3,8
   1422e:	4601                	li	a2,0
   14230:	084c                	addi	a1,sp,20
   14232:	1068                	addi	a0,sp,44
   14234:	fffff097          	auipc	ra,0xfffff
   14238:	7dc080e7          	jalr	2012(ra) # 13a10 <printk_mknumstr>
   1423c:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:569
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1423e:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:586
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg1(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
   14240:	107c                	addi	a5,sp,44
   14242:	016789b3          	add	s3,a5,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:588

			if (IS_FLAG_ZERO(flags_used)) {
   14246:	0084f793          	andi	a5,s1,8
   1424a:	eba5                	bnez	a5,142ba <printk+0x4ec>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:592
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   1424c:	0014f793          	andi	a5,s1,1
   14250:	cfc5                	beqz	a5,14308 <printk+0x53a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
					printk_pad_space(vlen, field_width, &count, info);
				}
			}

			cont_xd: while (*vstrp)
   14252:	00098503          	lb	a0,0(s3)
   14256:	e159                	bnez	a0,142dc <printk+0x50e>
   14258:	a879                	j	142f6 <printk+0x528>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1425a:	004b8993          	addi	s3,s7,4
   1425e:	000ba783          	lw	a5,0(s7)
   14262:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:575
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
   14264:	4689                	li	a3,2
   14266:	4601                	li	a2,0
   14268:	084c                	addi	a1,sp,20
   1426a:	1068                	addi	a0,sp,44
   1426c:	fffff097          	auipc	ra,0xfffff
   14270:	7a4080e7          	jalr	1956(ra) # 13a10 <printk_mknumstr>
   14274:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14276:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:576
			goto cont_u;
   14278:	b7e1                	j	14240 <printk+0x472>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   1427a:	004b8993          	addi	s3,s7,4
   1427e:	000ba783          	lw	a5,0(s7)
   14282:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:580
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   14284:	46c1                	li	a3,16
   14286:	4601                	li	a2,0
   14288:	084c                	addi	a1,sp,20
   1428a:	1068                	addi	a0,sp,44
   1428c:	fffff097          	auipc	ra,0xfffff
   14290:	784080e7          	jalr	1924(ra) # 13a10 <printk_mknumstr>
   14294:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   14296:	8bce                	mv	s7,s3
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:581
			goto cont_u;
   14298:	b765                	j	14240 <printk+0x472>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1429a:	004b8993          	addi	s3,s7,4
   1429e:	000ba783          	lw	a5,0(s7)
   142a2:	ca3e                	sw	a5,20(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:584
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
   142a4:	46a9                	li	a3,10
   142a6:	4601                	li	a2,0
   142a8:	084c                	addi	a1,sp,20
   142aa:	1068                	addi	a0,sp,44
   142ac:	fffff097          	auipc	ra,0xfffff
   142b0:	764080e7          	jalr	1892(ra) # 13a10 <printk_mknumstr>
   142b4:	8b2a                	mv	s6,a0
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   142b6:	8bce                	mv	s7,s3
   142b8:	b761                	j	14240 <printk+0x472>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   142ba:	072b5c63          	bge	s6,s2,14332 <printk+0x564>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   142be:	8652                	mv	a2,s4
   142c0:	102c                	addi	a1,sp,40
   142c2:	03000513          	li	a0,48
   142c6:	fffff097          	auipc	ra,0xfffff
   142ca:	70e080e7          	jalr	1806(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   142ce:	0b05                	addi	s6,s6,1
   142d0:	ff2b17e3          	bne	s6,s2,142be <printk+0x4f0>
   142d4:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597 (discriminator 1)
			cont_xd: while (*vstrp)
   142d6:	00098503          	lb	a0,0(s3)
   142da:	c919                	beqz	a0,142f0 <printk+0x522>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:598
				printk_putc(*vstrp--, &count, info);
   142dc:	19fd                	addi	s3,s3,-1
   142de:	8652                	mv	a2,s4
   142e0:	102c                	addi	a1,sp,40
   142e2:	fffff097          	auipc	ra,0xfffff
   142e6:	6f2080e7          	jalr	1778(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   142ea:	00098503          	lb	a0,0(s3)
   142ee:	f57d                	bnez	a0,142dc <printk+0x50e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:600

			if (IS_FLAG_MINUS(flags_used)) {
   142f0:	8885                	andi	s1,s1,1
   142f2:	b4048ce3          	beqz	s1,13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:601
				printk_pad_space(vlen, field_width, &count, info);
   142f6:	86d2                	mv	a3,s4
   142f8:	1030                	addi	a2,sp,40
   142fa:	85ca                	mv	a1,s2
   142fc:	855a                	mv	a0,s6
   142fe:	fffff097          	auipc	ra,0xfffff
   14302:	794080e7          	jalr	1940(ra) # 13a92 <printk_pad_space>
   14306:	b691                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:593
					printk_pad_space(vlen, field_width, &count, info);
   14308:	86d2                	mv	a3,s4
   1430a:	1030                	addi	a2,sp,40
   1430c:	85ca                	mv	a1,s2
   1430e:	855a                	mv	a0,s6
   14310:	fffff097          	auipc	ra,0xfffff
   14314:	782080e7          	jalr	1922(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14318:	00098503          	lb	a0,0(s3)
   1431c:	f161                	bnez	a0,142dc <printk+0x50e>
   1431e:	b635                	j	13e4a <printk+0x7c>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14320:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14322:	4bb2                	lw	s7,12(sp)
   14324:	bf4d                	j	142d6 <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14326:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14328:	8bee                	mv	s7,s11
   1432a:	b775                	j	142d6 <printk+0x508>
   1432c:	8b4a                	mv	s6,s2
   1432e:	8bee                	mv	s7,s11
   14330:	b75d                	j	142d6 <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14332:	8b4a                	mv	s6,s2
   14334:	b74d                	j	142d6 <printk+0x508>
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:607
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg1(ap, unsigned int);
   14336:	004b8493          	addi	s1,s7,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:608
			printk_putc(cval, &count, info);
   1433a:	8652                	mv	a2,s4
   1433c:	102c                	addi	a1,sp,40
   1433e:	000b8503          	lb	a0,0(s7)
   14342:	fffff097          	auipc	ra,0xfffff
   14346:	692080e7          	jalr	1682(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:607
			cval = (char) va_arg1(ap, unsigned int);
   1434a:	8ba6                	mv	s7,s1
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:609
			break;
   1434c:	bcfd                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:611
		case 's':
			sval = (char *) va_arg1(ap, char *);
   1434e:	004b8d93          	addi	s11,s7,4
   14352:	000bab03          	lw	s6,0(s7)
   14356:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:612
			if (sval) {
   14358:	ae0b09e3          	beqz	s6,13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:613
				vlen = strlen(sval);
   1435c:	855a                	mv	a0,s6
   1435e:	00002097          	auipc	ra,0x2
   14362:	93a080e7          	jalr	-1734(ra) # 15c98 <strlen>
   14366:	c62a                	sw	a0,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:614
				if (!IS_FLAG_MINUS(flags_used)) {
   14368:	8885                	andi	s1,s1,1
   1436a:	cc85                	beqz	s1,143a2 <printk+0x5d4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:617
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
   1436c:	04099363          	bnez	s3,143b2 <printk+0x5e4>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:628
							printk_putc(*sval++, &count, info);					
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
   14370:	000b0503          	lb	a0,0(s6)
   14374:	c919                	beqz	a0,1438a <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:629
					   printk_putc(*sval++, &count, info);
   14376:	0b05                	addi	s6,s6,1
   14378:	8652                	mv	a2,s4
   1437a:	102c                	addi	a1,sp,40
   1437c:	fffff097          	auipc	ra,0xfffff
   14380:	658080e7          	jalr	1624(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:628
					while (*sval)
   14384:	000b0503          	lb	a0,0(s6)
   14388:	f57d                	bnez	a0,14376 <printk+0x5a8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:611
			sval = (char *) va_arg1(ap, char *);
   1438a:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:631
				}
				if (IS_FLAG_MINUS(flags_used)) {
   1438c:	aa048fe3          	beqz	s1,13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:632
					printk_pad_space(vlen, field_width, &count, info);
   14390:	86d2                	mv	a3,s4
   14392:	1030                	addi	a2,sp,40
   14394:	85ca                	mv	a1,s2
   14396:	4532                	lw	a0,12(sp)
   14398:	fffff097          	auipc	ra,0xfffff
   1439c:	6fa080e7          	jalr	1786(ra) # 13a92 <printk_pad_space>
   143a0:	b46d                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:615
					printk_pad_space(vlen, field_width, &count, info);
   143a2:	86d2                	mv	a3,s4
   143a4:	1030                	addi	a2,sp,40
   143a6:	85ca                	mv	a1,s2
   143a8:	fffff097          	auipc	ra,0xfffff
   143ac:	6ea080e7          	jalr	1770(ra) # 13a92 <printk_pad_space>
   143b0:	bf75                	j	1436c <printk+0x59e>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   143b2:	fd305ce3          	blez	s3,1438a <printk+0x5bc>
   143b6:	000b0503          	lb	a0,0(s6)
   143ba:	d961                	beqz	a0,1438a <printk+0x5bc>
   143bc:	99da                	add	s3,s3,s6
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:623
							printk_putc(*sval++, &count, info);					
   143be:	0b05                	addi	s6,s6,1
   143c0:	8652                	mv	a2,s4
   143c2:	102c                	addi	a1,sp,40
   143c4:	fffff097          	auipc	ra,0xfffff
   143c8:	610080e7          	jalr	1552(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   143cc:	fb3b0fe3          	beq	s6,s3,1438a <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:620 (discriminator 1)
   143d0:	000b0503          	lb	a0,0(s6)
   143d4:	f56d                	bnez	a0,143be <printk+0x5f0>
   143d6:	bf55                	j	1438a <printk+0x5bc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:637
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg1(ap, int *);
   143d8:	000ba783          	lw	a5,0(s7)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:638
			*ivalp = count;
   143dc:	5722                	lw	a4,40(sp)
   143de:	c398                	sw	a4,0(a5)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:637
			ivalp = (int *) va_arg1(ap, int *);
   143e0:	0b91                	addi	s7,s7,4
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:639
			break;
   143e2:	b4a5                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:642

		default:
			printk_putc(c, &count, info);
   143e4:	8652                	mv	a2,s4
   143e6:	102c                	addi	a1,sp,40
   143e8:	fffff097          	auipc	ra,0xfffff
   143ec:	5ec080e7          	jalr	1516(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:643
			break;
   143f0:	bca9                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   143f2:	0104f793          	andi	a5,s1,16
   143f6:	c7b5                	beqz	a5,14462 <printk+0x694>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:562
				printk_putc('0', &count, info);
   143f8:	8652                	mv	a2,s4
   143fa:	102c                	addi	a1,sp,40
   143fc:	03000513          	li	a0,48
   14400:	fffff097          	auipc	ra,0xfffff
   14404:	5d4080e7          	jalr	1492(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:563
				printk_putc('x', &count, info);
   14408:	8652                	mv	a2,s4
   1440a:	102c                	addi	a1,sp,40
   1440c:	07800513          	li	a0,120
   14410:	fffff097          	auipc	ra,0xfffff
   14414:	5c4080e7          	jalr	1476(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:564
				vlen += 2;
   14418:	0b09                	addi	s6,s6,2
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1441a:	8bee                	mv	s7,s11
   1441c:	bd6d                	j	142d6 <printk+0x508>
printk_pad_zero():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1441e:	8b4a                	mv	s6,s2
printk():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14420:	8bee                	mv	s7,s11
   14422:	bd55                	j	142d6 <printk+0x508>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14424:	86d2                	mv	a3,s4
   14426:	1030                	addi	a2,sp,40
   14428:	85ca                	mv	a1,s2
   1442a:	fffff097          	auipc	ra,0xfffff
   1442e:	668080e7          	jalr	1640(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14432:	00098503          	lb	a0,0(s3)
   14436:	8bee                	mv	s7,s11
   14438:	ea0512e3          	bnez	a0,142dc <printk+0x50e>
   1443c:	b439                	j	13e4a <printk+0x7c>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:419
			if (IS_FLAG_ZERO(flags_used)) {
   1443e:	0084fd93          	andi	s11,s1,8
   14442:	ba0d96e3          	bnez	s11,13fee <printk+0x220>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:426
				if (!IS_FLAG_MINUS(flags_used)) {
   14446:	0014f793          	andi	a5,s1,1
   1444a:	b60796e3          	bnez	a5,13fb6 <printk+0x1e8>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   1444e:	86d2                	mv	a3,s4
   14450:	1030                	addi	a2,sp,40
   14452:	85ca                	mv	a1,s2
   14454:	855a                	mv	a0,s6
   14456:	fffff097          	auipc	ra,0xfffff
   1445a:	63c080e7          	jalr	1596(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   1445e:	4bb2                	lw	s7,12(sp)
   14460:	bd65                	j	14318 <printk+0x54a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14462:	00098503          	lb	a0,0(s3)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14466:	8bee                	mv	s7,s11
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14468:	e6051ae3          	bnez	a0,142dc <printk+0x50e>
   1446c:	b569                	j	142f6 <printk+0x528>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   1446e:	86d2                	mv	a3,s4
   14470:	1030                	addi	a2,sp,40
   14472:	85ca                	mv	a1,s2
   14474:	855a                	mv	a0,s6
   14476:	fffff097          	auipc	ra,0xfffff
   1447a:	61c080e7          	jalr	1564(ra) # 13a92 <printk_pad_space>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:430
						printk_putc(schar, &count, info);
   1447e:	8652                	mv	a2,s4
   14480:	102c                	addi	a1,sp,40
   14482:	856e                	mv	a0,s11
   14484:	fffff097          	auipc	ra,0xfffff
   14488:	550080e7          	jalr	1360(ra) # 139d4 <printk_putc>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   1448c:	4bb2                	lw	s7,12(sp)
   1448e:	b569                	j	14318 <printk+0x54a>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:646
		}
	}
	return count;
   14490:	5522                	lw	a0,40(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:647
}
   14492:	40ba                	lw	ra,140(sp)
   14494:	442a                	lw	s0,136(sp)
   14496:	449a                	lw	s1,132(sp)
   14498:	490a                	lw	s2,128(sp)
   1449a:	59f6                	lw	s3,124(sp)
   1449c:	5a66                	lw	s4,120(sp)
   1449e:	5ad6                	lw	s5,116(sp)
   144a0:	5b46                	lw	s6,112(sp)
   144a2:	5bb6                	lw	s7,108(sp)
   144a4:	5c26                	lw	s8,104(sp)
   144a6:	5c96                	lw	s9,100(sp)
   144a8:	5d06                	lw	s10,96(sp)
   144aa:	4df6                	lw	s11,92(sp)
   144ac:	6149                	addi	sp,sp,144
   144ae:	8082                	ret

000144b0 <myprintf>:
myprintf():
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:656
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
   144b0:	7139                	addi	sp,sp,-64
   144b2:	ce06                	sw	ra,28(sp)
   144b4:	d22e                	sw	a1,36(sp)
   144b6:	d432                	sw	a2,40(sp)
   144b8:	d636                	sw	a3,44(sp)
   144ba:	d83a                	sw	a4,48(sp)
   144bc:	da3e                	sw	a5,52(sp)
   144be:	dc42                	sw	a6,56(sp)
   144c0:	de46                	sw	a7,60(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:662
	//char * ap;
  va_list ap;
	char c;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
   144c2:	4785                	li	a5,1
   144c4:	c03e                	sw	a5,0(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:663
	info.func = &out_char;     //调用的串口输出函数
   144c6:	fffff797          	auipc	a5,0xfffff
   144ca:	60878793          	addi	a5,a5,1544 # 13ace <out_char>
   144ce:	c23e                	sw	a5,4(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:664
	va_start(ap, fmt);  //对ap 进行初始化，让它指向可变参数表里面的第一个参数
   144d0:	1050                	addi	a2,sp,36
   144d2:	c632                	sw	a2,12(sp)
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:665
	rvalue = printk(&info, fmt, ap);
   144d4:	85aa                	mv	a1,a0
   144d6:	850a                	mv	a0,sp
   144d8:	00000097          	auipc	ra,0x0
   144dc:	8f6080e7          	jalr	-1802(ra) # 13dce <printk>
C:\Users\liangfan\OneDrive\enbed\CH573\AHL-CH573-EXP-V1.3-20241124\03-Software\CH09\Flash-CH573\Debug/srcc/printf.c:670
    
	va_end(ap);

	return rvalue;
}
   144e0:	40f2                	lw	ra,28(sp)
   144e2:	6121                	addi	sp,sp,64
   144e4:	8082                	ret

000144e6 <__udivdi3>:
__udivdi3():
   144e6:	87b6                	mv	a5,a3
   144e8:	88b2                	mv	a7,a2
   144ea:	832a                	mv	t1,a0
   144ec:	882e                	mv	a6,a1
   144ee:	14069d63          	bnez	a3,14648 <__udivdi3+0x162>
   144f2:	0ac5f963          	bgeu	a1,a2,145a4 <__udivdi3+0xbe>
   144f6:	6741                	lui	a4,0x10
   144f8:	1ae66e63          	bltu	a2,a4,146b4 <__udivdi3+0x1ce>
   144fc:	010007b7          	lui	a5,0x1000
   14500:	34f66363          	bltu	a2,a5,14846 <__udivdi3+0x360>
   14504:	01865693          	srli	a3,a2,0x18
   14508:	47e1                	li	a5,24
   1450a:	00002717          	auipc	a4,0x2
   1450e:	c4e70713          	addi	a4,a4,-946 # 16158 <__clz_tab>
   14512:	9736                	add	a4,a4,a3
   14514:	00074703          	lbu	a4,0(a4)
   14518:	97ba                	add	a5,a5,a4
   1451a:	02000713          	li	a4,32
   1451e:	8f1d                	sub	a4,a4,a5
   14520:	cb19                	beqz	a4,14536 <__udivdi3+0x50>
   14522:	00e59833          	sll	a6,a1,a4
   14526:	00f557b3          	srl	a5,a0,a5
   1452a:	00e618b3          	sll	a7,a2,a4
   1452e:	0107e833          	or	a6,a5,a6
   14532:	00e51333          	sll	t1,a0,a4
   14536:	0108d613          	srli	a2,a7,0x10
   1453a:	02c85533          	divu	a0,a6,a2
   1453e:	01089693          	slli	a3,a7,0x10
   14542:	82c1                	srli	a3,a3,0x10
   14544:	01035793          	srli	a5,t1,0x10
   14548:	02c87733          	remu	a4,a6,a2
   1454c:	02a685b3          	mul	a1,a3,a0
   14550:	0742                	slli	a4,a4,0x10
   14552:	00f76833          	or	a6,a4,a5
   14556:	00b87a63          	bgeu	a6,a1,1456a <__udivdi3+0x84>
   1455a:	9846                	add	a6,a6,a7
   1455c:	fff50793          	addi	a5,a0,-1
   14560:	01186463          	bltu	a6,a7,14568 <__udivdi3+0x82>
   14564:	30b86763          	bltu	a6,a1,14872 <__udivdi3+0x38c>
   14568:	853e                	mv	a0,a5
   1456a:	40b80833          	sub	a6,a6,a1
   1456e:	02c85733          	divu	a4,a6,a2
   14572:	0342                	slli	t1,t1,0x10
   14574:	01035313          	srli	t1,t1,0x10
   14578:	02c87833          	remu	a6,a6,a2
   1457c:	02e686b3          	mul	a3,a3,a4
   14580:	0842                	slli	a6,a6,0x10
   14582:	00686833          	or	a6,a6,t1
   14586:	00d87b63          	bgeu	a6,a3,1459c <__udivdi3+0xb6>
   1458a:	9846                	add	a6,a6,a7
   1458c:	fff70793          	addi	a5,a4,-1
   14590:	01186563          	bltu	a6,a7,1459a <__udivdi3+0xb4>
   14594:	1779                	addi	a4,a4,-2
   14596:	00d86363          	bltu	a6,a3,1459c <__udivdi3+0xb6>
   1459a:	873e                	mv	a4,a5
   1459c:	0542                	slli	a0,a0,0x10
   1459e:	8d59                	or	a0,a0,a4
   145a0:	4581                	li	a1,0
   145a2:	8082                	ret
   145a4:	e601                	bnez	a2,145ac <__udivdi3+0xc6>
   145a6:	4705                	li	a4,1
   145a8:	02c758b3          	divu	a7,a4,a2
   145ac:	6741                	lui	a4,0x10
   145ae:	0ee8ea63          	bltu	a7,a4,146a2 <__udivdi3+0x1bc>
   145b2:	010007b7          	lui	a5,0x1000
   145b6:	28f8ec63          	bltu	a7,a5,1484e <__udivdi3+0x368>
   145ba:	0188d693          	srli	a3,a7,0x18
   145be:	47e1                	li	a5,24
   145c0:	00002717          	auipc	a4,0x2
   145c4:	b9870713          	addi	a4,a4,-1128 # 16158 <__clz_tab>
   145c8:	9736                	add	a4,a4,a3
   145ca:	00074683          	lbu	a3,0(a4)
   145ce:	96be                	add	a3,a3,a5
   145d0:	02000793          	li	a5,32
   145d4:	8f95                	sub	a5,a5,a3
   145d6:	ebe5                	bnez	a5,146c6 <__udivdi3+0x1e0>
   145d8:	01089e93          	slli	t4,a7,0x10
   145dc:	41158733          	sub	a4,a1,a7
   145e0:	0108df13          	srli	t5,a7,0x10
   145e4:	010ede93          	srli	t4,t4,0x10
   145e8:	4585                	li	a1,1
   145ea:	01035793          	srli	a5,t1,0x10
   145ee:	03e75533          	divu	a0,a4,t5
   145f2:	03e77733          	remu	a4,a4,t5
   145f6:	03d506b3          	mul	a3,a0,t4
   145fa:	0742                	slli	a4,a4,0x10
   145fc:	8fd9                	or	a5,a5,a4
   145fe:	00d7fa63          	bgeu	a5,a3,14612 <__udivdi3+0x12c>
   14602:	97c6                	add	a5,a5,a7
   14604:	fff50713          	addi	a4,a0,-1
   14608:	0117e463          	bltu	a5,a7,14610 <__udivdi3+0x12a>
   1460c:	26d7e663          	bltu	a5,a3,14878 <__udivdi3+0x392>
   14610:	853a                	mv	a0,a4
   14612:	8f95                	sub	a5,a5,a3
   14614:	03e7d733          	divu	a4,a5,t5
   14618:	0342                	slli	t1,t1,0x10
   1461a:	01035313          	srli	t1,t1,0x10
   1461e:	03e7f7b3          	remu	a5,a5,t5
   14622:	03d70eb3          	mul	t4,a4,t4
   14626:	07c2                	slli	a5,a5,0x10
   14628:	0067e7b3          	or	a5,a5,t1
   1462c:	01d7fb63          	bgeu	a5,t4,14642 <__udivdi3+0x15c>
   14630:	97c6                	add	a5,a5,a7
   14632:	fff70693          	addi	a3,a4,-1
   14636:	0117e563          	bltu	a5,a7,14640 <__udivdi3+0x15a>
   1463a:	1779                	addi	a4,a4,-2
   1463c:	01d7e363          	bltu	a5,t4,14642 <__udivdi3+0x15c>
   14640:	8736                	mv	a4,a3
   14642:	0542                	slli	a0,a0,0x10
   14644:	8d59                	or	a0,a0,a4
   14646:	8082                	ret
   14648:	04d5e263          	bltu	a1,a3,1468c <__udivdi3+0x1a6>
   1464c:	67c1                	lui	a5,0x10
   1464e:	04f6e263          	bltu	a3,a5,14692 <__udivdi3+0x1ac>
   14652:	010007b7          	lui	a5,0x1000
   14656:	1ef6e463          	bltu	a3,a5,1483e <__udivdi3+0x358>
   1465a:	0186d713          	srli	a4,a3,0x18
   1465e:	4861                	li	a6,24
   14660:	00002797          	auipc	a5,0x2
   14664:	af878793          	addi	a5,a5,-1288 # 16158 <__clz_tab>
   14668:	97ba                	add	a5,a5,a4
   1466a:	0007c703          	lbu	a4,0(a5)
   1466e:	02000e13          	li	t3,32
   14672:	9742                	add	a4,a4,a6
   14674:	40ee0e33          	sub	t3,t3,a4
   14678:	0c0e1a63          	bnez	t3,1474c <__udivdi3+0x266>
   1467c:	1cb6ed63          	bltu	a3,a1,14856 <__udivdi3+0x370>
   14680:	00c53533          	sltu	a0,a0,a2
   14684:	00154513          	xori	a0,a0,1
   14688:	4581                	li	a1,0
   1468a:	8082                	ret
   1468c:	4581                	li	a1,0
   1468e:	4501                	li	a0,0
   14690:	8082                	ret
   14692:	0ff00793          	li	a5,255
   14696:	1cd7f363          	bgeu	a5,a3,1485c <__udivdi3+0x376>
   1469a:	0086d713          	srli	a4,a3,0x8
   1469e:	4821                	li	a6,8
   146a0:	b7c1                	j	14660 <__udivdi3+0x17a>
   146a2:	0ff00713          	li	a4,255
   146a6:	86c6                	mv	a3,a7
   146a8:	f1177ce3          	bgeu	a4,a7,145c0 <__udivdi3+0xda>
   146ac:	0088d693          	srli	a3,a7,0x8
   146b0:	47a1                	li	a5,8
   146b2:	b739                	j	145c0 <__udivdi3+0xda>
   146b4:	0ff00713          	li	a4,255
   146b8:	86b2                	mv	a3,a2
   146ba:	e4c778e3          	bgeu	a4,a2,1450a <__udivdi3+0x24>
   146be:	00865693          	srli	a3,a2,0x8
   146c2:	47a1                	li	a5,8
   146c4:	b599                	j	1450a <__udivdi3+0x24>
   146c6:	00f898b3          	sll	a7,a7,a5
   146ca:	00d5d633          	srl	a2,a1,a3
   146ce:	0108df13          	srli	t5,a7,0x10
   146d2:	03e65e33          	divu	t3,a2,t5
   146d6:	00f59733          	sll	a4,a1,a5
   146da:	00d556b3          	srl	a3,a0,a3
   146de:	8f55                	or	a4,a4,a3
   146e0:	01089e93          	slli	t4,a7,0x10
   146e4:	010ede93          	srli	t4,t4,0x10
   146e8:	00f51333          	sll	t1,a0,a5
   146ec:	01075593          	srli	a1,a4,0x10
   146f0:	03e676b3          	remu	a3,a2,t5
   146f4:	03ce87b3          	mul	a5,t4,t3
   146f8:	06c2                	slli	a3,a3,0x10
   146fa:	8ecd                	or	a3,a3,a1
   146fc:	00f6fb63          	bgeu	a3,a5,14712 <__udivdi3+0x22c>
   14700:	96c6                	add	a3,a3,a7
   14702:	fffe0613          	addi	a2,t3,-1
   14706:	1716e463          	bltu	a3,a7,1486e <__udivdi3+0x388>
   1470a:	16f6f263          	bgeu	a3,a5,1486e <__udivdi3+0x388>
   1470e:	1e79                	addi	t3,t3,-2
   14710:	96c6                	add	a3,a3,a7
   14712:	8e9d                	sub	a3,a3,a5
   14714:	03e6d633          	divu	a2,a3,t5
   14718:	01071793          	slli	a5,a4,0x10
   1471c:	83c1                	srli	a5,a5,0x10
   1471e:	03e6f6b3          	remu	a3,a3,t5
   14722:	02ce8533          	mul	a0,t4,a2
   14726:	01069713          	slli	a4,a3,0x10
   1472a:	8f5d                	or	a4,a4,a5
   1472c:	00a77b63          	bgeu	a4,a0,14742 <__udivdi3+0x25c>
   14730:	9746                	add	a4,a4,a7
   14732:	fff60793          	addi	a5,a2,-1
   14736:	13176863          	bltu	a4,a7,14866 <__udivdi3+0x380>
   1473a:	12a77663          	bgeu	a4,a0,14866 <__udivdi3+0x380>
   1473e:	1679                	addi	a2,a2,-2
   14740:	9746                	add	a4,a4,a7
   14742:	010e1593          	slli	a1,t3,0x10
   14746:	8f09                	sub	a4,a4,a0
   14748:	8dd1                	or	a1,a1,a2
   1474a:	b545                	j	145ea <__udivdi3+0x104>
   1474c:	00e657b3          	srl	a5,a2,a4
   14750:	01c696b3          	sll	a3,a3,t3
   14754:	8edd                	or	a3,a3,a5
   14756:	00e5d333          	srl	t1,a1,a4
   1475a:	0106df13          	srli	t5,a3,0x10
   1475e:	03e357b3          	divu	a5,t1,t5
   14762:	01069e93          	slli	t4,a3,0x10
   14766:	010ede93          	srli	t4,t4,0x10
   1476a:	01c59833          	sll	a6,a1,t3
   1476e:	00e55733          	srl	a4,a0,a4
   14772:	01076833          	or	a6,a4,a6
   14776:	01085893          	srli	a7,a6,0x10
   1477a:	01c61633          	sll	a2,a2,t3
   1477e:	03e37333          	remu	t1,t1,t5
   14782:	02fe85b3          	mul	a1,t4,a5
   14786:	0342                	slli	t1,t1,0x10
   14788:	011368b3          	or	a7,t1,a7
   1478c:	00b8fb63          	bgeu	a7,a1,147a2 <__udivdi3+0x2bc>
   14790:	98b6                	add	a7,a7,a3
   14792:	fff78713          	addi	a4,a5,-1
   14796:	0cd8ea63          	bltu	a7,a3,1486a <__udivdi3+0x384>
   1479a:	0cb8f863          	bgeu	a7,a1,1486a <__udivdi3+0x384>
   1479e:	17f9                	addi	a5,a5,-2
   147a0:	98b6                	add	a7,a7,a3
   147a2:	40b888b3          	sub	a7,a7,a1
   147a6:	03e8d733          	divu	a4,a7,t5
   147aa:	0842                	slli	a6,a6,0x10
   147ac:	01085813          	srli	a6,a6,0x10
   147b0:	03e8f8b3          	remu	a7,a7,t5
   147b4:	02ee8333          	mul	t1,t4,a4
   147b8:	08c2                	slli	a7,a7,0x10
   147ba:	0108e5b3          	or	a1,a7,a6
   147be:	0065fb63          	bgeu	a1,t1,147d4 <__udivdi3+0x2ee>
   147c2:	95b6                	add	a1,a1,a3
   147c4:	fff70813          	addi	a6,a4,-1
   147c8:	08d5ed63          	bltu	a1,a3,14862 <__udivdi3+0x37c>
   147cc:	0865fb63          	bgeu	a1,t1,14862 <__udivdi3+0x37c>
   147d0:	1779                	addi	a4,a4,-2
   147d2:	95b6                	add	a1,a1,a3
   147d4:	07c2                	slli	a5,a5,0x10
   147d6:	6f41                	lui	t5,0x10
   147d8:	8fd9                	or	a5,a5,a4
   147da:	ffff0713          	addi	a4,t5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   147de:	00e7f6b3          	and	a3,a5,a4
   147e2:	0107d893          	srli	a7,a5,0x10
   147e6:	8f71                	and	a4,a4,a2
   147e8:	8241                	srli	a2,a2,0x10
   147ea:	02e68eb3          	mul	t4,a3,a4
   147ee:	406585b3          	sub	a1,a1,t1
   147f2:	02c686b3          	mul	a3,a3,a2
   147f6:	010ed813          	srli	a6,t4,0x10
   147fa:	02e88733          	mul	a4,a7,a4
   147fe:	96ba                	add	a3,a3,a4
   14800:	96c2                	add	a3,a3,a6
   14802:	02c88633          	mul	a2,a7,a2
   14806:	00e6f363          	bgeu	a3,a4,1480c <__udivdi3+0x326>
   1480a:	967a                	add	a2,a2,t5
   1480c:	0106d893          	srli	a7,a3,0x10
   14810:	9646                	add	a2,a2,a7
   14812:	02c5e263          	bltu	a1,a2,14836 <__udivdi3+0x350>
   14816:	00c58563          	beq	a1,a2,14820 <__udivdi3+0x33a>
   1481a:	853e                	mv	a0,a5
   1481c:	4581                	li	a1,0
   1481e:	8082                	ret
   14820:	6741                	lui	a4,0x10
   14822:	177d                	addi	a4,a4,-1
   14824:	8ef9                	and	a3,a3,a4
   14826:	06c2                	slli	a3,a3,0x10
   14828:	00eefeb3          	and	t4,t4,a4
   1482c:	01c51533          	sll	a0,a0,t3
   14830:	96f6                	add	a3,a3,t4
   14832:	fed574e3          	bgeu	a0,a3,1481a <__udivdi3+0x334>
   14836:	fff78513          	addi	a0,a5,-1
   1483a:	4581                	li	a1,0
   1483c:	8082                	ret
   1483e:	0106d713          	srli	a4,a3,0x10
   14842:	4841                	li	a6,16
   14844:	bd31                	j	14660 <__udivdi3+0x17a>
   14846:	01065693          	srli	a3,a2,0x10
   1484a:	47c1                	li	a5,16
   1484c:	b97d                	j	1450a <__udivdi3+0x24>
   1484e:	0108d693          	srli	a3,a7,0x10
   14852:	47c1                	li	a5,16
   14854:	b3b5                	j	145c0 <__udivdi3+0xda>
   14856:	4581                	li	a1,0
   14858:	4505                	li	a0,1
   1485a:	8082                	ret
   1485c:	8736                	mv	a4,a3
   1485e:	4801                	li	a6,0
   14860:	b501                	j	14660 <__udivdi3+0x17a>
   14862:	8742                	mv	a4,a6
   14864:	bf85                	j	147d4 <__udivdi3+0x2ee>
   14866:	863e                	mv	a2,a5
   14868:	bde9                	j	14742 <__udivdi3+0x25c>
   1486a:	87ba                	mv	a5,a4
   1486c:	bf1d                	j	147a2 <__udivdi3+0x2bc>
   1486e:	8e32                	mv	t3,a2
   14870:	b54d                	j	14712 <__udivdi3+0x22c>
   14872:	1579                	addi	a0,a0,-2
   14874:	9846                	add	a6,a6,a7
   14876:	b9d5                	j	1456a <__udivdi3+0x84>
   14878:	1579                	addi	a0,a0,-2
   1487a:	97c6                	add	a5,a5,a7
   1487c:	bb59                	j	14612 <__udivdi3+0x12c>

0001487e <__umoddi3>:
__umoddi3():
   1487e:	87b6                	mv	a5,a3
   14880:	8832                	mv	a6,a2
   14882:	832a                	mv	t1,a0
   14884:	872e                	mv	a4,a1
   14886:	8e2e                	mv	t3,a1
   14888:	14069363          	bnez	a3,149ce <__umoddi3+0x150>
   1488c:	0ac5f163          	bgeu	a1,a2,1492e <__umoddi3+0xb0>
   14890:	6741                	lui	a4,0x10
   14892:	1ae67863          	bgeu	a2,a4,14a42 <__umoddi3+0x1c4>
   14896:	0ff00713          	li	a4,255
   1489a:	86b2                	mv	a3,a2
   1489c:	00c77563          	bgeu	a4,a2,148a6 <__umoddi3+0x28>
   148a0:	00865693          	srli	a3,a2,0x8
   148a4:	47a1                	li	a5,8
   148a6:	00002717          	auipc	a4,0x2
   148aa:	8b270713          	addi	a4,a4,-1870 # 16158 <__clz_tab>
   148ae:	9736                	add	a4,a4,a3
   148b0:	00074703          	lbu	a4,0(a4)
   148b4:	02000893          	li	a7,32
   148b8:	97ba                	add	a5,a5,a4
   148ba:	40f888b3          	sub	a7,a7,a5
   148be:	00088c63          	beqz	a7,148d6 <__umoddi3+0x58>
   148c2:	011595b3          	sll	a1,a1,a7
   148c6:	00f557b3          	srl	a5,a0,a5
   148ca:	01161833          	sll	a6,a2,a7
   148ce:	00b7ee33          	or	t3,a5,a1
   148d2:	01151333          	sll	t1,a0,a7
   148d6:	01085613          	srli	a2,a6,0x10
   148da:	02ce57b3          	divu	a5,t3,a2
   148de:	01081513          	slli	a0,a6,0x10
   148e2:	8141                	srli	a0,a0,0x10
   148e4:	01035693          	srli	a3,t1,0x10
   148e8:	02ce7e33          	remu	t3,t3,a2
   148ec:	02f507b3          	mul	a5,a0,a5
   148f0:	0e42                	slli	t3,t3,0x10
   148f2:	00de6733          	or	a4,t3,a3
   148f6:	00f77863          	bgeu	a4,a5,14906 <__umoddi3+0x88>
   148fa:	9742                	add	a4,a4,a6
   148fc:	01076563          	bltu	a4,a6,14906 <__umoddi3+0x88>
   14900:	00f77363          	bgeu	a4,a5,14906 <__umoddi3+0x88>
   14904:	9742                	add	a4,a4,a6
   14906:	8f1d                	sub	a4,a4,a5
   14908:	02c756b3          	divu	a3,a4,a2
   1490c:	01031793          	slli	a5,t1,0x10
   14910:	83c1                	srli	a5,a5,0x10
   14912:	02c77733          	remu	a4,a4,a2
   14916:	02d50533          	mul	a0,a0,a3
   1491a:	0742                	slli	a4,a4,0x10
   1491c:	8fd9                	or	a5,a5,a4
   1491e:	08a7ec63          	bltu	a5,a0,149b6 <__umoddi3+0x138>
   14922:	40a78533          	sub	a0,a5,a0
   14926:	01155533          	srl	a0,a0,a7
   1492a:	4581                	li	a1,0
   1492c:	8082                	ret
   1492e:	e601                	bnez	a2,14936 <__umoddi3+0xb8>
   14930:	4705                	li	a4,1
   14932:	02c75833          	divu	a6,a4,a2
   14936:	6741                	lui	a4,0x10
   14938:	0ee86c63          	bltu	a6,a4,14a30 <__umoddi3+0x1b2>
   1493c:	010007b7          	lui	a5,0x1000
   14940:	2af86563          	bltu	a6,a5,14bea <__umoddi3+0x36c>
   14944:	01885693          	srli	a3,a6,0x18
   14948:	47e1                	li	a5,24
   1494a:	00002717          	auipc	a4,0x2
   1494e:	80e70713          	addi	a4,a4,-2034 # 16158 <__clz_tab>
   14952:	9736                	add	a4,a4,a3
   14954:	00074703          	lbu	a4,0(a4)
   14958:	02000893          	li	a7,32
   1495c:	97ba                	add	a5,a5,a4
   1495e:	40f888b3          	sub	a7,a7,a5
   14962:	1e089a63          	bnez	a7,14b56 <__umoddi3+0x2d8>
   14966:	01081e13          	slli	t3,a6,0x10
   1496a:	410585b3          	sub	a1,a1,a6
   1496e:	01085613          	srli	a2,a6,0x10
   14972:	010e5e13          	srli	t3,t3,0x10
   14976:	01035713          	srli	a4,t1,0x10
   1497a:	02c5d6b3          	divu	a3,a1,a2
   1497e:	02c5f5b3          	remu	a1,a1,a2
   14982:	03c686b3          	mul	a3,a3,t3
   14986:	05c2                	slli	a1,a1,0x10
   14988:	8f4d                	or	a4,a4,a1
   1498a:	00d77763          	bgeu	a4,a3,14998 <__umoddi3+0x11a>
   1498e:	9742                	add	a4,a4,a6
   14990:	01076463          	bltu	a4,a6,14998 <__umoddi3+0x11a>
   14994:	26d76a63          	bltu	a4,a3,14c08 <__umoddi3+0x38a>
   14998:	8f15                	sub	a4,a4,a3
   1499a:	02c75533          	divu	a0,a4,a2
   1499e:	0342                	slli	t1,t1,0x10
   149a0:	01035313          	srli	t1,t1,0x10
   149a4:	02c77733          	remu	a4,a4,a2
   149a8:	03c50533          	mul	a0,a0,t3
   149ac:	0742                	slli	a4,a4,0x10
   149ae:	006767b3          	or	a5,a4,t1
   149b2:	00a7f863          	bgeu	a5,a0,149c2 <__umoddi3+0x144>
   149b6:	97c2                	add	a5,a5,a6
   149b8:	0107e563          	bltu	a5,a6,149c2 <__umoddi3+0x144>
   149bc:	00a7f363          	bgeu	a5,a0,149c2 <__umoddi3+0x144>
   149c0:	97c2                	add	a5,a5,a6
   149c2:	40a78533          	sub	a0,a5,a0
   149c6:	01155533          	srl	a0,a0,a7
   149ca:	4581                	li	a1,0
   149cc:	8082                	ret
   149ce:	882a                	mv	a6,a0
   149d0:	f4d5eee3          	bltu	a1,a3,1492c <__umoddi3+0xae>
   149d4:	67c1                	lui	a5,0x10
   149d6:	04f6e563          	bltu	a3,a5,14a20 <__umoddi3+0x1a2>
   149da:	010007b7          	lui	a5,0x1000
   149de:	20f6e263          	bltu	a3,a5,14be2 <__umoddi3+0x364>
   149e2:	0186d313          	srli	t1,a3,0x18
   149e6:	48e1                	li	a7,24
   149e8:	00001797          	auipc	a5,0x1
   149ec:	77078793          	addi	a5,a5,1904 # 16158 <__clz_tab>
   149f0:	979a                	add	a5,a5,t1
   149f2:	0007ce03          	lbu	t3,0(a5)
   149f6:	02000313          	li	t1,32
   149fa:	9e46                	add	t3,t3,a7
   149fc:	41c30333          	sub	t1,t1,t3
   14a00:	04031963          	bnez	t1,14a52 <__umoddi3+0x1d4>
   14a04:	00b6e463          	bltu	a3,a1,14a0c <__umoddi3+0x18e>
   14a08:	00c56963          	bltu	a0,a2,14a1a <__umoddi3+0x19c>
   14a0c:	40c50833          	sub	a6,a0,a2
   14a10:	8d95                	sub	a1,a1,a3
   14a12:	01053733          	sltu	a4,a0,a6
   14a16:	40e58733          	sub	a4,a1,a4
   14a1a:	8542                	mv	a0,a6
   14a1c:	85ba                	mv	a1,a4
   14a1e:	8082                	ret
   14a20:	0ff00793          	li	a5,255
   14a24:	1cd7fb63          	bgeu	a5,a3,14bfa <__umoddi3+0x37c>
   14a28:	0086d313          	srli	t1,a3,0x8
   14a2c:	48a1                	li	a7,8
   14a2e:	bf6d                	j	149e8 <__umoddi3+0x16a>
   14a30:	0ff00713          	li	a4,255
   14a34:	86c2                	mv	a3,a6
   14a36:	f1077ae3          	bgeu	a4,a6,1494a <__umoddi3+0xcc>
   14a3a:	00885693          	srli	a3,a6,0x8
   14a3e:	47a1                	li	a5,8
   14a40:	b729                	j	1494a <__umoddi3+0xcc>
   14a42:	010007b7          	lui	a5,0x1000
   14a46:	1af66663          	bltu	a2,a5,14bf2 <__umoddi3+0x374>
   14a4a:	01865693          	srli	a3,a2,0x18
   14a4e:	47e1                	li	a5,24
   14a50:	bd99                	j	148a6 <__umoddi3+0x28>
   14a52:	01c657b3          	srl	a5,a2,t3
   14a56:	006696b3          	sll	a3,a3,t1
   14a5a:	8edd                	or	a3,a3,a5
   14a5c:	01c5d8b3          	srl	a7,a1,t3
   14a60:	0106d713          	srli	a4,a3,0x10
   14a64:	02e8deb3          	divu	t4,a7,a4
   14a68:	01069f13          	slli	t5,a3,0x10
   14a6c:	01c557b3          	srl	a5,a0,t3
   14a70:	010f5f13          	srli	t5,t5,0x10
   14a74:	006595b3          	sll	a1,a1,t1
   14a78:	8ddd                	or	a1,a1,a5
   14a7a:	0105d813          	srli	a6,a1,0x10
   14a7e:	00661633          	sll	a2,a2,t1
   14a82:	00651533          	sll	a0,a0,t1
   14a86:	02e8f8b3          	remu	a7,a7,a4
   14a8a:	03df07b3          	mul	a5,t5,t4
   14a8e:	08c2                	slli	a7,a7,0x10
   14a90:	0108e833          	or	a6,a7,a6
   14a94:	00f87b63          	bgeu	a6,a5,14aaa <__umoddi3+0x22c>
   14a98:	9836                	add	a6,a6,a3
   14a9a:	fffe8893          	addi	a7,t4,-1
   14a9e:	16d86363          	bltu	a6,a3,14c04 <__umoddi3+0x386>
   14aa2:	16f87163          	bgeu	a6,a5,14c04 <__umoddi3+0x386>
   14aa6:	1ef9                	addi	t4,t4,-2
   14aa8:	9836                	add	a6,a6,a3
   14aaa:	40f80833          	sub	a6,a6,a5
   14aae:	02e857b3          	divu	a5,a6,a4
   14ab2:	05c2                	slli	a1,a1,0x10
   14ab4:	81c1                	srli	a1,a1,0x10
   14ab6:	02e87833          	remu	a6,a6,a4
   14aba:	02ff0f33          	mul	t5,t5,a5
   14abe:	01081713          	slli	a4,a6,0x10
   14ac2:	8f4d                	or	a4,a4,a1
   14ac4:	01e77b63          	bgeu	a4,t5,14ada <__umoddi3+0x25c>
   14ac8:	9736                	add	a4,a4,a3
   14aca:	fff78593          	addi	a1,a5,-1 # ffffff <_data_lma+0xfe9da7>
   14ace:	12d76963          	bltu	a4,a3,14c00 <__umoddi3+0x382>
   14ad2:	13e77763          	bgeu	a4,t5,14c00 <__umoddi3+0x382>
   14ad6:	17f9                	addi	a5,a5,-2
   14ad8:	9736                	add	a4,a4,a3
   14ada:	0ec2                	slli	t4,t4,0x10
   14adc:	62c1                	lui	t0,0x10
   14ade:	00feeeb3          	or	t4,t4,a5
   14ae2:	fff28813          	addi	a6,t0,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14ae6:	010ef8b3          	and	a7,t4,a6
   14aea:	01065593          	srli	a1,a2,0x10
   14aee:	010ede93          	srli	t4,t4,0x10
   14af2:	01067833          	and	a6,a2,a6
   14af6:	03088fb3          	mul	t6,a7,a6
   14afa:	41e70733          	sub	a4,a4,t5
   14afe:	030e8833          	mul	a6,t4,a6
   14b02:	010fd793          	srli	a5,t6,0x10
   14b06:	02b888b3          	mul	a7,a7,a1
   14b0a:	98c2                	add	a7,a7,a6
   14b0c:	97c6                	add	a5,a5,a7
   14b0e:	02be8eb3          	mul	t4,t4,a1
   14b12:	0107f363          	bgeu	a5,a6,14b18 <__umoddi3+0x29a>
   14b16:	9e96                	add	t4,t4,t0
   14b18:	6841                	lui	a6,0x10
   14b1a:	187d                	addi	a6,a6,-1
   14b1c:	0107d593          	srli	a1,a5,0x10
   14b20:	0107f7b3          	and	a5,a5,a6
   14b24:	07c2                	slli	a5,a5,0x10
   14b26:	010fffb3          	and	t6,t6,a6
   14b2a:	95f6                	add	a1,a1,t4
   14b2c:	97fe                	add	a5,a5,t6
   14b2e:	0ab76263          	bltu	a4,a1,14bd2 <__umoddi3+0x354>
   14b32:	08b70e63          	beq	a4,a1,14bce <__umoddi3+0x350>
   14b36:	40f507b3          	sub	a5,a0,a5
   14b3a:	00f53533          	sltu	a0,a0,a5
   14b3e:	40b705b3          	sub	a1,a4,a1
   14b42:	8d89                	sub	a1,a1,a0
   14b44:	01c59e33          	sll	t3,a1,t3
   14b48:	0067d533          	srl	a0,a5,t1
   14b4c:	00ae6533          	or	a0,t3,a0
   14b50:	0065d5b3          	srl	a1,a1,t1
   14b54:	8082                	ret
   14b56:	01181833          	sll	a6,a6,a7
   14b5a:	00f5d733          	srl	a4,a1,a5
   14b5e:	01085613          	srli	a2,a6,0x10
   14b62:	02c756b3          	divu	a3,a4,a2
   14b66:	01081e13          	slli	t3,a6,0x10
   14b6a:	00f557b3          	srl	a5,a0,a5
   14b6e:	010e5e13          	srli	t3,t3,0x10
   14b72:	011595b3          	sll	a1,a1,a7
   14b76:	8ddd                	or	a1,a1,a5
   14b78:	0105de93          	srli	t4,a1,0x10
   14b7c:	01151333          	sll	t1,a0,a7
   14b80:	02c77733          	remu	a4,a4,a2
   14b84:	02de07b3          	mul	a5,t3,a3
   14b88:	01071693          	slli	a3,a4,0x10
   14b8c:	01d6e6b3          	or	a3,a3,t4
   14b90:	00f6f863          	bgeu	a3,a5,14ba0 <__umoddi3+0x322>
   14b94:	96c2                	add	a3,a3,a6
   14b96:	0106e563          	bltu	a3,a6,14ba0 <__umoddi3+0x322>
   14b9a:	00f6f363          	bgeu	a3,a5,14ba0 <__umoddi3+0x322>
   14b9e:	96c2                	add	a3,a3,a6
   14ba0:	8e9d                	sub	a3,a3,a5
   14ba2:	02c6d733          	divu	a4,a3,a2
   14ba6:	01059793          	slli	a5,a1,0x10
   14baa:	83c1                	srli	a5,a5,0x10
   14bac:	02c6f6b3          	remu	a3,a3,a2
   14bb0:	02ee0733          	mul	a4,t3,a4
   14bb4:	01069593          	slli	a1,a3,0x10
   14bb8:	8ddd                	or	a1,a1,a5
   14bba:	00e5f863          	bgeu	a1,a4,14bca <__umoddi3+0x34c>
   14bbe:	95c2                	add	a1,a1,a6
   14bc0:	0105e563          	bltu	a1,a6,14bca <__umoddi3+0x34c>
   14bc4:	00e5f363          	bgeu	a1,a4,14bca <__umoddi3+0x34c>
   14bc8:	95c2                	add	a1,a1,a6
   14bca:	8d99                	sub	a1,a1,a4
   14bcc:	b36d                	j	14976 <__umoddi3+0xf8>
   14bce:	f6f574e3          	bgeu	a0,a5,14b36 <__umoddi3+0x2b8>
   14bd2:	40c78633          	sub	a2,a5,a2
   14bd6:	00c7b7b3          	sltu	a5,a5,a2
   14bda:	97b6                	add	a5,a5,a3
   14bdc:	8d9d                	sub	a1,a1,a5
   14bde:	87b2                	mv	a5,a2
   14be0:	bf99                	j	14b36 <__umoddi3+0x2b8>
   14be2:	0106d313          	srli	t1,a3,0x10
   14be6:	48c1                	li	a7,16
   14be8:	b501                	j	149e8 <__umoddi3+0x16a>
   14bea:	01085693          	srli	a3,a6,0x10
   14bee:	47c1                	li	a5,16
   14bf0:	bba9                	j	1494a <__umoddi3+0xcc>
   14bf2:	01065693          	srli	a3,a2,0x10
   14bf6:	47c1                	li	a5,16
   14bf8:	b17d                	j	148a6 <__umoddi3+0x28>
   14bfa:	8336                	mv	t1,a3
   14bfc:	4881                	li	a7,0
   14bfe:	b3ed                	j	149e8 <__umoddi3+0x16a>
   14c00:	87ae                	mv	a5,a1
   14c02:	bde1                	j	14ada <__umoddi3+0x25c>
   14c04:	8ec6                	mv	t4,a7
   14c06:	b555                	j	14aaa <__umoddi3+0x22c>
   14c08:	9742                	add	a4,a4,a6
   14c0a:	b379                	j	14998 <__umoddi3+0x11a>

00014c0c <__eqdf2>:
__eqdf2():
   14c0c:	0145d713          	srli	a4,a1,0x14
   14c10:	001007b7          	lui	a5,0x100
   14c14:	17fd                	addi	a5,a5,-1
   14c16:	0146d813          	srli	a6,a3,0x14
   14c1a:	7ff77713          	andi	a4,a4,2047
   14c1e:	7ff00893          	li	a7,2047
   14c22:	00b7fe33          	and	t3,a5,a1
   14c26:	8eaa                	mv	t4,a0
   14c28:	8ff5                	and	a5,a5,a3
   14c2a:	81fd                	srli	a1,a1,0x1f
   14c2c:	8f32                	mv	t5,a2
   14c2e:	7ff87813          	andi	a6,a6,2047
   14c32:	82fd                	srli	a3,a3,0x1f
   14c34:	01170b63          	beq	a4,a7,14c4a <__eqdf2+0x3e>
   14c38:	4305                	li	t1,1
   14c3a:	01180663          	beq	a6,a7,14c46 <__eqdf2+0x3a>
   14c3e:	01071463          	bne	a4,a6,14c46 <__eqdf2+0x3a>
   14c42:	00fe0d63          	beq	t3,a5,14c5c <__eqdf2+0x50>
   14c46:	851a                	mv	a0,t1
   14c48:	8082                	ret
   14c4a:	00ae68b3          	or	a7,t3,a0
   14c4e:	4305                	li	t1,1
   14c50:	fe089be3          	bnez	a7,14c46 <__eqdf2+0x3a>
   14c54:	fee819e3          	bne	a6,a4,14c46 <__eqdf2+0x3a>
   14c58:	8fd1                	or	a5,a5,a2
   14c5a:	f7f5                	bnez	a5,14c46 <__eqdf2+0x3a>
   14c5c:	4305                	li	t1,1
   14c5e:	ffee94e3          	bne	t4,t5,14c46 <__eqdf2+0x3a>
   14c62:	4301                	li	t1,0
   14c64:	fed581e3          	beq	a1,a3,14c46 <__eqdf2+0x3a>
   14c68:	4305                	li	t1,1
   14c6a:	ff71                	bnez	a4,14c46 <__eqdf2+0x3a>
   14c6c:	00ae6533          	or	a0,t3,a0
   14c70:	00a03333          	snez	t1,a0
   14c74:	bfc9                	j	14c46 <__eqdf2+0x3a>

00014c76 <__ledf2>:
__ltdf2():
   14c76:	0145d713          	srli	a4,a1,0x14
   14c7a:	001007b7          	lui	a5,0x100
   14c7e:	17fd                	addi	a5,a5,-1
   14c80:	0146d813          	srli	a6,a3,0x14
   14c84:	7ff77713          	andi	a4,a4,2047
   14c88:	7ff00893          	li	a7,2047
   14c8c:	00b7fe33          	and	t3,a5,a1
   14c90:	8eaa                	mv	t4,a0
   14c92:	8ff5                	and	a5,a5,a3
   14c94:	81fd                	srli	a1,a1,0x1f
   14c96:	8f32                	mv	t5,a2
   14c98:	7ff87813          	andi	a6,a6,2047
   14c9c:	82fd                	srli	a3,a3,0x1f
   14c9e:	03170e63          	beq	a4,a7,14cda <__ledf2+0x64>
   14ca2:	01180d63          	beq	a6,a7,14cbc <__ledf2+0x46>
   14ca6:	e329                	bnez	a4,14ce8 <__ledf2+0x72>
   14ca8:	00ae68b3          	or	a7,t3,a0
   14cac:	00081f63          	bnez	a6,14cca <__ledf2+0x54>
   14cb0:	8e5d                	or	a2,a2,a5
   14cb2:	ee01                	bnez	a2,14cca <__ledf2+0x54>
   14cb4:	4301                	li	t1,0
   14cb6:	04088c63          	beqz	a7,14d0e <__ledf2+0x98>
   14cba:	a821                	j	14cd2 <__ledf2+0x5c>
   14cbc:	00c7e8b3          	or	a7,a5,a2
   14cc0:	4309                	li	t1,2
   14cc2:	04089663          	bnez	a7,14d0e <__ledf2+0x98>
   14cc6:	d36d                	beqz	a4,14ca8 <__ledf2+0x32>
   14cc8:	a005                	j	14ce8 <__ledf2+0x72>
   14cca:	04088463          	beqz	a7,14d12 <__ledf2+0x9c>
   14cce:	02d58563          	beq	a1,a3,14cf8 <__ledf2+0x82>
   14cd2:	4305                	li	t1,1
   14cd4:	cd8d                	beqz	a1,14d0e <__ledf2+0x98>
   14cd6:	537d                	li	t1,-1
   14cd8:	a81d                	j	14d0e <__ledf2+0x98>
   14cda:	00ae68b3          	or	a7,t3,a0
   14cde:	4309                	li	t1,2
   14ce0:	02089763          	bnez	a7,14d0e <__ledf2+0x98>
   14ce4:	02e80a63          	beq	a6,a4,14d18 <__ledf2+0xa2>
   14ce8:	00081463          	bnez	a6,14cf0 <__ledf2+0x7a>
   14cec:	8e5d                	or	a2,a2,a5
   14cee:	d275                	beqz	a2,14cd2 <__ledf2+0x5c>
   14cf0:	fed591e3          	bne	a1,a3,14cd2 <__ledf2+0x5c>
   14cf4:	fce84fe3          	blt	a6,a4,14cd2 <__ledf2+0x5c>
   14cf8:	01074963          	blt	a4,a6,14d0a <__ledf2+0x94>
   14cfc:	fdc7ebe3          	bltu	a5,t3,14cd2 <__ledf2+0x5c>
   14d00:	00fe0f63          	beq	t3,a5,14d1e <__ledf2+0xa8>
   14d04:	4301                	li	t1,0
   14d06:	00fe7463          	bgeu	t3,a5,14d0e <__ledf2+0x98>
   14d0a:	d5f1                	beqz	a1,14cd6 <__ledf2+0x60>
   14d0c:	4305                	li	t1,1
   14d0e:	851a                	mv	a0,t1
   14d10:	8082                	ret
   14d12:	feed                	bnez	a3,14d0c <__ledf2+0x96>
   14d14:	537d                	li	t1,-1
   14d16:	bfe5                	j	14d0e <__ledf2+0x98>
   14d18:	8e5d                	or	a2,a2,a5
   14d1a:	da79                	beqz	a2,14cf0 <__ledf2+0x7a>
   14d1c:	bfcd                	j	14d0e <__ledf2+0x98>
   14d1e:	fbdf6ae3          	bltu	t5,t4,14cd2 <__ledf2+0x5c>
   14d22:	4301                	li	t1,0
   14d24:	ffeef5e3          	bgeu	t4,t5,14d0e <__ledf2+0x98>
   14d28:	f1f5                	bnez	a1,14d0c <__ledf2+0x96>
   14d2a:	b775                	j	14cd6 <__ledf2+0x60>

00014d2c <__muldf3>:
__muldf3():
   14d2c:	7139                	addi	sp,sp,-64
   14d2e:	d84a                	sw	s2,48(sp)
   14d30:	0145d913          	srli	s2,a1,0x14
   14d34:	d64e                	sw	s3,44(sp)
   14d36:	d452                	sw	s4,40(sp)
   14d38:	d256                	sw	s5,36(sp)
   14d3a:	00c59993          	slli	s3,a1,0xc
   14d3e:	de06                	sw	ra,60(sp)
   14d40:	dc22                	sw	s0,56(sp)
   14d42:	da26                	sw	s1,52(sp)
   14d44:	d05a                	sw	s6,32(sp)
   14d46:	ce5e                	sw	s7,28(sp)
   14d48:	7ff97913          	andi	s2,s2,2047
   14d4c:	8a2a                	mv	s4,a0
   14d4e:	00c9d993          	srli	s3,s3,0xc
   14d52:	01f5da93          	srli	s5,a1,0x1f
   14d56:	0e090d63          	beqz	s2,14e50 <__muldf3+0x124>
   14d5a:	7ff00793          	li	a5,2047
   14d5e:	18f90a63          	beq	s2,a5,14ef2 <__muldf3+0x1c6>
   14d62:	01d55413          	srli	s0,a0,0x1d
   14d66:	098e                	slli	s3,s3,0x3
   14d68:	013469b3          	or	s3,s0,s3
   14d6c:	00800437          	lui	s0,0x800
   14d70:	0089e433          	or	s0,s3,s0
   14d74:	00351493          	slli	s1,a0,0x3
   14d78:	c0190913          	addi	s2,s2,-1023
   14d7c:	4981                	li	s3,0
   14d7e:	4b81                	li	s7,0
   14d80:	0146d713          	srli	a4,a3,0x14
   14d84:	00c69a13          	slli	s4,a3,0xc
   14d88:	7ff77713          	andi	a4,a4,2047
   14d8c:	85b2                	mv	a1,a2
   14d8e:	00ca5a13          	srli	s4,s4,0xc
   14d92:	01f6db13          	srli	s6,a3,0x1f
   14d96:	10070d63          	beqz	a4,14eb0 <__muldf3+0x184>
   14d9a:	7ff00793          	li	a5,2047
   14d9e:	04f70363          	beq	a4,a5,14de4 <__muldf3+0xb8>
   14da2:	01d65793          	srli	a5,a2,0x1d
   14da6:	0a0e                	slli	s4,s4,0x3
   14da8:	0147ea33          	or	s4,a5,s4
   14dac:	c0170713          	addi	a4,a4,-1023
   14db0:	008007b7          	lui	a5,0x800
   14db4:	00fa67b3          	or	a5,s4,a5
   14db8:	00361593          	slli	a1,a2,0x3
   14dbc:	993a                	add	s2,s2,a4
   14dbe:	4881                	li	a7,0
   14dc0:	016ac733          	xor	a4,s5,s6
   14dc4:	46bd                	li	a3,15
   14dc6:	853a                	mv	a0,a4
   14dc8:	00190813          	addi	a6,s2,1
   14dcc:	1736ec63          	bltu	a3,s3,14f44 <__muldf3+0x218>
   14dd0:	00001617          	auipc	a2,0x1
   14dd4:	34860613          	addi	a2,a2,840 # 16118 <strlen+0x480>
   14dd8:	098a                	slli	s3,s3,0x2
   14dda:	99b2                	add	s3,s3,a2
   14ddc:	0009a683          	lw	a3,0(s3)
   14de0:	96b2                	add	a3,a3,a2
   14de2:	8682                	jr	a3
   14de4:	00ca67b3          	or	a5,s4,a2
   14de8:	7ff90913          	addi	s2,s2,2047
   14dec:	12079d63          	bnez	a5,14f26 <__muldf3+0x1fa>
   14df0:	0029e993          	ori	s3,s3,2
   14df4:	4581                	li	a1,0
   14df6:	4889                	li	a7,2
   14df8:	b7e1                	j	14dc0 <__muldf3+0x94>
   14dfa:	4701                	li	a4,0
   14dfc:	7ff00793          	li	a5,2047
   14e00:	00080437          	lui	s0,0x80
   14e04:	4481                	li	s1,0
   14e06:	0432                	slli	s0,s0,0xc
   14e08:	07d2                	slli	a5,a5,0x14
   14e0a:	8031                	srli	s0,s0,0xc
   14e0c:	077e                	slli	a4,a4,0x1f
   14e0e:	8c5d                	or	s0,s0,a5
   14e10:	8c59                	or	s0,s0,a4
   14e12:	85a2                	mv	a1,s0
   14e14:	50f2                	lw	ra,60(sp)
   14e16:	5462                	lw	s0,56(sp)
   14e18:	8526                	mv	a0,s1
   14e1a:	5942                	lw	s2,48(sp)
   14e1c:	54d2                	lw	s1,52(sp)
   14e1e:	59b2                	lw	s3,44(sp)
   14e20:	5a22                	lw	s4,40(sp)
   14e22:	5a92                	lw	s5,36(sp)
   14e24:	5b02                	lw	s6,32(sp)
   14e26:	4bf2                	lw	s7,28(sp)
   14e28:	6121                	addi	sp,sp,64
   14e2a:	8082                	ret
   14e2c:	855a                	mv	a0,s6
   14e2e:	843e                	mv	s0,a5
   14e30:	84ae                	mv	s1,a1
   14e32:	8bc6                	mv	s7,a7
   14e34:	4789                	li	a5,2
   14e36:	10fb8163          	beq	s7,a5,14f38 <__muldf3+0x20c>
   14e3a:	478d                	li	a5,3
   14e3c:	fafb8fe3          	beq	s7,a5,14dfa <__muldf3+0xce>
   14e40:	4785                	li	a5,1
   14e42:	872a                	mv	a4,a0
   14e44:	3afb9663          	bne	s7,a5,151f0 <__muldf3+0x4c4>
   14e48:	4781                	li	a5,0
   14e4a:	4401                	li	s0,0
   14e4c:	4481                	li	s1,0
   14e4e:	bf65                	j	14e06 <__muldf3+0xda>
   14e50:	00a9e433          	or	s0,s3,a0
   14e54:	c461                	beqz	s0,14f1c <__muldf3+0x1f0>
   14e56:	c636                	sw	a3,12(sp)
   14e58:	c432                	sw	a2,8(sp)
   14e5a:	2c098263          	beqz	s3,1511e <__muldf3+0x3f2>
   14e5e:	854e                	mv	a0,s3
   14e60:	00001097          	auipc	ra,0x1
   14e64:	d0c080e7          	jalr	-756(ra) # 15b6c <__clzsi2>
   14e68:	4622                	lw	a2,8(sp)
   14e6a:	46b2                	lw	a3,12(sp)
   14e6c:	87aa                	mv	a5,a0
   14e6e:	ff550713          	addi	a4,a0,-11
   14e72:	4475                	li	s0,29
   14e74:	ff878493          	addi	s1,a5,-8 # 7ffff8 <_data_lma+0x7e9da0>
   14e78:	8c19                	sub	s0,s0,a4
   14e7a:	009999b3          	sll	s3,s3,s1
   14e7e:	008a5433          	srl	s0,s4,s0
   14e82:	01346433          	or	s0,s0,s3
   14e86:	009a14b3          	sll	s1,s4,s1
   14e8a:	0146d713          	srli	a4,a3,0x14
   14e8e:	c0d00913          	li	s2,-1011
   14e92:	00c69a13          	slli	s4,a3,0xc
   14e96:	7ff77713          	andi	a4,a4,2047
   14e9a:	40f90933          	sub	s2,s2,a5
   14e9e:	4981                	li	s3,0
   14ea0:	4b81                	li	s7,0
   14ea2:	85b2                	mv	a1,a2
   14ea4:	00ca5a13          	srli	s4,s4,0xc
   14ea8:	01f6db13          	srli	s6,a3,0x1f
   14eac:	ee0717e3          	bnez	a4,14d9a <__muldf3+0x6e>
   14eb0:	00ca67b3          	or	a5,s4,a2
   14eb4:	cba1                	beqz	a5,14f04 <__muldf3+0x1d8>
   14eb6:	240a0163          	beqz	s4,150f8 <__muldf3+0x3cc>
   14eba:	8552                	mv	a0,s4
   14ebc:	c432                	sw	a2,8(sp)
   14ebe:	00001097          	auipc	ra,0x1
   14ec2:	cae080e7          	jalr	-850(ra) # 15b6c <__clzsi2>
   14ec6:	4622                	lw	a2,8(sp)
   14ec8:	872a                	mv	a4,a0
   14eca:	ff550693          	addi	a3,a0,-11
   14ece:	47f5                	li	a5,29
   14ed0:	ff870593          	addi	a1,a4,-8
   14ed4:	8f95                	sub	a5,a5,a3
   14ed6:	00ba1a33          	sll	s4,s4,a1
   14eda:	00f657b3          	srl	a5,a2,a5
   14ede:	0147e7b3          	or	a5,a5,s4
   14ee2:	00b615b3          	sll	a1,a2,a1
   14ee6:	40e90933          	sub	s2,s2,a4
   14eea:	c0d90913          	addi	s2,s2,-1011
   14eee:	4881                	li	a7,0
   14ef0:	bdc1                	j	14dc0 <__muldf3+0x94>
   14ef2:	00a9e433          	or	s0,s3,a0
   14ef6:	ec01                	bnez	s0,14f0e <__muldf3+0x1e2>
   14ef8:	49a1                	li	s3,8
   14efa:	4481                	li	s1,0
   14efc:	7ff00913          	li	s2,2047
   14f00:	4b89                	li	s7,2
   14f02:	bdbd                	j	14d80 <__muldf3+0x54>
   14f04:	0019e993          	ori	s3,s3,1
   14f08:	4581                	li	a1,0
   14f0a:	4885                	li	a7,1
   14f0c:	bd55                	j	14dc0 <__muldf3+0x94>
   14f0e:	844e                	mv	s0,s3
   14f10:	84aa                	mv	s1,a0
   14f12:	49b1                	li	s3,12
   14f14:	7ff00913          	li	s2,2047
   14f18:	4b8d                	li	s7,3
   14f1a:	b59d                	j	14d80 <__muldf3+0x54>
   14f1c:	4991                	li	s3,4
   14f1e:	4481                	li	s1,0
   14f20:	4901                	li	s2,0
   14f22:	4b85                	li	s7,1
   14f24:	bdb1                	j	14d80 <__muldf3+0x54>
   14f26:	0039e993          	ori	s3,s3,3
   14f2a:	87d2                	mv	a5,s4
   14f2c:	488d                	li	a7,3
   14f2e:	bd49                	j	14dc0 <__muldf3+0x94>
   14f30:	4789                	li	a5,2
   14f32:	8556                	mv	a0,s5
   14f34:	f0fb93e3          	bne	s7,a5,14e3a <__muldf3+0x10e>
   14f38:	872a                	mv	a4,a0
   14f3a:	7ff00793          	li	a5,2047
   14f3e:	4401                	li	s0,0
   14f40:	4481                	li	s1,0
   14f42:	b5d1                	j	14e06 <__muldf3+0xda>
   14f44:	6ec1                	lui	t4,0x10
   14f46:	fffe8613          	addi	a2,t4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14f4a:	0104d693          	srli	a3,s1,0x10
   14f4e:	0105de13          	srli	t3,a1,0x10
   14f52:	8cf1                	and	s1,s1,a2
   14f54:	8df1                	and	a1,a1,a2
   14f56:	02958633          	mul	a2,a1,s1
   14f5a:	02b68333          	mul	t1,a3,a1
   14f5e:	01065893          	srli	a7,a2,0x10
   14f62:	029e0533          	mul	a0,t3,s1
   14f66:	951a                	add	a0,a0,t1
   14f68:	98aa                	add	a7,a7,a0
   14f6a:	03c682b3          	mul	t0,a3,t3
   14f6e:	0068f363          	bgeu	a7,t1,14f74 <__muldf3+0x248>
   14f72:	92f6                	add	t0,t0,t4
   14f74:	6fc1                	lui	t6,0x10
   14f76:	ffff8313          	addi	t1,t6,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14f7a:	0067f533          	and	a0,a5,t1
   14f7e:	0107d393          	srli	t2,a5,0x10
   14f82:	0068f7b3          	and	a5,a7,t1
   14f86:	07c2                	slli	a5,a5,0x10
   14f88:	00667333          	and	t1,a2,t1
   14f8c:	933e                	add	t1,t1,a5
   14f8e:	02950633          	mul	a2,a0,s1
   14f92:	0108d893          	srli	a7,a7,0x10
   14f96:	02a687b3          	mul	a5,a3,a0
   14f9a:	01065f13          	srli	t5,a2,0x10
   14f9e:	029384b3          	mul	s1,t2,s1
   14fa2:	94be                	add	s1,s1,a5
   14fa4:	94fa                	add	s1,s1,t5
   14fa6:	02768eb3          	mul	t4,a3,t2
   14faa:	00f4f363          	bgeu	s1,a5,14fb0 <__muldf3+0x284>
   14fae:	9efe                	add	t4,t4,t6
   14fb0:	6a41                	lui	s4,0x10
   14fb2:	fffa0793          	addi	a5,s4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14fb6:	01045f93          	srli	t6,s0,0x10
   14fba:	00f476b3          	and	a3,s0,a5
   14fbe:	00f4f9b3          	and	s3,s1,a5
   14fc2:	8e7d                	and	a2,a2,a5
   14fc4:	80c1                	srli	s1,s1,0x10
   14fc6:	02d58433          	mul	s0,a1,a3
   14fca:	09c2                	slli	s3,s3,0x10
   14fcc:	01d48f33          	add	t5,s1,t4
   14fd0:	99b2                	add	s3,s3,a2
   14fd2:	98ce                	add	a7,a7,s3
   14fd4:	02de07b3          	mul	a5,t3,a3
   14fd8:	01045e93          	srli	t4,s0,0x10
   14fdc:	02bf85b3          	mul	a1,t6,a1
   14fe0:	97ae                	add	a5,a5,a1
   14fe2:	9ebe                	add	t4,t4,a5
   14fe4:	03fe0e33          	mul	t3,t3,t6
   14fe8:	00bef363          	bgeu	t4,a1,14fee <__muldf3+0x2c2>
   14fec:	9e52                	add	t3,t3,s4
   14fee:	67c1                	lui	a5,0x10
   14ff0:	fff78593          	addi	a1,a5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14ff4:	00bef633          	and	a2,t4,a1
   14ff8:	8c6d                	and	s0,s0,a1
   14ffa:	0642                	slli	a2,a2,0x10
   14ffc:	9622                	add	a2,a2,s0
   14ffe:	010ede93          	srli	t4,t4,0x10
   15002:	02d505b3          	mul	a1,a0,a3
   15006:	9e76                	add	t3,t3,t4
   15008:	02af8533          	mul	a0,t6,a0
   1500c:	0105d413          	srli	s0,a1,0x10
   15010:	02d386b3          	mul	a3,t2,a3
   15014:	96aa                	add	a3,a3,a0
   15016:	96a2                	add	a3,a3,s0
   15018:	03f38fb3          	mul	t6,t2,t6
   1501c:	00a6f363          	bgeu	a3,a0,15022 <__muldf3+0x2f6>
   15020:	9fbe                	add	t6,t6,a5
   15022:	6541                	lui	a0,0x10
   15024:	157d                	addi	a0,a0,-1
   15026:	00a6f7b3          	and	a5,a3,a0
   1502a:	07c2                	slli	a5,a5,0x10
   1502c:	8d6d                	and	a0,a0,a1
   1502e:	97aa                	add	a5,a5,a0
   15030:	005885b3          	add	a1,a7,t0
   15034:	0135b9b3          	sltu	s3,a1,s3
   15038:	97fa                	add	a5,a5,t5
   1503a:	95b2                	add	a1,a1,a2
   1503c:	01378433          	add	s0,a5,s3
   15040:	00c5b633          	sltu	a2,a1,a2
   15044:	01c40eb3          	add	t4,s0,t3
   15048:	00ce8533          	add	a0,t4,a2
   1504c:	01343433          	sltu	s0,s0,s3
   15050:	01e7b7b3          	sltu	a5,a5,t5
   15054:	8fc1                	or	a5,a5,s0
   15056:	01cebe33          	sltu	t3,t4,t3
   1505a:	0106d413          	srli	s0,a3,0x10
   1505e:	00c53633          	sltu	a2,a0,a2
   15062:	943e                	add	s0,s0,a5
   15064:	00ce6633          	or	a2,t3,a2
   15068:	00959493          	slli	s1,a1,0x9
   1506c:	9432                	add	s0,s0,a2
   1506e:	947e                	add	s0,s0,t6
   15070:	0064e4b3          	or	s1,s1,t1
   15074:	0426                	slli	s0,s0,0x9
   15076:	01755693          	srli	a3,a0,0x17
   1507a:	009034b3          	snez	s1,s1
   1507e:	81dd                	srli	a1,a1,0x17
   15080:	00951793          	slli	a5,a0,0x9
   15084:	8ccd                	or	s1,s1,a1
   15086:	8c55                	or	s0,s0,a3
   15088:	8cdd                	or	s1,s1,a5
   1508a:	00741793          	slli	a5,s0,0x7
   1508e:	0007db63          	bgez	a5,150a4 <__muldf3+0x378>
   15092:	0014d793          	srli	a5,s1,0x1
   15096:	8885                	andi	s1,s1,1
   15098:	01f41693          	slli	a3,s0,0x1f
   1509c:	8cdd                	or	s1,s1,a5
   1509e:	8cd5                	or	s1,s1,a3
   150a0:	8005                	srli	s0,s0,0x1
   150a2:	8942                	mv	s2,a6
   150a4:	3ff90793          	addi	a5,s2,1023
   150a8:	08f05d63          	blez	a5,15142 <__muldf3+0x416>
   150ac:	0074f693          	andi	a3,s1,7
   150b0:	ce81                	beqz	a3,150c8 <__muldf3+0x39c>
   150b2:	00f4f693          	andi	a3,s1,15
   150b6:	4611                	li	a2,4
   150b8:	00c68863          	beq	a3,a2,150c8 <__muldf3+0x39c>
   150bc:	00448693          	addi	a3,s1,4
   150c0:	0096b4b3          	sltu	s1,a3,s1
   150c4:	9426                	add	s0,s0,s1
   150c6:	84b6                	mv	s1,a3
   150c8:	00741693          	slli	a3,s0,0x7
   150cc:	0006d863          	bgez	a3,150dc <__muldf3+0x3b0>
   150d0:	ff0007b7          	lui	a5,0xff000
   150d4:	17fd                	addi	a5,a5,-1
   150d6:	8c7d                	and	s0,s0,a5
   150d8:	40090793          	addi	a5,s2,1024
   150dc:	7fe00693          	li	a3,2046
   150e0:	10f6c363          	blt	a3,a5,151e6 <__muldf3+0x4ba>
   150e4:	0034d693          	srli	a3,s1,0x3
   150e8:	01d41493          	slli	s1,s0,0x1d
   150ec:	0426                	slli	s0,s0,0x9
   150ee:	8cd5                	or	s1,s1,a3
   150f0:	8031                	srli	s0,s0,0xc
   150f2:	7ff7f793          	andi	a5,a5,2047
   150f6:	bb01                	j	14e06 <__muldf3+0xda>
   150f8:	8532                	mv	a0,a2
   150fa:	c432                	sw	a2,8(sp)
   150fc:	00001097          	auipc	ra,0x1
   15100:	a70080e7          	jalr	-1424(ra) # 15b6c <__clzsi2>
   15104:	01550693          	addi	a3,a0,21 # 10015 <MCU_SECTORSIZE+0xf015>
   15108:	47f1                	li	a5,28
   1510a:	02050713          	addi	a4,a0,32
   1510e:	4622                	lw	a2,8(sp)
   15110:	dad7dfe3          	bge	a5,a3,14ece <__muldf3+0x1a2>
   15114:	1561                	addi	a0,a0,-8
   15116:	00a617b3          	sll	a5,a2,a0
   1511a:	4581                	li	a1,0
   1511c:	b3e9                	j	14ee6 <__muldf3+0x1ba>
   1511e:	00001097          	auipc	ra,0x1
   15122:	a4e080e7          	jalr	-1458(ra) # 15b6c <__clzsi2>
   15126:	01550713          	addi	a4,a0,21
   1512a:	45f1                	li	a1,28
   1512c:	02050793          	addi	a5,a0,32
   15130:	4622                	lw	a2,8(sp)
   15132:	46b2                	lw	a3,12(sp)
   15134:	d2e5dfe3          	bge	a1,a4,14e72 <__muldf3+0x146>
   15138:	1561                	addi	a0,a0,-8
   1513a:	00aa1433          	sll	s0,s4,a0
   1513e:	4481                	li	s1,0
   15140:	b3a9                	j	14e8a <__muldf3+0x15e>
   15142:	4685                	li	a3,1
   15144:	8e9d                	sub	a3,a3,a5
   15146:	e7b1                	bnez	a5,15192 <__muldf3+0x466>
   15148:	41e90913          	addi	s2,s2,1054
   1514c:	012497b3          	sll	a5,s1,s2
   15150:	00d4d4b3          	srl	s1,s1,a3
   15154:	01241933          	sll	s2,s0,s2
   15158:	00f037b3          	snez	a5,a5
   1515c:	009964b3          	or	s1,s2,s1
   15160:	8cdd                	or	s1,s1,a5
   15162:	0074f793          	andi	a5,s1,7
   15166:	00d456b3          	srl	a3,s0,a3
   1516a:	cf81                	beqz	a5,15182 <__muldf3+0x456>
   1516c:	00f4f793          	andi	a5,s1,15
   15170:	4611                	li	a2,4
   15172:	00c78863          	beq	a5,a2,15182 <__muldf3+0x456>
   15176:	00448793          	addi	a5,s1,4
   1517a:	0097b4b3          	sltu	s1,a5,s1
   1517e:	96a6                	add	a3,a3,s1
   15180:	84be                	mv	s1,a5
   15182:	00869793          	slli	a5,a3,0x8
   15186:	0407d863          	bgez	a5,151d6 <__muldf3+0x4aa>
   1518a:	4785                	li	a5,1
   1518c:	4401                	li	s0,0
   1518e:	4481                	li	s1,0
   15190:	b99d                	j	14e06 <__muldf3+0xda>
   15192:	03800613          	li	a2,56
   15196:	cad649e3          	blt	a2,a3,14e48 <__muldf3+0x11c>
   1519a:	467d                	li	a2,31
   1519c:	fad656e3          	bge	a2,a3,15148 <__muldf3+0x41c>
   151a0:	5605                	li	a2,-31
   151a2:	40f607b3          	sub	a5,a2,a5
   151a6:	02000593          	li	a1,32
   151aa:	00f45633          	srl	a2,s0,a5
   151ae:	00b68763          	beq	a3,a1,151bc <__muldf3+0x490>
   151b2:	43e90913          	addi	s2,s2,1086
   151b6:	012417b3          	sll	a5,s0,s2
   151ba:	8cdd                	or	s1,s1,a5
   151bc:	009034b3          	snez	s1,s1
   151c0:	8cd1                	or	s1,s1,a2
   151c2:	0074f693          	andi	a3,s1,7
   151c6:	4401                	li	s0,0
   151c8:	ca99                	beqz	a3,151de <__muldf3+0x4b2>
   151ca:	00f4f793          	andi	a5,s1,15
   151ce:	4611                	li	a2,4
   151d0:	4681                	li	a3,0
   151d2:	fac792e3          	bne	a5,a2,15176 <__muldf3+0x44a>
   151d6:	00969413          	slli	s0,a3,0x9
   151da:	8031                	srli	s0,s0,0xc
   151dc:	06f6                	slli	a3,a3,0x1d
   151de:	808d                	srli	s1,s1,0x3
   151e0:	8cd5                	or	s1,s1,a3
   151e2:	4781                	li	a5,0
   151e4:	b10d                	j	14e06 <__muldf3+0xda>
   151e6:	7ff00793          	li	a5,2047
   151ea:	4401                	li	s0,0
   151ec:	4481                	li	s1,0
   151ee:	b921                	j	14e06 <__muldf3+0xda>
   151f0:	8942                	mv	s2,a6
   151f2:	bd4d                	j	150a4 <__muldf3+0x378>

000151f4 <__subdf3>:
__subdf3():
   151f4:	00100737          	lui	a4,0x100
   151f8:	177d                	addi	a4,a4,-1
   151fa:	1101                	addi	sp,sp,-32
   151fc:	00b77333          	and	t1,a4,a1
   15200:	0146d893          	srli	a7,a3,0x14
   15204:	8f75                	and	a4,a4,a3
   15206:	01d65e93          	srli	t4,a2,0x1d
   1520a:	cc22                	sw	s0,24(sp)
   1520c:	ca26                	sw	s1,20(sp)
   1520e:	030e                	slli	t1,t1,0x3
   15210:	0145d493          	srli	s1,a1,0x14
   15214:	01d55793          	srli	a5,a0,0x1d
   15218:	070e                	slli	a4,a4,0x3
   1521a:	ce06                	sw	ra,28(sp)
   1521c:	c84a                	sw	s2,16(sp)
   1521e:	c64e                	sw	s3,12(sp)
   15220:	7ff8f893          	andi	a7,a7,2047
   15224:	7ff00e13          	li	t3,2047
   15228:	00eee733          	or	a4,t4,a4
   1522c:	7ff4f493          	andi	s1,s1,2047
   15230:	01f5d413          	srli	s0,a1,0x1f
   15234:	0067e333          	or	t1,a5,t1
   15238:	00351f13          	slli	t5,a0,0x3
   1523c:	82fd                	srli	a3,a3,0x1f
   1523e:	00361e93          	slli	t4,a2,0x3
   15242:	19c88263          	beq	a7,t3,153c6 <__subdf3+0x1d2>
   15246:	0016c693          	xori	a3,a3,1
   1524a:	411485b3          	sub	a1,s1,a7
   1524e:	12d40763          	beq	s0,a3,1537c <__subdf3+0x188>
   15252:	18b05363          	blez	a1,153d8 <__subdf3+0x1e4>
   15256:	1a088d63          	beqz	a7,15410 <__subdf3+0x21c>
   1525a:	008007b7          	lui	a5,0x800
   1525e:	8f5d                	or	a4,a4,a5
   15260:	59c48563          	beq	s1,t3,157ea <__subdf3+0x5f6>
   15264:	03800793          	li	a5,56
   15268:	34b7c863          	blt	a5,a1,155b8 <__subdf3+0x3c4>
   1526c:	47fd                	li	a5,31
   1526e:	48b7c963          	blt	a5,a1,15700 <__subdf3+0x50c>
   15272:	02000793          	li	a5,32
   15276:	8f8d                	sub	a5,a5,a1
   15278:	00bed9b3          	srl	s3,t4,a1
   1527c:	00f71833          	sll	a6,a4,a5
   15280:	00fe9eb3          	sll	t4,t4,a5
   15284:	01386833          	or	a6,a6,s3
   15288:	00b75733          	srl	a4,a4,a1
   1528c:	01d039b3          	snez	s3,t4
   15290:	01386833          	or	a6,a6,s3
   15294:	40e30333          	sub	t1,t1,a4
   15298:	410f09b3          	sub	s3,t5,a6
   1529c:	013f37b3          	sltu	a5,t5,s3
   152a0:	40f30633          	sub	a2,t1,a5
   152a4:	00861793          	slli	a5,a2,0x8
   152a8:	2407d563          	bgez	a5,154f2 <__subdf3+0x2fe>
   152ac:	00800937          	lui	s2,0x800
   152b0:	197d                	addi	s2,s2,-1
   152b2:	01267933          	and	s2,a2,s2
   152b6:	2e090163          	beqz	s2,15598 <__subdf3+0x3a4>
   152ba:	854a                	mv	a0,s2
   152bc:	00001097          	auipc	ra,0x1
   152c0:	8b0080e7          	jalr	-1872(ra) # 15b6c <__clzsi2>
   152c4:	ff850713          	addi	a4,a0,-8
   152c8:	02000793          	li	a5,32
   152cc:	8f99                	sub	a5,a5,a4
   152ce:	00f9d7b3          	srl	a5,s3,a5
   152d2:	00e91633          	sll	a2,s2,a4
   152d6:	8fd1                	or	a5,a5,a2
   152d8:	00e999b3          	sll	s3,s3,a4
   152dc:	2a974463          	blt	a4,s1,15584 <__subdf3+0x390>
   152e0:	8f05                	sub	a4,a4,s1
   152e2:	00170613          	addi	a2,a4,1 # 100001 <_data_lma+0xe9da9>
   152e6:	46fd                	li	a3,31
   152e8:	3ac6c763          	blt	a3,a2,15696 <__subdf3+0x4a2>
   152ec:	02000713          	li	a4,32
   152f0:	8f11                	sub	a4,a4,a2
   152f2:	00c9d6b3          	srl	a3,s3,a2
   152f6:	00e99833          	sll	a6,s3,a4
   152fa:	00e79733          	sll	a4,a5,a4
   152fe:	8f55                	or	a4,a4,a3
   15300:	01003833          	snez	a6,a6
   15304:	010769b3          	or	s3,a4,a6
   15308:	00c7d633          	srl	a2,a5,a2
   1530c:	4481                	li	s1,0
   1530e:	0079f793          	andi	a5,s3,7
   15312:	cf81                	beqz	a5,1532a <__subdf3+0x136>
   15314:	00f9f693          	andi	a3,s3,15
   15318:	4791                	li	a5,4
   1531a:	00f68863          	beq	a3,a5,1532a <__subdf3+0x136>
   1531e:	00498693          	addi	a3,s3,4
   15322:	0136b833          	sltu	a6,a3,s3
   15326:	9642                	add	a2,a2,a6
   15328:	89b6                	mv	s3,a3
   1532a:	00861793          	slli	a5,a2,0x8
   1532e:	1c07d663          	bgez	a5,154fa <__subdf3+0x306>
   15332:	00148713          	addi	a4,s1,1
   15336:	7ff00793          	li	a5,2047
   1533a:	8805                	andi	s0,s0,1
   1533c:	20f70663          	beq	a4,a5,15548 <__subdf3+0x354>
   15340:	ff8007b7          	lui	a5,0xff800
   15344:	17fd                	addi	a5,a5,-1
   15346:	8ff1                	and	a5,a5,a2
   15348:	01d79813          	slli	a6,a5,0x1d
   1534c:	0039d993          	srli	s3,s3,0x3
   15350:	07a6                	slli	a5,a5,0x9
   15352:	01386833          	or	a6,a6,s3
   15356:	83b1                	srli	a5,a5,0xc
   15358:	7ff77713          	andi	a4,a4,2047
   1535c:	00c79693          	slli	a3,a5,0xc
   15360:	0752                	slli	a4,a4,0x14
   15362:	82b1                	srli	a3,a3,0xc
   15364:	047e                	slli	s0,s0,0x1f
   15366:	8ed9                	or	a3,a3,a4
   15368:	8ec1                	or	a3,a3,s0
   1536a:	40f2                	lw	ra,28(sp)
   1536c:	4462                	lw	s0,24(sp)
   1536e:	44d2                	lw	s1,20(sp)
   15370:	4942                	lw	s2,16(sp)
   15372:	49b2                	lw	s3,12(sp)
   15374:	8542                	mv	a0,a6
   15376:	85b6                	mv	a1,a3
   15378:	6105                	addi	sp,sp,32
   1537a:	8082                	ret
   1537c:	0ab05663          	blez	a1,15428 <__subdf3+0x234>
   15380:	12088a63          	beqz	a7,154b4 <__subdf3+0x2c0>
   15384:	008007b7          	lui	a5,0x800
   15388:	8f5d                	or	a4,a4,a5
   1538a:	2dc48963          	beq	s1,t3,1565c <__subdf3+0x468>
   1538e:	03800793          	li	a5,56
   15392:	18b7c763          	blt	a5,a1,15520 <__subdf3+0x32c>
   15396:	47fd                	li	a5,31
   15398:	3cb7d463          	bge	a5,a1,15760 <__subdf3+0x56c>
   1539c:	fe058813          	addi	a6,a1,-32
   153a0:	02000793          	li	a5,32
   153a4:	010759b3          	srl	s3,a4,a6
   153a8:	00f58a63          	beq	a1,a5,153bc <__subdf3+0x1c8>
   153ac:	04000793          	li	a5,64
   153b0:	40b785b3          	sub	a1,a5,a1
   153b4:	00b71733          	sll	a4,a4,a1
   153b8:	00eeeeb3          	or	t4,t4,a4
   153bc:	01d03833          	snez	a6,t4
   153c0:	01386833          	or	a6,a6,s3
   153c4:	a295                	j	15528 <__subdf3+0x334>
   153c6:	01d767b3          	or	a5,a4,t4
   153ca:	80148593          	addi	a1,s1,-2047
   153ce:	e399                	bnez	a5,153d4 <__subdf3+0x1e0>
   153d0:	0016c693          	xori	a3,a3,1
   153d4:	04d40a63          	beq	s0,a3,15428 <__subdf3+0x234>
   153d8:	e1d1                	bnez	a1,1545c <__subdf3+0x268>
   153da:	00148793          	addi	a5,s1,1
   153de:	7fe7f793          	andi	a5,a5,2046
   153e2:	1e079b63          	bnez	a5,155d8 <__subdf3+0x3e4>
   153e6:	01e367b3          	or	a5,t1,t5
   153ea:	01d76833          	or	a6,a4,t4
   153ee:	16049263          	bnez	s1,15552 <__subdf3+0x35e>
   153f2:	3c078463          	beqz	a5,157ba <__subdf3+0x5c6>
   153f6:	42081863          	bnez	a6,15826 <__subdf3+0x632>
   153fa:	00351813          	slli	a6,a0,0x3
   153fe:	01d31693          	slli	a3,t1,0x1d
   15402:	00385813          	srli	a6,a6,0x3
   15406:	0106e833          	or	a6,a3,a6
   1540a:	00335793          	srli	a5,t1,0x3
   1540e:	a219                	j	15514 <__subdf3+0x320>
   15410:	01d767b3          	or	a5,a4,t4
   15414:	1a078763          	beqz	a5,155c2 <__subdf3+0x3ce>
   15418:	fff58793          	addi	a5,a1,-1
   1541c:	3a078d63          	beqz	a5,157d6 <__subdf3+0x5e2>
   15420:	23c58e63          	beq	a1,t3,1565c <__subdf3+0x468>
   15424:	85be                	mv	a1,a5
   15426:	bd3d                	j	15264 <__subdf3+0x70>
   15428:	1c059b63          	bnez	a1,155fe <__subdf3+0x40a>
   1542c:	00148693          	addi	a3,s1,1
   15430:	7fe6f793          	andi	a5,a3,2046
   15434:	efc1                	bnez	a5,154cc <__subdf3+0x2d8>
   15436:	01e367b3          	or	a5,t1,t5
   1543a:	36049263          	bnez	s1,1579e <__subdf3+0x5aa>
   1543e:	44078f63          	beqz	a5,1589c <__subdf3+0x6a8>
   15442:	01d767b3          	or	a5,a4,t4
   15446:	46079663          	bnez	a5,158b2 <__subdf3+0x6be>
   1544a:	050e                	slli	a0,a0,0x3
   1544c:	01d31813          	slli	a6,t1,0x1d
   15450:	810d                	srli	a0,a0,0x3
   15452:	00a86833          	or	a6,a6,a0
   15456:	00335793          	srli	a5,t1,0x3
   1545a:	a86d                	j	15514 <__subdf3+0x320>
   1545c:	409885b3          	sub	a1,a7,s1
   15460:	20049963          	bnez	s1,15672 <__subdf3+0x47e>
   15464:	01e367b3          	or	a5,t1,t5
   15468:	30078f63          	beqz	a5,15786 <__subdf3+0x592>
   1546c:	fff58793          	addi	a5,a1,-1
   15470:	40078b63          	beqz	a5,15886 <__subdf3+0x692>
   15474:	7ff00513          	li	a0,2047
   15478:	20a58563          	beq	a1,a0,15682 <__subdf3+0x48e>
   1547c:	85be                	mv	a1,a5
   1547e:	03800793          	li	a5,56
   15482:	2ab7c463          	blt	a5,a1,1572a <__subdf3+0x536>
   15486:	47fd                	li	a5,31
   15488:	3cb7ca63          	blt	a5,a1,1585c <__subdf3+0x668>
   1548c:	02000793          	li	a5,32
   15490:	8f8d                	sub	a5,a5,a1
   15492:	00f31833          	sll	a6,t1,a5
   15496:	00bf5633          	srl	a2,t5,a1
   1549a:	00ff17b3          	sll	a5,t5,a5
   1549e:	00c86833          	or	a6,a6,a2
   154a2:	00f039b3          	snez	s3,a5
   154a6:	00b35333          	srl	t1,t1,a1
   154aa:	01386833          	or	a6,a6,s3
   154ae:	40670733          	sub	a4,a4,t1
   154b2:	a441                	j	15732 <__subdf3+0x53e>
   154b4:	01d767b3          	or	a5,a4,t4
   154b8:	10078563          	beqz	a5,155c2 <__subdf3+0x3ce>
   154bc:	fff58793          	addi	a5,a1,-1
   154c0:	20078163          	beqz	a5,156c2 <__subdf3+0x4ce>
   154c4:	2fc58263          	beq	a1,t3,157a8 <__subdf3+0x5b4>
   154c8:	85be                	mv	a1,a5
   154ca:	b5d1                	j	1538e <__subdf3+0x19a>
   154cc:	7ff00793          	li	a5,2047
   154d0:	06f68b63          	beq	a3,a5,15546 <__subdf3+0x352>
   154d4:	9efa                	add	t4,t4,t5
   154d6:	01eeb633          	sltu	a2,t4,t5
   154da:	00e307b3          	add	a5,t1,a4
   154de:	97b2                	add	a5,a5,a2
   154e0:	01f79813          	slli	a6,a5,0x1f
   154e4:	001ede93          	srli	t4,t4,0x1
   154e8:	01d869b3          	or	s3,a6,t4
   154ec:	0017d613          	srli	a2,a5,0x1
   154f0:	84b6                	mv	s1,a3
   154f2:	0079f793          	andi	a5,s3,7
   154f6:	e0079fe3          	bnez	a5,15314 <__subdf3+0x120>
   154fa:	01d61793          	slli	a5,a2,0x1d
   154fe:	0039d813          	srli	a6,s3,0x3
   15502:	00f86833          	or	a6,a6,a5
   15506:	85a6                	mv	a1,s1
   15508:	00365793          	srli	a5,a2,0x3
   1550c:	7ff00713          	li	a4,2047
   15510:	06e58063          	beq	a1,a4,15570 <__subdf3+0x37c>
   15514:	07b2                	slli	a5,a5,0xc
   15516:	83b1                	srli	a5,a5,0xc
   15518:	7ff5f713          	andi	a4,a1,2047
   1551c:	8805                	andi	s0,s0,1
   1551e:	bd3d                	j	1535c <__subdf3+0x168>
   15520:	01d76733          	or	a4,a4,t4
   15524:	00e03833          	snez	a6,a4
   15528:	01e809b3          	add	s3,a6,t5
   1552c:	01e9b7b3          	sltu	a5,s3,t5
   15530:	00678633          	add	a2,a5,t1
   15534:	00861793          	slli	a5,a2,0x8
   15538:	fa07dde3          	bgez	a5,154f2 <__subdf3+0x2fe>
   1553c:	0485                	addi	s1,s1,1
   1553e:	7ff00793          	li	a5,2047
   15542:	18f49e63          	bne	s1,a5,156de <__subdf3+0x4ea>
   15546:	8805                	andi	s0,s0,1
   15548:	7ff00713          	li	a4,2047
   1554c:	4781                	li	a5,0
   1554e:	4801                	li	a6,0
   15550:	b531                	j	1535c <__subdf3+0x168>
   15552:	10079363          	bnez	a5,15658 <__subdf3+0x464>
   15556:	3c080363          	beqz	a6,1591c <__subdf3+0x728>
   1555a:	00361813          	slli	a6,a2,0x3
   1555e:	01d71793          	slli	a5,a4,0x1d
   15562:	00385813          	srli	a6,a6,0x3
   15566:	00f86833          	or	a6,a6,a5
   1556a:	8436                	mv	s0,a3
   1556c:	00375793          	srli	a5,a4,0x3
   15570:	00f867b3          	or	a5,a6,a5
   15574:	dbe9                	beqz	a5,15546 <__subdf3+0x352>
   15576:	4401                	li	s0,0
   15578:	7ff00713          	li	a4,2047
   1557c:	000807b7          	lui	a5,0x80
   15580:	4801                	li	a6,0
   15582:	bbe9                	j	1535c <__subdf3+0x168>
   15584:	ff800637          	lui	a2,0xff800
   15588:	167d                	addi	a2,a2,-1
   1558a:	8e7d                	and	a2,a2,a5
   1558c:	0079f793          	andi	a5,s3,7
   15590:	8c99                	sub	s1,s1,a4
   15592:	d80791e3          	bnez	a5,15314 <__subdf3+0x120>
   15596:	b795                	j	154fa <__subdf3+0x306>
   15598:	854e                	mv	a0,s3
   1559a:	00000097          	auipc	ra,0x0
   1559e:	5d2080e7          	jalr	1490(ra) # 15b6c <__clzsi2>
   155a2:	01850713          	addi	a4,a0,24
   155a6:	47fd                	li	a5,31
   155a8:	d2e7d0e3          	bge	a5,a4,152c8 <__subdf3+0xd4>
   155ac:	ff850613          	addi	a2,a0,-8
   155b0:	00c997b3          	sll	a5,s3,a2
   155b4:	4981                	li	s3,0
   155b6:	b31d                	j	152dc <__subdf3+0xe8>
   155b8:	01d76833          	or	a6,a4,t4
   155bc:	01003833          	snez	a6,a6
   155c0:	b9e1                	j	15298 <__subdf3+0xa4>
   155c2:	00351813          	slli	a6,a0,0x3
   155c6:	01d31793          	slli	a5,t1,0x1d
   155ca:	00385813          	srli	a6,a6,0x3
   155ce:	00f86833          	or	a6,a6,a5
   155d2:	00335793          	srli	a5,t1,0x3
   155d6:	bf1d                	j	1550c <__subdf3+0x318>
   155d8:	41df09b3          	sub	s3,t5,t4
   155dc:	40e30933          	sub	s2,t1,a4
   155e0:	013f3633          	sltu	a2,t5,s3
   155e4:	40c90933          	sub	s2,s2,a2
   155e8:	00891793          	slli	a5,s2,0x8
   155ec:	2007ca63          	bltz	a5,15800 <__subdf3+0x60c>
   155f0:	0129e833          	or	a6,s3,s2
   155f4:	cc0811e3          	bnez	a6,152b6 <__subdf3+0xc2>
   155f8:	4781                	li	a5,0
   155fa:	4401                	li	s0,0
   155fc:	bf21                	j	15514 <__subdf3+0x320>
   155fe:	409885b3          	sub	a1,a7,s1
   15602:	14048163          	beqz	s1,15744 <__subdf3+0x550>
   15606:	008006b7          	lui	a3,0x800
   1560a:	7ff00793          	li	a5,2047
   1560e:	00d36333          	or	t1,t1,a3
   15612:	20f88163          	beq	a7,a5,15814 <__subdf3+0x620>
   15616:	03800793          	li	a5,56
   1561a:	22b7cc63          	blt	a5,a1,15852 <__subdf3+0x65e>
   1561e:	47fd                	li	a5,31
   15620:	2cb7c963          	blt	a5,a1,158f2 <__subdf3+0x6fe>
   15624:	02000793          	li	a5,32
   15628:	8f8d                	sub	a5,a5,a1
   1562a:	00f31833          	sll	a6,t1,a5
   1562e:	00bf56b3          	srl	a3,t5,a1
   15632:	00ff17b3          	sll	a5,t5,a5
   15636:	00d86833          	or	a6,a6,a3
   1563a:	00f039b3          	snez	s3,a5
   1563e:	00b35333          	srl	t1,t1,a1
   15642:	01386833          	or	a6,a6,s3
   15646:	971a                	add	a4,a4,t1
   15648:	01d809b3          	add	s3,a6,t4
   1564c:	01d9b7b3          	sltu	a5,s3,t4
   15650:	00e78633          	add	a2,a5,a4
   15654:	84c6                	mv	s1,a7
   15656:	bdf9                	j	15534 <__subdf3+0x340>
   15658:	f0081fe3          	bnez	a6,15576 <__subdf3+0x382>
   1565c:	00351813          	slli	a6,a0,0x3
   15660:	01d31793          	slli	a5,t1,0x1d
   15664:	00385813          	srli	a6,a6,0x3
   15668:	00f86833          	or	a6,a6,a5
   1566c:	00335793          	srli	a5,t1,0x3
   15670:	b701                	j	15570 <__subdf3+0x37c>
   15672:	00800537          	lui	a0,0x800
   15676:	7ff00793          	li	a5,2047
   1567a:	00a36333          	or	t1,t1,a0
   1567e:	e0f890e3          	bne	a7,a5,1547e <__subdf3+0x28a>
   15682:	060e                	slli	a2,a2,0x3
   15684:	01d71813          	slli	a6,a4,0x1d
   15688:	820d                	srli	a2,a2,0x3
   1568a:	00c86833          	or	a6,a6,a2
   1568e:	00375793          	srli	a5,a4,0x3
   15692:	8436                	mv	s0,a3
   15694:	bdf1                	j	15570 <__subdf3+0x37c>
   15696:	1705                	addi	a4,a4,-31
   15698:	02000693          	li	a3,32
   1569c:	00e7d733          	srl	a4,a5,a4
   156a0:	00d60a63          	beq	a2,a3,156b4 <__subdf3+0x4c0>
   156a4:	04000693          	li	a3,64
   156a8:	40c68633          	sub	a2,a3,a2
   156ac:	00c79633          	sll	a2,a5,a2
   156b0:	00c9e9b3          	or	s3,s3,a2
   156b4:	01303833          	snez	a6,s3
   156b8:	00e869b3          	or	s3,a6,a4
   156bc:	4601                	li	a2,0
   156be:	4481                	li	s1,0
   156c0:	bd0d                	j	154f2 <__subdf3+0x2fe>
   156c2:	01df09b3          	add	s3,t5,t4
   156c6:	00e307b3          	add	a5,t1,a4
   156ca:	01e9bf33          	sltu	t5,s3,t5
   156ce:	01e78633          	add	a2,a5,t5
   156d2:	00861793          	slli	a5,a2,0x8
   156d6:	4485                	li	s1,1
   156d8:	e007dde3          	bgez	a5,154f2 <__subdf3+0x2fe>
   156dc:	4489                	li	s1,2
   156de:	ff8007b7          	lui	a5,0xff800
   156e2:	17fd                	addi	a5,a5,-1
   156e4:	8ff1                	and	a5,a5,a2
   156e6:	0019d713          	srli	a4,s3,0x1
   156ea:	0019f813          	andi	a6,s3,1
   156ee:	01076833          	or	a6,a4,a6
   156f2:	01f79993          	slli	s3,a5,0x1f
   156f6:	0109e9b3          	or	s3,s3,a6
   156fa:	0017d613          	srli	a2,a5,0x1
   156fe:	b901                	j	1530e <__subdf3+0x11a>
   15700:	fe058813          	addi	a6,a1,-32
   15704:	02000793          	li	a5,32
   15708:	010759b3          	srl	s3,a4,a6
   1570c:	00f58a63          	beq	a1,a5,15720 <__subdf3+0x52c>
   15710:	04000793          	li	a5,64
   15714:	40b785b3          	sub	a1,a5,a1
   15718:	00b71733          	sll	a4,a4,a1
   1571c:	00eeeeb3          	or	t4,t4,a4
   15720:	01d03833          	snez	a6,t4
   15724:	01386833          	or	a6,a6,s3
   15728:	be85                	j	15298 <__subdf3+0xa4>
   1572a:	01e36333          	or	t1,t1,t5
   1572e:	00603833          	snez	a6,t1
   15732:	410e89b3          	sub	s3,t4,a6
   15736:	013eb7b3          	sltu	a5,t4,s3
   1573a:	40f70633          	sub	a2,a4,a5
   1573e:	84c6                	mv	s1,a7
   15740:	8436                	mv	s0,a3
   15742:	b68d                	j	152a4 <__subdf3+0xb0>
   15744:	01e367b3          	or	a5,t1,t5
   15748:	18078763          	beqz	a5,158d6 <__subdf3+0x6e2>
   1574c:	fff58793          	addi	a5,a1,-1
   15750:	1c078c63          	beqz	a5,15928 <__subdf3+0x734>
   15754:	7ff00693          	li	a3,2047
   15758:	0ad58e63          	beq	a1,a3,15814 <__subdf3+0x620>
   1575c:	85be                	mv	a1,a5
   1575e:	bd65                	j	15616 <__subdf3+0x422>
   15760:	02000793          	li	a5,32
   15764:	8f8d                	sub	a5,a5,a1
   15766:	00bed9b3          	srl	s3,t4,a1
   1576a:	00f71833          	sll	a6,a4,a5
   1576e:	00fe9eb3          	sll	t4,t4,a5
   15772:	01386833          	or	a6,a6,s3
   15776:	00b75733          	srl	a4,a4,a1
   1577a:	01d039b3          	snez	s3,t4
   1577e:	01386833          	or	a6,a6,s3
   15782:	933a                	add	t1,t1,a4
   15784:	b355                	j	15528 <__subdf3+0x334>
   15786:	00361813          	slli	a6,a2,0x3
   1578a:	01d71793          	slli	a5,a4,0x1d
   1578e:	00385813          	srli	a6,a6,0x3
   15792:	0107e833          	or	a6,a5,a6
   15796:	8436                	mv	s0,a3
   15798:	00375793          	srli	a5,a4,0x3
   1579c:	bb85                	j	1550c <__subdf3+0x318>
   1579e:	cbbd                	beqz	a5,15814 <__subdf3+0x620>
   157a0:	01d76733          	or	a4,a4,t4
   157a4:	dc0719e3          	bnez	a4,15576 <__subdf3+0x382>
   157a8:	050e                	slli	a0,a0,0x3
   157aa:	01d31813          	slli	a6,t1,0x1d
   157ae:	810d                	srli	a0,a0,0x3
   157b0:	00a86833          	or	a6,a6,a0
   157b4:	00335793          	srli	a5,t1,0x3
   157b8:	bb65                	j	15570 <__subdf3+0x37c>
   157ba:	e2080fe3          	beqz	a6,155f8 <__subdf3+0x404>
   157be:	00361813          	slli	a6,a2,0x3
   157c2:	01d71793          	slli	a5,a4,0x1d
   157c6:	00385813          	srli	a6,a6,0x3
   157ca:	00f86833          	or	a6,a6,a5
   157ce:	8436                	mv	s0,a3
   157d0:	00375793          	srli	a5,a4,0x3
   157d4:	b381                	j	15514 <__subdf3+0x320>
   157d6:	41df09b3          	sub	s3,t5,t4
   157da:	40e307b3          	sub	a5,t1,a4
   157de:	013f3f33          	sltu	t5,t5,s3
   157e2:	41e78633          	sub	a2,a5,t5
   157e6:	4485                	li	s1,1
   157e8:	bc75                	j	152a4 <__subdf3+0xb0>
   157ea:	00351813          	slli	a6,a0,0x3
   157ee:	01d31693          	slli	a3,t1,0x1d
   157f2:	00385813          	srli	a6,a6,0x3
   157f6:	0106e833          	or	a6,a3,a6
   157fa:	00335793          	srli	a5,t1,0x3
   157fe:	bb8d                	j	15570 <__subdf3+0x37c>
   15800:	41ee89b3          	sub	s3,t4,t5
   15804:	40670633          	sub	a2,a4,t1
   15808:	013eb933          	sltu	s2,t4,s3
   1580c:	41260933          	sub	s2,a2,s2
   15810:	8436                	mv	s0,a3
   15812:	b455                	j	152b6 <__subdf3+0xc2>
   15814:	060e                	slli	a2,a2,0x3
   15816:	01d71813          	slli	a6,a4,0x1d
   1581a:	820d                	srli	a2,a2,0x3
   1581c:	00c86833          	or	a6,a6,a2
   15820:	00375793          	srli	a5,a4,0x3
   15824:	b3b1                	j	15570 <__subdf3+0x37c>
   15826:	41df09b3          	sub	s3,t5,t4
   1582a:	40e307b3          	sub	a5,t1,a4
   1582e:	013f3633          	sltu	a2,t5,s3
   15832:	40c78633          	sub	a2,a5,a2
   15836:	00861793          	slli	a5,a2,0x8
   1583a:	0a07d763          	bgez	a5,158e8 <__subdf3+0x6f4>
   1583e:	41ee89b3          	sub	s3,t4,t5
   15842:	406707b3          	sub	a5,a4,t1
   15846:	013ebeb3          	sltu	t4,t4,s3
   1584a:	41d78633          	sub	a2,a5,t4
   1584e:	8436                	mv	s0,a3
   15850:	bc7d                	j	1530e <__subdf3+0x11a>
   15852:	01e36333          	or	t1,t1,t5
   15856:	00603833          	snez	a6,t1
   1585a:	b3fd                	j	15648 <__subdf3+0x454>
   1585c:	fe058813          	addi	a6,a1,-32
   15860:	02000793          	li	a5,32
   15864:	010359b3          	srl	s3,t1,a6
   15868:	00f58a63          	beq	a1,a5,1587c <__subdf3+0x688>
   1586c:	04000793          	li	a5,64
   15870:	40b785b3          	sub	a1,a5,a1
   15874:	00b31333          	sll	t1,t1,a1
   15878:	006f6f33          	or	t5,t5,t1
   1587c:	01e03833          	snez	a6,t5
   15880:	01386833          	or	a6,a6,s3
   15884:	b57d                	j	15732 <__subdf3+0x53e>
   15886:	41ee89b3          	sub	s3,t4,t5
   1588a:	406707b3          	sub	a5,a4,t1
   1588e:	013ebeb3          	sltu	t4,t4,s3
   15892:	41d78633          	sub	a2,a5,t4
   15896:	8436                	mv	s0,a3
   15898:	4485                	li	s1,1
   1589a:	b429                	j	152a4 <__subdf3+0xb0>
   1589c:	00361813          	slli	a6,a2,0x3
   158a0:	01d71793          	slli	a5,a4,0x1d
   158a4:	00385813          	srli	a6,a6,0x3
   158a8:	00f86833          	or	a6,a6,a5
   158ac:	00375793          	srli	a5,a4,0x3
   158b0:	b195                	j	15514 <__subdf3+0x320>
   158b2:	01df09b3          	add	s3,t5,t4
   158b6:	00e307b3          	add	a5,t1,a4
   158ba:	01e9bf33          	sltu	t5,s3,t5
   158be:	01e78633          	add	a2,a5,t5
   158c2:	00861793          	slli	a5,a2,0x8
   158c6:	c207d6e3          	bgez	a5,154f2 <__subdf3+0x2fe>
   158ca:	ff8007b7          	lui	a5,0xff800
   158ce:	17fd                	addi	a5,a5,-1
   158d0:	8e7d                	and	a2,a2,a5
   158d2:	4485                	li	s1,1
   158d4:	b939                	j	154f2 <__subdf3+0x2fe>
   158d6:	060e                	slli	a2,a2,0x3
   158d8:	01d71813          	slli	a6,a4,0x1d
   158dc:	820d                	srli	a2,a2,0x3
   158de:	00c86833          	or	a6,a6,a2
   158e2:	00375793          	srli	a5,a4,0x3
   158e6:	b11d                	j	1550c <__subdf3+0x318>
   158e8:	00c9e833          	or	a6,s3,a2
   158ec:	d00806e3          	beqz	a6,155f8 <__subdf3+0x404>
   158f0:	b109                	j	154f2 <__subdf3+0x2fe>
   158f2:	fe058813          	addi	a6,a1,-32
   158f6:	02000793          	li	a5,32
   158fa:	010359b3          	srl	s3,t1,a6
   158fe:	00f58a63          	beq	a1,a5,15912 <__subdf3+0x71e>
   15902:	04000793          	li	a5,64
   15906:	40b785b3          	sub	a1,a5,a1
   1590a:	00b31333          	sll	t1,t1,a1
   1590e:	006f6f33          	or	t5,t5,t1
   15912:	01e03833          	snez	a6,t5
   15916:	01386833          	or	a6,a6,s3
   1591a:	b33d                	j	15648 <__subdf3+0x454>
   1591c:	4401                	li	s0,0
   1591e:	7ff00713          	li	a4,2047
   15922:	000807b7          	lui	a5,0x80
   15926:	bc1d                	j	1535c <__subdf3+0x168>
   15928:	01df09b3          	add	s3,t5,t4
   1592c:	00e307b3          	add	a5,t1,a4
   15930:	01d9beb3          	sltu	t4,s3,t4
   15934:	01d78633          	add	a2,a5,t4
   15938:	bb69                	j	156d2 <__subdf3+0x4de>

0001593a <__fixunsdfdi>:
__fixunsdfdi():
   1593a:	0145d793          	srli	a5,a1,0x14
   1593e:	001006b7          	lui	a3,0x100
   15942:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xe9da7>
   15946:	7ff7f793          	andi	a5,a5,2047
   1594a:	3fe00613          	li	a2,1022
   1594e:	8f6d                	and	a4,a4,a1
   15950:	81fd                	srli	a1,a1,0x1f
   15952:	00f65363          	bge	a2,a5,15958 <__fixunsdfdi+0x1e>
   15956:	c581                	beqz	a1,1595e <__fixunsdfdi+0x24>
   15958:	4501                	li	a0,0
   1595a:	4581                	li	a1,0
   1595c:	8082                	ret
   1595e:	43e00613          	li	a2,1086
   15962:	00f65563          	bge	a2,a5,1596c <__fixunsdfdi+0x32>
   15966:	557d                	li	a0,-1
   15968:	55fd                	li	a1,-1
   1596a:	8082                	ret
   1596c:	43200613          	li	a2,1074
   15970:	00d765b3          	or	a1,a4,a3
   15974:	00f65c63          	bge	a2,a5,1598c <__fixunsdfdi+0x52>
   15978:	bad78713          	addi	a4,a5,-1107 # 7fbad <_data_lma+0x69955>
   1597c:	bcd78793          	addi	a5,a5,-1075
   15980:	04074063          	bltz	a4,159c0 <__fixunsdfdi+0x86>
   15984:	00e515b3          	sll	a1,a0,a4
   15988:	4501                	li	a0,0
   1598a:	8082                	ret
   1598c:	43300693          	li	a3,1075
   15990:	8e9d                	sub	a3,a3,a5
   15992:	477d                	li	a4,31
   15994:	00d75b63          	bge	a4,a3,159aa <__fixunsdfdi+0x70>
   15998:	41300713          	li	a4,1043
   1599c:	40f707b3          	sub	a5,a4,a5
   159a0:	00f5d7b3          	srl	a5,a1,a5
   159a4:	4581                	li	a1,0
   159a6:	853e                	mv	a0,a5
   159a8:	8082                	ret
   159aa:	bed78713          	addi	a4,a5,-1043
   159ae:	00e59733          	sll	a4,a1,a4
   159b2:	00d55533          	srl	a0,a0,a3
   159b6:	00a767b3          	or	a5,a4,a0
   159ba:	00d5d5b3          	srl	a1,a1,a3
   159be:	b7e5                	j	159a6 <__fixunsdfdi+0x6c>
   159c0:	46fd                	li	a3,31
   159c2:	00155713          	srli	a4,a0,0x1
   159c6:	8e9d                	sub	a3,a3,a5
   159c8:	00d75733          	srl	a4,a4,a3
   159cc:	00f595b3          	sll	a1,a1,a5
   159d0:	8dd9                	or	a1,a1,a4
   159d2:	00f51533          	sll	a0,a0,a5
   159d6:	8082                	ret

000159d8 <__floatundidf>:
__floatundidf():
   159d8:	00b567b3          	or	a5,a0,a1
   159dc:	c3b1                	beqz	a5,15a20 <__floatundidf+0x48>
   159de:	1141                	addi	sp,sp,-16
   159e0:	c422                	sw	s0,8(sp)
   159e2:	c226                	sw	s1,4(sp)
   159e4:	c04a                	sw	s2,0(sp)
   159e6:	c606                	sw	ra,12(sp)
   159e8:	84aa                	mv	s1,a0
   159ea:	892e                	mv	s2,a1
   159ec:	842e                	mv	s0,a1
   159ee:	c1b9                	beqz	a1,15a34 <__floatundidf+0x5c>
   159f0:	852e                	mv	a0,a1
   159f2:	00000097          	auipc	ra,0x0
   159f6:	17a080e7          	jalr	378(ra) # 15b6c <__clzsi2>
   159fa:	43e00693          	li	a3,1086
   159fe:	8e89                	sub	a3,a3,a0
   15a00:	43300793          	li	a5,1075
   15a04:	06d7c763          	blt	a5,a3,15a72 <__floatundidf+0x9a>
   15a08:	00c91793          	slli	a5,s2,0xc
   15a0c:	462d                	li	a2,11
   15a0e:	8726                	mv	a4,s1
   15a10:	7ff6f693          	andi	a3,a3,2047
   15a14:	83b1                	srli	a5,a5,0xc
   15a16:	0ca65f63          	bge	a2,a0,15af4 <__floatundidf+0x11c>
   15a1a:	ff550613          	addi	a2,a0,-11 # 7ffff5 <_data_lma+0x7e9d9d>
   15a1e:	a825                	j	15a56 <__floatundidf+0x7e>
   15a20:	4781                	li	a5,0
   15a22:	4681                	li	a3,0
   15a24:	07b2                	slli	a5,a5,0xc
   15a26:	06d2                	slli	a3,a3,0x14
   15a28:	83b1                	srli	a5,a5,0xc
   15a2a:	4701                	li	a4,0
   15a2c:	8fd5                	or	a5,a5,a3
   15a2e:	853a                	mv	a0,a4
   15a30:	85be                	mv	a1,a5
   15a32:	8082                	ret
   15a34:	00000097          	auipc	ra,0x0
   15a38:	138080e7          	jalr	312(ra) # 15b6c <__clzsi2>
   15a3c:	862a                	mv	a2,a0
   15a3e:	43e00693          	li	a3,1086
   15a42:	02050513          	addi	a0,a0,32
   15a46:	8e89                	sub	a3,a3,a0
   15a48:	02a00713          	li	a4,42
   15a4c:	7ff6f693          	andi	a3,a3,2047
   15a50:	0ca74c63          	blt	a4,a0,15b28 <__floatundidf+0x150>
   15a54:	0655                	addi	a2,a2,21
   15a56:	02b00713          	li	a4,43
   15a5a:	8f09                	sub	a4,a4,a0
   15a5c:	00c917b3          	sll	a5,s2,a2
   15a60:	00e4d733          	srl	a4,s1,a4
   15a64:	8f5d                	or	a4,a4,a5
   15a66:	00c71793          	slli	a5,a4,0xc
   15a6a:	83b1                	srli	a5,a5,0xc
   15a6c:	00c49733          	sll	a4,s1,a2
   15a70:	a051                	j	15af4 <__floatundidf+0x11c>
   15a72:	43600793          	li	a5,1078
   15a76:	02d7d963          	bge	a5,a3,15aa8 <__floatundidf+0xd0>
   15a7a:	01850713          	addi	a4,a0,24
   15a7e:	03850793          	addi	a5,a0,56
   15a82:	0c074763          	bltz	a4,15b50 <__floatundidf+0x178>
   15a86:	00e49633          	sll	a2,s1,a4
   15a8a:	4701                	li	a4,0
   15a8c:	4421                	li	s0,8
   15a8e:	8c09                	sub	s0,s0,a0
   15a90:	8f51                	or	a4,a4,a2
   15a92:	fe040793          	addi	a5,s0,-32 # 7ffe0 <_data_lma+0x69d88>
   15a96:	00e03733          	snez	a4,a4
   15a9a:	0807cf63          	bltz	a5,15b38 <__floatundidf+0x160>
   15a9e:	00f954b3          	srl	s1,s2,a5
   15aa2:	4781                	li	a5,0
   15aa4:	8cd9                	or	s1,s1,a4
   15aa6:	843e                	mv	s0,a5
   15aa8:	47a1                	li	a5,8
   15aaa:	06a7c163          	blt	a5,a0,15b0c <__floatundidf+0x134>
   15aae:	ff800737          	lui	a4,0xff800
   15ab2:	177d                	addi	a4,a4,-1
   15ab4:	0074f613          	andi	a2,s1,7
   15ab8:	00e477b3          	and	a5,s0,a4
   15abc:	c605                	beqz	a2,15ae4 <__floatundidf+0x10c>
   15abe:	00f4f613          	andi	a2,s1,15
   15ac2:	4591                	li	a1,4
   15ac4:	02b60063          	beq	a2,a1,15ae4 <__floatundidf+0x10c>
   15ac8:	00448613          	addi	a2,s1,4
   15acc:	009634b3          	sltu	s1,a2,s1
   15ad0:	97a6                	add	a5,a5,s1
   15ad2:	00879593          	slli	a1,a5,0x8
   15ad6:	0805d963          	bgez	a1,15b68 <__floatundidf+0x190>
   15ada:	43f00693          	li	a3,1087
   15ade:	8ff9                	and	a5,a5,a4
   15ae0:	8e89                	sub	a3,a3,a0
   15ae2:	84b2                	mv	s1,a2
   15ae4:	01d79713          	slli	a4,a5,0x1d
   15ae8:	808d                	srli	s1,s1,0x3
   15aea:	07a6                	slli	a5,a5,0x9
   15aec:	8f45                	or	a4,a4,s1
   15aee:	83b1                	srli	a5,a5,0xc
   15af0:	7ff6f693          	andi	a3,a3,2047
   15af4:	40b2                	lw	ra,12(sp)
   15af6:	4422                	lw	s0,8(sp)
   15af8:	07b2                	slli	a5,a5,0xc
   15afa:	06d2                	slli	a3,a3,0x14
   15afc:	83b1                	srli	a5,a5,0xc
   15afe:	8fd5                	or	a5,a5,a3
   15b00:	4492                	lw	s1,4(sp)
   15b02:	4902                	lw	s2,0(sp)
   15b04:	853a                	mv	a0,a4
   15b06:	85be                	mv	a1,a5
   15b08:	0141                	addi	sp,sp,16
   15b0a:	8082                	ret
   15b0c:	02800713          	li	a4,40
   15b10:	ff850613          	addi	a2,a0,-8
   15b14:	8f09                	sub	a4,a4,a0
   15b16:	00e4d733          	srl	a4,s1,a4
   15b1a:	00c417b3          	sll	a5,s0,a2
   15b1e:	00f76433          	or	s0,a4,a5
   15b22:	00c494b3          	sll	s1,s1,a2
   15b26:	b761                	j	15aae <__floatundidf+0xd6>
   15b28:	ff560793          	addi	a5,a2,-11 # ff7ffff5 <_eusrstack+0xdf7f7ff5>
   15b2c:	00f497b3          	sll	a5,s1,a5
   15b30:	07b2                	slli	a5,a5,0xc
   15b32:	83b1                	srli	a5,a5,0xc
   15b34:	4701                	li	a4,0
   15b36:	bf7d                	j	15af4 <__floatundidf+0x11c>
   15b38:	467d                	li	a2,31
   15b3a:	00191793          	slli	a5,s2,0x1
   15b3e:	8e01                	sub	a2,a2,s0
   15b40:	00c797b3          	sll	a5,a5,a2
   15b44:	0084d4b3          	srl	s1,s1,s0
   15b48:	8cdd                	or	s1,s1,a5
   15b4a:	008957b3          	srl	a5,s2,s0
   15b4e:	bf99                	j	15aa4 <__floatundidf+0xcc>
   15b50:	467d                	li	a2,31
   15b52:	8e1d                	sub	a2,a2,a5
   15b54:	0014d713          	srli	a4,s1,0x1
   15b58:	00c75733          	srl	a4,a4,a2
   15b5c:	00f91633          	sll	a2,s2,a5
   15b60:	8e59                	or	a2,a2,a4
   15b62:	00f49733          	sll	a4,s1,a5
   15b66:	b71d                	j	15a8c <__floatundidf+0xb4>
   15b68:	84b2                	mv	s1,a2
   15b6a:	bfad                	j	15ae4 <__floatundidf+0x10c>

00015b6c <__clzsi2>:
__clzsi2():
   15b6c:	67c1                	lui	a5,0x10
   15b6e:	02f57e63          	bgeu	a0,a5,15baa <__clzsi2+0x3e>
   15b72:	0ff00793          	li	a5,255
   15b76:	02000713          	li	a4,32
   15b7a:	00a7ec63          	bltu	a5,a0,15b92 <__clzsi2+0x26>
   15b7e:	00000797          	auipc	a5,0x0
   15b82:	5da78793          	addi	a5,a5,1498 # 16158 <__clz_tab>
   15b86:	97aa                	add	a5,a5,a0
   15b88:	0007c503          	lbu	a0,0(a5)
   15b8c:	40a70533          	sub	a0,a4,a0
   15b90:	8082                	ret
   15b92:	8121                	srli	a0,a0,0x8
   15b94:	00000797          	auipc	a5,0x0
   15b98:	5c478793          	addi	a5,a5,1476 # 16158 <__clz_tab>
   15b9c:	97aa                	add	a5,a5,a0
   15b9e:	0007c503          	lbu	a0,0(a5)
   15ba2:	4761                	li	a4,24
   15ba4:	40a70533          	sub	a0,a4,a0
   15ba8:	8082                	ret
   15baa:	010007b7          	lui	a5,0x1000
   15bae:	00f56e63          	bltu	a0,a5,15bca <__clzsi2+0x5e>
   15bb2:	8161                	srli	a0,a0,0x18
   15bb4:	00000797          	auipc	a5,0x0
   15bb8:	5a478793          	addi	a5,a5,1444 # 16158 <__clz_tab>
   15bbc:	97aa                	add	a5,a5,a0
   15bbe:	0007c503          	lbu	a0,0(a5)
   15bc2:	4721                	li	a4,8
   15bc4:	40a70533          	sub	a0,a4,a0
   15bc8:	8082                	ret
   15bca:	8141                	srli	a0,a0,0x10
   15bcc:	00000797          	auipc	a5,0x0
   15bd0:	58c78793          	addi	a5,a5,1420 # 16158 <__clz_tab>
   15bd4:	97aa                	add	a5,a5,a0
   15bd6:	0007c503          	lbu	a0,0(a5)
   15bda:	4741                	li	a4,16
   15bdc:	40a70533          	sub	a0,a4,a0
   15be0:	8082                	ret

00015be2 <memcpy>:
memcpy():
   15be2:	00a5c7b3          	xor	a5,a1,a0
   15be6:	8b8d                	andi	a5,a5,3
   15be8:	00c50733          	add	a4,a0,a2
   15bec:	e781                	bnez	a5,15bf4 <memcpy+0x12>
   15bee:	478d                	li	a5,3
   15bf0:	00c7ee63          	bltu	a5,a2,15c0c <memcpy+0x2a>
   15bf4:	87aa                	mv	a5,a0
   15bf6:	0ae57063          	bgeu	a0,a4,15c96 <memcpy+0xb4>
   15bfa:	0005c683          	lbu	a3,0(a1)
   15bfe:	0785                	addi	a5,a5,1
   15c00:	0585                	addi	a1,a1,1
   15c02:	fed78fa3          	sb	a3,-1(a5)
   15c06:	fee7eae3          	bltu	a5,a4,15bfa <memcpy+0x18>
   15c0a:	8082                	ret
   15c0c:	00357693          	andi	a3,a0,3
   15c10:	87aa                	mv	a5,a0
   15c12:	ca91                	beqz	a3,15c26 <memcpy+0x44>
   15c14:	0005c683          	lbu	a3,0(a1)
   15c18:	0785                	addi	a5,a5,1
   15c1a:	0585                	addi	a1,a1,1
   15c1c:	fed78fa3          	sb	a3,-1(a5)
   15c20:	0037f693          	andi	a3,a5,3
   15c24:	b7fd                	j	15c12 <memcpy+0x30>
   15c26:	ffc77693          	andi	a3,a4,-4
   15c2a:	fe068613          	addi	a2,a3,-32
   15c2e:	06c7f063          	bgeu	a5,a2,15c8e <memcpy+0xac>
   15c32:	0005a383          	lw	t2,0(a1)
   15c36:	0045a283          	lw	t0,4(a1)
   15c3a:	0085af83          	lw	t6,8(a1)
   15c3e:	00c5af03          	lw	t5,12(a1)
   15c42:	0105ae83          	lw	t4,16(a1)
   15c46:	0145ae03          	lw	t3,20(a1)
   15c4a:	0185a303          	lw	t1,24(a1)
   15c4e:	01c5a883          	lw	a7,28(a1)
   15c52:	02458593          	addi	a1,a1,36
   15c56:	0077a023          	sw	t2,0(a5)
   15c5a:	ffc5a803          	lw	a6,-4(a1)
   15c5e:	0057a223          	sw	t0,4(a5)
   15c62:	01f7a423          	sw	t6,8(a5)
   15c66:	01e7a623          	sw	t5,12(a5)
   15c6a:	01d7a823          	sw	t4,16(a5)
   15c6e:	01c7aa23          	sw	t3,20(a5)
   15c72:	0067ac23          	sw	t1,24(a5)
   15c76:	0117ae23          	sw	a7,28(a5)
   15c7a:	02478793          	addi	a5,a5,36
   15c7e:	ff07ae23          	sw	a6,-4(a5)
   15c82:	b775                	j	15c2e <memcpy+0x4c>
   15c84:	4190                	lw	a2,0(a1)
   15c86:	0791                	addi	a5,a5,4
   15c88:	0591                	addi	a1,a1,4
   15c8a:	fec7ae23          	sw	a2,-4(a5)
   15c8e:	fed7ebe3          	bltu	a5,a3,15c84 <memcpy+0xa2>
   15c92:	f6e7e4e3          	bltu	a5,a4,15bfa <memcpy+0x18>
   15c96:	8082                	ret

00015c98 <strlen>:
strlen():
   15c98:	87aa                	mv	a5,a0
   15c9a:	0785                	addi	a5,a5,1
   15c9c:	fff7c703          	lbu	a4,-1(a5)
   15ca0:	ff6d                	bnez	a4,15c9a <strlen+0x2>
   15ca2:	40a78533          	sub	a0,a5,a0
   15ca6:	157d                	addi	a0,a0,-1
   15ca8:	8082                	ret
   15caa:	0000                	unimp
   15cac:	2d2d                	jal	162e6 <_data_lma+0x8e>
   15cae:	2d2d                	jal	162e8 <_data_lma+0x90>
   15cb0:	2d2d                	jal	162ea <_data_lma+0x92>
   15cb2:	2d2d                	jal	162ec <_data_lma+0x94>
   15cb4:	2d2d                	jal	162ee <_data_lma+0x96>
   15cb6:	2d2d                	jal	162f0 <_data_lma+0x98>
   15cb8:	2d2d                	jal	162f2 <_data_lma+0x9a>
   15cba:	2d2d                	jal	162f4 <_data_lma+0x9c>
   15cbc:	2d2d                	jal	162f6 <_data_lma+0x9e>
   15cbe:	2d2d                	jal	162f8 <_data_lma+0xa0>
   15cc0:	2d2d                	jal	162fa <_data_lma+0xa2>
   15cc2:	2d2d                	jal	162fc <_data_lma+0xa4>
   15cc4:	2d2d                	jal	162fe <_data_lma+0xa6>
   15cc6:	2d2d                	jal	16300 <_data_lma+0xa8>
   15cc8:	2d2d                	jal	16302 <_data_lma+0xaa>
   15cca:	2d2d                	jal	16304 <_data_lma+0xac>
   15ccc:	2d2d                	jal	16306 <_data_lma+0xae>
   15cce:	2d2d                	jal	16308 <_data_lma+0xb0>
   15cd0:	2d2d                	jal	1630a <_data_lma+0xb2>
   15cd2:	2d2d                	jal	1630c <_data_lma+0xb4>
   15cd4:	2d2d                	jal	1630e <_data_lma+0xb6>
   15cd6:	2d2d                	jal	16310 <_data_lma+0xb8>
   15cd8:	2d2d                	jal	16312 <_data_lma+0xba>
   15cda:	2d2d                	jal	16314 <_data_lma+0xbc>
   15cdc:	2d2d                	jal	16316 <_data_lma+0xbe>
   15cde:	2d2d                	jal	16318 <_data_lma+0xc0>
   15ce0:	2d2d                	jal	1631a <_data_lma+0xc2>
   15ce2:	000a                	c.slli	zero,0x2
   15ce4:	0000                	unimp
   15ce6:	0000                	unimp
   15ce8:	2d2d                	jal	16322 <_data_lma+0xca>
   15cea:	2d2d                	jal	16324 <_data_lma+0xcc>
   15cec:	2d2d                	jal	16326 <_data_lma+0xce>
   15cee:	2d2d                	jal	16328 <_data_lma+0xd0>
   15cf0:	2d2d                	jal	1632a <_data_lma+0xd2>
   15cf2:	2d2d                	jal	1632c <_data_lma+0xd4>
   15cf4:	2d2d                	jal	1632e <_data_lma+0xd6>
   15cf6:	2d2d                	jal	16330 <_data_lma+0xd8>
   15cf8:	2d2d                	jal	16332 <_data_lma+0xda>
   15cfa:	2d2d                	jal	16334 <_data_lma+0xdc>
   15cfc:	2d2d                	jal	16336 <_data_lma+0xde>
   15cfe:	2d2d                	jal	16338 <_data_lma+0xe0>
   15d00:	2d2d                	jal	1633a <_data_lma+0xe2>
   15d02:	2d2d                	jal	1633c <_data_lma+0xe4>
   15d04:	2d2d                	jal	1633e <_data_lma+0xe6>
   15d06:	2d2d                	jal	16340 <_data_lma+0xe8>
   15d08:	2d2d                	jal	16342 <_data_lma+0xea>
   15d0a:	2d2d                	jal	16344 <_data_lma+0xec>
   15d0c:	2d2d                	jal	16346 <_data_lma+0xee>
   15d0e:	2d2d                	jal	16348 <_data_lma+0xf0>
   15d10:	2d2d                	jal	1634a <_data_lma+0xf2>
   15d12:	2d2d                	jal	1634c <_data_lma+0xf4>
   15d14:	2d2d                	jal	1634e <_data_lma+0xf6>
   15d16:	2d2d                	jal	16350 <_data_lma+0xf8>
   15d18:	2d2d                	jal	16352 <_data_lma+0xfa>
   15d1a:	2d2d                	jal	16354 <_data_lma+0xfc>
   15d1c:	2d2d                	jal	16356 <_data_lma+0xfe>
   15d1e:	000a                	c.slli	zero,0x2
   15d20:	efa1                	bnez	a5,15d78 <strlen+0xe0>
   15d22:	f0bd                	bnez	s1,15c88 <memcpy+0xa6>
   15d24:	f9ba                	fsw	fa4,240(sp)
   15d26:	abc2                	fsd	fa6,464(sp)
   15d28:	e1cc                	fsw	fa1,4(a1)
   15d2a:	beca                	fsd	fs2,376(sp)
   15d2c:	efa1                	bnez	a5,15d84 <strlen+0xec>
   15d2e:	2020                	fld	fs0,64(s0)
   15d30:	2020                	fld	fs0,64(s0)
   15d32:	2020                	fld	fs0,64(s0)
   15d34:	2020                	fld	fs0,64(s0)
   15d36:	2020                	fld	fs0,64(s0)
   15d38:	2020                	fld	fs0,64(s0)
   15d3a:	2020                	fld	fs0,64(s0)
   15d3c:	2020                	fld	fs0,64(s0)
   15d3e:	2020                	fld	fs0,64(s0)
   15d40:	2020                	fld	fs0,64(s0)
   15d42:	2020                	fld	fs0,64(s0)
   15d44:	2020                	fld	fs0,64(s0)
   15d46:	2020                	fld	fs0,64(s0)
   15d48:	2020                	fld	fs0,64(s0)
   15d4a:	2020                	fld	fs0,64(s0)
   15d4c:	2020                	fld	fs0,64(s0)
   15d4e:	2020                	fld	fs0,64(s0)
   15d50:	2020                	fld	fs0,64(s0)
   15d52:	2020                	fld	fs0,64(s0)
   15d54:	2020                	fld	fs0,64(s0)
   15d56:	0a20                	addi	s0,sp,280
   15d58:	0000                	unimp
   15d5a:	0000                	unimp
   15d5c:	bea1                	j	158b4 <__subdf3+0x6c0>
   15d5e:	d0d6                	sw	s5,96(sp)
   15d60:	c4ce                	sw	s3,72(sp)
   15d62:	c6b3fbc3          	fmadd.q	fs7,ft7,fa1,fs8
   15d66:	bfa1                	j	15cbe <strlen+0x26>
   15d68:	b5434547          	0xb5434547
   15d6c:	4ec4                	lw	s1,28(a3)
   15d6e:	e0b1534f          	fnmadd.s	ft6,ft2,fa1,ft8,unknown
   15d72:	f2bfccb3          	0xf2bfccb3
   15d76:	dcbc                	sw	a5,120(s1)
   15d78:	6c46a8a3          	sw	tp,1745(a3)
   15d7c:	7361                	lui	t1,0xffff8
   15d7e:	c968                	sw	a0,84(a0)
   15d80:	c7c8                	sw	a0,12(a5)
   15d82:	b6f8                	fsd	fa4,232(a3)
   15d84:	d0c1                	beqz	s1,15d04 <strlen+0x6c>
   15d86:	cab4                	sw	a3,80(a3)
   15d88:	befd                	j	15986 <__fixunsdfdi+0x4c>
   15d8a:	b2dd                	j	15770 <__subdf3+0x57c>
   15d8c:	cae2                	sw	s8,84(sp)
   15d8e:	29d4                	fld	fa3,144(a1)
   15d90:	2020                	fld	fs0,64(s0)
   15d92:	2020                	fld	fs0,64(s0)
   15d94:	0a20                	addi	s0,sp,280
   15d96:	0000                	unimp
   15d98:	bea1                	j	158f0 <__subdf3+0x6fc>
   15d9a:	f2d0ccb3          	0xf2d0ccb3
   15d9e:	a6b9                	j	160ec <strlen+0x454>
   15da0:	dcc4                	sw	s1,60(s1)
   15da2:	bfa1                	j	15cfa <strlen+0x62>
   15da4:	2020                	fld	fs0,64(s0)
   15da6:	2020                	fld	fs0,64(s0)
   15da8:	2020                	fld	fs0,64(s0)
   15daa:	2020                	fld	fs0,64(s0)
   15dac:	2020                	fld	fs0,64(s0)
   15dae:	2020                	fld	fs0,64(s0)
   15db0:	2020                	fld	fs0,64(s0)
   15db2:	2020                	fld	fs0,64(s0)
   15db4:	2020                	fld	fs0,64(s0)
   15db6:	2020                	fld	fs0,64(s0)
   15db8:	2020                	fld	fs0,64(s0)
   15dba:	2020                	fld	fs0,64(s0)
   15dbc:	2020                	fld	fs0,64(s0)
   15dbe:	2020                	fld	fs0,64(s0)
   15dc0:	2020                	fld	fs0,64(s0)
   15dc2:	2020                	fld	fs0,64(s0)
   15dc4:	2020                	fld	fs0,64(s0)
   15dc6:	2020                	fld	fs0,64(s0)
   15dc8:	2020                	fld	fs0,64(s0)
   15dca:	2020                	fld	fs0,64(s0)
   15dcc:	2020                	fld	fs0,64(s0)
   15dce:	0a20                	addi	s0,sp,280
   15dd0:	0000                	unimp
   15dd2:	0000                	unimp
   15dd4:	2020                	fld	fs0,64(s0)
   15dd6:	2020                	fld	fs0,64(s0)
   15dd8:	a220                	fsd	fs0,64(a2)
   15dda:	20d9                	jal	15ea0 <strlen+0x208>
   15ddc:	b6c0                	fsd	fs0,168(a3)
   15dde:	abc9                	j	163b0 <_data_lma+0x158>
   15de0:	c1c9                	beqz	a1,15e62 <strlen+0x1ca>
   15de2:	bba3b8cb          	fnmsub.d	fa7,ft7,fs10,fs7,rup
   15de6:	2020                	fld	fs0,64(s0)
   15de8:	2020                	fld	fs0,64(s0)
   15dea:	2020                	fld	fs0,64(s0)
   15dec:	2020                	fld	fs0,64(s0)
   15dee:	2020                	fld	fs0,64(s0)
   15df0:	2020                	fld	fs0,64(s0)
   15df2:	2020                	fld	fs0,64(s0)
   15df4:	2020                	fld	fs0,64(s0)
   15df6:	2020                	fld	fs0,64(s0)
   15df8:	2020                	fld	fs0,64(s0)
   15dfa:	2020                	fld	fs0,64(s0)
   15dfc:	2020                	fld	fs0,64(s0)
   15dfe:	2020                	fld	fs0,64(s0)
   15e00:	2020                	fld	fs0,64(s0)
   15e02:	2020                	fld	fs0,64(s0)
   15e04:	2020                	fld	fs0,64(s0)
   15e06:	2020                	fld	fs0,64(s0)
   15e08:	2020                	fld	fs0,64(s0)
   15e0a:	2020                	fld	fs0,64(s0)
   15e0c:	000a                	c.slli	zero,0x2
   15e0e:	0000                	unimp
   15e10:	2020                	fld	fs0,64(s0)
   15e12:	2020                	fld	fs0,64(s0)
   15e14:	a220                	fsd	fs0,64(a2)
   15e16:	20da                	fld	ft1,400(sp)
   15e18:	4c46f2cf          	0x4c46f2cf
   15e1c:	5341                	li	t1,-16
   15e1e:	d648                	sw	a0,44(a2)
   15e20:	d0d0                	sw	a2,36(s1)
   15e22:	c8b4                	sw	a3,80(s1)
   15e24:	befdcaeb          	0xbefdcaeb
   15e28:	a3dd                	j	1640e <_data_lma+0x1b6>
   15e2a:	b2ac                	fsd	fa1,96(a3)
   15e2c:	b4a2                	fsd	fs0,104(sp)
   15e2e:	d3f2                	sw	t3,228(sp)
   15e30:	b2a1                	j	15778 <__subdf3+0x584>
   15e32:	bfe9                	j	15e0c <strlen+0x174>
   15e34:	20b4                	fld	fa3,64(s1)
   15e36:	2020                	fld	fs0,64(s0)
   15e38:	2020                	fld	fs0,64(s0)
   15e3a:	2020                	fld	fs0,64(s0)
   15e3c:	2020                	fld	fs0,64(s0)
   15e3e:	2020                	fld	fs0,64(s0)
   15e40:	2020                	fld	fs0,64(s0)
   15e42:	2020                	fld	fs0,64(s0)
   15e44:	2020                	fld	fs0,64(s0)
   15e46:	2020                	fld	fs0,64(s0)
   15e48:	2020                	fld	fs0,64(s0)
   15e4a:	000a                	c.slli	zero,0x2
   15e4c:	bea1                	j	159a4 <__fixunsdfdi+0x6a>
   15e4e:	e2b2                	fsw	fa2,68(sp)
   15e50:	d4ca                	sw	s2,104(sp)
   15e52:	fdb9                	bnez	a1,15db0 <strlen+0x118>
   15e54:	bfa1ccb3          	0xbfa1ccb3
   15e58:	2020                	fld	fs0,64(s0)
   15e5a:	2020                	fld	fs0,64(s0)
   15e5c:	2020                	fld	fs0,64(s0)
   15e5e:	2020                	fld	fs0,64(s0)
   15e60:	2020                	fld	fs0,64(s0)
   15e62:	2020                	fld	fs0,64(s0)
   15e64:	2020                	fld	fs0,64(s0)
   15e66:	2020                	fld	fs0,64(s0)
   15e68:	2020                	fld	fs0,64(s0)
   15e6a:	2020                	fld	fs0,64(s0)
   15e6c:	2020                	fld	fs0,64(s0)
   15e6e:	2020                	fld	fs0,64(s0)
   15e70:	2020                	fld	fs0,64(s0)
   15e72:	2020                	fld	fs0,64(s0)
   15e74:	2020                	fld	fs0,64(s0)
   15e76:	2020                	fld	fs0,64(s0)
   15e78:	2020                	fld	fs0,64(s0)
   15e7a:	2020                	fld	fs0,64(s0)
   15e7c:	2020                	fld	fs0,64(s0)
   15e7e:	2020                	fld	fs0,64(s0)
   15e80:	2020                	fld	fs0,64(s0)
   15e82:	0a20                	addi	s0,sp,280
   15e84:	0000                	unimp
   15e86:	0000                	unimp
   15e88:	2020                	fld	fs0,64(s0)
   15e8a:	2020                	fld	fs0,64(s0)
   15e8c:	a220                	fsd	fs0,64(a2)
   15e8e:	20d9                	jal	15f54 <strlen+0x2bc>
   15e90:	b3c4f2cf          	fnmadd.d	ft5,fs1,ft8,fs6
   15e94:	c8c9                	beqz	s1,15f26 <strlen+0x28e>
   15e96:	d0d6f8c7          	fmsub.s	fa7,fa3,fa3,fs10
   15e9a:	b4d0                	fsd	fa2,168(s1)
   15e9c:	ebc8                	fsw	fa0,20(a5)
   15e9e:	fdca                	fsw	fs2,248(sp)
   15ea0:	ddbe                	sw	a5,248(sp)
   15ea2:	c3d3aca3          	sw	t4,-967(t2)
   15ea6:	7270                	flw	fa2,100(a2)
   15ea8:	6e69                	lui	t3,0x1a
   15eaa:	6674                	flw	fa3,76(a2)
   15eac:	f2b4                	fsw	fa3,96(a3)
   15eae:	e9b2a1d3          	0xe9b2a1d3
   15eb2:	2020b4bf 20202020 	0x202020202020b4bf
   15eba:	2020                	fld	fs0,64(s0)
   15ebc:	2020                	fld	fs0,64(s0)
   15ebe:	2020                	fld	fs0,64(s0)
   15ec0:	2020                	fld	fs0,64(s0)
   15ec2:	000a                	c.slli	zero,0x2
   15ec4:	2020                	fld	fs0,64(s0)
   15ec6:	2020                	fld	fs0,64(s0)
   15ec8:	a220                	fsd	fs0,64(a2)
   15eca:	20da                	fld	ft1,400(sp)
   15ecc:	f8bef2cf          	fnmadd.s	ft5,ft9,fa1,ft11
   15ed0:	d4b6                	sw	a3,104(sp)
   15ed2:	d8b5                	beqz	s1,15e46 <strlen+0x1ae>
   15ed4:	b7d6                	fsd	fs5,488(sp)
   15ed6:	a6b4                	fsd	fa3,72(a3)
   15ed8:	bccaaabf ebc8b4d0 	0xebc8b4d0bccaaabf
   15ee0:	fdca                	fsw	fs2,248(sp)
   15ee2:	ddbe                	sw	a5,248(sp)
   15ee4:	edb1                	bnez	a1,15f40 <strlen+0x2a8>
   15ee6:	c3d3aca3          	sw	t4,-967(t2)
   15eea:	7270                	flw	fa2,100(a2)
   15eec:	6e69                	lui	t3,0x1a
   15eee:	6674                	flw	fa3,76(a2)
   15ef0:	e9b2                	fsw	fa2,208(sp)
   15ef2:	2020b4bf 20202020 	0x202020202020b4bf
   15efa:	2020                	fld	fs0,64(s0)
   15efc:	2020                	fld	fs0,64(s0)
   15efe:	000a                	c.slli	zero,0x2
   15f00:	636c6557          	0x636c6557
   15f04:	20656d6f          	jal	s10,6c10a <_data_lma+0x55eb2>
   15f08:	6f74                	flw	fa3,92(a4)
   15f0a:	5320                	lw	s0,96(a4)
   15f0c:	68636f6f          	jal	t5,4c592 <_data_lma+0x3633a>
   15f10:	5520776f          	jal	a4,1d462 <_data_lma+0x720a>
   15f14:	696e                	flw	fs2,216(sp)
   15f16:	6576                	flw	fa0,92(sp)
   15f18:	7372                	flw	ft6,60(sp)
   15f1a:	7469                	lui	s0,0xffffa
   15f1c:	2179                	jal	163aa <_data_lma+0x152>
   15f1e:	0000                	unimp
   15f20:	a331a8a3          	sw	s3,-1487(gp) # 200058b1 <_ebss+0x22d>
   15f24:	c2a9                	beqz	a3,15f66 <strlen+0x2ce>
   15f26:	bcdf b6ad b7c1      	0xb7c1b6adbcdf
   15f2c:	cabd                	beqz	a3,15fa2 <strlen+0x30a>
   15f2e:	b6bd                	j	15a9c <__floatundidf+0xc4>
   15f30:	c8c1                	beqz	s1,15fc0 <strlen+0x328>
   15f32:	b5a1                	j	15d7a <strlen+0xe2>
   15f34:	25da                	fld	fa1,400(sp)
   15f36:	c964                	sw	s1,84(a0)
   15f38:	c7c8                	sw	a0,12(a5)
   15f3a:	b5f8                	fsd	fa4,232(a1)
   15f3c:	33c4                	fld	fs1,160(a5)
   15f3e:	d732                	sw	a2,172(sp)
   15f40:	bdd6                	fsd	fs5,248(sp)
   15f42:	b5da                	fsd	fs6,232(sp)
   15f44:	c4c4                	sw	s1,12(s1)
   15f46:	c8da                	sw	s6,80(sp)
   15f48:	3add                	jal	1593e <__fixunsdfdi+0x4>
   15f4a:	2020                	fld	fs0,64(s0)
   15f4c:	7325                	lui	t1,0xfffe9
   15f4e:	000a                	c.slli	zero,0x2
   15f50:	a332a8a3          	sw	s3,-1487(t0)
   15f54:	b2a9                	j	1589e <__subdf3+0x6aa>
   15f56:	b3c1                	j	15d16 <strlen+0x7e>
   15f58:	d6fd                	beqz	a3,15f46 <strlen+0x2ae>
   15f5a:	d0d8                	sw	a4,36(s1)
   15f5c:	bab4                	fsd	fa3,112(a3)
   15f5e:	c0efcef3          	0xc0efcef3
   15f62:	b7ed                	j	15f4c <strlen+0x2b4>
   15f64:	cabd                	beqz	a3,15fda <strlen+0x342>
   15f66:	b6bd                	j	15ad4 <__floatundidf+0xfc>
   15f68:	b5c1                	j	15e28 <strlen+0x190>
   15f6a:	25da                	fld	fa1,400(sp)
   15f6c:	c964                	sw	s1,84(a0)
   15f6e:	c7c8                	sw	a0,12(a5)
   15f70:	b5f8                	fsd	fa4,232(a1)
   15f72:	33c4                	fld	fs1,160(a5)
   15f74:	d732                	sw	a2,172(sp)
   15f76:	bdd6                	fsd	fs5,248(sp)
   15f78:	b5da                	fsd	fs6,232(sp)
   15f7a:	c4c4                	sw	s1,12(s1)
   15f7c:	c8da                	sw	s6,80(sp)
   15f7e:	3add                	jal	15974 <__fixunsdfdi+0x3a>
   15f80:	2020                	fld	fs0,64(s0)
   15f82:	7325                	lui	t1,0xfffe9
   15f84:	000a                	c.slli	zero,0x2
   15f86:	0000                	unimp
   15f88:	a333a8a3          	sw	s3,-1487(t2)
   15f8c:	c5a9                	beqz	a1,15fd6 <strlen+0x33e>
   15f8e:	b1d0                	fsd	fa2,160(a1)
   15f90:	b5f0                	fsd	fa2,232(a1)
   15f92:	25da                	fld	fa1,400(sp)
   15f94:	c964                	sw	s1,84(a0)
   15f96:	c7c8                	sw	a0,12(a5)
   15f98:	caf8                	sw	a4,84(a3)
   15f9a:	cef1b7c7          	fmsub.q	fa5,ft3,fa5,fs9,rup
   15f9e:	bfaa                	fsd	fa0,504(sp)
   15fa0:	a3d5                	j	16584 <_data_lma+0x32c>
   15fa2:	31ac                	fld	fa1,96(a1)
   15fa4:	edb1                	bnez	a1,16000 <strlen+0x368>
   15fa6:	beca                	fsd	fs2,376(sp)
   15fa8:	aca3d5bf caedb130 	0xcaedb130aca3d5bf
   15fb0:	b2be                	fsd	fa5,352(sp)
   15fb2:	a3d5bfbb          	0xa3d5bfbb
   15fb6:	bdac                	fsd	fa1,120(a1)
   15fb8:	b9e1                	j	15c90 <memcpy+0xae>
   15fba:	a3c7cafb          	0xa3c7cafb
   15fbe:	25ba                	fld	fa1,392(sp)
   15fc0:	0a64                	addi	s1,sp,284
   15fc2:	0000                	unimp
   15fc4:	4c20                	lw	s0,88(s0)
   15fc6:	4749                	li	a4,18
   15fc8:	5448                	lw	a0,44(s0)
   15fca:	425f 554c 3a45      	0x3a45554c425f
   15fd0:	20204e4f          	fnmadd.s	ft8,ft0,ft2,ft4,rmm
   15fd4:	0a20                	addi	s0,sp,280
   15fd6:	0000                	unimp
   15fd8:	b520                	fsd	fs0,104(a0)
   15fda:	c9c6                	sw	a7,208(sp)
   15fdc:	cbc1                	beqz	a5,1606c <strlen+0x3d4>
   15fde:	b4b8                	fsd	fa4,104(s1)
   15fe0:	cace                	sw	s3,84(sp)
   15fe2:	6dfd                	lui	s11,0x1f
   15fe4:	694c                	flw	fa1,20(a0)
   15fe6:	43746867          	0x43746867
   15fea:	746e756f          	jal	a0,fd730 <_data_lma+0xe74d8>
   15fee:	3d20                	fld	fs0,120(a0)
   15ff0:	2520                	fld	fs0,72(a0)
   15ff2:	0a64                	addi	s1,sp,284
   15ff4:	000a                	c.slli	zero,0x2
   15ff6:	0000                	unimp
   15ff8:	4c20                	lw	s0,88(s0)
   15ffa:	4749                	li	a4,18
   15ffc:	5448                	lw	a0,44(s0)
   15ffe:	425f 554c 3a45      	0x3a45554c425f
   16004:	2046464f          	fnmadd.s	fa2,fa2,ft4,ft4,rmm
   16008:	0a20                	addi	s0,sp,280
   1600a:	0000                	unimp
   1600c:	2020                	fld	fs0,64(s0)
   1600e:	bea1                	j	15b66 <__floatundidf+0x18e>
   16010:	7355                	lui	t1,0xffff5
   16012:	7265                	lui	tp,0xffff9
   16014:	e1cc                	fsw	fa1,4(a1)
   16016:	beca                	fsd	fs2,376(sp)
   16018:	bfa1                	j	15f70 <strlen+0x2d8>
   1601a:	abbdbaa3          	0xabbdbaa3
   1601e:	f8bd                	bnez	s1,15f94 <strlen+0x2fc>
   16020:	ebc8                	fsw	fa0,20(a5)
   16022:	7355                	lui	t1,0xffff5
   16024:	7265                	lui	tp,0xffff9
   16026:	c4b5                	beqz	s1,16092 <strlen+0x3fa>
   16028:	616d                	addi	sp,sp,240
   1602a:	6e69                	lui	t3,0x1a
   1602c:	afba                	fsd	fa4,472(sp)
   1602e:	fdca                	fsw	fs2,248(sp)
   16030:	b4d6                	fsd	fs5,104(sp)
   16032:	d0d0                	sw	a2,36(s1)
   16034:	2e2e                	fld	ft8,200(sp)
   16036:	0d2e                	slli	s10,s10,0xb
   16038:	0a0a                	slli	s4,s4,0x2
   1603a:	0000                	unimp
   1603c:	de68                	sw	a0,124(a2)
   1603e:	ffff                	0xffff
   16040:	deea                	sw	s10,124(sp)
   16042:	ffff                	0xffff
   16044:	deea                	sw	s10,124(sp)
   16046:	ffff                	0xffff
   16048:	de74                	sw	a3,124(a2)
   1604a:	ffff                	0xffff
   1604c:	deea                	sw	s10,124(sp)
   1604e:	ffff                	0xffff
   16050:	deea                	sw	s10,124(sp)
   16052:	ffff                	0xffff
   16054:	deea                	sw	s10,124(sp)
   16056:	ffff                	0xffff
   16058:	deea                	sw	s10,124(sp)
   1605a:	ffff                	0xffff
   1605c:	deea                	sw	s10,124(sp)
   1605e:	ffff                	0xffff
   16060:	deea                	sw	s10,124(sp)
   16062:	ffff                	0xffff
   16064:	deea                	sw	s10,124(sp)
   16066:	ffff                	0xffff
   16068:	de62                	sw	s8,60(sp)
   1606a:	ffff                	0xffff
   1606c:	deea                	sw	s10,124(sp)
   1606e:	ffff                	0xffff
   16070:	de3e                	sw	a5,60(sp)
   16072:	ffff                	0xffff
   16074:	deea                	sw	s10,124(sp)
   16076:	ffff                	0xffff
   16078:	deea                	sw	s10,124(sp)
   1607a:	ffff                	0xffff
   1607c:	de6e                	sw	s11,60(sp)
   1607e:	ffff                	0xffff
   16080:	e0d6                	fsw	fs5,64(sp)
   16082:	ffff                	0xffff
   16084:	e364                	fsw	fs1,68(a4)
   16086:	ffff                	0xffff
   16088:	e364                	fsw	fs1,68(a4)
   1608a:	ffff                	0xffff
   1608c:	e364                	fsw	fs1,68(a4)
   1608e:	ffff                	0xffff
   16090:	e364                	fsw	fs1,68(a4)
   16092:	ffff                	0xffff
   16094:	e364                	fsw	fs1,68(a4)
   16096:	ffff                	0xffff
   16098:	e364                	fsw	fs1,68(a4)
   1609a:	ffff                	0xffff
   1609c:	e364                	fsw	fs1,68(a4)
   1609e:	ffff                	0xffff
   160a0:	e364                	fsw	fs1,68(a4)
   160a2:	ffff                	0xffff
   160a4:	e364                	fsw	fs1,68(a4)
   160a6:	ffff                	0xffff
   160a8:	e1da                	fsw	fs6,192(sp)
   160aa:	ffff                	0xffff
   160ac:	e2b6                	fsw	fa3,68(sp)
   160ae:	ffff                	0xffff
   160b0:	dee6                	sw	s9,124(sp)
   160b2:	ffff                	0xffff
   160b4:	e364                	fsw	fs1,68(a4)
   160b6:	ffff                	0xffff
   160b8:	df8e                	sw	gp,252(sp)
   160ba:	ffff                	0xffff
   160bc:	e364                	fsw	fs1,68(a4)
   160be:	ffff                	0xffff
   160c0:	e364                	fsw	fs1,68(a4)
   160c2:	ffff                	0xffff
   160c4:	dee6                	sw	s9,124(sp)
   160c6:	ffff                	0xffff
   160c8:	e364                	fsw	fs1,68(a4)
   160ca:	ffff                	0xffff
   160cc:	e364                	fsw	fs1,68(a4)
   160ce:	ffff                	0xffff
   160d0:	e364                	fsw	fs1,68(a4)
   160d2:	ffff                	0xffff
   160d4:	e364                	fsw	fs1,68(a4)
   160d6:	ffff                	0xffff
   160d8:	e358                	fsw	fa4,4(a4)
   160da:	ffff                	0xffff
   160dc:	e1a2                	fsw	fs0,192(sp)
   160de:	ffff                	0xffff
   160e0:	e1fa                	fsw	ft10,192(sp)
   160e2:	ffff                	0xffff
   160e4:	e364                	fsw	fs1,68(a4)
   160e6:	ffff                	0xffff
   160e8:	e364                	fsw	fs1,68(a4)
   160ea:	ffff                	0xffff
   160ec:	e2ce                	fsw	fs3,68(sp)
   160ee:	ffff                	0xffff
   160f0:	e364                	fsw	fs1,68(a4)
   160f2:	ffff                	0xffff
   160f4:	e21a                	fsw	ft6,4(sp)
   160f6:	ffff                	0xffff
   160f8:	e364                	fsw	fs1,68(a4)
   160fa:	ffff                	0xffff
   160fc:	e364                	fsw	fs1,68(a4)
   160fe:	ffff                	0xffff
   16100:	e0d6                	fsw	fs5,64(sp)
   16102:	ffff                	0xffff
	...
   1610c:	0000                	unimp
   1610e:	4024                	lw	s1,64(s0)
   16110:	999a                	add	s3,s3,t1
   16112:	9999                	andi	a1,a1,-26
   16114:	9999                	andi	a1,a1,-26
   16116:	3fb9                	jal	16074 <strlen+0x3dc>
   16118:	ee2c                	fsw	fa1,88(a2)
   1611a:	ffff                	0xffff
   1611c:	ed16                	fsw	ft5,152(sp)
   1611e:	ffff                	0xffff
   16120:	ed16                	fsw	ft5,152(sp)
   16122:	ffff                	0xffff
   16124:	ed14                	fsw	fa3,24(a0)
   16126:	ffff                	0xffff
   16128:	ed1c                	fsw	fa5,24(a0)
   1612a:	ffff                	0xffff
   1612c:	ed1c                	fsw	fa5,24(a0)
   1612e:	ffff                	0xffff
   16130:	ece2                	fsw	fs8,88(sp)
   16132:	ffff                	0xffff
   16134:	ed14                	fsw	fa3,24(a0)
   16136:	ffff                	0xffff
   16138:	ed1c                	fsw	fa5,24(a0)
   1613a:	ffff                	0xffff
   1613c:	ece2                	fsw	fs8,88(sp)
   1613e:	ffff                	0xffff
   16140:	ed1c                	fsw	fa5,24(a0)
   16142:	ffff                	0xffff
   16144:	ed14                	fsw	fa3,24(a0)
   16146:	ffff                	0xffff
   16148:	ee18                	fsw	fa4,24(a2)
   1614a:	ffff                	0xffff
   1614c:	ee18                	fsw	fa4,24(a2)
   1614e:	ffff                	0xffff
   16150:	ee18                	fsw	fa4,24(a2)
   16152:	ffff                	0xffff
   16154:	ece2                	fsw	fs8,88(sp)
   16156:	ffff                	0xffff

00016158 <__clz_tab>:
   16158:	0100 0202 0303 0303 0404 0404 0404 0404     ................
   16168:	0505 0505 0505 0505 0505 0505 0505 0505     ................
   16178:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   16188:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   16198:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   161a8:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   161b8:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   161c8:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   161d8:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   161e8:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   161f8:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16208:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16218:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16228:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16238:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16248:	0808 0808 0808 0808 0808 0808 0808 0808     ................
