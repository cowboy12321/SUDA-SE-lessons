功能概要：AHL_UserPrgUpdate
版权所有：苏州大学嵌入式系统与物联网研究所(sumcu.suda.edu.cn)
【最初版本时间】V1.0，2017年7月

版本更新：
2018年7月16日   陈成   完成具有串口更新功能的最初程序
2018年8月 4日  王宜怀  试图解决偶尔写入到26帧停顿问题
2019年2月23日  黄志贤  将串口调试功能增加到串口更新界面；移除增量更新功能；完善程序注释
2019年2月26日  黄志贤  增加emuart自行结束组帧过程的方法；解决因flash信息修改导致终端flash信息发生错乱的bug；
                       解决发生“找不到设备”现象后，需要许多次重新连接设备才能连接到设备的bug
2019年2月28日  黄志贤  增加RAM区域读取窗体 可读取合法RAM区域的数据 
2019年3月 1日  黄志贤  增加存储区域读取窗体一次可读取的个数（增加至128）；增加合法读取区域的提示 
2019年3月 6日  黄志贤  增加Flash区域写入功能
2019年3月13日  程宏玉  增加初步KDS工程导入，程序可编辑、编译功能。
2019年3月14日  程宏玉  增加原有的通用串口调试功能；新增“工具”菜单，同时将“更改终端配置”和“存储器操作”作为子菜单放入“工具”下。
2019年3月22日  黄志贤  增加CCS工程导入与关闭功能；解决调试信息发送频率过快导致按钮无法点击的bug，如果发送频率太快（1秒超过5条）则更新提示区不进行信息显示。
2019年3月24日  程宏玉  增加全局替换、查找功能
2019年3月28日  刘强    编辑、导入和编译的功能，适配CCS工程
2019年3月29日  刘强    尝试解决编译卡死问题
2019年3月31日  程宏玉  增加文件删除功能
2019年4月03日  程宏玉  解决文件内搜索无效问题；可通过单击信息输出框的错误提示，定位错误代码。
2019年4月04日  刘强	   适配新编译器下的MSP432工程。编译存在需要点两次的问题。
2019年4月09日  刘强	   1）MSP432工程统一编译方式。2）工程窗口统一下拉。3）信息输出改为编译输出。4）MSP432工程统一导入方式。
2019年4月10日  刘强     KDS工程makefile修改
2019年4月12日  刘强    1）重绘快捷菜单栏。2）合并KDS与CCS工程的导入和关闭。3）所有功能的执行统一移至二级菜单。4）编译给出优化等级，有待扩充。
                       5）帮助下新增关于。6）程序图标重绘。7）工程窗口样式修改。8）调整窗口弹出位置。
2019年4月13日  程宏玉   1）更正全局搜索时“字典中不包含对象”的问题。2）文件显示标签中，右键菜单添加高亮文本、取消高亮选项
                        3）更换全局搜索与替换的实现方式,
2019年4月14日  程宏玉   1)实现区分大小的查找替换   2)查找、替换选中查找内容的同时，高亮查找内容
2019年4月15日  程宏玉   1）禁止工程窗口拖动  2）解决串口无法关闭的问题
2019年4月16日  程宏玉   通过正则表达式实现整体匹配搜索 
2019年4月17日  程宏玉   1）其他窗体关闭后，自动显示已经隐藏的工程窗体 2）编译、警告信息统一输出 3）有关串口的窗体关闭后，关闭串口资源
2019年4月24日  刘强     新增变量、常量、函数定位功能，但对于同工程同名的变量、常量和函数无法准确定位，待解决。
2019年5月6日   刘强     1）编译信息输出中文件名修正。2）编译成功删除旧的debug文件下的内容（有bug)。3）显示行列位置信息由于控件问题实现困难，
                        先借助左侧自带的行信息。4）生成lst和map文件。5）删除和移除的区分。6）警告和错误统计。
【20190506】-1/3 ---    1）解决汉字显示乱码问题
【20190507】-1/2 ---    1）关闭Thread(用于统计1S内接收的消息条目数)0506忘记删
2019年5月16日  黄志贤   解决接收终端printf输出信息终端需要延时的问题
2019年5月16日  程宏玉   对于不能提取错误所在行列的错误信息以红色标注，但不予以跳转
2019年5月16日  程宏玉   修改标签页的显示方式，选中标签页时出现关闭按钮，并以蓝底白字显示
2019年5月20日  黄志贤   emuart发送时，若等待时间为0，不关闭接收事件 
2019年6月02日  刘强     新增动态装载功能。  

【20190605】  葛新越   1）STM32工程统一编译方式。2）STM32工程统一导入方式。3）解决STM32工程导入汉字显示乱码问题
【20190605】  程宏玉   1）串口更新判断hex文件不符合格式时，自动重新编译或提示导入工程重新编译
【20190614】  程宏玉   1）移除CCS编译器，统一用easily-tools中打包的编译器
【20190719】  程宏玉   1）编译成功后重新显示map文件、lst文件和hex文件
                       2）支持编译工程名带空格的工程
					   3）恢复1S内串口接收100行数据，暂停接受的功能
					   4）MSP432工程名中包含"("的工程无法编译，暂时将工程中的括号移除
【20190719】  王宜怀 改为版本3.3，调整一下初始界面及下载界面
【20190725 1/5】  程宏玉   1）支持纯汇编工程的编译
【20190725 2/5】  程宏玉   2）替换窗体添加“查找下一个”和“替换”按钮
【20190725 3/5】  程宏玉   3）完善msp432修改链接文件流程
【20190725 4/5】  程宏玉   4）增加查找快捷键（CTRL+F和CTRL+H）
【20190725 5/5】  程宏玉   5）KDS编译后生成.o和.c文件对应的lst文件，暂时存放在Debug目录下的obj文件夹下
【20190726 1/1】  程宏玉   编译成功后显示生成的中间文件
【20190812 1/2】  程宏玉   尝试打开.elf或.out文件时给出提示
【20190812 2/2】  程宏玉   添加外接软件菜单.将exe文件拷贝到程序运行目录下的plugin文件夹下，将添加对应下拉选项。
【20190815 1/1】  程宏玉   在编辑菜单下添加代码对齐菜单
【20190826 1/1】  程宏玉   查找窗体记录上一次查询内容
【20190829 1/1】  程宏玉   查看Flash/Ram内容窗体添加按字数节显示机器码功能
【20190902 1/1】  程宏玉   支持mbed操作系统工程的编译（修改makefile模板文件）
【20190903 1/1】  程宏玉   支持在工程中复制文件
【20190905 1/1】  周楚越   通过读取xml文件添加外界软件

【20190906】 3.50版，增加“动态命令(D)”一级
【20191008】 姜家乐   3.52版，设计外接软件界面并新增下拉选项同步更新功能及图标显示功能   

【20191022】1/1  //不显示每次重启，串口多发送的数据0xF8，那个“？”
【20191024】 姜家乐   3.56版，修复因刷新过快而程序卡死的问题 & 修复因刷新过快重新连接芯片程序无法响应的问题

【20191115】1/2 支持Keil工程导入导出（Keil工程导入导出时，自动替换编译文件和启动文件）
			2/2 编译时仅对修改文件进行二次编译，优化编译速度

【20191120】      姜家乐   3.63版，修复外接程序显示问题  
【20191120 1/6】  姜家乐   由于修改了显示数据的数据结构，重新编写了读取xml文件添加外接软件菜单
【20191120 2/6】  姜家乐   更改了数据结点的数据结构，重新编写了提取xml结点的获取方式
【20191120 3/6】  姜家乐   更改数据结构后重新编写了启动执行文件的方法
【20191120 4/6】  姜家乐   由于修改了显示数据的数据结构，重新编写了刷新外接软件下拉选项，下面程序中outsoft处都是原来数据结构的替换处
【20191120 5/6】  姜家乐   修改数据结构处
【20191120 6/6】  姜家乐   将原来的更改名称功能换到每一行单独的功能

【20191122 1/1】  程宏玉   解决stm32工程名含括号时无法编译问题
【20191205 1/1】  程宏玉   解决编译错误停止输出的问题
【20191205 1/2】  程宏玉   解决无串口连接时单击连接GEC按钮，出现异常问题

【20191208 1/2】  程宏玉   鼠标单击控件显示光标所在位置的行列信息
【20191208 2/2】  程宏玉   如果编译前有头文件被修改过，那么先进行一次清理工作，防止编译无效
【20191208 3/3】  程宏玉   优化编译错误信息输出，错误信息标红
【20200103 1/1】  许明宇   新增Python工程


【20200305 1/8】 姜家乐&王浩波 新增.cpp的文件列表，仿照.c文件列表添加
【20200305 2/8】 姜家乐&王浩波 新增.S文件列表，并将原来.s和.S进行区分
【20200305 3/8】 姜家乐&王浩波 将原来的OBJ_C改为OBJ-CS，新增.S的.o生成文件
【20200305 4/8】 姜家乐&王浩波 新增.S的.d生成文件
【20200305 5/8】 姜家乐&王浩波 将优先级-O0改成-$(opt),以下所有均修改
【20200305 6/8】 姜家乐&王浩波 新增.cpp的编译成.o文件的规则格式
【20200305 7/8】 姜家乐&王浩波 新增.S的编译成.o文件的规则格式
【20200305 8/8】 姜家乐&王浩波 将原来的gcc改为g++,并将OBJ_C改为OBJ_CS
【20200306 1/2】  刘中华   获取工程文件，判断芯片类型（KL36/MK60）
【20200306 2/2】  刘中华   根据对应的芯片来使用内核等信息，解决使用一个makefile，编译KL36和MK60
【20200306 1/1】 姜家乐&王浩波 修改.c编译规则
【20200307 0/3】 新增功能简要介绍：当新增工程时，无需修改IDE，只需要将正确的makefile文件存于01_Doc文件夹中
【20200307 1/3】 姜家乐&王浩波 新增makefile模板编译功能，如果添加新的模板程序，需要适当修改01_Doc下的makefile文件
【20200307 2/3】 姜家乐&王浩波 若01_Doc文件夹下不存在makefile，则需复制各个厂商基本的makefile规则
【20200307 3/3】 姜家乐&王浩波 复制01_Doc文件夹下的makefile文件，使得新增工程时无需更改IDE

【3.94】
【20200316 1/3】 姜家乐&王浩波 解决缩小主窗口时，搜索/替换窗口仍处在屏幕中央。
【20200316 2/3】 姜家乐&王浩波 新增.cpp文件在工程内搜索的规则
【20200316 3/3】 姜家乐&王浩波 解决右键查看定义处，变量或函数无法跳转的问题

【3.95】修改外接软件，使之可以确认路径与待参数
【20200318 1/5】 姜家乐 新增参数结点，为了不影响使用，初始不赋值，需要添加参数可以在后续操作中添加
【20200318 2/5】 姜家乐 为兼容上个版本，会测试xml中是否有参数结点，没有则使用默认值代替
【20200318 3/5】 姜家乐 新增添加参数功能，兼容上个版本，若没有参数结点，则增加结点进xml文件中，有参数结点，直接赋值
【20200318 4/5】 姜家乐 新增参数结点，修改显示数据的数据结构
【20200318 5/5】 姜家乐 增加带参函数的的启动方式，并兼容上版本不带参的启动方式

【3.96】修改工具-串口工具 的界面风格 WYH

【3.97】姜家乐 查看定义功能未修改完全，尚有问题有待解决

【3.98】Keil兼容性问题
【20200402 1/4】 修改Keil工程文件为IDE下可运行的文件
【20200402 2/4】 退出时将原来为Keil工程的工程复原为Keil体系
【20200402 3/4】 导入时将原来的Keil工程修改为本IDE下能运行工程，操作对象为导入的文件
【20200402 4/4】 退出时将原来为Keil工程的工程复原为Keil体系的功能函数，功能与另存为类似，操作对象为导入的文件


【3.99】兼容性问题总结见后面 通过搜索【3.99】可获得

【4.00】Debug中产生冗余makefile及定义跳转问题
【20200420 1/4】 删除原来的makefile文件，以免被复制进Debug中
【20200420 2/4】 增加三重查询定义的判断语句
【20200420 3/4】 增加三重查询定义的跳转语句（逐渐减少限制）
【20200420 4/4】 删除添加关键字的函数（若需查看，请见同样位置处）

【V4.01】
【20200428】优化效率

【4.02】汇编对齐&括号内容标识
【20200501 1/4】增加汇编代码对齐功能
【20200501 2/4】汇编代码对齐功能函数，用于处理注释，#，:，以及其他代码的对齐方法
【20200501 3/4】新增添加双击{ 后标记所有{  }中的内容函数
【20200501 4/4】新增高亮显示功能函数


【V4.05】替换新的串口工具,本版本只是在替换过程中修改控件名称，故不作赘述

【V4.06】修复串口更新程序更新完后卡死问题
【20200516 1/1】

【V4.07】内部外接程序融入，具体分析请查看本文档下方【4.07】内部软件外接问题总结
【20200529 1/5】 新增内部外接软件功能，方法见【4.07】。
【20200604 2/5】 查找替换功能完善
【20200604 3/5】 新增编译优先级设置，新增的函数有Read_Xml(),Read_Node(),String_ConvertTo_Optlevel(),Update_Node()。详细可查看对应函数。
【20200604 4/5】 通过读取系统配置的编译优先级设置工程的编辑优先级
【20200604 5/5】 查看芯片内存使用情况




程序说明：
（1）AHL_UserPrgUpdate提供串口更细终端程序功能，更新流程：1连接串口；2导入Hex文件；3一键更新；4Flash配置信息修改；5RAM区域数据读取
（2）连接串口功能说明：
    本功能提供串口检测功能，可与终端程序进行握手操作。若提示“成功连接GEC-XXX”表示串口连接终端成功。
	提示“有USB串口，但未连上终端”表示电脑有USB串口相连，但与终端握手失败。提示“没有找到USB串口”表示当前电脑无USB串口设备连接。
（3）导入Hex文件功能说明：
    本程序支持的Hex更新程序需在AHL更新框架的基础上编译的，若使用其他程序烧录，会使得终端程序异常。
（4）一键更新功能说明：
    本程序在连接终端、Hex导入成功后，可实现一键更新功能。在更新过程中无需接收终端的返回值，最后会发送校验帧，若终端所有数据接收成功则更新程序，否则补发丢失帧。
（5）编译过程中如遇“CreateProcess Fail”提示，请尝试以管理员权限打开软件



【3.99】兼容性问题总结

1. 问题简介：Keil官方环境Keil_uVision5与实验室AHL-GEC-IDE在编译的过程中有几处不同，
	         导致Keil_uVision5下创建的工程（以下均称Keil工程）无法直接在我们的环境下进行编译。
	         所以，在导入Keil工程之前，我们需要对其中的编译支撑文件及启动文件做一定的修改或替换。

2. 兼容过程中涉及的文件
兼容过程中涉及的文件包括编译文件、芯片启动文件、makefile文件、链接文件以及总头文件cpu.h
Keil工程：
（1）编译文件：cmsis_armcc.h
（2）芯片启动文件：startup_stm32l433xx.s
（3）makefile：无
（4）链接文件：不依靠链接文件，依靠后缀为.sct的分散加载文件
（5）cpu.h中内容：#include "cmsis_armcc.h"
AHL-GEC-IDE：
（1）编译文件：cmsis_gcc.h
（2）芯片启动文件：
（3）makefile不需要修改
（4）链接文件：STM32L431RCTX_FLASH.ld
（5）cpu.h中内容：#include "cmsis_gcc.h"
Tips：以上用到的所有文件均在AHL-GEC-IDE环境
        bin\Debug\Project\Keil\STM32L431RCT\CCTOGNU（Keil替换为AHL-GEC-IDE）
和      bin\Debug\Project\Keil\STM32L431RCT\GNUTOCC（还原Keil工程）
和      bin\Debug\Project\Keil\STM32L431RCT\makfile中


3. 兼容的目标
兼容的目标就是做到：同一份工程，既可以在Keil下编译，同时可以在AHL-GEC-IDE下编译。
		 并且中间过程不需要用户参与，对用户屏蔽两种编译器的差异，只关注编程即可

4. 兼容的过程（手动）   ---自动过程已实现
  导入Keil工程时
（1）替换编译文件。  将cmsis_armcc.h替换为cmsis_gcc.h
（2）替换芯片启动文件。 将startup_stm32l433xx.s替换为startup_stm32l433rctxp.s
（3）增加makefile。 此步已自动添加，如需另外添加，可在工程01_Doc下放置一份能够使用的makefile文件
（4）增加链接文件。 STM32L431RCTX_FLASH.ld
（5）修改cpu.h中的内容：将#include "cmsis_armcc.h"改为#include "cmsis_gcc.h"

 退出Keil工程后（手动） ---自动过程已实现
（1）还原编译文件。  将cmsis_gcc.h.h替换为cmsis_armcc
（2）还原芯片启动文件。 将startup_stm32l433rctxp.s替换为startup_stm32l433xx.s
（3）保留makefile。 以便下次使用
（4）保留链接文件。 
（5）修改cpu.h中的内容：将#include "cmsis_gcc.h"改为#include "cmsis_armcc.h"


5. 后续升级
目前功能无法在工程结构改编的时候及时保持两边同步
原因：Keil工程 .uvprojx文件记录了工程的各种信息，如使用芯片、工程目录
          当我们在AHL-GEC-IDE中修改工程文件的时候，无法对其进行及时更新，

后续将增加以下功能：当工程目录结构改变时，能够对.uvprojx进行修改
          		 以确保两边所显示工程一样。

解决问题：若用于教学，创建模板Exam_1，若需要Exam_2、Exam_3，则可以简单复制粘贴修改工程即可。



【4.07】内部软件外接问题总结
1. 具体措施：将软件中所有功能抽出作为独立功能存在，将所有独立功能的可执行文件(.exe)放入工程资源
文件夹下，根据不同用户的需求可添加不同可执行文件，并添加功能选择界面，让用户选择需要哪些功能。

2. 优点：
1. 维护相对简单，如需要添加新的功能，直接将需要添加的功能的可执行文件放入资源文件夹中，并在代码中添加对应接口。
2. 功能独立使得修改错误相对容易，且维护功能可以分散给各个成员单独更新维护。
3. 独立的功能可以单独使用，对于一般用户可以更快的上手。

3. 样例教程
我们以 07_InterConn\SerialPort\SerialPort.exe 为例
（1）首先，我们根据所要添加的独立功能的可执行文件的类别将其放入对应的二级目录下，比如串口调试SerialPort功能，属于串口一类，
所以我们将其放在SerialPort二级目录下，如添加外接软件独立功能，我们需要创建对应类别的二级目录（如：Auxiliary_Software），将
Formchange.exe放入，形成07_InterConn\Auxiliary_Software\Formchange.exe即可。
（2）然后在文档开头创建进程对象，即public Process SerialPort = null 【4.07 1/4】创建进程对象
（3）关闭其他进程，防止资源浪费 （本文中有多处，根据相同语句进行查找替换）【4.07 2/4】关闭其他进程，防止资源浪费
（4）将所有其他的进程全部关闭，包括之前打开的该进程 【4.07 3/4】关闭之前打开的该进程，防止系统资源浪费
（5）最后启动独立功能的可执行文件 【4.07 4/4】启动独立功能的可执行文件




