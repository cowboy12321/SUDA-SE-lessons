
AHL-User-RF-CH573-20241104.elf:     file format elf32-littleriscv
AHL-User-RF-CH573-20241104.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00012000

Program Header:
    LOAD off    0x00001000 vaddr 0x00012000 paddr 0x00012000 align 2**12
         filesz 0x000000ec memsz 0x000000ec flags r-x
    LOAD off    0x00002000 vaddr 0x00013000 paddr 0x00013000 align 2**12
         filesz 0x000038c0 memsz 0x000038c0 flags r-x
    LOAD off    0x00006600 vaddr 0x20005600 paddr 0x000168c0 align 2**12
         filesz 0x00000000 memsz 0x00000080 flags rw-
    LOAD off    0x00006680 vaddr 0x20005680 paddr 0x000168c0 align 2**12
         filesz 0x00000000 memsz 0x00000114 flags rw-

Sections:
Idx Name            Size      VMA       LMA       File off  Algn  Flags
  0 .init           00000004  00012000  00012000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector         000000e8  00012004  00012004  00001004  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .highcodelalign 00000000  00013000  00013000  000058c0  2**0  CONTENTS
  3 .highcode       00000000  20005600  20005600  000058c0  2**0  CONTENTS
  4 .text           000038c0  00013000  00013000  00002000  2**3  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini           00000000  000168c0  000168c0  000058c0  2**0  CONTENTS, ALLOC, LOAD, CODE
  6 .dalign         00000080  20005600  000168c0  00006600  2**0  ALLOC
  7 .dlalign        00000000  000168c0  000168c0  000058c0  2**0  CONTENTS
  8 .data           00000000  20005680  20005680  000058c0  2**0  CONTENTS, ALLOC, LOAD, DATA
  9 .bss            00000114  20005680  000168c0  00006680  2**2  ALLOC
 10 .stack          00000000  20008000  20008000  000058c0  2**0  CONTENTS
 11 .debug_info     000076e6  00000000  00000000  000058c0  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev   0000184f  00000000  00000000  0000cfa6  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc      000034fe  00000000  00000000  0000e7f5  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges  00000278  00000000  00000000  00011cf8  2**3  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges   00000250  00000000  00000000  00011f70  2**3  CONTENTS, READONLY, DEBUGGING
 16 .debug_line     00006082  00000000  00000000  000121c0  2**0  CONTENTS, READONLY, DEBUGGING
 17 .debug_str      00000f38  00000000  00000000  00018242  2**0  CONTENTS, READONLY, DEBUGGING
 18 .comment        00000033  00000000  00000000  0001917a  2**0  CONTENTS, READONLY
 19 .debug_frame    0000077c  00000000  00000000  000191b0  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00012000 l    d  .init	00000000 .init
00012004 l    d  .vector	00000000 .vector
00013000 l    d  .highcodelalign	00000000 .highcodelalign
20005600 l    d  .highcode	00000000 .highcode
00013000 l    d  .text	00000000 .text
000168c0 l    d  .fini	00000000 .fini
20005600 l    d  .dalign	00000000 .dalign
000168c0 l    d  .dlalign	00000000 .dlalign
20005680 l    d  .data	00000000 .data
20005680 l    d  .bss	00000000 .bss
20008000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./obj/startup_CH573.o
00012004 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 flash.c
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 rf.c
00000000 l    df *ABS*	00000000 gec.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 printf.c
000140f6 l     F .text	0000003c printk_putc
00014132 l     F .text	00000082 printk_mknumstr
000141b4 l     F .text	0000003c printk_pad_space
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixunsdfdi.c
00000000 l    df *ABS*	00000000 floatundidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 libgcc2.c
00013378 g     F .text	000000cc flash_write
00013f8a g     F .text	0000016c RF_2G4StatusCallBack
000135d2 g     F .text	000000ac GetRFAddr
0001532e g     F .text	0000006a .hidden __eqdf2
20005e80 g       .data	00000000 __global_pointer$
00000025 g       *ABS*	00000000 GEC_USER_SECTOR_END
00012098  w      .vector	00000000 HardFault_Handler
000120ac  w      .vector	00000000 GPIOB_IRQHandler
000120a8  w      .vector	00000000 GPIOA_IRQHandler
0001209c  w      .vector	00000000 SysTick_Handler
00012094  w      .vector	00000000 NMI_Handler
000120cc  w      .vector	00000000 UART1_IRQHandler
00013bae g     F .text	000000c6 uart_enable_re_int
20005680 g       .bss	00000000 _sbss
00000012 g       *ABS*	00000000 GEC_USER_SECTOR_START
00013d8a g     F .text	00000058 UART0_IRQHandler
00015398 g     F .text	000000b6 .hidden __ltdf2
00012004 g       .init	00000000 _einit
000120b4  w      .vector	00000000 BB_IRQHandler
20005680 g     O .bss	000000fa rfsend
00013304 g     F .text	00000026 flash_erase
0001332a g     F .text	00000028 flash_Best
2000577a g     O .bss	00000001 rftaskID
000120a4  w      .vector	00000000 TMR0_IRQHandler
00014fa0 g     F .text	0000038e .hidden __umoddi3
00014c08 g     F .text	00000398 .hidden __udivdi3
00014208 g     F .text	000002e8 printk_mkfloatstr
000120d0  w      .vector	00000000 RTC_IRQHandler
20005794 g       .bss	00000000 _ebss
00001000 g       *ABS*	00000000 MCU_SECTORSIZE
00013c74 g     F .text	00000116 uart_get_re_int
2000577b g     O .bss	00000001 rflength
00015398 g     F .text	000000b6 .hidden __ledf2
20007fff g       *ABS*	00000000 GEC_USER_RAM_END
00014bd2 g     F .text	00000036 myprintf
000120e0  w      .vector	00000000 UART2_IRQHandler
000120d8  w      .vector	00000000 PWMX_IRQHandler
2000577c g     O .bss	00000002 gcRFStaddr
0001628e g     F .text	00000076 .hidden __clzsi2
20005780 g     O .bss	00000004 gcRFHdaddr
000137fa g     F .text	00000228 uart_init
00012000 g       .init	00000000 _start
20005784 g     O .bss	00000004 component_fun
000160fa g     F .text	00000194 .hidden __floatundidf
20005600 g       *ABS*	00000000 GEC_USER_RAM_START
000120d4  w      .vector	00000000 ADC_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_start
000120c4  w      .vector	00000000 TMR2_IRQHandler
00013ef8 g     F .text	00000092 rf_Receive
20005680 g       .data	00000000 _data_vma
000141f0 g     F .text	00000018 out_char
000120bc  w      .vector	00000000 USB_IRQHandler
000144f0 g     F .text	000006e2 printk
00013352 g     F .text	00000026 flash_read_logic
0001544e g     F .text	000004c8 .hidden __muldf3
00013b30 g     F .text	0000007e uart_re1
20005788 g     O .bss	0000000a data
000130c0 g     F .text	000000a8 memset
00013168 g     F .text	0000019c main
0001367e g     F .text	000000b8 IRQ_OPC_CHANGE
00013de2 g     F .text	00000116 RF_ProcessEvent
00013000 g       .highcodelalign	00000000 _highcode_lma
00013534 g     F .text	0000009e RF_Init
0001532e g     F .text	0000006a .hidden __nedf2
0001605c g     F .text	0000009e .hidden __fixunsdfdi
000167c0 g     O .text	00000100 .hidden __clz_tab
000120b8  w      .vector	00000000 LLE_IRQHandler
00012000 g       .init	00000000 _sinit
000120e8  w      .vector	00000000 WDOG_BAT_IRQHandler
000120dc  w      .vector	00000000 TMR3_IRQHandler
20008000 g       .stack	00000000 _eusrstack
000120a0  w      .vector	00000000 SW_Handler
00013736 g     F .text	00000080 Vectors_Init
20005680 g       .data	00000000 _edata
000120b0  w      .vector	00000000 SPI0_IRQHandler
20005600 g       .highcode	00000000 _highcode_vma_end
000168c0 g       .dlalign	00000000 _data_lma
00013000  w      .text	00000000 handle_reset
00016304 g     F .text	00000012 strlen
000120e4  w      .vector	00000000 UART3_IRQHandler
00013a22 g     F .text	0000010e uart_send1
00013444 g     F .text	00000072 gpio_set
000134b6 g     F .text	0000007e gpio_init
00015916 g     F .text	00000746 .hidden __subdf3
000120c0  w      .vector	00000000 TMR1_IRQHandler
00000000 g       *ABS*	00000000 MCU_FLASH_ADDR_START
000137b6 g     F .text	00000044 SYS_ResetExecute



Disassembly of section .init:

00012000 <_sinit>:
_start():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:14
	.section	.init,"ax",@progbits   /*ax是 allocation  execute的缩写，表示该节区可分配并且可执行，progbits是类型*/
	.global	_start   /*将_start标签定义为全局可见*/
	.align	1   /*将当前PC地址推进到2的1次方个字节对齐的位置*/
    .option	norelax  /*	不允许链接松弛*/
_start:     /*定义此处的标签为_start*/
	j	handle_reset     /*跳转指令跳转到标签handle_reset所在的位置*/
   12000:	0000106f          	j	13000 <_highcode_lma>

Disassembly of section .vector:

00012004 <_vector_base>:
_vector_base():
   12004:	8000                	0x8000
   12006:	2000                	fld	fs0,0(s0)
   12008:	0000                	unimp
   1200a:	0000                	unimp
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:22
    .align  1
_vector_base:
    .option norvc; /*表示接下来的汇编程序不可以被汇编生成16位宽的压缩指令*/
    .word   _eusrstack
    .word   0
        j   NMI_Handler                 /* NMI Handler */
   1200c:	0880006f          	j	12094 <NMI_Handler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:23
        j   HardFault_Handler           /* Hard Fault Handler */
   12010:	0880006f          	j	12098 <HardFault_Handler>
	...
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:32
    .word   0
    .word   0
    .word   0
    .word   0
    .word   0
        j   SysTick_Handler            /* SysTick Handler */
   12034:	0680006f          	j	1209c <SysTick_Handler>
   12038:	0000                	unimp
   1203a:	0000                	unimp
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:34
    .word   0
        j   SW_Handler                 /* SW Handler */
   1203c:	0640006f          	j	120a0 <SW_Handler>
   12040:	0000                	unimp
   12042:	0000                	unimp
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:37
    .word   0
    /* External Interrupts */
        j   TMR0_IRQHandler            /* 0:  TMR0 */
   12044:	0600006f          	j	120a4 <TMR0_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:38
        j   GPIOA_IRQHandler           /* GPIOA */
   12048:	0600006f          	j	120a8 <GPIOA_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:39
        j   GPIOB_IRQHandler           /* GPIOB */
   1204c:	0600006f          	j	120ac <GPIOB_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:40
        j   SPI0_IRQHandler            /* SPI0 */
   12050:	0600006f          	j	120b0 <SPI0_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:41
        j   BB_IRQHandler              /* BLEB */
   12054:	0600006f          	j	120b4 <BB_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:42
        j   LLE_IRQHandler             /* BLEL */
   12058:	0600006f          	j	120b8 <LLE_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:43
        j   USB_IRQHandler             /* USB */
   1205c:	0600006f          	j	120bc <USB_IRQHandler>
   12060:	0000                	unimp
   12062:	0000                	unimp
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:45
        .word   0
        j   TMR1_IRQHandler            /* TMR1 */
   12064:	05c0006f          	j	120c0 <TMR1_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:46
        j   TMR2_IRQHandler            /* TMR2 */
   12068:	05c0006f          	j	120c4 <TMR2_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:47
        j   UART0_IRQHandler           /* UART0 */
   1206c:	51f0106f          	j	13d8a <UART0_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:48
        j   UART1_IRQHandler           /* UART1 */
   12070:	05c0006f          	j	120cc <UART1_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:49
        j   RTC_IRQHandler             /* RTC */
   12074:	05c0006f          	j	120d0 <RTC_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:50
        j   ADC_IRQHandler             /* ADC */
   12078:	05c0006f          	j	120d4 <ADC_IRQHandler>
   1207c:	0000                	unimp
   1207e:	0000                	unimp
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:52
        .word   0
        j   PWMX_IRQHandler            /* PWMX */
   12080:	0580006f          	j	120d8 <PWMX_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:53
        j   TMR3_IRQHandler            /* TMR3 */
   12084:	0580006f          	j	120dc <TMR3_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:54
        j   UART2_IRQHandler           /* UART2 */
   12088:	0580006f          	j	120e0 <UART2_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:55
        j   UART3_IRQHandler           /* UART3 */
   1208c:	0580006f          	j	120e4 <UART3_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:56
        j   WDOG_BAT_IRQHandler        /* WDOG_BAT */
   12090:	0580006f          	j	120e8 <WDOG_BAT_IRQHandler>

00012094 <NMI_Handler>:
NMI_Handler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:84
    .weak   TMR3_IRQHandler
    .weak   UART2_IRQHandler
    .weak   UART3_IRQHandler
    .weak   WDOG_BAT_IRQHandler

NMI_Handler:  1:  j 1b     /* 在被引用之时，数字标签通常需要带上一个字母“f”或者“b”的后缀，“f”表示下一行，“b”表示向上一行*/
   12094:	0000006f          	j	12094 <NMI_Handler>

00012098 <HardFault_Handler>:
HardFault_Handler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:85
HardFault_Handler:  1:  j 1b
   12098:	0000006f          	j	12098 <HardFault_Handler>

0001209c <SysTick_Handler>:
SysTick_Handler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:86
SysTick_Handler:  1:  j 1b
   1209c:	0000006f          	j	1209c <SysTick_Handler>

000120a0 <SW_Handler>:
SW_Handler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:87
SW_Handler:  1:  j 1b
   120a0:	0000006f          	j	120a0 <SW_Handler>

000120a4 <TMR0_IRQHandler>:
TMR0_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:88
TMR0_IRQHandler:  1:  j 1b
   120a4:	0000006f          	j	120a4 <TMR0_IRQHandler>

000120a8 <GPIOA_IRQHandler>:
GPIOA_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:89
GPIOA_IRQHandler:  1:  j 1b
   120a8:	0000006f          	j	120a8 <GPIOA_IRQHandler>

000120ac <GPIOB_IRQHandler>:
GPIOB_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:90
GPIOB_IRQHandler:  1:  j 1b
   120ac:	0000006f          	j	120ac <GPIOB_IRQHandler>

000120b0 <SPI0_IRQHandler>:
SPI0_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:91
SPI0_IRQHandler:  1:  j 1b
   120b0:	0000006f          	j	120b0 <SPI0_IRQHandler>

000120b4 <BB_IRQHandler>:
BB_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:92
BB_IRQHandler:  1:  j 1b
   120b4:	0000006f          	j	120b4 <BB_IRQHandler>

000120b8 <LLE_IRQHandler>:
LLE_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:93
LLE_IRQHandler:  1:  j 1b
   120b8:	0000006f          	j	120b8 <LLE_IRQHandler>

000120bc <USB_IRQHandler>:
USB_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:94
USB_IRQHandler:  1:  j 1b
   120bc:	0000006f          	j	120bc <USB_IRQHandler>

000120c0 <TMR1_IRQHandler>:
TMR1_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:95
TMR1_IRQHandler:  1:  j 1b
   120c0:	0000006f          	j	120c0 <TMR1_IRQHandler>

000120c4 <TMR2_IRQHandler>:
TMR2_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:96
TMR2_IRQHandler:  1:  j 1b
   120c4:	0000006f          	j	120c4 <TMR2_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:97
UART0_IRQHandler:  1:  j 1b
   120c8:	0000006f          	j	120c8 <TMR2_IRQHandler+0x4>

000120cc <UART1_IRQHandler>:
UART1_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:98
UART1_IRQHandler:  1:  j 1b
   120cc:	0000006f          	j	120cc <UART1_IRQHandler>

000120d0 <RTC_IRQHandler>:
RTC_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:99
RTC_IRQHandler:  1:  j 1b
   120d0:	0000006f          	j	120d0 <RTC_IRQHandler>

000120d4 <ADC_IRQHandler>:
ADC_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:100
ADC_IRQHandler:  1:  j 1b
   120d4:	0000006f          	j	120d4 <ADC_IRQHandler>

000120d8 <PWMX_IRQHandler>:
PWMX_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:101
PWMX_IRQHandler:  1:  j 1b
   120d8:	0000006f          	j	120d8 <PWMX_IRQHandler>

000120dc <TMR3_IRQHandler>:
TMR3_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:102
TMR3_IRQHandler:  1:  j 1b
   120dc:	0000006f          	j	120dc <TMR3_IRQHandler>

000120e0 <UART2_IRQHandler>:
UART2_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:103
UART2_IRQHandler:  1:  j 1b
   120e0:	0000006f          	j	120e0 <UART2_IRQHandler>

000120e4 <UART3_IRQHandler>:
UART3_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:104
UART3_IRQHandler:  1:  j 1b
   120e4:	0000006f          	j	120e4 <UART3_IRQHandler>

000120e8 <WDOG_BAT_IRQHandler>:
WDOG_BAT_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:105
WDOG_BAT_IRQHandler:  1:  j 1b
   120e8:	0000006f          	j	120e8 <WDOG_BAT_IRQHandler>

Disassembly of section .text:

00013000 <handle_reset>:
handle_reset():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:113
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
   13000:	1fff3197          	auipc	gp,0x1fff3
   13004:	e8018193          	addi	gp,gp,-384 # 20005e80 <__global_pointer$>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:116
.option	pop 
1:
	la sp, _eusrstack 
   13008:	1fff5117          	auipc	sp,0x1fff5
   1300c:	ff810113          	addi	sp,sp,-8 # 20008000 <_eusrstack>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:120

/* Load highcode code  section from flash to RAM */
2:
    la a0, _highcode_lma
   13010:	00000517          	auipc	a0,0x0
   13014:	ff050513          	addi	a0,a0,-16 # 13000 <handle_reset>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:121
    la a1, _highcode_vma_start
   13018:	1fff2597          	auipc	a1,0x1fff2
   1301c:	5e858593          	addi	a1,a1,1512 # 20005600 <GEC_USER_RAM_START>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:122
    la a2, _highcode_vma_end
   13020:	1fff2617          	auipc	a2,0x1fff2
   13024:	5e060613          	addi	a2,a2,1504 # 20005600 <GEC_USER_RAM_START>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:123
    bgeu a1, a2, 2f
   13028:	00c5fc63          	bgeu	a1,a2,13040 <handle_reset+0x40>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:125
1:
    lw t0, (a0)
   1302c:	00052283          	lw	t0,0(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:126
    sw t0, (a1)
   13030:	0055a023          	sw	t0,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:127
    addi a0, a0, 4
   13034:	00450513          	addi	a0,a0,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:128
    addi a1, a1, 4
   13038:	00458593          	addi	a1,a1,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:129
    bltu a1, a2, 1b
   1303c:	fec5e8e3          	bltu	a1,a2,1302c <handle_reset+0x2c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:133

/* Load data section from flash to RAM */
2:
	la a0, _data_lma
   13040:	00004517          	auipc	a0,0x4
   13044:	88050513          	addi	a0,a0,-1920 # 168c0 <_data_lma>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:134
	la a1, _data_vma
   13048:	1fff2597          	auipc	a1,0x1fff2
   1304c:	63858593          	addi	a1,a1,1592 # 20005680 <_data_vma>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:135
	la a2, _edata
   13050:	1fff2617          	auipc	a2,0x1fff2
   13054:	63060613          	addi	a2,a2,1584 # 20005680 <_data_vma>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:136
	bgeu a1, a2, 2f
   13058:	00c5fc63          	bgeu	a1,a2,13070 <handle_reset+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:138
1:
	lw t0, (a0)
   1305c:	00052283          	lw	t0,0(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:139
	sw t0, (a1)
   13060:	0055a023          	sw	t0,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:140
	addi a0, a0, 4
   13064:	00450513          	addi	a0,a0,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:141
	addi a1, a1, 4
   13068:	00458593          	addi	a1,a1,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:142
	bltu a1, a2, 1b
   1306c:	fec5e8e3          	bltu	a1,a2,1305c <handle_reset+0x5c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:145
2:
	/* clear bss section */
	la a0, _sbss
   13070:	1fff2517          	auipc	a0,0x1fff2
   13074:	61050513          	addi	a0,a0,1552 # 20005680 <_data_vma>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:146
	la a1, _ebss
   13078:	1fff2597          	auipc	a1,0x1fff2
   1307c:	71c58593          	addi	a1,a1,1820 # 20005794 <_ebss>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:147
	bgeu a0, a1, 2f
   13080:	00b57863          	bgeu	a0,a1,13090 <handle_reset+0x90>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:149
1:
	sw zero, (a0)
   13084:	00052023          	sw	zero,0(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:150
	addi a0, a0, 4
   13088:	00450513          	addi	a0,a0,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:151
	bltu a0, a1, 1b
   1308c:	feb56ce3          	bltu	a0,a1,13084 <handle_reset+0x84>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:153
2:
    li t0, 0x1880
   13090:	000022b7          	lui	t0,0x2
   13094:	88028293          	addi	t0,t0,-1920 # 1880 <MCU_SECTORSIZE+0x880>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:154
    csrs mstatus, t0
   13098:	3002a073          	csrs	mstatus,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:156

    jal  Vectors_Init	    /* 跳转并链接到Vectors_Init函数，Vectors_Init：User对BIOS中断向量表的部分继承,构件库函数指针初始化 */		
   1309c:	69a000ef          	jal	ra,13736 <Vectors_Init>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:157
	la t0, _vector_base
   130a0:	fffff297          	auipc	t0,0xfffff
   130a4:	f6428293          	addi	t0,t0,-156 # 12004 <_einit>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:158
    ori t0, t0, 1
   130a8:	0012e293          	ori	t0,t0,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:159
	csrw mtvec, t0
   130ac:	30529073          	csrw	mtvec,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:160
	la t0, main
   130b0:	00000297          	auipc	t0,0x0
   130b4:	0b828293          	addi	t0,t0,184 # 13168 <main>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:161
	csrw mepc, t0
   130b8:	34129073          	csrw	mepc,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcs/startup_CH573.S:168
	/* enable vector relocation
	li t0, 0xE000ED14
	li t1, 1
	sw t1, 0(t0)*/
	
	mret
   130bc:	30200073          	mret

000130c0 <memset>:
memset():
   130c0:	433d                	li	t1,15
   130c2:	872a                	mv	a4,a0
   130c4:	02c37363          	bgeu	t1,a2,130ea <memset+0x2a>
   130c8:	00f77793          	andi	a5,a4,15
   130cc:	efbd                	bnez	a5,1314a <memset+0x8a>
   130ce:	e5ad                	bnez	a1,13138 <memset+0x78>
   130d0:	ff067693          	andi	a3,a2,-16
   130d4:	8a3d                	andi	a2,a2,15
   130d6:	96ba                	add	a3,a3,a4
   130d8:	c30c                	sw	a1,0(a4)
   130da:	c34c                	sw	a1,4(a4)
   130dc:	c70c                	sw	a1,8(a4)
   130de:	c74c                	sw	a1,12(a4)
   130e0:	0741                	addi	a4,a4,16
   130e2:	fed76be3          	bltu	a4,a3,130d8 <memset+0x18>
   130e6:	e211                	bnez	a2,130ea <memset+0x2a>
   130e8:	8082                	ret
   130ea:	40c306b3          	sub	a3,t1,a2
   130ee:	068a                	slli	a3,a3,0x2
   130f0:	00000297          	auipc	t0,0x0
   130f4:	9696                	add	a3,a3,t0
   130f6:	00a68067          	jr	10(a3)
   130fa:	00b70723          	sb	a1,14(a4)
   130fe:	00b706a3          	sb	a1,13(a4)
   13102:	00b70623          	sb	a1,12(a4)
   13106:	00b705a3          	sb	a1,11(a4)
   1310a:	00b70523          	sb	a1,10(a4)
   1310e:	00b704a3          	sb	a1,9(a4)
   13112:	00b70423          	sb	a1,8(a4)
   13116:	00b703a3          	sb	a1,7(a4)
   1311a:	00b70323          	sb	a1,6(a4)
   1311e:	00b702a3          	sb	a1,5(a4)
   13122:	00b70223          	sb	a1,4(a4)
   13126:	00b701a3          	sb	a1,3(a4)
   1312a:	00b70123          	sb	a1,2(a4)
   1312e:	00b700a3          	sb	a1,1(a4)
   13132:	00b70023          	sb	a1,0(a4)
   13136:	8082                	ret
   13138:	0ff5f593          	andi	a1,a1,255
   1313c:	00859693          	slli	a3,a1,0x8
   13140:	8dd5                	or	a1,a1,a3
   13142:	01059693          	slli	a3,a1,0x10
   13146:	8dd5                	or	a1,a1,a3
   13148:	b761                	j	130d0 <memset+0x10>
   1314a:	00279693          	slli	a3,a5,0x2
   1314e:	00000297          	auipc	t0,0x0
   13152:	9696                	add	a3,a3,t0
   13154:	8286                	mv	t0,ra
   13156:	fa8680e7          	jalr	-88(a3)
   1315a:	8096                	mv	ra,t0
   1315c:	17c1                	addi	a5,a5,-16
   1315e:	8f1d                	sub	a4,a4,a5
   13160:	963e                	add	a2,a2,a5
   13162:	f8c374e3          	bgeu	t1,a2,130ea <memset+0x2a>
   13166:	b7a5                	j	130ce <memset+0xe>

00013168 <main>:
main():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:15

//main.c使用的内部函数声明处---------------------------------------------

//主函数，一般情况下可以认为程序从此开始运行（实际上有启动过程）-----------
int main(void)
{
   13168:	7179                	addi	sp,sp,-48
   1316a:	d606                	sw	ra,44(sp)
   1316c:	d422                	sw	s0,40(sp)
   1316e:	d226                	sw	s1,36(sp)
   13170:	d04a                	sw	s2,32(sp)
   13172:	ce4e                	sw	s3,28(sp)
   13174:	cc52                	sw	s4,24(sp)
   13176:	ca56                	sw	s5,20(sp)
   13178:	c85a                	sw	s6,16(sp)
   1317a:	c65e                	sw	s7,12(sp)
   1317c:	c462                	sw	s8,8(sp)
   1317e:	c266                	sw	s9,4(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:16
    printf("------------------------------------------------------\n");   
   13180:	00003517          	auipc	a0,0x3
   13184:	19850513          	addi	a0,a0,408 # 16318 <strlen+0x14>
   13188:	00002097          	auipc	ra,0x2
   1318c:	a4a080e7          	jalr	-1462(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:17
    printf("★金葫芦提示★                                         \n");
   13190:	00003517          	auipc	a0,0x3
   13194:	1c050513          	addi	a0,a0,448 # 16350 <strlen+0x4c>
   13198:	00002097          	auipc	ra,0x2
   1319c:	a3a080e7          	jalr	-1478(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:18
    printf("【中文名称】GEC的NOS编程框架（Uart构件测试样例）        \n");
   131a0:	00003517          	auipc	a0,0x3
   131a4:	1ec50513          	addi	a0,a0,492 # 1638c <strlen+0x88>
   131a8:	00002097          	auipc	ra,0x2
   131ac:	a2a080e7          	jalr	-1494(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:19
	printf("【程序功能】这个样例是在GPIO构件样例基础上增加串口中断  \n");
   131b0:	00003517          	auipc	a0,0x3
   131b4:	21850513          	addi	a0,a0,536 # 163c8 <strlen+0xc4>
   131b8:	00002097          	auipc	ra,0x2
   131bc:	a1a080e7          	jalr	-1510(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:20
    printf("【硬件连接】见本工程05_UserBoard文件夹下user.h文件      \n");
   131c0:	00003517          	auipc	a0,0x3
   131c4:	24450513          	addi	a0,a0,580 # 16404 <strlen+0x100>
   131c8:	00002097          	auipc	ra,0x2
   131cc:	a0a080e7          	jalr	-1526(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:21
    printf("【操作说明】通过菜单栏“工具”→“串口工具”，          \n");
   131d0:	00003517          	auipc	a0,0x3
   131d4:	27050513          	addi	a0,a0,624 # 16440 <strlen+0x13c>
   131d8:	00002097          	auipc	ra,0x2
   131dc:	9fa080e7          	jalr	-1542(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:22
    printf("       打开用户串口 ，接收嵌入式终端发送的字节      \n");
   131e0:	00003517          	auipc	a0,0x3
   131e4:	29c50513          	addi	a0,a0,668 # 1647c <strlen+0x178>
   131e8:	00002097          	auipc	ra,0x2
   131ec:	9ea080e7          	jalr	-1558(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:23
    printf("------------------------------------------------------\n"); 
   131f0:	00003517          	auipc	a0,0x3
   131f4:	12850513          	addi	a0,a0,296 # 16318 <strlen+0x14>
   131f8:	00002097          	auipc	ra,0x2
   131fc:	9da080e7          	jalr	-1574(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:33
    uint32_t mMainLoopCount; //主循环次数变量（主循环临时变量以m作为前缀）
    uint8_t   mFlag;          //灯的状态标志
    uint32_t  mLightCount;    //灯的状态切换次数 
    // uint8_t   rf_test_data[20] = "RF send Data test \r\n";
    //（1.2）【不变】关总中断
    DISABLE_INTERRUPTS;
   13200:	42a1                	li	t0,8
   13202:	3002b073          	csrc	mstatus,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:43
    mLightCount=0;       //灯的闪烁次数
    
    //（1.4）【根据includes.h文件中声明的全局变量】给全局变量赋初值
    
    //（1.5）【根据所用到的外部硬件设备】用户外设模块初始化
    gpio_init(LIGHT_BLUE,GPIO_OUTPUT,LIGHT_ON);	//初始化蓝灯
   13206:	4601                	li	a2,0
   13208:	4585                	li	a1,1
   1320a:	10e00513          	li	a0,270
   1320e:	00000097          	auipc	ra,0x0
   13212:	2a8080e7          	jalr	680(ra) # 134b6 <gpio_init>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:44
    uart_init(UART_User, 115200);
   13216:	65f1                	lui	a1,0x1c
   13218:	20058593          	addi	a1,a1,512 # 1c200 <_data_lma+0x5940>
   1321c:	4501                	li	a0,0
   1321e:	00000097          	auipc	ra,0x0
   13222:	5dc080e7          	jalr	1500(ra) # 137fa <uart_init>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:47
    
    //（1.6）RF模块初始化
    GetRFAddr(&gcRFHdaddr, &gcRFStaddr);        //获取设备RF相关信息
   13226:	1fff2597          	auipc	a1,0x1fff2
   1322a:	55658593          	addi	a1,a1,1366 # 2000577c <gcRFStaddr>
   1322e:	1fff2517          	auipc	a0,0x1fff2
   13232:	55250513          	addi	a0,a0,1362 # 20005780 <gcRFHdaddr>
   13236:	00000097          	auipc	ra,0x0
   1323a:	39c080e7          	jalr	924(ra) # 135d2 <GetRFAddr>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:48
    RF_Init(gcRFHdaddr);                        //RF初始化
   1323e:	1fff2797          	auipc	a5,0x1fff2
   13242:	54278793          	addi	a5,a5,1346 # 20005780 <gcRFHdaddr>
   13246:	4388                	lw	a0,0(a5)
   13248:	00000097          	auipc	ra,0x0
   1324c:	2ec080e7          	jalr	748(ra) # 13534 <RF_Init>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:51

    //（1.7）【根据所使用的硬件模块中断】使能模块中断
    uart_enable_re_int(UART_User);     //使能用户串口接收中断
   13250:	4501                	li	a0,0
   13252:	00001097          	auipc	ra,0x1
   13256:	95c080e7          	jalr	-1700(ra) # 13bae <uart_enable_re_int>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:53
    //（1.8）【不变】开总中断
    ENABLE_INTERRUPTS;
   1325a:	42a1                	li	t0,8
   1325c:	3002a073          	csrs	mstatus,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:38
    mLightCount=0;       //灯的闪烁次数
   13260:	4a01                	li	s4,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:37
    mFlag='A';           //灯的状态标志
   13262:	04100913          	li	s2,65
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:62
    for(;;)   //for(;;)（开头）
    {
        //（2.1）主循环次数变量+1
        mMainLoopCount++;
        //（2.2）未达到主循环次数设定值，继续循环
        TMOS_SystemProcess();
   13266:	1fff2497          	auipc	s1,0x1fff2
   1326a:	51e48493          	addi	s1,s1,1310 # 20005784 <component_fun>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:69
        if (mMainLoopCount<=20) continue; //宏常数在user.h中定义
        //（2.3）达到主循环次数设定值，执行下列语句，进行灯的亮暗处理
        //（2.3.1）清除循环次数变量
        mMainLoopCount=0; 
        //（2.3.2）如灯状态标志mFlag为'L'，灯的闪烁次数+1并显示，改变灯状态及标志
        if (mFlag=='L')                    //判断灯的状态标志
   1326e:	04c00993          	li	s3,76
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:83
        //（2.3.3）如灯状态标志mFlag为'A'，改变灯状态及标志
        else
        {
            mFlag='L';                       //灯的状态标志
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
            printf(" LIGHT_BLUE:OFF--\r\n");  //串口输出灯的状态
   13272:	00003a97          	auipc	s5,0x3
   13276:	272a8a93          	addi	s5,s5,626 # 164e4 <strlen+0x1e0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:72
            printf(" mLightCount = %d\r\n",mLightCount);
   1327a:	00003c97          	auipc	s9,0x3
   1327e:	23ac8c93          	addi	s9,s9,570 # 164b4 <strlen+0x1b0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:75
            printf(" LIGHT_BLUE:ON--\r\n"); //串口输出灯的状态
   13282:	00003c17          	auipc	s8,0x3
   13286:	246c0c13          	addi	s8,s8,582 # 164c8 <strlen+0x1c4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:76
            printf("   \r\n"); 
   1328a:	00003b97          	auipc	s7,0x3
   1328e:	252b8b93          	addi	s7,s7,594 # 164dc <strlen+0x1d8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:73
            mFlag='A';                       //灯的状态标志
   13292:	04100b13          	li	s6,65
   13296:	a831                	j	132b2 <main+0x14a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:82
            gpio_set(LIGHT_BLUE,LIGHT_OFF); //灯“暗”
   13298:	4585                	li	a1,1
   1329a:	10e00513          	li	a0,270
   1329e:	00000097          	auipc	ra,0x0
   132a2:	1a6080e7          	jalr	422(ra) # 13444 <gpio_set>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:83
            printf(" LIGHT_BLUE:OFF--\r\n");  //串口输出灯的状态
   132a6:	8556                	mv	a0,s5
   132a8:	00002097          	auipc	ra,0x2
   132ac:	92a080e7          	jalr	-1750(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:81
            mFlag='L';                       //灯的状态标志
   132b0:	894e                	mv	s2,s3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:37
    mFlag='A';           //灯的状态标志
   132b2:	4455                	li	s0,21
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:62
        TMOS_SystemProcess();
   132b4:	409c                	lw	a5,0(s1)
   132b6:	0987a783          	lw	a5,152(a5)
   132ba:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:63
        mDelaymS(50);
   132bc:	409c                	lw	a5,0(s1)
   132be:	0ac7a783          	lw	a5,172(a5)
   132c2:	03200513          	li	a0,50
   132c6:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:64
        if (mMainLoopCount<=20) continue; //宏常数在user.h中定义
   132c8:	147d                	addi	s0,s0,-1
   132ca:	f46d                	bnez	s0,132b4 <main+0x14c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:69
        if (mFlag=='L')                    //判断灯的状态标志
   132cc:	fd3916e3          	bne	s2,s3,13298 <main+0x130>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:71
            mLightCount++;  
   132d0:	0a05                	addi	s4,s4,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:72
            printf(" mLightCount = %d\r\n",mLightCount);
   132d2:	85d2                	mv	a1,s4
   132d4:	8566                	mv	a0,s9
   132d6:	00002097          	auipc	ra,0x2
   132da:	8fc080e7          	jalr	-1796(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:74
            gpio_set(LIGHT_BLUE,LIGHT_ON);  //灯“亮”
   132de:	4581                	li	a1,0
   132e0:	10e00513          	li	a0,270
   132e4:	00000097          	auipc	ra,0x0
   132e8:	160080e7          	jalr	352(ra) # 13444 <gpio_set>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:75
            printf(" LIGHT_BLUE:ON--\r\n"); //串口输出灯的状态
   132ec:	8562                	mv	a0,s8
   132ee:	00002097          	auipc	ra,0x2
   132f2:	8e4080e7          	jalr	-1820(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:76
            printf("   \r\n"); 
   132f6:	855e                	mv	a0,s7
   132f8:	00002097          	auipc	ra,0x2
   132fc:	8da080e7          	jalr	-1830(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/main.c:73
            mFlag='A';                       //灯的状态标志
   13300:	895a                	mv	s2,s6
   13302:	bf45                	j	132b2 <main+0x14a>

00013304 <flash_erase>:
flash_erase():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:66
//函数返回：函数执行执行状态：0=正常；1=异常。
//参数说明：sect：目标扇区号（范围取决于实际芯片
//功能概要：擦除flash存储器的sect扇区
//======================================================================
uint8_t flash_erase(uint16_t sect)
{
   13304:	1141                	addi	sp,sp,-16
   13306:	c606                	sw	ra,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:70
    uint32_t StartAddr;
    uint8_t flag;
    StartAddr = (uint32_t)(sect * Flash_Sect_size + Flash_Address);
    flag = FLASH_ROM_ERASE(StartAddr,4096);
   13308:	1fff2797          	auipc	a5,0x1fff2
   1330c:	47c78793          	addi	a5,a5,1148 # 20005784 <component_fun>
   13310:	439c                	lw	a5,0(a5)
   13312:	57fc                	lw	a5,108(a5)
   13314:	6685                	lui	a3,0x1
   13316:	4601                	li	a2,0
   13318:	00c51593          	slli	a1,a0,0xc
   1331c:	4505                	li	a0,1
   1331e:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:73
    return flag;

}
   13320:	0ff57513          	andi	a0,a0,255
   13324:	40b2                	lw	ra,12(sp)
   13326:	0141                	addi	sp,sp,16
   13328:	8082                	ret

0001332a <flash_Best>:
flash_Best():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:176
//            buf:待写入数据的首地址
//功能概要：首位地址都对齐的情况下的数据写入
//编程参考：暂无
//======================================================================
uint8_t flash_Best(uint16_t sect,uint16_t offset,uint16_t N,uint8_t *buf)
{
   1332a:	1141                	addi	sp,sp,-16
   1332c:	c606                	sw	ra,12(sp)
   1332e:	8736                	mv	a4,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:178
    uint32_t addr;
    addr = (uint32_t)(Flash_Address+sect*Flash_Sect_size+offset);
   13330:	0532                	slli	a0,a0,0xc
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:179
    uint8_t flag=FLASH_ROM_WRITE(addr,buf,N);
   13332:	1fff2797          	auipc	a5,0x1fff2
   13336:	45278793          	addi	a5,a5,1106 # 20005784 <component_fun>
   1333a:	439c                	lw	a5,0(a5)
   1333c:	57fc                	lw	a5,108(a5)
   1333e:	86b2                	mv	a3,a2
   13340:	863a                	mv	a2,a4
   13342:	95aa                	add	a1,a1,a0
   13344:	4509                	li	a0,2
   13346:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:181
    return flag;
}
   13348:	0ff57513          	andi	a0,a0,255
   1334c:	40b2                	lw	ra,12(sp)
   1334e:	0141                	addi	sp,sp,16
   13350:	8082                	ret

00013352 <flash_read_logic>:
flash_read_logic():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:198
//编程参考：暂无
//=======================================================================
void flash_read_logic(uint8_t* Buffer,uint16_t sect,uint16_t offset,uint32_t N)
{

    uint32_t i, Length = ( N + 3 ) >> 2;
   13352:	068d                	addi	a3,a3,3
   13354:	8289                	srli	a3,a3,0x2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:199
    uint32_t* pCode = ( uint32_t* ) (sect * Flash_Sect_size + offset + Flash_Address);
   13356:	05b2                	slli	a1,a1,0xc
   13358:	962e                	add	a2,a2,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:202
    uint32_t* pBuf = ( uint32_t* ) Buffer;

    for ( i = 0; i < Length; i++ )
   1335a:	ce91                	beqz	a3,13376 <flash_read_logic+0x24>
   1335c:	068a                	slli	a3,a3,0x2
   1335e:	96aa                	add	a3,a3,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:200
    uint32_t* pBuf = ( uint32_t* ) Buffer;
   13360:	87aa                	mv	a5,a0
   13362:	40a60533          	sub	a0,a2,a0
   13366:	00a78733          	add	a4,a5,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:204 (discriminator 3)
    {
      *pBuf++ = *pCode++;
   1336a:	0791                	addi	a5,a5,4
   1336c:	4318                	lw	a4,0(a4)
   1336e:	fee7ae23          	sw	a4,-4(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:202 (discriminator 3)
    for ( i = 0; i < Length; i++ )
   13372:	fed79ae3          	bne	a5,a3,13366 <flash_read_logic+0x14>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:207
    }

}
   13376:	8082                	ret

00013378 <flash_write>:
flash_write():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:107
{
   13378:	7179                	addi	sp,sp,-48
   1337a:	d606                	sw	ra,44(sp)
   1337c:	d422                	sw	s0,40(sp)
   1337e:	d226                	sw	s1,36(sp)
   13380:	d04a                	sw	s2,32(sp)
   13382:	ce4e                	sw	s3,28(sp)
   13384:	737d                	lui	t1,0xfffff
   13386:	911a                	add	sp,sp,t1
   13388:	89aa                	mv	s3,a0
   1338a:	892e                	mv	s2,a1
   1338c:	84b2                	mv	s1,a2
   1338e:	8436                	mv	s0,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:112
    if(offset+N>Flash_Sect_size)
   13390:	00b60733          	add	a4,a2,a1
   13394:	6785                	lui	a5,0x1
   13396:	04e7d663          	bge	a5,a4,133e2 <flash_write+0x6a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:116
        flash_write(sect,offset,Flash_Sect_size-offset,buf);
   1339a:	6605                	lui	a2,0x1
   1339c:	8e0d                	sub	a2,a2,a1
   1339e:	0642                	slli	a2,a2,0x10
   133a0:	8241                	srli	a2,a2,0x10
   133a2:	00000097          	auipc	ra,0x0
   133a6:	fd6080e7          	jalr	-42(ra) # 13378 <flash_write>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:118
        flash_write(sect+1,0,N-(Flash_Sect_size-offset),buf+(Flash_Sect_size-offset));
   133aa:	6685                	lui	a3,0x1
   133ac:	412686b3          	sub	a3,a3,s2
   133b0:	767d                	lui	a2,0xfffff
   133b2:	9626                	add	a2,a2,s1
   133b4:	964a                	add	a2,a2,s2
   133b6:	00198513          	addi	a0,s3,1
   133ba:	96a2                	add	a3,a3,s0
   133bc:	0642                	slli	a2,a2,0x10
   133be:	8241                	srli	a2,a2,0x10
   133c0:	4581                	li	a1,0
   133c2:	0542                	slli	a0,a0,0x10
   133c4:	8141                	srli	a0,a0,0x10
   133c6:	00000097          	auipc	ra,0x0
   133ca:	fb2080e7          	jalr	-78(ra) # 13378 <flash_write>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:134
}
   133ce:	4501                	li	a0,0
   133d0:	6305                	lui	t1,0x1
   133d2:	911a                	add	sp,sp,t1
   133d4:	50b2                	lw	ra,44(sp)
   133d6:	5422                	lw	s0,40(sp)
   133d8:	5492                	lw	s1,36(sp)
   133da:	5902                	lw	s2,32(sp)
   133dc:	49f2                	lw	s3,28(sp)
   133de:	6145                	addi	sp,sp,48
   133e0:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:124
         flash_read_logic(data,sect,0,Flash_Sect_size); //将当前扇区的全部值读入数组中
   133e2:	6685                	lui	a3,0x1
   133e4:	4601                	li	a2,0
   133e6:	85aa                	mv	a1,a0
   133e8:	757d                	lui	a0,0xfffff
   133ea:	6785                	lui	a5,0x1
   133ec:	0818                	addi	a4,sp,16
   133ee:	97ba                	add	a5,a5,a4
   133f0:	953e                	add	a0,a0,a5
   133f2:	00000097          	auipc	ra,0x0
   133f6:	f60080e7          	jalr	-160(ra) # 13352 <flash_read_logic>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:126
         for(i = 0;i<N;i++)
   133fa:	c885                	beqz	s1,1342a <flash_write+0xb2>
   133fc:	87a2                	mv	a5,s0
   133fe:	777d                	lui	a4,0xfffff
   13400:	6685                	lui	a3,0x1
   13402:	0810                	addi	a2,sp,16
   13404:	96b2                	add	a3,a3,a2
   13406:	9736                	add	a4,a4,a3
   13408:	c63a                	sw	a4,12(sp)
   1340a:	012705b3          	add	a1,a4,s2
   1340e:	0405                	addi	s0,s0,1
   13410:	fff48693          	addi	a3,s1,-1
   13414:	06c2                	slli	a3,a3,0x10
   13416:	82c1                	srli	a3,a3,0x10
   13418:	96a2                	add	a3,a3,s0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:128 (discriminator 3)
             data[offset+i] = buf[i];
   1341a:	0007c703          	lbu	a4,0(a5) # 1000 <MCU_SECTORSIZE>
   1341e:	00e58023          	sb	a4,0(a1)
   13422:	0785                	addi	a5,a5,1
   13424:	0585                	addi	a1,a1,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:126 (discriminator 3)
         for(i = 0;i<N;i++)
   13426:	fed79ae3          	bne	a5,a3,1341a <flash_write+0xa2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/flash.c:131
         flash_Best(sect,0,Flash_Sect_size,data);
   1342a:	76fd                	lui	a3,0xfffff
   1342c:	6785                	lui	a5,0x1
   1342e:	0818                	addi	a4,sp,16
   13430:	97ba                	add	a5,a5,a4
   13432:	96be                	add	a3,a3,a5
   13434:	6605                	lui	a2,0x1
   13436:	4581                	li	a1,0
   13438:	854e                	mv	a0,s3
   1343a:	00000097          	auipc	ra,0x0
   1343e:	ef0080e7          	jalr	-272(ra) # 1332a <flash_Best>
   13442:	b771                	j	133ce <flash_write+0x56>

00013444 <gpio_set>:
gpio_get_port_pin():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:372
//功能概要：将传进参数port_pin进行解析，得出具体端口号与引脚号，分别赋值给port与pin,返回。
//       （例：(PTB_NUM)|(9)解析为PORTB与9，并将其分别赋值给port与pin）。
//=====================================================================
void gpio_get_port_pin(uint16_t port_pin,uint8_t* port,uint8_t* pin)
{
    *port = (port_pin>>8);
   13444:	00855793          	srli	a5,a0,0x8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:373
    *pin = port_pin;
   13448:	0ff57513          	andi	a0,a0,255
gpio_set():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:70
   switch(port)
   1344c:	c789                	beqz	a5,13456 <gpio_set+0x12>
   1344e:	4705                	li	a4,1
   13450:	02e78b63          	beq	a5,a4,13486 <gpio_set+0x42>
   13454:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:74
       if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   13456:	4785                	li	a5,1
   13458:	00f58d63          	beq	a1,a5,13472 <gpio_set+0x2e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:77
           R32_PA_CLR |= (1<<pin);
   1345c:	40001737          	lui	a4,0x40001
   13460:	0ac72683          	lw	a3,172(a4) # 400010ac <_eusrstack+0x1fff90ac>
   13464:	4785                	li	a5,1
   13466:	00a79533          	sll	a0,a5,a0
   1346a:	8d55                	or	a0,a0,a3
   1346c:	0aa72623          	sw	a0,172(a4)
   13470:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:75
           R32_PA_OUT |= (1<<pin);
   13472:	40001737          	lui	a4,0x40001
   13476:	0a872683          	lw	a3,168(a4) # 400010a8 <_eusrstack+0x1fff90a8>
   1347a:	00a79533          	sll	a0,a5,a0
   1347e:	8d55                	or	a0,a0,a3
   13480:	0aa72423          	sw	a0,168(a4)
   13484:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:81
      if(1 == state)    //高电平(该引脚对应置位寄存器置1)
   13486:	4785                	li	a5,1
   13488:	00f58d63          	beq	a1,a5,134a2 <gpio_set+0x5e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:84
          R32_PB_CLR |= (1<<pin);
   1348c:	40001737          	lui	a4,0x40001
   13490:	0cc72683          	lw	a3,204(a4) # 400010cc <_eusrstack+0x1fff90cc>
   13494:	4785                	li	a5,1
   13496:	00a79533          	sll	a0,a5,a0
   1349a:	8d55                	or	a0,a0,a3
   1349c:	0ca72623          	sw	a0,204(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:88
}
   134a0:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:82
          R32_PB_OUT |= (1<<pin);
   134a2:	40001737          	lui	a4,0x40001
   134a6:	0c872683          	lw	a3,200(a4) # 400010c8 <_eusrstack+0x1fff90c8>
   134aa:	00a79533          	sll	a0,a5,a0
   134ae:	8d55                	or	a0,a0,a3
   134b0:	0ca72423          	sw	a0,200(a4)
   134b4:	8082                	ret

000134b6 <gpio_init>:
gpio_init():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:24
{
   134b6:	1141                	addi	sp,sp,-16
   134b8:	c606                	sw	ra,12(sp)
gpio_get_port_pin():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:372
    *port = (port_pin>>8);
   134ba:	00855793          	srli	a5,a0,0x8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:373
    *pin = port_pin;
   134be:	0ff57693          	andi	a3,a0,255
gpio_init():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:29
    switch(port)
   134c2:	c799                	beqz	a5,134d0 <gpio_init+0x1a>
   134c4:	4705                	li	a4,1
   134c6:	02e78e63          	beq	a5,a4,13502 <gpio_init+0x4c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:55
}
   134ca:	40b2                	lw	ra,12(sp)
   134cc:	0141                	addi	sp,sp,16
   134ce:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:32
        if(dir == 1)  //定义为输出引脚
   134d0:	4785                	li	a5,1
   134d2:	00f58963          	beq	a1,a5,134e4 <gpio_init+0x2e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:39
            R32_PA_DIR &=~(GPIO_INPUT << pin );
   134d6:	400017b7          	lui	a5,0x40001
   134da:	0a07a703          	lw	a4,160(a5) # 400010a0 <_eusrstack+0x1fff90a0>
   134de:	0ae7a023          	sw	a4,160(a5)
   134e2:	b7e5                	j	134ca <gpio_init+0x14>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:34
            R32_PA_DIR |= (GPIO_OUTPUT << pin );
   134e4:	40001737          	lui	a4,0x40001
   134e8:	0a072583          	lw	a1,160(a4) # 400010a0 <_eusrstack+0x1fff90a0>
   134ec:	00d796b3          	sll	a3,a5,a3
   134f0:	8ecd                	or	a3,a3,a1
   134f2:	0ad72023          	sw	a3,160(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:35
            gpio_set(port_pin,state);
   134f6:	85b2                	mv	a1,a2
   134f8:	00000097          	auipc	ra,0x0
   134fc:	f4c080e7          	jalr	-180(ra) # 13444 <gpio_set>
   13500:	b7e9                	j	134ca <gpio_init+0x14>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:43
        if(dir == 1)  //定义为输出引脚
   13502:	4785                	li	a5,1
   13504:	00f58963          	beq	a1,a5,13516 <gpio_init+0x60>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:50
            R32_PB_DIR &=~(GPIO_INPUT << pin );
   13508:	400017b7          	lui	a5,0x40001
   1350c:	0c07a703          	lw	a4,192(a5) # 400010c0 <_eusrstack+0x1fff90c0>
   13510:	0ce7a023          	sw	a4,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:55
}
   13514:	bf5d                	j	134ca <gpio_init+0x14>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:45
            R32_PB_DIR |= (GPIO_OUTPUT << pin );
   13516:	40001737          	lui	a4,0x40001
   1351a:	0c072583          	lw	a1,192(a4) # 400010c0 <_eusrstack+0x1fff90c0>
   1351e:	00d796b3          	sll	a3,a5,a3
   13522:	8ecd                	or	a3,a3,a1
   13524:	0cd72023          	sw	a3,192(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gpio.c:46
            gpio_set(port_pin,state);
   13528:	85b2                	mv	a1,a2
   1352a:	00000097          	auipc	ra,0x0
   1352e:	f1a080e7          	jalr	-230(ra) # 13444 <gpio_set>
   13532:	bf61                	j	134ca <gpio_init+0x14>

00013534 <RF_Init>:
RF_Init():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:18
//参数说明：HW_ADR:32位地址，禁止使用0x55555555以及0xAAAAAAAA (
//         建议不超过24次位反转，且不超过连续的6个0或1 )
//函数返回：无
//=========================================================================
void RF_Init(uint32_t HW_ADR)
{
   13534:	7179                	addi	sp,sp,-48
   13536:	d606                	sw	ra,44(sp)
   13538:	d422                	sw	s0,40(sp)
   1353a:	d226                	sw	s1,36(sp)
   1353c:	84aa                	mv	s1,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:21
    uint8_t state;
    rfConfig_t rfConfig;
    CH57X_BLEInit( ); //BLE初始化
   1353e:	1fff2417          	auipc	s0,0x1fff2
   13542:	24640413          	addi	s0,s0,582 # 20005784 <component_fun>
   13546:	401c                	lw	a5,0(s0)
   13548:	0847a783          	lw	a5,132(a5)
   1354c:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:22
    HAL_Init(  );     //硬件初始化
   1354e:	401c                	lw	a5,0(s0)
   13550:	0887a783          	lw	a5,136(a5)
   13554:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:23
    RF_RoleInit( );
   13556:	401c                	lw	a5,0(s0)
   13558:	08c7a783          	lw	a5,140(a5)
   1355c:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:24
    rftaskID = TMOS_ProcessEventRegister( RF_ProcessEvent );  //任务初始化
   1355e:	401c                	lw	a5,0(s0)
   13560:	0947a783          	lw	a5,148(a5)
   13564:	00001517          	auipc	a0,0x1
   13568:	87e50513          	addi	a0,a0,-1922 # 13de2 <RF_ProcessEvent>
   1356c:	9782                	jalr	a5
   1356e:	1fff2797          	auipc	a5,0x1fff2
   13572:	20a78623          	sb	a0,524(a5) # 2000577a <rftaskID>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:25
    rfConfig.accessAddress = HW_ADR;
   13576:	c426                	sw	s1,8(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:26
    rfConfig.CRCInit = 0x555555;
   13578:	005557b7          	lui	a5,0x555
   1357c:	55578793          	addi	a5,a5,1365 # 555555 <_data_lma+0x53ec95>
   13580:	c63e                	sw	a5,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:27
    rfConfig.Channel = 8;
   13582:	47a1                	li	a5,8
   13584:	00f100a3          	sb	a5,1(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:28
    rfConfig.Frequency = 2480000;
   13588:	0025d7b7          	lui	a5,0x25d
   1358c:	78078793          	addi	a5,a5,1920 # 25d780 <_data_lma+0x246ec0>
   13590:	c23e                	sw	a5,4(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:29
    rfConfig.LLEMode = LLE_MODE_BASIC|LLE_MODE_EX_CHANNEL; // 使能 LLE_MODE_EX_CHANNEL 表示 选择 rfConfig.Frequency 作为通信频点
   13592:	04000793          	li	a5,64
   13596:	00f10023          	sb	a5,0(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:30
    rfConfig.rfStatusCB = RF_2G4StatusCallBack;
   1359a:	00001797          	auipc	a5,0x1
   1359e:	9f078793          	addi	a5,a5,-1552 # 13f8a <RF_2G4StatusCallBack>
   135a2:	c83e                	sw	a5,16(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:31
    state = RF_Config( &rfConfig );
   135a4:	401c                	lw	a5,0(s0)
   135a6:	0907a783          	lw	a5,144(a5)
   135aa:	850a                	mv	a0,sp
   135ac:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:35
    // printf("RFInitState: %x\n",state);   //0-success
    // WWDG_ResetCfg(DISABLE);
    //  { // RX mode
       state = RF_Rx(data, 10, 0xFF, 0xFF);
   135ae:	401c                	lw	a5,0(s0)
   135b0:	09c7a783          	lw	a5,156(a5)
   135b4:	0ff00693          	li	a3,255
   135b8:	0ff00613          	li	a2,255
   135bc:	45a9                	li	a1,10
   135be:	1fff2517          	auipc	a0,0x1fff2
   135c2:	1ca50513          	addi	a0,a0,458 # 20005788 <data>
   135c6:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:43
    //  }

    // { // TX mode
    // 	tmos_set_event( rftaskID , SBP_RF_PERIODIC_EVT );
    // }
}
   135c8:	50b2                	lw	ra,44(sp)
   135ca:	5422                	lw	s0,40(sp)
   135cc:	5492                	lw	s1,36(sp)
   135ce:	6145                	addi	sp,sp,48
   135d0:	8082                	ret

000135d2 <GetRFAddr>:
GetRFAddr():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:53
//参数说明：Hdaddr：硬件地址，用于RF无线通信，可以收到来自同硬件地址设备发出的信息
//         Staddr：软件地址，用于RF无线通信，用于区分同硬件地址下的设备
//函数返回：无
//=========================================================================
void GetRFAddr(uint32_t* Hdaddr, uint16_t* Staddr)
{
   135d2:	1101                	addi	sp,sp,-32
   135d4:	ce06                	sw	ra,28(sp)
   135d6:	cc22                	sw	s0,24(sp)
   135d8:	ca26                	sw	s1,20(sp)
   135da:	842a                	mv	s0,a0
   135dc:	84ae                	mv	s1,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:55
    uint8_t RFINFO[8];
    flash_read_logic(RFINFO,RFInfoSect,RFInfoSectOffest,8);                      //从101扇区中读出硬件地址和软件地址
   135de:	46a1                	li	a3,8
   135e0:	4601                	li	a2,0
   135e2:	06e00593          	li	a1,110
   135e6:	0028                	addi	a0,sp,8
   135e8:	00000097          	auipc	ra,0x0
   135ec:	d6a080e7          	jalr	-662(ra) # 13352 <flash_read_logic>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:57
    *Hdaddr  = RFINFO[0];
    *Hdaddr += RFINFO[1] << 8;
   135f0:	00914783          	lbu	a5,9(sp)
   135f4:	07a2                	slli	a5,a5,0x8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:58
    *Hdaddr += RFINFO[2] << 16;
   135f6:	00a14703          	lbu	a4,10(sp)
   135fa:	0742                	slli	a4,a4,0x10
   135fc:	97ba                	add	a5,a5,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:56
    *Hdaddr  = RFINFO[0];
   135fe:	00814703          	lbu	a4,8(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:58
    *Hdaddr += RFINFO[2] << 16;
   13602:	97ba                	add	a5,a5,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:59
    *Hdaddr += RFINFO[3] << 24;
   13604:	00b14703          	lbu	a4,11(sp)
   13608:	0762                	slli	a4,a4,0x18
   1360a:	97ba                	add	a5,a5,a4
   1360c:	c01c                	sw	a5,0(s0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:62

    *Staddr  = RFINFO[4];
    *Staddr += RFINFO[5] << 8;
   1360e:	00d14603          	lbu	a2,13(sp)
   13612:	0622                	slli	a2,a2,0x8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:61
    *Staddr  = RFINFO[4];
   13614:	00c14783          	lbu	a5,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:62
    *Staddr += RFINFO[5] << 8;
   13618:	963e                	add	a2,a2,a5
   1361a:	0642                	slli	a2,a2,0x10
   1361c:	8241                	srli	a2,a2,0x10
   1361e:	00c49023          	sh	a2,0(s1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:64

    printf("该设备硬件地址为：0x%x,软件地址为：0x%d \r\n", *Hdaddr, *Staddr);
   13622:	400c                	lw	a1,0(s0)
   13624:	00003517          	auipc	a0,0x3
   13628:	ed450513          	addi	a0,a0,-300 # 164f8 <strlen+0x1f4>
   1362c:	00001097          	auipc	ra,0x1
   13630:	5a6080e7          	jalr	1446(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:66

    if(RFINFO[6] == 0x1 && RFINFO[7] == 0x0)
   13634:	00e14783          	lbu	a5,14(sp)
   13638:	4705                	li	a4,1
   1363a:	00e78d63          	beq	a5,a4,13654 <GetRFAddr+0x82>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:68
      printf("设备类型为：主机\r\n");
    else if(RFINFO[6] == 0x0 && RFINFO[7] == 0x1)
   1363e:	e791                	bnez	a5,1364a <GetRFAddr+0x78>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:68 (discriminator 1)
   13640:	00f14703          	lbu	a4,15(sp)
   13644:	4785                	li	a5,1
   13646:	02f70363          	beq	a4,a5,1366c <GetRFAddr+0x9a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:70
      printf("设备类型为：从机\r\n");
}
   1364a:	40f2                	lw	ra,28(sp)
   1364c:	4462                	lw	s0,24(sp)
   1364e:	44d2                	lw	s1,20(sp)
   13650:	6105                	addi	sp,sp,32
   13652:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:66 (discriminator 1)
    if(RFINFO[6] == 0x1 && RFINFO[7] == 0x0)
   13654:	00f14783          	lbu	a5,15(sp)
   13658:	fbed                	bnez	a5,1364a <GetRFAddr+0x78>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:67
      printf("设备类型为：主机\r\n");
   1365a:	00003517          	auipc	a0,0x3
   1365e:	eca50513          	addi	a0,a0,-310 # 16524 <strlen+0x220>
   13662:	00001097          	auipc	ra,0x1
   13666:	570080e7          	jalr	1392(ra) # 14bd2 <myprintf>
   1366a:	b7c5                	j	1364a <GetRFAddr+0x78>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:69
      printf("设备类型为：从机\r\n");
   1366c:	00003517          	auipc	a0,0x3
   13670:	ecc50513          	addi	a0,a0,-308 # 16538 <strlen+0x234>
   13674:	00001097          	auipc	ra,0x1
   13678:	55e080e7          	jalr	1374(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/rf.c:70
}
   1367c:	b7f9                	j	1364a <GetRFAddr+0x78>

0001367e <IRQ_OPC_CHANGE>:
IRQ_OPC_CHANGE():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:25
    static uint32_t opcode = 0;
    uint32_t bios_addr=0, user_addr=0;  //函数入口地址
    uint32_t user_opc=0;
    uint32_t imm1=0,imm2=0;
    uint32_t user_pc=0;
    if(IRQ_NUM == SysTick_IRQn)     //对SysTick_Handler中断进行重定向
   1367e:	47b1                	li	a5,12
   13680:	02f50563          	beq	a0,a5,136aa <IRQ_OPC_CHANGE+0x2c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:31
    {
        user_addr = (uint32_t)SysTick_Handler;
        bios_addr = (uint32_t)component_fun[28];
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
    }
    else if(IRQ_NUM == SWI_IRQn)    //对SysTick_Handler中断进行重定向
   13684:	47b9                	li	a5,14
   13686:	08f50763          	beq	a0,a5,13714 <IRQ_OPC_CHANGE+0x96>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:37
    {
        user_addr = (uint32_t)SW_Handler;
        bios_addr = (uint32_t)component_fun[29];
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
    }
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   1368a:	476d                	li	a4,27
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:44
        user_addr = (uint32_t)UART1_IRQHandler;
        bios_addr = (uint32_t)component_fun[30];
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
    }
    else                            //仅支持SysTick_Handler、SW_Handler、UART1_IRQHandler的重定向
       return 0;
   1368c:	4781                	li	a5,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:37
    else if(IRQ_NUM == UART1_IRQn)  //对SysTick_Handler中断进行重定向
   1368e:	08e51163          	bne	a0,a4,13710 <IRQ_OPC_CHANGE+0x92>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:39
        user_addr = (uint32_t)UART1_IRQHandler;
   13692:	fffff817          	auipc	a6,0xfffff
   13696:	a3a80813          	addi	a6,a6,-1478 # 120cc <UART1_IRQHandler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:40
        bios_addr = (uint32_t)component_fun[30];
   1369a:	1fff2797          	auipc	a5,0x1fff2
   1369e:	0ea78793          	addi	a5,a5,234 # 20005784 <component_fun>
   136a2:	439c                	lw	a5,0(a5)
   136a4:	5fb0                	lw	a2,120(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:41
        user_opc = ((uint32_t *)user)[UART1_IRQn+1];
   136a6:	59b8                	lw	a4,112(a1)
   136a8:	a821                	j	136c0 <IRQ_OPC_CHANGE+0x42>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:27
        user_addr = (uint32_t)SysTick_Handler;
   136aa:	fffff817          	auipc	a6,0xfffff
   136ae:	9f280813          	addi	a6,a6,-1550 # 1209c <SysTick_Handler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:28
        bios_addr = (uint32_t)component_fun[28];
   136b2:	1fff2797          	auipc	a5,0x1fff2
   136b6:	0d278793          	addi	a5,a5,210 # 20005784 <component_fun>
   136ba:	439c                	lw	a5,0(a5)
   136bc:	5bb0                	lw	a2,112(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:29
        user_opc = ((uint32_t *)user)[SysTick_IRQn+1];
   136be:	59d8                	lw	a4,52(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:50
    // printf("addr1:%lx\r\n", user_addr);
    // printf("addr2:%lx\r\n", bios_addr);
    // printf("opc:%lx\r\n", user_opc);

    //判断该指令是否为向前跳转，如果是向前跳转说明已经修改过了中断向量表，无需再次修改
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   136c0:	06074663          	bltz	a4,1372c <IRQ_OPC_CHANGE+0xae>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:52

    imm1 = ( ((user_opc&0x80000000)>>11) | ((user_opc&0x7FE00000)>>20) | ((user_opc&0x00100000)>>9) | ((user_opc&0x000FF000)) );
   136c4:	00975793          	srli	a5,a4,0x9
   136c8:	6685                	lui	a3,0x1
   136ca:	80068693          	addi	a3,a3,-2048 # 800 <GEC_USER_SECTOR_END+0x7db>
   136ce:	8ff5                	and	a5,a5,a3
   136d0:	000ff6b7          	lui	a3,0xff
   136d4:	00d775b3          	and	a1,a4,a3
   136d8:	8fcd                	or	a5,a5,a1
   136da:	8351                	srli	a4,a4,0x14
   136dc:	7fe77713          	andi	a4,a4,2046
   136e0:	8fd9                	or	a5,a5,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:58
    if(imm1>>20==1)         //向前跳转，补符号位
        imm1 = 0xFFE00000 | imm1;
    // printf("imm1:%lx\r\n", imm1);
    user_pc = user_addr - imm1;
    // printf("pc:%lx\r\n", user_pc);
    imm2 = bios_addr - user_pc;
   136e2:	41060633          	sub	a2,a2,a6
   136e6:	97b2                	add	a5,a5,a2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:60
    // printf("imm2:%lx\r\n", imm2);
    opcode = (((imm2&0x100000)<<11) | ((imm2&0x7FE)<<20) | ((imm2&0x800)<<9) | (imm2&0xFF000)) | (0x0) | (0x6f);
   136e8:	00b79513          	slli	a0,a5,0xb
   136ec:	80000737          	lui	a4,0x80000
   136f0:	8d79                	and	a0,a0,a4
   136f2:	00979713          	slli	a4,a5,0x9
   136f6:	00100637          	lui	a2,0x100
   136fa:	8f71                	and	a4,a4,a2
   136fc:	8d59                	or	a0,a0,a4
   136fe:	8efd                	and	a3,a3,a5
   13700:	8d55                	or	a0,a0,a3
   13702:	07d2                	slli	a5,a5,0x14
   13704:	7fe00737          	lui	a4,0x7fe00
   13708:	8ff9                	and	a5,a5,a4
   1370a:	8fc9                	or	a5,a5,a0
   1370c:	06f7e793          	ori	a5,a5,111
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:63
    // printf("opcode:%lx\r\n", opcode);
    return opcode;
}
   13710:	853e                	mv	a0,a5
   13712:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:33
        user_addr = (uint32_t)SW_Handler;
   13714:	fffff817          	auipc	a6,0xfffff
   13718:	98c80813          	addi	a6,a6,-1652 # 120a0 <SW_Handler>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:34
        bios_addr = (uint32_t)component_fun[29];
   1371c:	1fff2797          	auipc	a5,0x1fff2
   13720:	06878793          	addi	a5,a5,104 # 20005784 <component_fun>
   13724:	439c                	lw	a5,0(a5)
   13726:	5bf0                	lw	a2,116(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:35
        user_opc = ((uint32_t *)user)[SWI_IRQn+1];
   13728:	5dd8                	lw	a4,60(a1)
   1372a:	bf59                	j	136c0 <IRQ_OPC_CHANGE+0x42>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:50 (discriminator 1)
    if((user_opc&0x80000000)) return ((uint32_t *)user)[IRQ_NUM+1];         
   1372c:	0505                	addi	a0,a0,1
   1372e:	050a                	slli	a0,a0,0x2
   13730:	952e                	add	a0,a0,a1
   13732:	411c                	lw	a5,0(a0)
   13734:	bff1                	j	13710 <IRQ_OPC_CHANGE+0x92>

00013736 <Vectors_Init>:
Vectors_Init():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:72
//参数说明：无
//功能概要：User对BIOS中断向量表的部分继承,构件库函数指针初始化
//修改信息：WYH，20200805，规范
//======================================================================
void  Vectors_Init()
{
   13736:	716d                	addi	sp,sp,-272
   13738:	10112623          	sw	ra,268(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:82
    // {
    //     flash_write_physical((MCU_SECTOR_NUM-1)*MCU_SECTORSIZE+
    //     MCU_FLASH_ADDR_START,24,(uint8_t *)"0123456789ABCDEF20200716");
    // }
    //（1）给component_fun赋值，SYSTEM_FUNCTION函数用
    component_fun=(void **)(MCU_FLASH_ADDR_START+GEC_COMPONENT_LST_START*MCU_SECTORSIZE);
   1373c:	67c1                	lui	a5,0x10
   1373e:	1fff2717          	auipc	a4,0x1fff2
   13742:	04f72323          	sw	a5,70(a4) # 20005784 <component_fun>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:87
    
    uint8_t user[MCU_SECTORSIZE/16];                    //User向量表变量数组
    uint32_t opcode;
    //（2.1）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_read_logic(user,GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16);
   13746:	10000693          	li	a3,256
   1374a:	4601                	li	a2,0
   1374c:	45c9                	li	a1,18
   1374e:	850a                	mv	a0,sp
   13750:	00000097          	auipc	ra,0x0
   13754:	c02080e7          	jalr	-1022(ra) # 13352 <flash_read_logic>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:89
    // （2.2）读取User程序的中断向量表各中断处理程序首地址赋并给user数组
    flash_erase(GEC_USER_SECTOR_START);
   13758:	4549                	li	a0,18
   1375a:	00000097          	auipc	ra,0x0
   1375e:	baa080e7          	jalr	-1110(ra) # 13304 <flash_erase>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:92
    //重定向 UART1_IRQHandler
    // user[112]=(uint8_t)(0x6f); user[113]=(uint8_t)(0x40); user[114]=(uint8_t)(0xaf); user[115]=(uint8_t)(0x8a);
    opcode = IRQ_OPC_CHANGE(UART1_IRQn, user);
   13762:	858a                	mv	a1,sp
   13764:	456d                	li	a0,27
   13766:	00000097          	auipc	ra,0x0
   1376a:	f18080e7          	jalr	-232(ra) # 1367e <IRQ_OPC_CHANGE>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:93
    ((uint32_t *)user)[UART1_IRQn+1] = opcode;
   1376e:	d8aa                	sw	a0,112(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:97
    #if (RTThread_Start == 0)
        //重定向 SW_Handler
        // user[60]=(uint8_t)(0x6f); user[61]=(uint8_t)(0x40); user[62]=(uint8_t)(0x0f); user[63]=(uint8_t)(0xdb);
        opcode = IRQ_OPC_CHANGE(SWI_IRQn, user);
   13770:	858a                	mv	a1,sp
   13772:	4539                	li	a0,14
   13774:	00000097          	auipc	ra,0x0
   13778:	f0a080e7          	jalr	-246(ra) # 1367e <IRQ_OPC_CHANGE>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:98
        ((uint32_t *)user)[SWI_IRQn+1] = opcode;
   1377c:	de2a                	sw	a0,60(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:101
        //重定向 SysTickHandler
        // user[52]=(uint8_t)(0x6f); user[53]=(uint8_t)(0x40); user[54]=(uint8_t)(0x0f); user[55]=(uint8_t)(0x86);
        opcode = IRQ_OPC_CHANGE(SysTick_IRQn, user);
   1377e:	858a                	mv	a1,sp
   13780:	4531                	li	a0,12
   13782:	00000097          	auipc	ra,0x0
   13786:	efc080e7          	jalr	-260(ra) # 1367e <IRQ_OPC_CHANGE>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:102
        ((uint32_t *)user)[SysTick_IRQn+1] = opcode;
   1378a:	da2a                	sw	a0,52(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:105
    #endif
    //（2.3）将修改后的user数组写回User中断向量表
    flash_write(GEC_USER_SECTOR_START,0,MCU_SECTORSIZE/16,user);
   1378c:	868a                	mv	a3,sp
   1378e:	10000613          	li	a2,256
   13792:	4581                	li	a1,0
   13794:	4549                	li	a0,18
   13796:	00000097          	auipc	ra,0x0
   1379a:	be2080e7          	jalr	-1054(ra) # 13378 <flash_write>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:108

    //（4）printf提示
    printf("  【User提示】：将进入User的main函数执行...\r\n\n");
   1379e:	00003517          	auipc	a0,0x3
   137a2:	dae50513          	addi	a0,a0,-594 # 1654c <strlen+0x248>
   137a6:	00001097          	auipc	ra,0x1
   137aa:	42c080e7          	jalr	1068(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:111

    // #endif
}
   137ae:	10c12083          	lw	ra,268(sp)
   137b2:	6151                	addi	sp,sp,272
   137b4:	8082                	ret

000137b6 <SYS_ResetExecute>:
SYS_ResetExecute():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:114

void SYS_ResetExecute( void )
{
   137b6:	1141                	addi	sp,sp,-16
   137b8:	c606                	sw	ra,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:115
  FLASH_ROM_SW_RESET();
   137ba:	1fff2797          	auipc	a5,0x1fff2
   137be:	fca78793          	addi	a5,a5,-54 # 20005784 <component_fun>
   137c2:	439c                	lw	a5,0(a5)
   137c4:	57fc                	lw	a5,108(a5)
   137c6:	4681                	li	a3,0
   137c8:	4601                	li	a2,0
   137ca:	4581                	li	a1,0
   137cc:	4501                	li	a0,0
   137ce:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:116
  R8_SAFE_ACCESS_SIG = SAFE_ACCESS_SIG1;
   137d0:	400017b7          	lui	a5,0x40001
   137d4:	05700713          	li	a4,87
   137d8:	04e78023          	sb	a4,64(a5) # 40001040 <_eusrstack+0x1fff9040>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:117
  R8_SAFE_ACCESS_SIG = SAFE_ACCESS_SIG2;
   137dc:	fa800713          	li	a4,-88
   137e0:	04e78023          	sb	a4,64(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:118
  R8_RST_WDOG_CTRL |= RB_SOFTWARE_RESET;
   137e4:	0467c703          	lbu	a4,70(a5)
   137e8:	00176713          	ori	a4,a4,1
   137ec:	04e78323          	sb	a4,70(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:119
  R8_SAFE_ACCESS_SIG = 0;
   137f0:	04078023          	sb	zero,64(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/gec.c:120
   137f4:	40b2                	lw	ra,12(sp)
   137f6:	0141                	addi	sp,sp,16
   137f8:	8082                	ret

000137fa <uart_init>:
uart_init():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:31
void uart_init(uint8_t uartNo, uint32_t baud_rate)
{
    uint32_t x;

//    SetSysClock( CLK_SOURCE_PLL_60MHz );
    switch (uartNo)
   137fa:	4805                	li	a6,1
   137fc:	09050e63          	beq	a0,a6,13898 <uart_init+0x9e>
   13800:	01851813          	slli	a6,a0,0x18
   13804:	41885813          	srai	a6,a6,0x18
   13808:	00080963          	beqz	a6,1381a <uart_init+0x20>
   1380c:	4809                	li	a6,2
   1380e:	11050663          	beq	a0,a6,1391a <uart_init+0x120>
   13812:	480d                	li	a6,3
   13814:	19050863          	beq	a0,a6,139a4 <uart_init+0x1aa>
   13818:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:40
            //
            switch (UART0_GROUP)
            {
                case 0:

                   R32_PB_OUT |= ((uint32_t)(bTXD0));
   1381a:	400017b7          	lui	a5,0x40001
   1381e:	0c87a703          	lw	a4,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   13822:	08076713          	ori	a4,a4,128
   13826:	0ce7a423          	sw	a4,200(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:42
                   //PB4->RX
                   R32_PB_PD_DRV &= ~((uint32_t)(bRXD0));
   1382a:	0d47a703          	lw	a4,212(a5)
   1382e:	9b3d                	andi	a4,a4,-17
   13830:	0ce7aa23          	sw	a4,212(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:43
                   R32_PB_PU     |= ((uint32_t)(bRXD0));
   13834:	0d07a703          	lw	a4,208(a5)
   13838:	01076713          	ori	a4,a4,16
   1383c:	0ce7a823          	sw	a4,208(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:44
                   R32_PB_DIR    &= ~((uint32_t)(bRXD0));
   13840:	0c07a703          	lw	a4,192(a5)
   13844:	9b3d                	andi	a4,a4,-17
   13846:	0ce7a023          	sw	a4,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:46
                   //PB7->TX
                   R32_PB_PD_DRV &= ~((uint32_t)(bTXD0));
   1384a:	0d47a703          	lw	a4,212(a5)
   1384e:	f7f77713          	andi	a4,a4,-129
   13852:	0ce7aa23          	sw	a4,212(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:47
                   R32_PB_DIR    |= ((uint32_t)(bTXD0));
   13856:	0c07a703          	lw	a4,192(a5)
   1385a:	08076713          	ori	a4,a4,128
   1385e:	0ce7a023          	sw	a4,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:50

//                   R8_UART0_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;     // FIFO打开，触发点4字节
                   R8_UART0_LCR = RB_LCR_WORD_SZ;
   13862:	40003737          	lui	a4,0x40003
   13866:	478d                	li	a5,3
   13868:	00f701a3          	sb	a5,3(a4) # 40003003 <_eusrstack+0x1fffb003>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:51
                   R8_UART0_IER = RB_IER_TXD_EN;
   1386c:	04000793          	li	a5,64
   13870:	00f700a3          	sb	a5,1(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:52
                   R8_UART0_DIV = 1;
   13874:	4785                	li	a5,1
   13876:	00f70723          	sb	a5,14(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:55

                   //配置波特率115200
                   x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   1387a:	04787637          	lui	a2,0x4787
   1387e:	8c060613          	addi	a2,a2,-1856 # 47868c0 <_data_lma+0x4770000>
   13882:	02b657b3          	divu	a5,a2,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:56
                   x = (x + 5) / 10;
   13886:	0795                	addi	a5,a5,5
   13888:	4629                	li	a2,10
   1388a:	02c7d7b3          	divu	a5,a5,a2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:57
                   R16_UART0_DL = (uint16_t)x;
   1388e:	07c2                	slli	a5,a5,0x10
   13890:	83c1                	srli	a5,a5,0x10
   13892:	00f71623          	sh	a5,12(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:86
                  break;
                default:
                    break;
            }
#endif
            break;
   13896:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:93
#ifdef UART1_GROUP
            //
            switch (UART1_GROUP) {
                case 0:

                    R32_PA_OUT |= ((uint32_t)(bTXD1));
   13898:	400017b7          	lui	a5,0x40001
   1389c:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   138a0:	20076713          	ori	a4,a4,512
   138a4:	0ae7a423          	sw	a4,168(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:95
                    //PA8->RX
                    R32_PA_PD_DRV &= ~((uint32_t)(bRXD1));
   138a8:	0b47a703          	lw	a4,180(a5)
   138ac:	eff77713          	andi	a4,a4,-257
   138b0:	0ae7aa23          	sw	a4,180(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:96
                    R32_PA_PU     |= ((uint32_t)(bRXD1));
   138b4:	0b07a703          	lw	a4,176(a5)
   138b8:	10076713          	ori	a4,a4,256
   138bc:	0ae7a823          	sw	a4,176(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:97
                    R32_PA_DIR    &= ~((uint32_t)(bRXD1));
   138c0:	0a07a703          	lw	a4,160(a5)
   138c4:	eff77713          	andi	a4,a4,-257
   138c8:	0ae7a023          	sw	a4,160(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:100

                    //PA9->TX
                    R32_PA_PD_DRV &= ~((uint32_t)(bTXD1));
   138cc:	0b47a703          	lw	a4,180(a5)
   138d0:	dff77713          	andi	a4,a4,-513
   138d4:	0ae7aa23          	sw	a4,180(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:101
                    R32_PA_DIR    |= ((uint32_t)(bTXD1));
   138d8:	0a07a703          	lw	a4,160(a5)
   138dc:	20076713          	ori	a4,a4,512
   138e0:	0ae7a023          	sw	a4,160(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:104

//                    R8_UART1_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                    R8_UART1_LCR = RB_LCR_WORD_SZ;
   138e4:	40003737          	lui	a4,0x40003
   138e8:	478d                	li	a5,3
   138ea:	40f701a3          	sb	a5,1027(a4) # 40003403 <_eusrstack+0x1fffb403>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:105
                    R8_UART1_IER = RB_IER_TXD_EN;
   138ee:	04000793          	li	a5,64
   138f2:	40f700a3          	sb	a5,1025(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:106
                    R8_UART1_DIV = 1;
   138f6:	4785                	li	a5,1
   138f8:	40f70723          	sb	a5,1038(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:109

                    //配置波特率115200
                    x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   138fc:	047876b7          	lui	a3,0x4787
   13900:	8c068693          	addi	a3,a3,-1856 # 47868c0 <_data_lma+0x4770000>
   13904:	02b6d7b3          	divu	a5,a3,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:110
                    x = (x + 5) / 10;
   13908:	0795                	addi	a5,a5,5
   1390a:	46a9                	li	a3,10
   1390c:	02d7d7b3          	divu	a5,a5,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:111
                    R16_UART1_DL = (uint16_t)x;
   13910:	07c2                	slli	a5,a5,0x10
   13912:	83c1                	srli	a5,a5,0x10
   13914:	40f71623          	sh	a5,1036(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:140
                    break;
                default:
                    break;
            }
#endif
            break;
   13918:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:143
        case UART_2:

              R32_PB_OUT |= ((uint32_t)(bTXD2));
   1391a:	400017b7          	lui	a5,0x40001
   1391e:	0c87a683          	lw	a3,200(a5) # 400010c8 <_eusrstack+0x1fff90c8>
   13922:	00800537          	lui	a0,0x800
   13926:	8ec9                	or	a3,a3,a0
   13928:	0cd7a423          	sw	a3,200(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:145
              //PB22->RX
              R32_PB_PD_DRV &= ~((uint32_t)(bRXD2));
   1392c:	0d47a683          	lw	a3,212(a5)
   13930:	ffc00737          	lui	a4,0xffc00
   13934:	177d                	addi	a4,a4,-1
   13936:	8ef9                	and	a3,a3,a4
   13938:	0cd7aa23          	sw	a3,212(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:146
              R32_PB_PU     |= ((uint32_t)(bRXD2));
   1393c:	0d07a683          	lw	a3,208(a5)
   13940:	00400637          	lui	a2,0x400
   13944:	8ed1                	or	a3,a3,a2
   13946:	0cd7a823          	sw	a3,208(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:147
              R32_PB_DIR    &= ~((uint32_t)(bRXD2));
   1394a:	0c07a683          	lw	a3,192(a5)
   1394e:	8f75                	and	a4,a4,a3
   13950:	0ce7a023          	sw	a4,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:149
              //PB23->TX
              R32_PB_PD_DRV &= ~((uint32_t)(bTXD2));
   13954:	0d47a683          	lw	a3,212(a5)
   13958:	ff800637          	lui	a2,0xff800
   1395c:	167d                	addi	a2,a2,-1
   1395e:	8ef1                	and	a3,a3,a2
   13960:	0cd7aa23          	sw	a3,212(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:150
              R32_PB_DIR    |= ((uint32_t)(bTXD2));
   13964:	0c07a703          	lw	a4,192(a5)
   13968:	8f49                	or	a4,a4,a0
   1396a:	0ce7a023          	sw	a4,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:153

//              R8_UART2_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;      // FIFO打开，触发点4字节
              R8_UART2_LCR = RB_LCR_WORD_SZ;
   1396e:	400046b7          	lui	a3,0x40004
   13972:	478d                	li	a5,3
   13974:	80f681a3          	sb	a5,-2045(a3) # 40003803 <_eusrstack+0x1fffb803>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:154
              R8_UART2_IER = RB_IER_TXD_EN;
   13978:	04000793          	li	a5,64
   1397c:	80f680a3          	sb	a5,-2047(a3)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:155
              R8_UART2_DIV = 1;
   13980:	4785                	li	a5,1
   13982:	80f68723          	sb	a5,-2034(a3)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:158

              //配置波特率115200
              x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13986:	04787737          	lui	a4,0x4787
   1398a:	8c070713          	addi	a4,a4,-1856 # 47868c0 <_data_lma+0x4770000>
   1398e:	02b757b3          	divu	a5,a4,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:159
              x = (x + 5) / 10;
   13992:	0795                	addi	a5,a5,5
   13994:	4729                	li	a4,10
   13996:	02e7d7b3          	divu	a5,a5,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:160
              R16_UART2_DL = (uint16_t)x;
   1399a:	07c2                	slli	a5,a5,0x10
   1399c:	83c1                	srli	a5,a5,0x10
   1399e:	80f69623          	sh	a5,-2036(a3)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:161
              break;
   139a2:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:164
        case UART_3:

                R32_PA_OUT |= ((uint32_t)(bTXD3));
   139a4:	400017b7          	lui	a5,0x40001
   139a8:	0a87a703          	lw	a4,168(a5) # 400010a8 <_eusrstack+0x1fff90a8>
   139ac:	02076713          	ori	a4,a4,32
   139b0:	0ae7a423          	sw	a4,168(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:166
                //PA4->RX
                R32_PA_PD_DRV &= ~((uint32_t)(bRXD3));
   139b4:	0b47a703          	lw	a4,180(a5)
   139b8:	9b3d                	andi	a4,a4,-17
   139ba:	0ae7aa23          	sw	a4,180(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:167
                R32_PA_PU     |= ((uint32_t)(bRXD3));
   139be:	0b07a703          	lw	a4,176(a5)
   139c2:	01076713          	ori	a4,a4,16
   139c6:	0ae7a823          	sw	a4,176(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:168
                R32_PA_DIR    &= ~((uint32_t)(bRXD3));
   139ca:	0a07a703          	lw	a4,160(a5)
   139ce:	9b3d                	andi	a4,a4,-17
   139d0:	0ae7a023          	sw	a4,160(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:170
                //PA5->TX
                R32_PA_PD_DRV &= ~((uint32_t)(bTXD3));
   139d4:	0b47a703          	lw	a4,180(a5)
   139d8:	fdf77713          	andi	a4,a4,-33
   139dc:	0ae7aa23          	sw	a4,180(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:171
                R32_PA_DIR    |= ((uint32_t)(bTXD3));
   139e0:	0a07a703          	lw	a4,160(a5)
   139e4:	02076713          	ori	a4,a4,32
   139e8:	0ae7a023          	sw	a4,160(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:174

//                R8_UART3_FCR = (2<<6) | RB_FCR_TX_FIFO_CLR | RB_FCR_RX_FIFO_CLR | RB_FCR_FIFO_EN;       // FIFO打开，触发点4字节
                R8_UART3_LCR = RB_LCR_WORD_SZ;
   139ec:	40004737          	lui	a4,0x40004
   139f0:	478d                	li	a5,3
   139f2:	c0f701a3          	sb	a5,-1021(a4) # 40003c03 <_eusrstack+0x1fffbc03>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:175
                R8_UART3_IER = RB_IER_TXD_EN;
   139f6:	04000793          	li	a5,64
   139fa:	c0f700a3          	sb	a5,-1023(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:176
                R8_UART3_DIV = 1;
   139fe:	4785                	li	a5,1
   13a00:	c0f70723          	sb	a5,-1010(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:179

               //配置波特率115200
                x = 10 * (480000000/(0x08)) / 8 / baud_rate;
   13a04:	047877b7          	lui	a5,0x4787
   13a08:	8c078793          	addi	a5,a5,-1856 # 47868c0 <_data_lma+0x4770000>
   13a0c:	02b7d7b3          	divu	a5,a5,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:180
                x = (x + 5) / 10;
   13a10:	0795                	addi	a5,a5,5
   13a12:	46a9                	li	a3,10
   13a14:	02d7d7b3          	divu	a5,a5,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:181
                R16_UART3_DL = (uint16_t)x;
   13a18:	07c2                	slli	a5,a5,0x10
   13a1a:	83c1                	srli	a5,a5,0x10
   13a1c:	c0f71623          	sh	a5,-1012(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:187
                break;
        default:
            break;
    }

}
   13a20:	8082                	ret

00013a22 <uart_send1>:
uart_send1():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:201
uint8_t uart_send1(uint8_t uartNo,uint8_t ch)
{
  uint32_t t;

    //判断传入串口号参数是否有误，有误直接退出
    if(uart_is_uartNo(uartNo)==0)
   13a22:	470d                	li	a4,3
   13a24:	10a76463          	bltu	a4,a0,13b2c <uart_send1+0x10a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:206
    {
        return 0;
    }
    //判断UARTx号
    switch (uartNo)
   13a28:	4705                	li	a4,1
   13a2a:	06e50863          	beq	a0,a4,13a9a <uart_send1+0x78>
   13a2e:	01851713          	slli	a4,a0,0x18
   13a32:	8761                	srai	a4,a4,0x18
   13a34:	cb49                	beqz	a4,13ac6 <uart_send1+0xa4>
   13a36:	4709                	li	a4,2
   13a38:	02e50b63          	beq	a0,a4,13a6e <uart_send1+0x4c>
   13a3c:	470d                	li	a4,3
   13a3e:	0ae51f63          	bne	a0,a4,13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:238
          }
            break;
        case 3:
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
          {
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13a42:	400047b7          	lui	a5,0x40004
   13a46:	c057c783          	lbu	a5,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
   13a4a:	0207f793          	andi	a5,a5,32
   13a4e:	ebe9                	bnez	a5,13b20 <uart_send1+0xfe>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a50:	4785                	li	a5,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13a52:	40004637          	lui	a2,0x40004
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a56:	66c1                	lui	a3,0x10
   13a58:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:238
            if(R8_UART3_LSR &RB_LSR_TX_FIFO_EMP){
   13a5c:	c0564703          	lbu	a4,-1019(a2) # 40003c05 <_eusrstack+0x1fffbc05>
   13a60:	02077713          	andi	a4,a4,32
   13a64:	ef5d                	bnez	a4,13b22 <uart_send1+0x100>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:236 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a66:	0785                	addi	a5,a5,1
   13a68:	fed79ae3          	bne	a5,a3,13a5c <uart_send1+0x3a>
   13a6c:	a841                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13a6e:	400047b7          	lui	a5,0x40004
   13a72:	8057c783          	lbu	a5,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
   13a76:	0207f793          	andi	a5,a5,32
   13a7a:	efc9                	bnez	a5,13b14 <uart_send1+0xf2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a7c:	4785                	li	a5,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13a7e:	40004637          	lui	a2,0x40004
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a82:	66c1                	lui	a3,0x10
   13a84:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:229
            if(R8_UART2_LSR &RB_LSR_TX_FIFO_EMP){
   13a88:	80564703          	lbu	a4,-2043(a2) # 40003805 <_eusrstack+0x1fffb805>
   13a8c:	02077713          	andi	a4,a4,32
   13a90:	e359                	bnez	a4,13b16 <uart_send1+0xf4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:227 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13a92:	0785                	addi	a5,a5,1
   13a94:	fed79ae3          	bne	a5,a3,13a88 <uart_send1+0x66>
   13a98:	a095                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13a9a:	400037b7          	lui	a5,0x40003
   13a9e:	4057c783          	lbu	a5,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
   13aa2:	0207f793          	andi	a5,a5,32
   13aa6:	e3ad                	bnez	a5,13b08 <uart_send1+0xe6>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13aa8:	4785                	li	a5,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13aaa:	40003637          	lui	a2,0x40003
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13aae:	66c1                	lui	a3,0x10
   13ab0:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:220
            if(R8_UART1_LSR &RB_LSR_TX_FIFO_EMP){
   13ab4:	40564703          	lbu	a4,1029(a2) # 40003405 <_eusrstack+0x1fffb405>
   13ab8:	02077713          	andi	a4,a4,32
   13abc:	e739                	bnez	a4,13b0a <uart_send1+0xe8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:218 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13abe:	0785                	addi	a5,a5,1
   13ac0:	fed79ae3          	bne	a5,a3,13ab4 <uart_send1+0x92>
   13ac4:	a825                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13ac6:	400037b7          	lui	a5,0x40003
   13aca:	0057c783          	lbu	a5,5(a5) # 40003005 <_eusrstack+0x1fffb005>
   13ace:	0207f793          	andi	a5,a5,32
   13ad2:	e385                	bnez	a5,13af2 <uart_send1+0xd0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13ad4:	4785                	li	a5,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13ad6:	40003637          	lui	a2,0x40003
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:209
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13ada:	66c1                	lui	a3,0x10
   13adc:	bbb68693          	addi	a3,a3,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:211
            if(R8_UART0_LSR &RB_LSR_TX_FIFO_EMP){
   13ae0:	00564703          	lbu	a4,5(a2) # 40003005 <_eusrstack+0x1fffb005>
   13ae4:	02077713          	andi	a4,a4,32
   13ae8:	e711                	bnez	a4,13af4 <uart_send1+0xd2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:209 (discriminator 2)
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13aea:	0785                	addi	a5,a5,1
   13aec:	fed79ae3          	bne	a5,a3,13ae0 <uart_send1+0xbe>
   13af0:	a031                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:209
   13af2:	4781                	li	a5,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:212
              R8_UART0_THR = ch;
   13af4:	40003737          	lui	a4,0x40003
   13af8:	00b70423          	sb	a1,8(a4) # 40003008 <_eusrstack+0x1fffb008>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:203
        return 0;
   13afc:	6541                	lui	a0,0x10
   13afe:	bbb50513          	addi	a0,a0,-1093 # fbbb <MCU_SECTORSIZE+0xebbb>
   13b02:	00a7b533          	sltu	a0,a5,a0
   13b06:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:218
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13b08:	4781                	li	a5,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:221
              R8_UART1_THR = ch;
   13b0a:	40003737          	lui	a4,0x40003
   13b0e:	40b70423          	sb	a1,1032(a4) # 40003408 <_eusrstack+0x1fffb408>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:222
              break;
   13b12:	b7ed                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:227
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13b14:	4781                	li	a5,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:230
              R8_UART2_THR = ch;
   13b16:	40004737          	lui	a4,0x40004
   13b1a:	80b70423          	sb	a1,-2040(a4) # 40003808 <_eusrstack+0x1fffb808>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:231
              break;
   13b1e:	bff9                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:236
          for (t = 0; t < 0xFBBB; t++)//查询指定次数
   13b20:	4781                	li	a5,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:239
              R8_UART3_THR = ch;
   13b22:	40004737          	lui	a4,0x40004
   13b26:	c0b70423          	sb	a1,-1016(a4) # 40003c08 <_eusrstack+0x1fffbc08>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:240
              break;
   13b2a:	bfc9                	j	13afc <uart_send1+0xda>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:203
        return 0;
   13b2c:	4501                	li	a0,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:252

    if (t >= 0xFBBB)
        return 0; //发送超时，发送失败
    else
        return 1; //成功发送
}
   13b2e:	8082                	ret

00013b30 <uart_re1>:
uart_re1():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:428
//======================================================================
uint8_t uart_re1(uint8_t uartNo,uint8_t *fp)
{
    uint8_t dat;
    uint8_t flag;
    switch (uartNo)
   13b30:	4705                	li	a4,1
   13b32:	02e50a63          	beq	a0,a4,13b66 <uart_re1+0x36>
   13b36:	01851713          	slli	a4,a0,0x18
   13b3a:	8761                	srai	a4,a4,0x18
   13b3c:	cb09                	beqz	a4,13b4e <uart_re1+0x1e>
   13b3e:	4709                	li	a4,2
   13b40:	02e50f63          	beq	a0,a4,13b7e <uart_re1+0x4e>
   13b44:	470d                	li	a4,3
   13b46:	04e50863          	beq	a0,a4,13b96 <uart_re1+0x66>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:454
            break;
        default:
            break;
    }
    return (dat);
}
   13b4a:	853e                	mv	a0,a5
   13b4c:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:431
            *fp =1;
   13b4e:	4785                	li	a5,1
   13b50:	00f58023          	sb	a5,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:432
            flag = R8_UART0_LSR;
   13b54:	400037b7          	lui	a5,0x40003
   13b58:	0057c703          	lbu	a4,5(a5) # 40003005 <_eusrstack+0x1fffb005>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:433
            return R8_UART0_RBR;
   13b5c:	0087c783          	lbu	a5,8(a5)
   13b60:	0ff7f793          	andi	a5,a5,255
   13b64:	b7dd                	j	13b4a <uart_re1+0x1a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:436
            *fp =1;
   13b66:	4785                	li	a5,1
   13b68:	00f58023          	sb	a5,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:437
            flag = R8_UART1_LSR;
   13b6c:	400037b7          	lui	a5,0x40003
   13b70:	4057c703          	lbu	a4,1029(a5) # 40003405 <_eusrstack+0x1fffb405>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:438
            dat = R8_UART1_RBR;
   13b74:	4087c783          	lbu	a5,1032(a5)
   13b78:	0ff7f793          	andi	a5,a5,255
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:439
            break;
   13b7c:	b7f9                	j	13b4a <uart_re1+0x1a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:441
            *fp =1;
   13b7e:	4785                	li	a5,1
   13b80:	00f58023          	sb	a5,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:442
            flag = R8_UART2_LSR;
   13b84:	400047b7          	lui	a5,0x40004
   13b88:	8057c703          	lbu	a4,-2043(a5) # 40003805 <_eusrstack+0x1fffb805>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:443
            dat = R8_UART2_RBR;
   13b8c:	8087c783          	lbu	a5,-2040(a5)
   13b90:	0ff7f793          	andi	a5,a5,255
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:444
            break;
   13b94:	bf5d                	j	13b4a <uart_re1+0x1a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:446
            *fp =1;
   13b96:	4785                	li	a5,1
   13b98:	00f58023          	sb	a5,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:447
            flag = R8_UART3_LSR;
   13b9c:	400047b7          	lui	a5,0x40004
   13ba0:	c057c703          	lbu	a4,-1019(a5) # 40003c05 <_eusrstack+0x1fffbc05>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:448
            dat = R8_UART3_RBR;
   13ba4:	c087c783          	lbu	a5,-1016(a5)
   13ba8:	0ff7f793          	andi	a5,a5,255
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:449
            break;
   13bac:	bf79                	j	13b4a <uart_re1+0x1a>

00013bae <uart_enable_re_int>:
uart_enable_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:497
//功能概要：开串口接收中断
//======================================================================
void uart_enable_re_int(uint8_t uartNo)
{
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
   13bae:	478d                	li	a5,3
   13bb0:	0ca7e163          	bltu	a5,a0,13c72 <uart_enable_re_int+0xc4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:502
    {
        return;
    }

    switch (uartNo)
   13bb4:	4785                	li	a5,1
   13bb6:	04f50263          	beq	a0,a5,13bfa <uart_enable_re_int+0x4c>
   13bba:	01851793          	slli	a5,a0,0x18
   13bbe:	87e1                	srai	a5,a5,0x18
   13bc0:	cb81                	beqz	a5,13bd0 <uart_enable_re_int+0x22>
   13bc2:	4789                	li	a5,2
   13bc4:	06f50063          	beq	a0,a5,13c24 <uart_enable_re_int+0x76>
   13bc8:	478d                	li	a5,3
   13bca:	08f50163          	beq	a0,a5,13c4c <uart_enable_re_int+0x9e>
   13bce:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:507
    {
        case 0:
//            R8_UART0_FCR = (R8_UART0_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);
//            R8_UART0_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART0_IER |= RB_IER_RECV_RDY;
   13bd0:	400037b7          	lui	a5,0x40003
   13bd4:	0017c703          	lbu	a4,1(a5) # 40003001 <_eusrstack+0x1fffb001>
   13bd8:	00176713          	ori	a4,a4,1
   13bdc:	00e780a3          	sb	a4,1(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:508
            R8_UART0_MCR |= RB_MCR_INT_OE;
   13be0:	0007c703          	lbu	a4,0(a5)
   13be4:	00876713          	ori	a4,a4,8
   13be8:	00e78023          	sb	a4,0(a5)
PFIC_EnableIRQ():
c:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\02_CPU/core_riscv.h:87
* Description    : Enable Interrupt
* Input          : IRQn: Interrupt Numbers
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void PFIC_EnableIRQ(IRQn_Type IRQn){
    PFIC->IENR[((UINT32)(IRQn) >> 5)] = (1 << ((UINT32)(IRQn) & 0x1F));
   13bec:	e000e7b7          	lui	a5,0xe000e
   13bf0:	04000737          	lui	a4,0x4000
   13bf4:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   13bf8:	8082                	ret
uart_enable_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:515
            break;
        case 1:
//            R8_UART1_FCR = (R8_UART1_FCR&~RB_FCR_FIFO_TRIG)|(3<<6);

//            R8_UART1_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART1_IER |= RB_IER_RECV_RDY;
   13bfa:	400037b7          	lui	a5,0x40003
   13bfe:	4017c703          	lbu	a4,1025(a5) # 40003401 <_eusrstack+0x1fffb401>
   13c02:	00176713          	ori	a4,a4,1
   13c06:	40e780a3          	sb	a4,1025(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:516
            R8_UART1_MCR |= RB_MCR_INT_OE;
   13c0a:	4007c703          	lbu	a4,1024(a5)
   13c0e:	00876713          	ori	a4,a4,8
   13c12:	40e78023          	sb	a4,1024(a5)
PFIC_EnableIRQ():
c:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\02_CPU/core_riscv.h:87
   13c16:	e000e7b7          	lui	a5,0xe000e
   13c1a:	08000737          	lui	a4,0x8000
   13c1e:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0006100>
   13c22:	8082                	ret
uart_enable_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:521
            PFIC_EnableIRQ( UART1_IRQn );
            break;
        case 2:
//            R8_UART2_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART2_IER |= RB_IER_RECV_RDY;
   13c24:	400047b7          	lui	a5,0x40004
   13c28:	8017c703          	lbu	a4,-2047(a5) # 40003801 <_eusrstack+0x1fffb801>
   13c2c:	00176713          	ori	a4,a4,1
   13c30:	80e780a3          	sb	a4,-2047(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:522
            R8_UART2_MCR |= RB_MCR_INT_OE;
   13c34:	8007c703          	lbu	a4,-2048(a5)
   13c38:	00876713          	ori	a4,a4,8
   13c3c:	80e78023          	sb	a4,-2048(a5)
PFIC_EnableIRQ():
c:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\02_CPU/core_riscv.h:87
   13c40:	e000e7b7          	lui	a5,0xe000e
   13c44:	4709                	li	a4,2
   13c46:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
   13c4a:	8082                	ret
uart_enable_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:527
            PFIC_EnableIRQ( UART2_IRQn );
            break;
        case 3:
//            R8_UART3_IER |= (RB_IER_RECV_RDY|RB_IER_LINE_STAT);
            R8_UART3_IER |= RB_IER_RECV_RDY;
   13c4c:	400047b7          	lui	a5,0x40004
   13c50:	c017c703          	lbu	a4,-1023(a5) # 40003c01 <_eusrstack+0x1fffbc01>
   13c54:	00176713          	ori	a4,a4,1
   13c58:	c0e780a3          	sb	a4,-1023(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:528
            R8_UART3_MCR |= RB_MCR_INT_OE;
   13c5c:	c007c703          	lbu	a4,-1024(a5)
   13c60:	00876713          	ori	a4,a4,8
   13c64:	c0e78023          	sb	a4,-1024(a5)
PFIC_EnableIRQ():
c:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\02_CPU/core_riscv.h:87
   13c68:	e000e7b7          	lui	a5,0xe000e
   13c6c:	4711                	li	a4,4
   13c6e:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0006104>
uart_enable_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:536

        default:
            break;
    }

}
   13c72:	8082                	ret

00013c74 <uart_get_re_int>:
uart_get_re_int():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:589
uint8_t uart_get_re_int(uint8_t uartNo)
{
    uint8_t event;
    uint8_t flag;
    //判断传入串口号参数是否有误，有误直接退出
    if(!uart_is_uartNo(uartNo))
   13c74:	478d                	li	a5,3
   13c76:	10a7e763          	bltu	a5,a0,13d84 <uart_get_re_int+0x110>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:594
    {
        return 0;
    }
    //获取当前接收中断标志，
    switch (uartNo)
   13c7a:	4785                	li	a5,1
   13c7c:	06f50c63          	beq	a0,a5,13cf4 <uart_get_re_int+0x80>
   13c80:	01851793          	slli	a5,a0,0x18
   13c84:	87e1                	srai	a5,a5,0x18
   13c86:	cb8d                	beqz	a5,13cb8 <uart_get_re_int+0x44>
   13c88:	4789                	li	a5,2
   13c8a:	0af50363          	beq	a0,a5,13d30 <uart_get_re_int+0xbc>
   13c8e:	478d                	li	a5,3
   13c90:	0ef51b63          	bne	a0,a5,13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:676
           default:
               break;
          }
            break;
       case 3:
          event = R8_UART3_IIR&RB_IIR_INT_MASK;
   13c94:	400047b7          	lui	a5,0x40004
   13c98:	c047c783          	lbu	a5,-1020(a5) # 40003c04 <_eusrstack+0x1fffbc04>
   13c9c:	8bbd                	andi	a5,a5,15
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:677
          switch (event)
   13c9e:	46b1                	li	a3,12
   13ca0:	0ef6e363          	bltu	a3,a5,13d86 <uart_get_re_int+0x112>
   13ca4:	00279613          	slli	a2,a5,0x2
   13ca8:	00003597          	auipc	a1,0x3
   13cac:	8d458593          	addi	a1,a1,-1836 # 1657c <strlen+0x278>
   13cb0:	962e                	add	a2,a2,a1
   13cb2:	4214                	lw	a3,0(a2)
   13cb4:	96ae                	add	a3,a3,a1
   13cb6:	8682                	jr	a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:597
            event = R8_UART0_IIR&RB_IIR_INT_MASK;
   13cb8:	400037b7          	lui	a5,0x40003
   13cbc:	0047c783          	lbu	a5,4(a5) # 40003004 <_eusrstack+0x1fffb004>
   13cc0:	8bbd                	andi	a5,a5,15
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:598
           switch (event)
   13cc2:	46b1                	li	a3,12
   13cc4:	0cf6e163          	bltu	a3,a5,13d86 <uart_get_re_int+0x112>
   13cc8:	00279613          	slli	a2,a5,0x2
   13ccc:	00003597          	auipc	a1,0x3
   13cd0:	8e458593          	addi	a1,a1,-1820 # 165b0 <strlen+0x2ac>
   13cd4:	962e                	add	a2,a2,a1
   13cd6:	4214                	lw	a3,0(a2)
   13cd8:	96ae                	add	a3,a3,a1
   13cda:	8682                	jr	a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:601
                flag = 6;
   13cdc:	873e                	mv	a4,a5
   13cde:	a065                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:604
                flag = 4;
   13ce0:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:605
                break;
   13ce2:	a055                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:607
                flag = 12;
   13ce4:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:608
                break;
   13ce6:	a045                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:610
                flag = 2;
   13ce8:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:611
                break;
   13cea:	a871                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:613
                flag = 0;
   13cec:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:614
                break;
   13cee:	a861                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:616
                flag = 1;
   13cf0:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:617
                break;
   13cf2:	a851                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:623
            event = R8_UART1_IIR&RB_IIR_INT_MASK;
   13cf4:	400037b7          	lui	a5,0x40003
   13cf8:	4047c783          	lbu	a5,1028(a5) # 40003404 <_eusrstack+0x1fffb404>
   13cfc:	8bbd                	andi	a5,a5,15
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:624
           switch (event)
   13cfe:	46b1                	li	a3,12
   13d00:	08f6e363          	bltu	a3,a5,13d86 <uart_get_re_int+0x112>
   13d04:	00279613          	slli	a2,a5,0x2
   13d08:	00003597          	auipc	a1,0x3
   13d0c:	8dc58593          	addi	a1,a1,-1828 # 165e4 <strlen+0x2e0>
   13d10:	962e                	add	a2,a2,a1
   13d12:	4214                	lw	a3,0(a2)
   13d14:	96ae                	add	a3,a3,a1
   13d16:	8682                	jr	a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:627
                flag = 6;
   13d18:	873e                	mv	a4,a5
   13d1a:	a0b5                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:630
                flag = 4;
   13d1c:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:631
                break;
   13d1e:	a0a5                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:633
                flag = 12;
   13d20:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:634
                break;
   13d22:	a095                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:636
                flag = 2;
   13d24:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:637
                break;
   13d26:	a085                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:639
                flag = 0;
   13d28:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:640
                break;
   13d2a:	a8b1                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:642
                flag = 1;
   13d2c:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:643
                break;
   13d2e:	a8a1                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:650
           event = R8_UART2_IIR&RB_IIR_INT_MASK;
   13d30:	400047b7          	lui	a5,0x40004
   13d34:	8047c783          	lbu	a5,-2044(a5) # 40003804 <_eusrstack+0x1fffb804>
   13d38:	8bbd                	andi	a5,a5,15
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:651
           switch (event)
   13d3a:	46b1                	li	a3,12
   13d3c:	04f6e563          	bltu	a3,a5,13d86 <uart_get_re_int+0x112>
   13d40:	00279613          	slli	a2,a5,0x2
   13d44:	00003597          	auipc	a1,0x3
   13d48:	8d458593          	addi	a1,a1,-1836 # 16618 <strlen+0x314>
   13d4c:	962e                	add	a2,a2,a1
   13d4e:	4214                	lw	a3,0(a2)
   13d50:	96ae                	add	a3,a3,a1
   13d52:	8682                	jr	a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:654
                flag = 6;
   13d54:	873e                	mv	a4,a5
   13d56:	a805                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:657
                flag = 4;
   13d58:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:658
                break;
   13d5a:	a035                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:660
                flag = 12;
   13d5c:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:661
                break;
   13d5e:	a025                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:663
                flag = 2;
   13d60:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:664
                break;
   13d62:	a015                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:666
                flag = 0;
   13d64:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:667
                break;
   13d66:	a005                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:669
                flag = 1;
   13d68:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:670
                break;
   13d6a:	a831                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:680
          {
           case UART_II_LINE_STAT:
               flag = 6;
   13d6c:	873e                	mv	a4,a5
   13d6e:	a821                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:683
               break;
           case UART_II_RECV_RDY:
               flag = 4;
   13d70:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:684
               break;
   13d72:	a811                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:686
           case UART_II_RECV_TOUT:
               flag = 12;
   13d74:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:687
               break;
   13d76:	a801                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:689
           case UART_II_THR_EMPTY:
               flag = 2;
   13d78:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:690
               break;
   13d7a:	a031                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:692
           case UART_II_MODEM_CHG:
               flag = 0;
   13d7c:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:693
               break;
   13d7e:	a021                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:695
           case UART_II_NO_INTER:
               flag = 1;
   13d80:	873e                	mv	a4,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:696
               break;
   13d82:	a011                	j	13d86 <uart_get_re_int+0x112>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:591
        return 0;
   13d84:	4701                	li	a4,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/uart.c:705
           break;
    default:
        break;
    }
    return flag;
}
   13d86:	853a                	mv	a0,a4
   13d88:	8082                	ret

00013d8a <UART0_IRQHandler>:
UART0_IRQHandler():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:19
// 触发条件：UART_User串口收到一个字节触发
// 备   注：进入本程序后，可使用uart_get_re_int函数可再进行中断标志判断
//          （1-有UART接收中断，0-没有UART接收中断）
//======================================================================
void UART_User_Handler(void)
{
   13d8a:	1101                	addi	sp,sp,-32
   13d8c:	ce22                	sw	s0,28(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:21
    //【1】关中断
    DISABLE_INTERRUPTS;
   13d8e:	42a1                	li	t0,8
   13d90:	3002b073          	csrc	mstatus,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:27

    //【2】声明临时变量
    uint8_t flag,ch;

    //【3】判断是否为本中断触发
    if (!uart_get_re_int(UART_User)) goto UART_User_Handler_exit;
   13d94:	4501                	li	a0,0
   13d96:	00000097          	auipc	ra,0x0
   13d9a:	ede080e7          	jalr	-290(ra) # 13c74 <uart_get_re_int>
   13d9e:	e901                	bnez	a0,13dae <UART0_IRQHandler+0x24>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:46
		__asm("csrc mstatus, t0");
	}
	
    // 【6】开中断
UART_User_Handler_exit:
    ENABLE_INTERRUPTS;
   13da0:	42a1                	li	t0,8
   13da2:	3002a073          	csrs	mstatus,t0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:47
}
   13da6:	4472                	lw	s0,28(sp)
   13da8:	6105                	addi	sp,sp,32
   13daa:	30200073          	mret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:30
    ch=uart_re1(UART_User,&flag);   //调用接收一个字节的函数，清接收中断位
   13dae:	00f10593          	addi	a1,sp,15
   13db2:	4501                	li	a0,0
   13db4:	00000097          	auipc	ra,0x0
   13db8:	d7c080e7          	jalr	-644(ra) # 13b30 <uart_re1>
   13dbc:	842a                	mv	s0,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:33
    if (flag)                       //有数据
   13dbe:	00f14783          	lbu	a5,15(sp)
   13dc2:	eb89                	bnez	a5,13dd4 <UART0_IRQHandler+0x4a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:38
	if(ch == 'A')
   13dc4:	04100793          	li	a5,65
   13dc8:	fcf41ce3          	bne	s0,a5,13da0 <UART0_IRQHandler+0x16>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:40
		__asm("li t0, 0x8");
   13dcc:	42a1                	li	t0,8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:41
		__asm("csrc mstatus, t0");
   13dce:	3002b073          	csrc	mstatus,t0
   13dd2:	b7f9                	j	13da0 <UART0_IRQHandler+0x16>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:35
        uart_send1(UART_User,ch);   //回发接收到的字节
   13dd4:	85aa                	mv	a1,a0
   13dd6:	4501                	li	a0,0
   13dd8:	00000097          	auipc	ra,0x0
   13ddc:	c4a080e7          	jalr	-950(ra) # 13a22 <uart_send1>
   13de0:	b7d5                	j	13dc4 <UART0_IRQHandler+0x3a>

00013de2 <RF_ProcessEvent>:
RF_ProcessEvent():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:140
//参数说明：task_id：任务ID
//          events：事件标志
//函数返回：未完成事件
//=========================================================================
uint16_t RF_ProcessEvent(uint8_t task_id, uint16_t events)
{
   13de2:	1141                	addi	sp,sp,-16
   13de4:	c606                	sw	ra,12(sp)
   13de6:	c422                	sw	s0,8(sp)
   13de8:	c226                	sw	s1,4(sp)
   13dea:	842e                	mv	s0,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:141
    if(events & SYS_EVENT_MSG)
   13dec:	01059793          	slli	a5,a1,0x10
   13df0:	87c1                	srai	a5,a5,0x10
   13df2:	0407cf63          	bltz	a5,13e50 <RF_ProcessEvent+0x6e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:153
            tmos_msg_deallocate(pMsg);
        }
        // return unprocessed events
        return (events ^ SYS_EVENT_MSG);
    }
    if(events & SBP_RF_START_DEVICE_EVT)
   13df6:	0015f793          	andi	a5,a1,1
   13dfa:	e3d9                	bnez	a5,13e80 <RF_ProcessEvent+0x9e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:158
    {
        tmos_start_task(rftaskID, SBP_RF_PERIODIC_EVT, 1000);
        return events ^ SBP_RF_START_DEVICE_EVT;
    }
    if(events & SBP_RF_PERIODIC_EVT)
   13dfc:	0025f793          	andi	a5,a1,2
   13e00:	e3d5                	bnez	a5,13ea4 <RF_ProcessEvent+0xc2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:163
    {
        tmos_start_task( rftaskID , SBP_RF_PERIODIC_EVT ,1000 );
        return events^SBP_RF_START_DEVICE_EVT;
    }
    if(events & SBP_RF_RF_RX_EVT)
   13e02:	0045f793          	andi	a5,a1,4
   13e06:	e3e9                	bnez	a5,13ec8 <RF_ProcessEvent+0xe6>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:170
        uint8 state;
        RF_Shut();
        state = RF_Rx( data,10, 0xFF, 0xFF );
        return events^SBP_RF_RF_RX_EVT;
    }
    if( events & RF_TX_TEST_EVENT )      //发送一帧数据
   13e08:	0085f793          	andi	a5,a1,8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:181
        {
            RF_Tx( (uint8_t *)&rfsend, len, 0xff, 0xff );
        }
        return (events^RF_TX_TEST_EVENT);
    }
    return 0;
   13e0c:	4501                	li	a0,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:170
    if( events & RF_TX_TEST_EVENT )      //发送一帧数据
   13e0e:	c7a5                	beqz	a5,13e76 <RF_ProcessEvent+0x94>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:173
        RF_Shut();
   13e10:	1fff2797          	auipc	a5,0x1fff2
   13e14:	97478793          	addi	a5,a5,-1676 # 20005784 <component_fun>
   13e18:	439c                	lw	a5,0(a5)
   13e1a:	0a47a783          	lw	a5,164(a5)
   13e1e:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:174
        len = rflength;
   13e20:	1fff2597          	auipc	a1,0x1fff2
   13e24:	95b5c583          	lbu	a1,-1701(a1) # 2000577b <rflength>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:175
        if(len)
   13e28:	c18d                	beqz	a1,13e4a <RF_ProcessEvent+0x68>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:177
            RF_Tx( (uint8_t *)&rfsend, len, 0xff, 0xff );
   13e2a:	1fff2797          	auipc	a5,0x1fff2
   13e2e:	95a78793          	addi	a5,a5,-1702 # 20005784 <component_fun>
   13e32:	439c                	lw	a5,0(a5)
   13e34:	0a07a783          	lw	a5,160(a5)
   13e38:	0ff00693          	li	a3,255
   13e3c:	0ff00613          	li	a2,255
   13e40:	1fff2517          	auipc	a0,0x1fff2
   13e44:	84050513          	addi	a0,a0,-1984 # 20005680 <_data_vma>
   13e48:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:179
        return (events^RF_TX_TEST_EVENT);
   13e4a:	00844513          	xori	a0,s0,8
   13e4e:	a025                	j	13e76 <RF_ProcessEvent+0x94>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:145
        if((pMsg = tmos_msg_receive(task_id)) != NULL)
   13e50:	1fff2797          	auipc	a5,0x1fff2
   13e54:	93478793          	addi	a5,a5,-1740 # 20005784 <component_fun>
   13e58:	439c                	lw	a5,0(a5)
   13e5a:	0b47a783          	lw	a5,180(a5)
   13e5e:	9782                	jalr	a5
   13e60:	c909                	beqz	a0,13e72 <RF_ProcessEvent+0x90>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:148
            tmos_msg_deallocate(pMsg);
   13e62:	1fff2797          	auipc	a5,0x1fff2
   13e66:	92278793          	addi	a5,a5,-1758 # 20005784 <component_fun>
   13e6a:	439c                	lw	a5,0(a5)
   13e6c:	0b87a783          	lw	a5,184(a5)
   13e70:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:151
        return (events ^ SYS_EVENT_MSG);
   13e72:	6521                	lui	a0,0x8
   13e74:	8d21                	xor	a0,a0,s0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:182
}
   13e76:	40b2                	lw	ra,12(sp)
   13e78:	4422                	lw	s0,8(sp)
   13e7a:	4492                	lw	s1,4(sp)
   13e7c:	0141                	addi	sp,sp,16
   13e7e:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:155
        tmos_start_task(rftaskID, SBP_RF_PERIODIC_EVT, 1000);
   13e80:	1fff2797          	auipc	a5,0x1fff2
   13e84:	90478793          	addi	a5,a5,-1788 # 20005784 <component_fun>
   13e88:	439c                	lw	a5,0(a5)
   13e8a:	0bc7a783          	lw	a5,188(a5)
   13e8e:	3e800613          	li	a2,1000
   13e92:	4589                	li	a1,2
   13e94:	1fff2517          	auipc	a0,0x1fff2
   13e98:	8e654503          	lbu	a0,-1818(a0) # 2000577a <rftaskID>
   13e9c:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:156
        return events ^ SBP_RF_START_DEVICE_EVT;
   13e9e:	00144513          	xori	a0,s0,1
   13ea2:	bfd1                	j	13e76 <RF_ProcessEvent+0x94>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:160
        tmos_start_task( rftaskID , SBP_RF_PERIODIC_EVT ,1000 );
   13ea4:	1fff2797          	auipc	a5,0x1fff2
   13ea8:	8e078793          	addi	a5,a5,-1824 # 20005784 <component_fun>
   13eac:	439c                	lw	a5,0(a5)
   13eae:	0bc7a783          	lw	a5,188(a5)
   13eb2:	3e800613          	li	a2,1000
   13eb6:	4589                	li	a1,2
   13eb8:	1fff2517          	auipc	a0,0x1fff2
   13ebc:	8c254503          	lbu	a0,-1854(a0) # 2000577a <rftaskID>
   13ec0:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:161
        return events^SBP_RF_START_DEVICE_EVT;
   13ec2:	00144513          	xori	a0,s0,1
   13ec6:	bf45                	j	13e76 <RF_ProcessEvent+0x94>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:166
        RF_Shut();
   13ec8:	1fff2497          	auipc	s1,0x1fff2
   13ecc:	8bc48493          	addi	s1,s1,-1860 # 20005784 <component_fun>
   13ed0:	409c                	lw	a5,0(s1)
   13ed2:	0a47a783          	lw	a5,164(a5)
   13ed6:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:167
        state = RF_Rx( data,10, 0xFF, 0xFF );
   13ed8:	409c                	lw	a5,0(s1)
   13eda:	09c7a783          	lw	a5,156(a5)
   13ede:	0ff00693          	li	a3,255
   13ee2:	0ff00613          	li	a2,255
   13ee6:	45a9                	li	a1,10
   13ee8:	1fff2517          	auipc	a0,0x1fff2
   13eec:	8a050513          	addi	a0,a0,-1888 # 20005788 <data>
   13ef0:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:168
        return events^SBP_RF_RF_RX_EVT;
   13ef2:	00444513          	xori	a0,s0,4
   13ef6:	b741                	j	13e76 <RF_ProcessEvent+0x94>

00013ef8 <rf_Receive>:
rf_Receive():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:193
//          rxBuf[0]:信号强度
//          rxBuf[1]:数据长度
//函数返回：接收状态标志位（=0,接收正常，=其他值，接收异常）
//=========================================================================
void rf_Receive(uint8_t *rxBuf )
{
   13ef8:	1141                	addi	sp,sp,-16
   13efa:	c606                	sw	ra,12(sp)
   13efc:	c422                	sw	s0,8(sp)
   13efe:	c226                	sw	s1,4(sp)
   13f00:	84aa                	mv	s1,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:194
    uint16_t len = rxBuf[1];
   13f02:	00154783          	lbu	a5,1(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:196

    if(rxBuf[2] == 'S' && rxBuf[3] == 'C' && rxBuf[len+1] == 'H')   //收到的数据为更新请求
   13f06:	00254683          	lbu	a3,2(a0)
   13f0a:	05300713          	li	a4,83
   13f0e:	04e68163          	beq	a3,a4,13f50 <rf_Receive+0x58>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:205 (discriminator 1)
        *addr_WaitForUpdate = 1;        //将从机等待更新标志位置1
        NVIC_SystemReset();             //系统重启
    }
    else
    {
        for(uint8_t i = 0; i < rxBuf[1]; i++)
   13f12:	4401                	li	s0,0
   13f14:	c38d                	beqz	a5,13f36 <rf_Receive+0x3e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:206 (discriminator 3)
            uart_send1(UART_Debug, rxBuf[i+2]);
   13f16:	008487b3          	add	a5,s1,s0
   13f1a:	0027c583          	lbu	a1,2(a5)
   13f1e:	4505                	li	a0,1
   13f20:	00000097          	auipc	ra,0x0
   13f24:	b02080e7          	jalr	-1278(ra) # 13a22 <uart_send1>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:205 (discriminator 3)
        for(uint8_t i = 0; i < rxBuf[1]; i++)
   13f28:	0405                	addi	s0,s0,1
   13f2a:	0ff47413          	andi	s0,s0,255
   13f2e:	0014c783          	lbu	a5,1(s1)
   13f32:	fef462e3          	bltu	s0,a5,13f16 <rf_Receive+0x1e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:207
        printf("\r\n");
   13f36:	00002517          	auipc	a0,0x2
   13f3a:	5ea50513          	addi	a0,a0,1514 # 16520 <strlen+0x21c>
   13f3e:	00001097          	auipc	ra,0x1
   13f42:	c94080e7          	jalr	-876(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:209
    }
   13f46:	40b2                	lw	ra,12(sp)
   13f48:	4422                	lw	s0,8(sp)
   13f4a:	4492                	lw	s1,4(sp)
   13f4c:	0141                	addi	sp,sp,16
   13f4e:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:196 (discriminator 1)
    if(rxBuf[2] == 'S' && rxBuf[3] == 'C' && rxBuf[len+1] == 'H')   //收到的数据为更新请求
   13f50:	00354683          	lbu	a3,3(a0)
   13f54:	04300713          	li	a4,67
   13f58:	fae69de3          	bne	a3,a4,13f12 <rf_Receive+0x1a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:196 (discriminator 2)
   13f5c:	00f50733          	add	a4,a0,a5
   13f60:	00174683          	lbu	a3,1(a4) # 8000001 <_data_lma+0x7fe9741>
   13f64:	04800713          	li	a4,72
   13f68:	fae695e3          	bne	a3,a4,13f12 <rf_Receive+0x1a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:199
        addr_WaitForUpdate = (uint8_t *)(component_fun[48]);
   13f6c:	1fff2797          	auipc	a5,0x1fff2
   13f70:	81878793          	addi	a5,a5,-2024 # 20005784 <component_fun>
   13f74:	439c                	lw	a5,0(a5)
   13f76:	0c07a783          	lw	a5,192(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:200
        *addr_WaitForUpdate = 1;        //将从机等待更新标志位置1
   13f7a:	4705                	li	a4,1
   13f7c:	00e78023          	sb	a4,0(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:201
        NVIC_SystemReset();             //系统重启
   13f80:	00000097          	auipc	ra,0x0
   13f84:	836080e7          	jalr	-1994(ra) # 137b6 <SYS_ResetExecute>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:197
    {
   13f88:	bf7d                	j	13f46 <rf_Receive+0x4e>

00013f8a <RF_2G4StatusCallBack>:
RF_2G4StatusCallBack():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:59
{
   13f8a:	1141                	addi	sp,sp,-16
   13f8c:	c606                	sw	ra,12(sp)
   13f8e:	c422                	sw	s0,8(sp)
   13f90:	c226                	sw	s1,4(sp)
   13f92:	c04a                	sw	s2,0(sp)
   13f94:	842e                	mv	s0,a1
   13f96:	84b2                	mv	s1,a2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:60
    switch(sta)
   13f98:	4789                	li	a5,2
   13f9a:	06f50663          	beq	a0,a5,14006 <RF_2G4StatusCallBack+0x7c>
   13f9e:	02a7f663          	bgeu	a5,a0,13fca <RF_2G4StatusCallBack+0x40>
   13fa2:	478d                	li	a5,3
   13fa4:	0ef50d63          	beq	a0,a5,1409e <RF_2G4StatusCallBack+0x114>
   13fa8:	4791                	li	a5,4
   13faa:	04f51863          	bne	a0,a5,13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:121
            tmos_set_event(rftaskID, SBP_RF_RF_RX_EVT);
   13fae:	1fff1797          	auipc	a5,0x1fff1
   13fb2:	7d678793          	addi	a5,a5,2006 # 20005784 <component_fun>
   13fb6:	439c                	lw	a5,0(a5)
   13fb8:	0b07a783          	lw	a5,176(a5)
   13fbc:	4591                	li	a1,4
   13fbe:	1fff1517          	auipc	a0,0x1fff1
   13fc2:	7bc54503          	lbu	a0,1980(a0) # 2000577a <rftaskID>
   13fc6:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:130
}
   13fc8:	a80d                	j	13ffa <RF_2G4StatusCallBack+0x70>
   13fca:	4785                	li	a5,1
   13fcc:	02f51763          	bne	a0,a5,13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:66
            RF_Shut();
   13fd0:	1fff1417          	auipc	s0,0x1fff1
   13fd4:	7b440413          	addi	s0,s0,1972 # 20005784 <component_fun>
   13fd8:	401c                	lw	a5,0(s0)
   13fda:	0a47a783          	lw	a5,164(a5)
   13fde:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:68
            state = RF_Rx( data,10, 0xFF, 0xFF );
   13fe0:	401c                	lw	a5,0(s0)
   13fe2:	09c7a783          	lw	a5,156(a5)
   13fe6:	0ff00693          	li	a3,255
   13fea:	0ff00613          	li	a2,255
   13fee:	45a9                	li	a1,10
   13ff0:	1fff1517          	auipc	a0,0x1fff1
   13ff4:	79850513          	addi	a0,a0,1944 # 20005788 <data>
   13ff8:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:130
}
   13ffa:	40b2                	lw	ra,12(sp)
   13ffc:	4422                	lw	s0,8(sp)
   13ffe:	4492                	lw	s1,4(sp)
   14000:	4902                	lw	s2,0(sp)
   14002:	0141                	addi	sp,sp,16
   14004:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:77
            if (crc == 0) {
   14006:	cd99                	beqz	a1,14024 <RF_2G4StatusCallBack+0x9a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:88
                if (crc & (1<<0)) {
   14008:	0015f793          	andi	a5,a1,1
   1400c:	e3c1                	bnez	a5,1408c <RF_2G4StatusCallBack+0x102>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:92
                if (crc & (1<<1)) {
   1400e:	8809                	andi	s0,s0,2
   14010:	d46d                	beqz	s0,13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:93
                    PRINT("match type error\n");
   14012:	00002517          	auipc	a0,0x2
   14016:	66650513          	addi	a0,a0,1638 # 16678 <strlen+0x374>
   1401a:	00001097          	auipc	ra,0x1
   1401e:	bb8080e7          	jalr	-1096(ra) # 14bd2 <myprintf>
   14022:	bfe1                	j	13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:80
                PRINT("tx recv,rssi:%d\n", (int8_t)rxBuf[0]);
   14024:	00060583          	lb	a1,0(a2)
   14028:	00002517          	auipc	a0,0x2
   1402c:	62450513          	addi	a0,a0,1572 # 1664c <strlen+0x348>
   14030:	00001097          	auipc	ra,0x1
   14034:	ba2080e7          	jalr	-1118(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:81
                PRINT("len:%d-", rxBuf[1]);
   14038:	0014c583          	lbu	a1,1(s1)
   1403c:	00002517          	auipc	a0,0x2
   14040:	62450513          	addi	a0,a0,1572 # 16660 <strlen+0x35c>
   14044:	00001097          	auipc	ra,0x1
   14048:	b8e080e7          	jalr	-1138(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:83
                for (i = 0; i < rxBuf[1]; i++) {
   1404c:	0014c783          	lbu	a5,1(s1)
   14050:	c78d                	beqz	a5,1407a <RF_2G4StatusCallBack+0xf0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:84
                    PRINT("%x ", rxBuf[i + 2]);
   14052:	00002917          	auipc	s2,0x2
   14056:	61690913          	addi	s2,s2,1558 # 16668 <strlen+0x364>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:84 (discriminator 3)
   1405a:	008487b3          	add	a5,s1,s0
   1405e:	0027c583          	lbu	a1,2(a5)
   14062:	854a                	mv	a0,s2
   14064:	00001097          	auipc	ra,0x1
   14068:	b6e080e7          	jalr	-1170(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:83 (discriminator 3)
                for (i = 0; i < rxBuf[1]; i++) {
   1406c:	0405                	addi	s0,s0,1
   1406e:	0ff47413          	andi	s0,s0,255
   14072:	0014c783          	lbu	a5,1(s1)
   14076:	fef462e3          	bltu	s0,a5,1405a <RF_2G4StatusCallBack+0xd0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:86
                PRINT("\n");
   1407a:	00002517          	auipc	a0,0x2
   1407e:	46650513          	addi	a0,a0,1126 # 164e0 <strlen+0x1dc>
   14082:	00001097          	auipc	ra,0x1
   14086:	b50080e7          	jalr	-1200(ra) # 14bd2 <myprintf>
   1408a:	bf85                	j	13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:89
                    PRINT("crc error\n");
   1408c:	00002517          	auipc	a0,0x2
   14090:	5e050513          	addi	a0,a0,1504 # 1666c <strlen+0x368>
   14094:	00001097          	auipc	ra,0x1
   14098:	b3e080e7          	jalr	-1218(ra) # 14bd2 <myprintf>
   1409c:	bf8d                	j	1400e <RF_2G4StatusCallBack+0x84>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:105
        if (( crc == 1 ) || ( crc == 2 ))  //crc校验出错
   1409e:	fff58413          	addi	s0,a1,-1
   140a2:	0ff47413          	andi	s0,s0,255
   140a6:	4785                	li	a5,1
   140a8:	0287fd63          	bgeu	a5,s0,140e2 <RF_2G4StatusCallBack+0x158>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:113
            printf("recv_data\r\n");
   140ac:	00002517          	auipc	a0,0x2
   140b0:	5ec50513          	addi	a0,a0,1516 # 16698 <strlen+0x394>
   140b4:	00001097          	auipc	ra,0x1
   140b8:	b1e080e7          	jalr	-1250(ra) # 14bd2 <myprintf>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:114
            rf_Receive(rxBuf);              //接收数据处理函数
   140bc:	8526                	mv	a0,s1
   140be:	00000097          	auipc	ra,0x0
   140c2:	e3a080e7          	jalr	-454(ra) # 13ef8 <rf_Receive>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:116
        tmos_set_event(rftaskID, SBP_RF_RF_RX_EVT);
   140c6:	1fff1797          	auipc	a5,0x1fff1
   140ca:	6be78793          	addi	a5,a5,1726 # 20005784 <component_fun>
   140ce:	439c                	lw	a5,0(a5)
   140d0:	0b07a783          	lw	a5,176(a5)
   140d4:	4591                	li	a1,4
   140d6:	1fff1517          	auipc	a0,0x1fff1
   140da:	6a454503          	lbu	a0,1700(a0) # 2000577a <rftaskID>
   140de:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:117
        break;
   140e0:	bf29                	j	13ffa <RF_2G4StatusCallBack+0x70>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:107
            __asm ("nop");
   140e2:	0001                	nop
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/isr.c:108
            printf("crc error\r\n");
   140e4:	00002517          	auipc	a0,0x2
   140e8:	5a850513          	addi	a0,a0,1448 # 1668c <strlen+0x388>
   140ec:	00001097          	auipc	ra,0x1
   140f0:	ae6080e7          	jalr	-1306(ra) # 14bd2 <myprintf>
   140f4:	bfc9                	j	140c6 <RF_2G4StatusCallBack+0x13c>

000140f6 <printk_putc>:
printk_putc():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:28
//功能概要：通过串口打出一个字符
//参数说明：data:数据：通过串口发送的一字节数据
//函数返回：无
//======================================================================
static void printk_putc(int c, int *count, PRINTK_INFO *info)
{
   140f6:	1141                	addi	sp,sp,-16
   140f8:	c606                	sw	ra,12(sp)
   140fa:	c422                	sw	s0,8(sp)
   140fc:	842e                	mv	s0,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:29
	switch (info->dest) {
   140fe:	421c                	lw	a5,0(a2)
   14100:	4705                	li	a4,1
   14102:	00e78c63          	beq	a5,a4,1411a <printk_putc+0x24>
   14106:	4709                	li	a4,2
   14108:	00e78e63          	beq	a5,a4,14124 <printk_putc+0x2e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:40
		++(info->loc);
		break;
	default:
		break;
	}
	*count += 1;
   1410c:	401c                	lw	a5,0(s0)
   1410e:	0785                	addi	a5,a5,1
   14110:	c01c                	sw	a5,0(s0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:41
}
   14112:	40b2                	lw	ra,12(sp)
   14114:	4422                	lw	s0,8(sp)
   14116:	0141                	addi	sp,sp,16
   14118:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:31
		info->func((char) c);
   1411a:	425c                	lw	a5,4(a2)
   1411c:	0562                	slli	a0,a0,0x18
   1411e:	8561                	srai	a0,a0,0x18
   14120:	9782                	jalr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:32
		break;
   14122:	b7ed                	j	1410c <printk_putc+0x16>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:34
		*(info->loc) = (unsigned char) c;
   14124:	461c                	lw	a5,8(a2)
   14126:	00a78023          	sb	a0,0(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:35
		++(info->loc);
   1412a:	461c                	lw	a5,8(a2)
   1412c:	0785                	addi	a5,a5,1
   1412e:	c61c                	sw	a5,8(a2)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:36
		break;
   14130:	bff1                	j	1410c <printk_putc+0x16>

00014132 <printk_mknumstr>:
printk_mknumstr():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:131
	int nlen;
	char *nstrp;

	nlen = 0;
	nstrp = numstr;
	*nstrp++ = '\0';
   14132:	00150793          	addi	a5,a0,1
   14136:	00050023          	sb	zero,0(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:133

	if (neg) {
   1413a:	ce1d                	beqz	a2,14178 <printk_mknumstr+0x46>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:134
		a = *(int *) nump;
   1413c:	4198                	lw	a4,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:144
		}
		while (a != 0) {
			b = (int) a / (int) radix;
			c = (int) a - ((int) b * (int) radix);
			if (c < 0) {
				c = ~c + 1 + '0';
   1413e:	03000813          	li	a6,48
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:135
		if (a == 0) {
   14142:	e315                	bnez	a4,14166 <printk_mknumstr+0x34>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:136
			*nstrp = '0';
   14144:	03000793          	li	a5,48
   14148:	00f500a3          	sb	a5,1(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:137
			++nlen;
   1414c:	4605                	li	a2,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:173
			*nstrp++ = (char) uc;
			++nlen;
		}
	}
	done: return nlen;
}
   1414e:	8532                	mv	a0,a2
   14150:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:144
				c = ~c + 1 + '0';
   14152:	40e80633          	sub	a2,a6,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:149
			*nstrp++ = (char) c;
   14156:	0785                	addi	a5,a5,1
   14158:	fec78fa3          	sb	a2,-1(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:150
			++nlen;
   1415c:	fff78613          	addi	a2,a5,-1
   14160:	8e09                	sub	a2,a2,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:148
			a = b;
   14162:	872e                	mv	a4,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:140
		while (a != 0) {
   14164:	d5ed                	beqz	a1,1414e <printk_mknumstr+0x1c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:141
			b = (int) a / (int) radix;
   14166:	02d745b3          	div	a1,a4,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:142
			c = (int) a - ((int) b * (int) radix);
   1416a:	02d76733          	rem	a4,a4,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:146
				c = c + '0';
   1416e:	03070613          	addi	a2,a4,48
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:143
			if (c < 0) {
   14172:	fe0752e3          	bgez	a4,14156 <printk_mknumstr+0x24>
   14176:	bff1                	j	14152 <printk_mknumstr+0x20>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:153
		ua = *(unsigned int *) nump;
   14178:	4198                	lw	a4,0(a1)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   1417a:	8336                	mv	t1,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:162
			if (uc < 10) {
   1417c:	48a5                	li	a7,9
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:154
		if (ua == 0) {
   1417e:	e305                	bnez	a4,1419e <printk_mknumstr+0x6c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:155
			*nstrp = '0';
   14180:	03000793          	li	a5,48
   14184:	00f500a3          	sb	a5,1(a0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:156
			++nlen;
   14188:	4605                	li	a2,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:157
			goto done;
   1418a:	b7d1                	j	1414e <printk_mknumstr+0x1c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:168
			*nstrp++ = (char) uc;
   1418c:	0785                	addi	a5,a5,1
   1418e:	feb78fa3          	sb	a1,-1(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:169
			++nlen;
   14192:	fff78613          	addi	a2,a5,-1
   14196:	8e09                	sub	a2,a2,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:159
		while (ua != 0) {
   14198:	fa676be3          	bltu	a4,t1,1414e <printk_mknumstr+0x1c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:167
			ua = ub;
   1419c:	8742                	mv	a4,a6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:160
			ub = (unsigned int) ua / (unsigned int) radix;
   1419e:	02d75833          	divu	a6,a4,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:161
			uc = (unsigned int) ua - ((unsigned int) ub * (unsigned int) radix);
   141a2:	02d77633          	remu	a2,a4,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:165
				uc = uc - 10 + 'A';
   141a6:	03760593          	addi	a1,a2,55
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:162
			if (uc < 10) {
   141aa:	fec8e1e3          	bltu	a7,a2,1418c <printk_mknumstr+0x5a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:163
				uc = uc + '0';
   141ae:	03060593          	addi	a1,a2,48
   141b2:	bfe9                	j	1418c <printk_mknumstr+0x5a>

000141b4 <printk_pad_space>:
printk_pad_space():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:186
	}
}

/********************************************************************/
static void printk_pad_space(int curlen, int field_width, int *count,
		PRINTK_INFO *info) {
   141b4:	1101                	addi	sp,sp,-32
   141b6:	ce06                	sw	ra,28(sp)
   141b8:	cc22                	sw	s0,24(sp)
   141ba:	ca26                	sw	s1,20(sp)
   141bc:	c84a                	sw	s2,16(sp)
   141be:	c64e                	sw	s3,12(sp)
   141c0:	842a                	mv	s0,a0
   141c2:	84ae                	mv	s1,a1
   141c4:	89b2                	mv	s3,a2
   141c6:	8936                	mv	s2,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:189
	int i;

	for (i = curlen; i < field_width; i++) {
   141c8:	00b55d63          	bge	a0,a1,141e2 <printk_pad_space+0x2e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:190 (discriminator 3)
		printk_putc(' ', count, info);
   141cc:	864a                	mv	a2,s2
   141ce:	85ce                	mv	a1,s3
   141d0:	02000513          	li	a0,32
   141d4:	00000097          	auipc	ra,0x0
   141d8:	f22080e7          	jalr	-222(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:189 (discriminator 3)
	for (i = curlen; i < field_width; i++) {
   141dc:	0405                	addi	s0,s0,1
   141de:	fe8497e3          	bne	s1,s0,141cc <printk_pad_space+0x18>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:192
	}
}
   141e2:	40f2                	lw	ra,28(sp)
   141e4:	4462                	lw	s0,24(sp)
   141e6:	44d2                	lw	s1,20(sp)
   141e8:	4942                	lw	s2,16(sp)
   141ea:	49b2                	lw	s3,12(sp)
   141ec:	6105                	addi	sp,sp,32
   141ee:	8082                	ret

000141f0 <out_char>:
out_char():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:18
void out_char(char data) {
   141f0:	1141                	addi	sp,sp,-16
   141f2:	c606                	sw	ra,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:19
	uart_send1(UART_printf, data);
   141f4:	0ff57593          	andi	a1,a0,255
   141f8:	4505                	li	a0,1
   141fa:	00000097          	auipc	ra,0x0
   141fe:	828080e7          	jalr	-2008(ra) # 13a22 <uart_send1>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:20
}
   14202:	40b2                	lw	ra,12(sp)
   14204:	0141                	addi	sp,sp,16
   14206:	8082                	ret

00014208 <printk_mkfloatstr>:
printk_mkfloatstr():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:50
{
   14208:	c8010113          	addi	sp,sp,-896
   1420c:	36112e23          	sw	ra,892(sp)
   14210:	36812c23          	sw	s0,888(sp)
   14214:	36912a23          	sw	s1,884(sp)
   14218:	37212823          	sw	s2,880(sp)
   1421c:	37312623          	sw	s3,876(sp)
   14220:	37412423          	sw	s4,872(sp)
   14224:	37512223          	sw	s5,868(sp)
   14228:	37612023          	sw	s6,864(sp)
   1422c:	35712e23          	sw	s7,860(sp)
   14230:	35812c23          	sw	s8,856(sp)
   14234:	35912a23          	sw	s9,852(sp)
   14238:	35a12823          	sw	s10,848(sp)
   1423c:	35b12623          	sw	s11,844(sp)
   14240:	842a                	mv	s0,a0
   14242:	8b2e                	mv	s6,a1
   14244:	8c32                	mv	s8,a2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   14246:	19000613          	li	a2,400
   1424a:	4581                	li	a1,0
   1424c:	1b08                	addi	a0,sp,432
   1424e:	fffff097          	auipc	ra,0xfffff
   14252:	e72080e7          	jalr	-398(ra) # 130c0 <memset>
   14256:	19000613          	li	a2,400
   1425a:	4581                	li	a1,0
   1425c:	1008                	addi	a0,sp,32
   1425e:	fffff097          	auipc	ra,0xfffff
   14262:	e62080e7          	jalr	-414(ra) # 130c0 <memset>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:59
	p=(uint64_t)*f;//整数部分
   14266:	4044                	lw	s1,4(s0)
   14268:	4000                	lw	s0,0(s0)
   1426a:	8522                	mv	a0,s0
   1426c:	85a6                	mv	a1,s1
   1426e:	00002097          	auipc	ra,0x2
   14272:	dee080e7          	jalr	-530(ra) # 1605c <__fixunsdfdi>
   14276:	8caa                	mv	s9,a0
   14278:	8bae                	mv	s7,a1
   1427a:	8aaa                	mv	s5,a0
   1427c:	8a2e                	mv	s4,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:60
	tempf=(*f-p);
   1427e:	00002097          	auipc	ra,0x2
   14282:	e7c080e7          	jalr	-388(ra) # 160fa <__floatundidf>
   14286:	862a                	mv	a2,a0
   14288:	86ae                	mv	a3,a1
   1428a:	8522                	mv	a0,s0
   1428c:	85a6                	mv	a1,s1
   1428e:	00001097          	auipc	ra,0x1
   14292:	688080e7          	jalr	1672(ra) # 15916 <__subdf3>
   14296:	842a                	mv	s0,a0
   14298:	84ae                	mv	s1,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:61
	while(precision_width--)    tempf*=10;
   1429a:	020c0663          	beqz	s8,142c6 <printk_mkfloatstr+0xbe>
   1429e:	fffc0d13          	addi	s10,s8,-1
   142a2:	00002797          	auipc	a5,0x2
   142a6:	4ce78793          	addi	a5,a5,1230 # 16770 <strlen+0x46c>
   142aa:	0007a903          	lw	s2,0(a5)
   142ae:	0047a983          	lw	s3,4(a5)
   142b2:	5dfd                	li	s11,-1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:61 (discriminator 2)
   142b4:	864a                	mv	a2,s2
   142b6:	86ce                	mv	a3,s3
   142b8:	00001097          	auipc	ra,0x1
   142bc:	196080e7          	jalr	406(ra) # 1544e <__muldf3>
   142c0:	1d7d                	addi	s10,s10,-1
   142c2:	ffbd19e3          	bne	s10,s11,142b4 <printk_mkfloatstr+0xac>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:62
    q=tempf;
   142c6:	00002097          	auipc	ra,0x2
   142ca:	d96080e7          	jalr	-618(ra) # 1605c <__fixunsdfdi>
   142ce:	ce2a                	sw	a0,28(sp)
   142d0:	8dae                	mv	s11,a1
   142d2:	8d2a                	mv	s10,a0
   142d4:	89ae                	mv	s3,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   142d6:	00002797          	auipc	a5,0x2
   142da:	4a278793          	addi	a5,a5,1186 # 16778 <strlen+0x474>
   142de:	4390                	lw	a2,0(a5)
   142e0:	43d4                	lw	a3,4(a5)
   142e2:	8522                	mv	a0,s0
   142e4:	85a6                	mv	a1,s1
   142e6:	00001097          	auipc	ra,0x1
   142ea:	0b2080e7          	jalr	178(ra) # 15398 <__ledf2>
   142ee:	0e055e63          	bgez	a0,143ea <printk_mkfloatstr+0x1e2>
   142f2:	4601                	li	a2,0
   142f4:	4681                	li	a3,0
   142f6:	8522                	mv	a0,s0
   142f8:	85a6                	mv	a1,s1
   142fa:	00001097          	auipc	ra,0x1
   142fe:	034080e7          	jalr	52(ra) # 1532e <__eqdf2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   14302:	4901                	li	s2,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   14304:	c56d                	beqz	a0,143ee <printk_mkfloatstr+0x1e6>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:68
		tempf=tempf*10;
   14306:	00002797          	auipc	a5,0x2
   1430a:	46a78793          	addi	a5,a5,1130 # 16770 <strlen+0x46c>
   1430e:	0047a803          	lw	a6,4(a5)
   14312:	439c                	lw	a5,0(a5)
   14314:	c83e                	sw	a5,16(sp)
   14316:	ca42                	sw	a6,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   14318:	00002797          	auipc	a5,0x2
   1431c:	46078793          	addi	a5,a5,1120 # 16778 <strlen+0x474>
   14320:	0047a803          	lw	a6,4(a5)
   14324:	439c                	lw	a5,0(a5)
   14326:	c43e                	sw	a5,8(sp)
   14328:	c642                	sw	a6,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:68
		tempf=tempf*10;
   1432a:	4642                	lw	a2,16(sp)
   1432c:	46d2                	lw	a3,20(sp)
   1432e:	8522                	mv	a0,s0
   14330:	85a6                	mv	a1,s1
   14332:	00001097          	auipc	ra,0x1
   14336:	11c080e7          	jalr	284(ra) # 1544e <__muldf3>
   1433a:	842a                	mv	s0,a0
   1433c:	84ae                	mv	s1,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:69
		k++;			
   1433e:	0905                	addi	s2,s2,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:66
	while(tempf<0.1&&tempf!=0)    //【20201119】-2/3   原为while(m<1)
   14340:	4622                	lw	a2,8(sp)
   14342:	46b2                	lw	a3,12(sp)
   14344:	00001097          	auipc	ra,0x1
   14348:	054080e7          	jalr	84(ra) # 15398 <__ledf2>
   1434c:	00055b63          	bgez	a0,14362 <printk_mkfloatstr+0x15a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:66 (discriminator 1)
   14350:	4601                	li	a2,0
   14352:	4681                	li	a3,0
   14354:	8522                	mv	a0,s0
   14356:	85a6                	mv	a1,s1
   14358:	00001097          	auipc	ra,0x1
   1435c:	fd6080e7          	jalr	-42(ra) # 1532e <__eqdf2>
   14360:	f569                	bnez	a0,1432a <printk_mkfloatstr+0x122>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   14362:	019bebb3          	or	s7,s7,s9
   14366:	080b9663          	bnez	s7,143f2 <printk_mkfloatstr+0x1ea>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:73
		c[i++]='0';
   1436a:	03000793          	li	a5,48
   1436e:	00fb0023          	sb	a5,0(s6)
   14372:	4485                	li	s1,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:87
	c[i++]='.';   //小数点
   14374:	00148413          	addi	s0,s1,1
   14378:	009b07b3          	add	a5,s6,s1
   1437c:	02e00713          	li	a4,46
   14380:	00e78023          	sb	a4,0(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   14384:	4772                	lw	a4,28(sp)
   14386:	00ededb3          	or	s11,s11,a4
   1438a:	0c0d9a63          	bnez	s11,1445e <printk_mkfloatstr+0x256>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:89
		while(zeroNum--) c[i++]='0';     //【20201119】-3/3   原为 c[i++]='0';
   1438e:	000c0d63          	beqz	s8,143a8 <printk_mkfloatstr+0x1a0>
   14392:	018b0733          	add	a4,s6,s8
   14396:	94ba                	add	s1,s1,a4
   14398:	03000713          	li	a4,48
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:89 (discriminator 2)
   1439c:	00e780a3          	sb	a4,1(a5)
   143a0:	0785                	addi	a5,a5,1
   143a2:	fef49de3          	bne	s1,a5,1439c <printk_mkfloatstr+0x194>
   143a6:	9462                	add	s0,s0,s8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:109
	c[i]='\0';
   143a8:	9b22                	add	s6,s6,s0
   143aa:	000b0023          	sb	zero,0(s6)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:111
}
   143ae:	8522                	mv	a0,s0
   143b0:	37c12083          	lw	ra,892(sp)
   143b4:	37812403          	lw	s0,888(sp)
   143b8:	37412483          	lw	s1,884(sp)
   143bc:	37012903          	lw	s2,880(sp)
   143c0:	36c12983          	lw	s3,876(sp)
   143c4:	36812a03          	lw	s4,872(sp)
   143c8:	36412a83          	lw	s5,868(sp)
   143cc:	36012b03          	lw	s6,864(sp)
   143d0:	35c12b83          	lw	s7,860(sp)
   143d4:	35812c03          	lw	s8,856(sp)
   143d8:	35412c83          	lw	s9,852(sp)
   143dc:	35012d03          	lw	s10,848(sp)
   143e0:	34c12d83          	lw	s11,844(sp)
   143e4:	38010113          	addi	sp,sp,896
   143e8:	8082                	ret
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   143ea:	4901                	li	s2,0
   143ec:	bf9d                	j	14362 <printk_mkfloatstr+0x15a>
   143ee:	4901                	li	s2,0
   143f0:	bf8d                	j	14362 <printk_mkfloatstr+0x15a>
   143f2:	1b010c93          	addi	s9,sp,432
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:72
	if(p==0)//整数部分为0
   143f6:	8466                	mv	s0,s9
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:52
	uint32_t i=0,j=0,k=0,a[100]={0},b[100]={0};
   143f8:	4b81                	li	s7,0
   143fa:	a021                	j	14402 <printk_mkfloatstr+0x1fa>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:79
			p/=10;
   143fc:	8aaa                	mv	s5,a0
   143fe:	8a2e                	mv	s4,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:78
			a[j++]=p%10;
   14400:	8ba6                	mv	s7,s1
   14402:	001b8493          	addi	s1,s7,1
   14406:	4629                	li	a2,10
   14408:	4681                	li	a3,0
   1440a:	8556                	mv	a0,s5
   1440c:	85d2                	mv	a1,s4
   1440e:	00001097          	auipc	ra,0x1
   14412:	b92080e7          	jalr	-1134(ra) # 14fa0 <__umoddi3>
   14416:	c008                	sw	a0,0(s0)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:79
			p/=10;
   14418:	4629                	li	a2,10
   1441a:	4681                	li	a3,0
   1441c:	8556                	mv	a0,s5
   1441e:	85d2                	mv	a1,s4
   14420:	00000097          	auipc	ra,0x0
   14424:	7e8080e7          	jalr	2024(ra) # 14c08 <__udivdi3>
   14428:	0411                	addi	s0,s0,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:76
		while(p!=0)//倒序的数字
   1442a:	fc0a19e3          	bnez	s4,143fc <printk_mkfloatstr+0x1f4>
   1442e:	000a1563          	bnez	s4,14438 <printk_mkfloatstr+0x230>
   14432:	47a5                	li	a5,9
   14434:	fd57e4e3          	bltu	a5,s5,143fc <printk_mkfloatstr+0x1f4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   14438:	dc95                	beqz	s1,14374 <printk_mkfloatstr+0x16c>
   1443a:	0b8a                	slli	s7,s7,0x2
   1443c:	1b1c                	addi	a5,sp,432
   1443e:	9bbe                	add	s7,s7,a5
   14440:	875a                	mv	a4,s6
   14442:	a011                	j	14446 <printk_mkfloatstr+0x23e>
   14444:	8bbe                	mv	s7,a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:83
			c[i++]=a[j-1]+'0';
   14446:	000ba783          	lw	a5,0(s7)
   1444a:	03078793          	addi	a5,a5,48
   1444e:	00f70023          	sb	a5,0(a4)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:84
			j--;
   14452:	ffcb8793          	addi	a5,s7,-4
   14456:	0705                	addi	a4,a4,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:81
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   14458:	ff9b96e3          	bne	s7,s9,14444 <printk_mkfloatstr+0x23c>
   1445c:	bf21                	j	14374 <printk_mkfloatstr+0x16c>
   1445e:	02010a13          	addi	s4,sp,32
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:88
	if(q==0)     //小数部分为0
   14462:	8ad2                	mv	s5,s4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:92
		j=0;
   14464:	4481                	li	s1,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   14466:	4ba5                	li	s7,9
   14468:	a019                	j	1446e <printk_mkfloatstr+0x266>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:96
			q/=10;
   1446a:	8d2a                	mv	s10,a0
   1446c:	89ae                	mv	s3,a1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:95
			b[j++]=q%10;
   1446e:	0485                	addi	s1,s1,1
   14470:	4629                	li	a2,10
   14472:	4681                	li	a3,0
   14474:	856a                	mv	a0,s10
   14476:	85ce                	mv	a1,s3
   14478:	00001097          	auipc	ra,0x1
   1447c:	b28080e7          	jalr	-1240(ra) # 14fa0 <__umoddi3>
   14480:	00aaa023          	sw	a0,0(s5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:96
			q/=10;
   14484:	4629                	li	a2,10
   14486:	4681                	li	a3,0
   14488:	856a                	mv	a0,s10
   1448a:	85ce                	mv	a1,s3
   1448c:	00000097          	auipc	ra,0x0
   14490:	77c080e7          	jalr	1916(ra) # 14c08 <__udivdi3>
   14494:	0a91                	addi	s5,s5,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:93
		while(q!=0)//倒序的数字
   14496:	fc099ae3          	bnez	s3,1446a <printk_mkfloatstr+0x262>
   1449a:	00099463          	bnez	s3,144a2 <printk_mkfloatstr+0x29a>
   1449e:	fdabe6e3          	bltu	s7,s10,1446a <printk_mkfloatstr+0x262>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:98
		while(k!=0)
   144a2:	00090f63          	beqz	s2,144c0 <printk_mkfloatstr+0x2b8>
   144a6:	00249793          	slli	a5,s1,0x2
   144aa:	1018                	addi	a4,sp,32
   144ac:	97ba                	add	a5,a5,a4
   144ae:	94ca                	add	s1,s1,s2
   144b0:	00249713          	slli	a4,s1,0x2
   144b4:	9752                	add	a4,a4,s4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:100
			b[j++]=0;
   144b6:	0007a023          	sw	zero,0(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:101
			k--;
   144ba:	0791                	addi	a5,a5,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:98
		while(k!=0)
   144bc:	fee79de3          	bne	a5,a4,144b6 <printk_mkfloatstr+0x2ae>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   144c0:	ee0484e3          	beqz	s1,143a8 <printk_mkfloatstr+0x1a0>
   144c4:	00249793          	slli	a5,s1,0x2
   144c8:	0698                	addi	a4,sp,832
   144ca:	97ba                	add	a5,a5,a4
   144cc:	cdc78793          	addi	a5,a5,-804
   144d0:	008b06b3          	add	a3,s6,s0
   144d4:	a011                	j	144d8 <printk_mkfloatstr+0x2d0>
   144d6:	87ba                	mv	a5,a4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:105
			c[i++]=b[j-1]+'0';
   144d8:	4398                	lw	a4,0(a5)
   144da:	03070713          	addi	a4,a4,48
   144de:	00e68023          	sb	a4,0(a3)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:106
			j--;
   144e2:	ffc78713          	addi	a4,a5,-4
   144e6:	0685                	addi	a3,a3,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:103
		while(j>0)//将倒序数字转为正序，并转换为对应的字符形式
   144e8:	fefa17e3          	bne	s4,a5,144d6 <printk_mkfloatstr+0x2ce>
   144ec:	9426                	add	s0,s0,s1
   144ee:	bd6d                	j	143a8 <printk_mkfloatstr+0x1a0>

000144f0 <printk>:
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:202
//       fmt:输出格式信息
//       ap:va_list指针指向格式信息输出
//函数返回：无
//======================================================================
int printk(PRINTK_INFO *info, const char *fmt, char * ap)
{
   144f0:	7175                	addi	sp,sp,-144
   144f2:	c706                	sw	ra,140(sp)
   144f4:	c522                	sw	s0,136(sp)
   144f6:	c326                	sw	s1,132(sp)
   144f8:	c14a                	sw	s2,128(sp)
   144fa:	dece                	sw	s3,124(sp)
   144fc:	dcd2                	sw	s4,120(sp)
   144fe:	dad6                	sw	s5,116(sp)
   14500:	d8da                	sw	s6,112(sp)
   14502:	d6de                	sw	s7,108(sp)
   14504:	d4e2                	sw	s8,104(sp)
   14506:	d2e6                	sw	s9,100(sp)
   14508:	d0ea                	sw	s10,96(sp)
   1450a:	ceee                	sw	s11,92(sp)
   1450c:	8a2a                	mv	s4,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:226

	}un1;*/
	char *p;
	int c;
	//char temp1;
	char vstr[33]={'0'};
   1450e:	d602                	sw	zero,44(sp)
   14510:	d802                	sw	zero,48(sp)
   14512:	da02                	sw	zero,52(sp)
   14514:	dc02                	sw	zero,56(sp)
   14516:	de02                	sw	zero,60(sp)
   14518:	c082                	sw	zero,64(sp)
   1451a:	c282                	sw	zero,68(sp)
   1451c:	c482                	sw	zero,72(sp)
   1451e:	04010623          	sb	zero,76(sp)
   14522:	03000793          	li	a5,48
   14526:	02f10623          	sb	a5,44(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:247
	int *ivalp;
	char *sval;
	int cval;
	unsigned int uval;

	count = 0;
   1452a:	d402                	sw	zero,40(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:251
	length_modifier=0;
	precision_used=TRUE;
	//从格式字符串第一个字符开始格式化输出数据
	for (p = (char *) fmt; (c = *p) != 0; p++)
   1452c:	00058503          	lb	a0,0(a1)
   14530:	68050163          	beqz	a0,14bb2 <printk+0x6c2>
   14534:	8b2e                	mv	s6,a1
   14536:	8bb2                	mv	s7,a2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:249
	precision_used=TRUE;
   14538:	4d05                	li	s10,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:248
	length_modifier=0;
   1453a:	4c81                	li	s9,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:279
		//此时字符为%  查看百分号后的第一个格式字符，对输出格式字符并做出相应输出判断
		//检查相应的修改标志
		flags_used = 0;
		done = FALSE;
		while (!done) {
			switch (/* c = */*++p) {
   1453c:	00002417          	auipc	s0,0x2
   14540:	16840413          	addi	s0,s0,360 # 166a4 <strlen+0x3a0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:387
			--p;
			break;
		}

		//p为格式字符串的首地址
		switch (c = *++p) {
   14544:	00002c17          	auipc	s8,0x2
   14548:	1a4c0c13          	addi	s8,s8,420 # 166e8 <strlen+0x3e4>
   1454c:	a035                	j	14578 <printk+0x88>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:263
				printk_putc(0x0D /* CR */, &count, info);
   1454e:	8652                	mv	a2,s4
   14550:	102c                	addi	a1,sp,40
   14552:	4535                	li	a0,13
   14554:	00000097          	auipc	ra,0x0
   14558:	ba2080e7          	jalr	-1118(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:264
				printk_putc(0x0A /* LF */, &count, info);
   1455c:	8652                	mv	a2,s4
   1455e:	102c                	addi	a1,sp,40
   14560:	4529                	li	a0,10
   14562:	00000097          	auipc	ra,0x0
   14566:	b94080e7          	jalr	-1132(ra) # 140f6 <printk_putc>
   1456a:	8ada                	mv	s5,s6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:251 (discriminator 2)
	for (p = (char *) fmt; (c = *p) != 0; p++)
   1456c:	001a8b13          	addi	s6,s5,1
   14570:	001a8503          	lb	a0,1(s5)
   14574:	62050f63          	beqz	a0,14bb2 <printk+0x6c2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:254
		if (c != '%')
   14578:	02500793          	li	a5,37
   1457c:	00f50d63          	beq	a0,a5,14596 <printk+0xa6>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:258
			if (c != '\n') {
   14580:	47a9                	li	a5,10
   14582:	fcf506e3          	beq	a0,a5,1454e <printk+0x5e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:259
				printk_putc(c, &count, info);
   14586:	8652                	mv	a2,s4
   14588:	102c                	addi	a1,sp,40
   1458a:	00000097          	auipc	ra,0x0
   1458e:	b6c080e7          	jalr	-1172(ra) # 140f6 <printk_putc>
   14592:	8ada                	mv	s5,s6
   14594:	bfe1                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:276
		flags_used = 0;
   14596:	4481                	li	s1,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   14598:	4641                	li	a2,16
   1459a:	a021                	j	145a2 <printk+0xb2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:281
				flags_used |= FLAGS_MINUS;
   1459c:	0014e493          	ori	s1,s1,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:282
				break;
   145a0:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:279
			switch (/* c = */*++p) {
   145a2:	001b0693          	addi	a3,s6,1
   145a6:	001b4783          	lbu	a5,1(s6)
   145aa:	1781                	addi	a5,a5,-32
   145ac:	0ff7f713          	andi	a4,a5,255
   145b0:	08e66c63          	bltu	a2,a4,14648 <printk+0x158>
   145b4:	00271793          	slli	a5,a4,0x2
   145b8:	97a2                	add	a5,a5,s0
   145ba:	439c                	lw	a5,0(a5)
   145bc:	97a2                	add	a5,a5,s0
   145be:	8782                	jr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:284
				flags_used |= FLAGS_PLUS;
   145c0:	0024e493          	ori	s1,s1,2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:285
				break;
   145c4:	bff1                	j	145a0 <printk+0xb0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:287
				flags_used |= FLAGS_SPACE;
   145c6:	0044e493          	ori	s1,s1,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:288
				break;
   145ca:	bfd9                	j	145a0 <printk+0xb0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:290
				flags_used |= FLAGS_ZERO;
   145cc:	0084e493          	ori	s1,s1,8
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:291
				break;
   145d0:	bfc1                	j	145a0 <printk+0xb0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:293
				flags_used |= FLAGS_POUND;
   145d2:	0104e493          	ori	s1,s1,16
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:294
				break;
   145d6:	b7e9                	j	145a0 <printk+0xb0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:319
				field_width = (field_width * 10) + (c - '0');
   145d8:	00291793          	slli	a5,s2,0x2
   145dc:	993e                	add	s2,s2,a5
   145de:	0906                	slli	s2,s2,0x1
   145e0:	993a                	add	s2,s2,a4
   145e2:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:308
			switch (c = *++p) {
   145e4:	001b0693          	addi	a3,s6,1
   145e8:	001b0703          	lb	a4,1(s6)
   145ec:	fd070713          	addi	a4,a4,-48
   145f0:	fee674e3          	bgeu	a2,a4,145d8 <printk+0xe8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   145f4:	001b0703          	lb	a4,1(s6)
   145f8:	02e00793          	li	a5,46
   145fc:	04f70963          	beq	a4,a5,1464e <printk+0x15e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:366
			precision_width = 0;
   14600:	4981                	li	s3,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:365
			precision_used = FALSE;
   14602:	4d01                	li	s10,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14604:	001b0693          	addi	a3,s6,1
   14608:	001b0783          	lb	a5,1(s6)
   1460c:	06800713          	li	a4,104
   14610:	06e78a63          	beq	a5,a4,14684 <printk+0x194>
   14614:	06c00713          	li	a4,108
   14618:	04e78e63          	beq	a5,a4,14674 <printk+0x184>
   1461c:	04c00713          	li	a4,76
   14620:	04e78e63          	beq	a5,a4,1467c <printk+0x18c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:387
		switch (c = *++p) {
   14624:	001b0a93          	addi	s5,s6,1
   14628:	001b0503          	lb	a0,1(s6)
   1462c:	fa850793          	addi	a5,a0,-88
   14630:	0ff7f693          	andi	a3,a5,255
   14634:	02000713          	li	a4,32
   14638:	4cd76763          	bltu	a4,a3,14b06 <printk+0x616>
   1463c:	00269793          	slli	a5,a3,0x2
   14640:	97e2                	add	a5,a5,s8
   14642:	439c                	lw	a5,0(a5)
   14644:	97e2                	add	a5,a5,s8
   14646:	8782                	jr	a5
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:305
		field_width = 0;
   14648:	4901                	li	s2,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:308
			switch (c = *++p) {
   1464a:	4625                	li	a2,9
   1464c:	bf61                	j	145e4 <printk+0xf4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:329
		if (/* (c = *++p) */*++p == '.') {
   1464e:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:335
			precision_width = 0;
   14650:	4981                	li	s3,0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14652:	4625                	li	a2,9
   14654:	a039                	j	14662 <printk+0x172>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:350
				precision_width = (precision_width * 10) +	(c - '0');
   14656:	00299793          	slli	a5,s3,0x2
   1465a:	99be                	add	s3,s3,a5
   1465c:	0986                	slli	s3,s3,0x1
   1465e:	99ba                	add	s3,s3,a4
   14660:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:338
				switch ( c = *++p) {
   14662:	001b0693          	addi	a3,s6,1
   14666:	001b0703          	lb	a4,1(s6)
   1466a:	fd070713          	addi	a4,a4,-48
   1466e:	fee674e3          	bgeu	a2,a4,14656 <printk+0x166>
   14672:	bf49                	j	14604 <printk+0x114>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:375
			 length_modifier |= LENMOD_l;
   14674:	001cec93          	ori	s9,s9,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14678:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:376
			break;
   1467a:	b76d                	j	14624 <printk+0x134>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:378
			 length_modifier |= LENMOD_L;
   1467c:	002cec93          	ori	s9,s9,2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14680:	8b36                	mv	s6,a3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:379
			break;
   14682:	b74d                	j	14624 <printk+0x134>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:370
		switch (/* c = */*++p) {
   14684:	8b36                	mv	s6,a3
   14686:	bf79                	j	14624 <printk+0x134>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
		case 'd':
		case 'i':
			 //此时ap为指向可变参数列表的第一个参数
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14688:	004b8793          	addi	a5,s7,4
   1468c:	c63e                	sw	a5,12(sp)
   1468e:	000ba783          	lw	a5,0(s7)
   14692:	d23e                	sw	a5,36(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:392
			vlen = printk_mknumstr(vstr, &ival, TRUE, 10);//将整型转换成字符型保存在vstr中，返回字符数vlen
   14694:	46a9                	li	a3,10
   14696:	4605                	li	a2,1
   14698:	104c                	addi	a1,sp,36
   1469a:	1068                	addi	a0,sp,44
   1469c:	00000097          	auipc	ra,0x0
   146a0:	a96080e7          	jalr	-1386(ra) # 14132 <printk_mknumstr>
   146a4:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:393
			vstrp = &vstr[vlen];  //指向转换后的最后一个字符
   146a6:	107c                	addi	a5,sp,44
   146a8:	00a789b3          	add	s3,a5,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:396

			//若参数小于0，添加'-'号，并将字符长度加1
			if (ival < 0) {
   146ac:	5792                	lw	a5,36(sp)
   146ae:	0007ca63          	bltz	a5,146c2 <printk+0x1d2>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:402
				schar = '-';
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   146b2:	0024f793          	andi	a5,s1,2
   146b6:	cf8d                	beqz	a5,146f0 <printk+0x200>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:404
					schar = '+';
					++vlen;
   146b8:	00150b13          	addi	s6,a0,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:403
					schar = '+';
   146bc:	02b00d93          	li	s11,43
   146c0:	a029                	j	146ca <printk+0x1da>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:398
				++vlen;
   146c2:	00150b13          	addi	s6,a0,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:397
				schar = '-';
   146c6:	02d00d93          	li	s11,45
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:419
			dschar = FALSE;

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   146ca:	0084f793          	andi	a5,s1,8
   146ce:	eb95                	bnez	a5,14702 <printk+0x212>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:426
					printk_putc(schar, &count, info);  //输出符号
				dschar = TRUE;
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   146d0:	0014f793          	andi	a5,s1,1
   146d4:	4a078e63          	beqz	a5,14b90 <printk+0x6a0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   146d8:	4bb2                	lw	s7,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:437
				}
			}

			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
   146da:	280d8d63          	beqz	s11,14974 <printk+0x484>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:438
				printk_putc(schar, &count, info);
   146de:	8652                	mv	a2,s4
   146e0:	102c                	addi	a1,sp,40
   146e2:	856e                	mv	a0,s11
   146e4:	00000097          	auipc	ra,0x0
   146e8:	a12080e7          	jalr	-1518(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   146ec:	4bb2                	lw	s7,12(sp)
   146ee:	a459                	j	14974 <printk+0x484>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:406
					if (IS_FLAG_SPACE(flags_used)) {
   146f0:	0044f793          	andi	a5,s1,4
   146f4:	46078663          	beqz	a5,14b60 <printk+0x670>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:408
						++vlen;
   146f8:	00150b13          	addi	s6,a0,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:407
						schar = ' ';
   146fc:	02000d93          	li	s11,32
   14700:	b7e9                	j	146ca <printk+0x1da>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:421
					printk_putc(schar, &count, info);  //输出符号
   14702:	8652                	mv	a2,s4
   14704:	102c                	addi	a1,sp,40
   14706:	856e                	mv	a0,s11
   14708:	00000097          	auipc	ra,0x0
   1470c:	9ee080e7          	jalr	-1554(ra) # 140f6 <printk_putc>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14710:	332b5963          	bge	s6,s2,14a42 <printk+0x552>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   14714:	8652                	mv	a2,s4
   14716:	102c                	addi	a1,sp,40
   14718:	03000513          	li	a0,48
   1471c:	00000097          	auipc	ra,0x0
   14720:	9da080e7          	jalr	-1574(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14724:	0b05                	addi	s6,s6,1
   14726:	ff2b17e3          	bne	s6,s2,14714 <printk+0x224>
   1472a:	8b4a                	mv	s6,s2
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   1472c:	4bb2                	lw	s7,12(sp)
   1472e:	a4e9                	j	149f8 <printk+0x508>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:452
			//实际传入变参数 函数后 浮点数变为:0x6000000040091EB8 实际是将其转化为double型数据
			//但是顺序反了，我们要做的是将后四字节提前，然后把0x60移到紧接着前四个字节后的位置。
			
			//【20200816】  XSX，解决浮点数不优化问题
			ap=ap+4;
			fval= (double)va_arg1(ap,double);
   14730:	00cb8b13          	addi	s6,s7,12
   14734:	004bad83          	lw	s11,4(s7)
   14738:	008bab83          	lw	s7,8(s7)
   1473c:	cc6e                	sw	s11,24(sp)
   1473e:	ce5e                	sw	s7,28(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:456
			
			//【20200816】  XSX，解决负数的浮点数输出问题
			//若参数小于0，添加'-'号，并将字符长度加1
			if (fval < 0) {
   14740:	4601                	li	a2,0
   14742:	4681                	li	a3,0
   14744:	856e                	mv	a0,s11
   14746:	85de                	mv	a1,s7
   14748:	00001097          	auipc	ra,0x1
   1474c:	c50080e7          	jalr	-944(ra) # 15398 <__ledf2>
   14750:	00054e63          	bltz	a0,1476c <printk+0x27c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:463
				fval = -fval;				//负数取它的正数
				++vlen;
			}
			//若参数不小于0，添加‘+’号或者‘ ’或者为0，并将字符长度加1
			else {
				if (IS_FLAG_PLUS(flags_used)) {
   14754:	0024f793          	andi	a5,s1,2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:464
					schar = '+';
   14758:	02b00b93          	li	s7,43
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:463
				if (IS_FLAG_PLUS(flags_used)) {
   1475c:	e385                	bnez	a5,1477c <printk+0x28c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:467
					++vlen;
				} else {
					if (IS_FLAG_SPACE(flags_used)) {
   1475e:	0044fb93          	andi	s7,s1,4
   14762:	000b8d63          	beqz	s7,1477c <printk+0x28c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:468
						schar = ' ';
   14766:	02000b93          	li	s7,32
   1476a:	a809                	j	1477c <printk+0x28c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:458
				fval = -fval;				//负数取它的正数
   1476c:	cc6e                	sw	s11,24(sp)
   1476e:	800007b7          	lui	a5,0x80000
   14772:	0177c7b3          	xor	a5,a5,s7
   14776:	ce3e                	sw	a5,28(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:457
				schar = '-';
   14778:	02d00b93          	li	s7,45
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:478
				}
			}
			dschar = FALSE;
			
			//确定是否使用小数点精度数值
			if(precision_used)
   1477c:	060d1c63          	bnez	s10,147f4 <printk+0x304>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:485
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
				vstrp = &vstr[0];  //指向转换后的第一个字符
			}
			else
			{
				if(length_modifier==0)   //浮点型精度到小数点后8位
   14780:	080c9363          	bnez	s9,14806 <printk+0x316>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:487
				{
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   14784:	4619                	li	a2,6
   14786:	106c                	addi	a1,sp,44
   14788:	0828                	addi	a0,sp,24
   1478a:	00000097          	auipc	ra,0x0
   1478e:	a7e080e7          	jalr	-1410(ra) # 14208 <printk_mkfloatstr>
   14792:	89aa                	mv	s3,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:503
			

			/*
			 * do the ZERO pad.
			 */
			if (IS_FLAG_ZERO(flags_used)) {
   14794:	0084f793          	andi	a5,s1,8
   14798:	cbc1                	beqz	a5,14828 <printk+0x338>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:504
				if (schar)
   1479a:	060b9f63          	bnez	s7,14818 <printk+0x328>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   1479e:	0129dd63          	bge	s3,s2,147b8 <printk+0x2c8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   147a2:	8652                	mv	a2,s4
   147a4:	102c                	addi	a1,sp,40
   147a6:	03000513          	li	a0,48
   147aa:	00000097          	auipc	ra,0x0
   147ae:	94c080e7          	jalr	-1716(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   147b2:	0985                	addi	s3,s3,1
   147b4:	ff2997e3          	bne	s3,s2,147a2 <printk+0x2b2>
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:524
			/* the string was built in reverse order, now display in */
			/* correct order */
			if (!dschar && schar) {
				printk_putc(schar, &count, info);
			}
			while (*vstrp)
   147b8:	02c10503          	lb	a0,44(sp)
   147bc:	89ca                	mv	s3,s2
   147be:	cd09                	beqz	a0,147d8 <printk+0x2e8>
   147c0:	02c10b93          	addi	s7,sp,44
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:525
				printk_putc(*vstrp++, &count, info);
   147c4:	0b85                	addi	s7,s7,1
   147c6:	8652                	mv	a2,s4
   147c8:	102c                	addi	a1,sp,40
   147ca:	00000097          	auipc	ra,0x0
   147ce:	92c080e7          	jalr	-1748(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:524
			while (*vstrp)
   147d2:	000b8503          	lb	a0,0(s7)
   147d6:	f57d                	bnez	a0,147c4 <printk+0x2d4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   147d8:	8885                	andi	s1,s1,1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   147da:	8bda                	mv	s7,s6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:526
			if (IS_FLAG_MINUS(flags_used)) {
   147dc:	d80488e3          	beqz	s1,1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:527
				printk_pad_space(vlen, field_width, &count, info);
   147e0:	86d2                	mv	a3,s4
   147e2:	1030                	addi	a2,sp,40
   147e4:	85ca                	mv	a1,s2
   147e6:	854e                	mv	a0,s3
   147e8:	00000097          	auipc	ra,0x0
   147ec:	9cc080e7          	jalr	-1588(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   147f0:	8bda                	mv	s7,s6
   147f2:	bbad                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:480
				vlen = printk_mkfloatstr(&fval,vstr,precision_width);//将整型转换成字符型保存在vstr中，返回字符数vlen
   147f4:	864e                	mv	a2,s3
   147f6:	106c                	addi	a1,sp,44
   147f8:	0828                	addi	a0,sp,24
   147fa:	00000097          	auipc	ra,0x0
   147fe:	a0e080e7          	jalr	-1522(ra) # 14208 <printk_mkfloatstr>
   14802:	89aa                	mv	s3,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:481
				vstrp = &vstr[0];  //指向转换后的第一个字符
   14804:	bf41                	j	14794 <printk+0x2a4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:492
					vlen = printk_mkfloatstr(&fval,vstr,6);//将整型转换成字符型保存在vstr中，返回字符数vlen
   14806:	4619                	li	a2,6
   14808:	106c                	addi	a1,sp,44
   1480a:	0828                	addi	a0,sp,24
   1480c:	00000097          	auipc	ra,0x0
   14810:	9fc080e7          	jalr	-1540(ra) # 14208 <printk_mkfloatstr>
   14814:	89aa                	mv	s3,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:493
					vstrp = &vstr[0];  //指向转换后的第一个字符
   14816:	bfbd                	j	14794 <printk+0x2a4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:505
					printk_putc(schar, &count, info);  //输出符号
   14818:	8652                	mv	a2,s4
   1481a:	102c                	addi	a1,sp,40
   1481c:	855e                	mv	a0,s7
   1481e:	00000097          	auipc	ra,0x0
   14822:	8d8080e7          	jalr	-1832(ra) # 140f6 <printk_putc>
   14826:	bfa5                	j	1479e <printk+0x2ae>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:510
				if (!IS_FLAG_MINUS(flags_used)) {
   14828:	0014f793          	andi	a5,s1,1
   1482c:	c799                	beqz	a5,1483a <printk+0x34a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:521
			if (!dschar && schar) {
   1482e:	020b9d63          	bnez	s7,14868 <printk+0x378>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:524
			while (*vstrp)
   14832:	02c10503          	lb	a0,44(sp)
   14836:	f549                	bnez	a0,147c0 <printk+0x2d0>
   14838:	b765                	j	147e0 <printk+0x2f0>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:511
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   1483a:	86d2                	mv	a3,s4
   1483c:	1030                	addi	a2,sp,40
   1483e:	85ca                	mv	a1,s2
   14840:	854e                	mv	a0,s3
   14842:	00000097          	auipc	ra,0x0
   14846:	972080e7          	jalr	-1678(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:513
					if (schar)
   1484a:	000b9763          	bnez	s7,14858 <printk+0x368>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:524
			while (*vstrp)
   1484e:	02c10503          	lb	a0,44(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:452
			fval= (double)va_arg1(ap,double);
   14852:	8bda                	mv	s7,s6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:524
			while (*vstrp)
   14854:	f535                	bnez	a0,147c0 <printk+0x2d0>
   14856:	bb19                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:514
						printk_putc(schar, &count, info);
   14858:	8652                	mv	a2,s4
   1485a:	102c                	addi	a1,sp,40
   1485c:	855e                	mv	a0,s7
   1485e:	00000097          	auipc	ra,0x0
   14862:	898080e7          	jalr	-1896(ra) # 140f6 <printk_putc>
   14866:	b7e5                	j	1484e <printk+0x35e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:522
				printk_putc(schar, &count, info);
   14868:	8652                	mv	a2,s4
   1486a:	102c                	addi	a1,sp,40
   1486c:	855e                	mv	a0,s7
   1486e:	00000097          	auipc	ra,0x0
   14872:	888080e7          	jalr	-1912(ra) # 140f6 <printk_putc>
   14876:	bf75                	j	14832 <printk+0x342>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533
			}
            break;
        //以下是16进制整形输出
		case 'x':
		case 'X':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14878:	004b8d93          	addi	s11,s7,4
   1487c:	000ba783          	lw	a5,0(s7)
   14880:	ca3e                	sw	a5,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:534
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   14882:	46c1                	li	a3,16
   14884:	4601                	li	a2,0
   14886:	084c                	addi	a1,sp,20
   14888:	1068                	addi	a0,sp,44
   1488a:	00000097          	auipc	ra,0x0
   1488e:	8a8080e7          	jalr	-1880(ra) # 14132 <printk_mknumstr>
   14892:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:535
			vstrp = &vstr[vlen];
   14894:	107c                	addi	a5,sp,44
   14896:	00a789b3          	add	s3,a5,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:538

			dschar = FALSE;
			if (IS_FLAG_ZERO(flags_used)) {
   1489a:	0084f793          	andi	a5,s1,8
   1489e:	c3a5                	beqz	a5,148fe <printk+0x40e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:539
				if (IS_FLAG_POUND(flags_used)) {
   148a0:	0104fb93          	andi	s7,s1,16
   148a4:	020b9863          	bnez	s7,148d4 <printk+0x3e4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:537
			dschar = FALSE;
   148a8:	c65e                	sw	s7,12(sp)
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   148aa:	29255b63          	bge	a0,s2,14b40 <printk+0x650>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   148ae:	8652                	mv	a2,s4
   148b0:	102c                	addi	a1,sp,40
   148b2:	03000513          	li	a0,48
   148b6:	00000097          	auipc	ra,0x0
   148ba:	840080e7          	jalr	-1984(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   148be:	0b05                	addi	s6,s6,1
   148c0:	ff2b47e3          	blt	s6,s2,148ae <printk+0x3be>
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:561
						dschar = TRUE;
					}
				}
			}

			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   148c4:	180b8563          	beqz	s7,14a4e <printk+0x55e>
   148c8:	8b4a                	mv	s6,s2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533 (discriminator 1)
			uval = (unsigned int) va_arg1(ap, unsigned int);
   148ca:	8bee                	mv	s7,s11
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:561 (discriminator 1)
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   148cc:	47b2                	lw	a5,12(sp)
   148ce:	12079563          	bnez	a5,149f8 <printk+0x508>
   148d2:	a4a1                	j	14b1a <printk+0x62a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:540
					printk_putc('0', &count, info);
   148d4:	8652                	mv	a2,s4
   148d6:	102c                	addi	a1,sp,40
   148d8:	03000513          	li	a0,48
   148dc:	00000097          	auipc	ra,0x0
   148e0:	81a080e7          	jalr	-2022(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:541
					printk_putc('x', &count, info);
   148e4:	8652                	mv	a2,s4
   148e6:	102c                	addi	a1,sp,40
   148e8:	07800513          	li	a0,120
   148ec:	00000097          	auipc	ra,0x0
   148f0:	80a080e7          	jalr	-2038(ra) # 140f6 <printk_putc>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   148f4:	152b5a63          	bge	s6,s2,14a48 <printk+0x558>
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:543
					dschar = TRUE;
   148f8:	4785                	li	a5,1
   148fa:	c63e                	sw	a5,12(sp)
   148fc:	bf4d                	j	148ae <printk+0x3be>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:548
				if (!IS_FLAG_MINUS(flags_used)) {
   148fe:	0014f793          	andi	a5,s1,1
   14902:	20079963          	bnez	a5,14b14 <printk+0x624>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:549
					if (IS_FLAG_POUND(flags_used)) {
   14906:	0104f793          	andi	a5,s1,16
   1490a:	22078e63          	beqz	a5,14b46 <printk+0x656>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:550
						vlen += 2;
   1490e:	00250b13          	addi	s6,a0,2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14912:	86d2                	mv	a3,s4
   14914:	1030                	addi	a2,sp,40
   14916:	85ca                	mv	a1,s2
   14918:	855a                	mv	a0,s6
   1491a:	00000097          	auipc	ra,0x0
   1491e:	89a080e7          	jalr	-1894(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:554
						printk_putc('0', &count, info);
   14922:	8652                	mv	a2,s4
   14924:	102c                	addi	a1,sp,40
   14926:	03000513          	li	a0,48
   1492a:	fffff097          	auipc	ra,0xfffff
   1492e:	7cc080e7          	jalr	1996(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:555
						printk_putc('x', &count, info);
   14932:	8652                	mv	a2,s4
   14934:	102c                	addi	a1,sp,40
   14936:	07800513          	li	a0,120
   1493a:	fffff097          	auipc	ra,0xfffff
   1493e:	7bc080e7          	jalr	1980(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14942:	ac09                	j	14b54 <printk+0x664>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:569
				vlen += 2;
			}
			goto cont_xd;
		//无符号以八进制表示的整数输出
		case 'o':
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14944:	004b8993          	addi	s3,s7,4
   14948:	000ba783          	lw	a5,0(s7)
   1494c:	ca3e                	sw	a5,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:570
			vlen = printk_mknumstr(vstr, &uval, FALSE, 8);
   1494e:	46a1                	li	a3,8
   14950:	4601                	li	a2,0
   14952:	084c                	addi	a1,sp,20
   14954:	1068                	addi	a0,sp,44
   14956:	fffff097          	auipc	ra,0xfffff
   1495a:	7dc080e7          	jalr	2012(ra) # 14132 <printk_mknumstr>
   1495e:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:569
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14960:	8bce                	mv	s7,s3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:586
			goto cont_u;
		case 'u':
			uval = (unsigned int) va_arg1(ap, unsigned int);
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);

			cont_u: vstrp = &vstr[vlen];
   14962:	107c                	addi	a5,sp,44
   14964:	016789b3          	add	s3,a5,s6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:588

			if (IS_FLAG_ZERO(flags_used)) {
   14968:	0084f793          	andi	a5,s1,8
   1496c:	eba5                	bnez	a5,149dc <printk+0x4ec>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:592
				printk_pad_zero(vlen, field_width, &count, info);
				vlen = field_width;
			} else {
				if (!IS_FLAG_MINUS(flags_used)) {
   1496e:	0014f793          	andi	a5,s1,1
   14972:	cfc5                	beqz	a5,14a2a <printk+0x53a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
					printk_pad_space(vlen, field_width, &count, info);
				}
			}

			cont_xd: while (*vstrp)
   14974:	00098503          	lb	a0,0(s3)
   14978:	e159                	bnez	a0,149fe <printk+0x50e>
   1497a:	a879                	j	14a18 <printk+0x528>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   1497c:	004b8993          	addi	s3,s7,4
   14980:	000ba783          	lw	a5,0(s7)
   14984:	ca3e                	sw	a5,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:575
			vlen = printk_mknumstr(vstr, &uval, FALSE, 2);
   14986:	4689                	li	a3,2
   14988:	4601                	li	a2,0
   1498a:	084c                	addi	a1,sp,20
   1498c:	1068                	addi	a0,sp,44
   1498e:	fffff097          	auipc	ra,0xfffff
   14992:	7a4080e7          	jalr	1956(ra) # 14132 <printk_mknumstr>
   14996:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:574
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14998:	8bce                	mv	s7,s3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:576
			goto cont_u;
   1499a:	b7e1                	j	14962 <printk+0x472>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   1499c:	004b8993          	addi	s3,s7,4
   149a0:	000ba783          	lw	a5,0(s7)
   149a4:	ca3e                	sw	a5,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:580
			vlen = printk_mknumstr(vstr, &uval, FALSE, 16);
   149a6:	46c1                	li	a3,16
   149a8:	4601                	li	a2,0
   149aa:	084c                	addi	a1,sp,20
   149ac:	1068                	addi	a0,sp,44
   149ae:	fffff097          	auipc	ra,0xfffff
   149b2:	784080e7          	jalr	1924(ra) # 14132 <printk_mknumstr>
   149b6:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:579
			uval = (unsigned int) va_arg1(ap, void *);
   149b8:	8bce                	mv	s7,s3
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:581
			goto cont_u;
   149ba:	b765                	j	14962 <printk+0x472>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   149bc:	004b8993          	addi	s3,s7,4
   149c0:	000ba783          	lw	a5,0(s7)
   149c4:	ca3e                	sw	a5,20(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:584
			vlen = printk_mknumstr(vstr, &uval, FALSE, 10);
   149c6:	46a9                	li	a3,10
   149c8:	4601                	li	a2,0
   149ca:	084c                	addi	a1,sp,20
   149cc:	1068                	addi	a0,sp,44
   149ce:	fffff097          	auipc	ra,0xfffff
   149d2:	764080e7          	jalr	1892(ra) # 14132 <printk_mknumstr>
   149d6:	8b2a                	mv	s6,a0
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:583
			uval = (unsigned int) va_arg1(ap, unsigned int);
   149d8:	8bce                	mv	s7,s3
   149da:	b761                	j	14962 <printk+0x472>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   149dc:	072b5c63          	bge	s6,s2,14a54 <printk+0x564>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:180
		printk_putc('0', count, info);
   149e0:	8652                	mv	a2,s4
   149e2:	102c                	addi	a1,sp,40
   149e4:	03000513          	li	a0,48
   149e8:	fffff097          	auipc	ra,0xfffff
   149ec:	70e080e7          	jalr	1806(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   149f0:	0b05                	addi	s6,s6,1
   149f2:	ff2b17e3          	bne	s6,s2,149e0 <printk+0x4f0>
   149f6:	8b4a                	mv	s6,s2
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597 (discriminator 1)
			cont_xd: while (*vstrp)
   149f8:	00098503          	lb	a0,0(s3)
   149fc:	c919                	beqz	a0,14a12 <printk+0x522>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:598
				printk_putc(*vstrp--, &count, info);
   149fe:	19fd                	addi	s3,s3,-1
   14a00:	8652                	mv	a2,s4
   14a02:	102c                	addi	a1,sp,40
   14a04:	fffff097          	auipc	ra,0xfffff
   14a08:	6f2080e7          	jalr	1778(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14a0c:	00098503          	lb	a0,0(s3)
   14a10:	f57d                	bnez	a0,149fe <printk+0x50e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:600

			if (IS_FLAG_MINUS(flags_used)) {
   14a12:	8885                	andi	s1,s1,1
   14a14:	b4048ce3          	beqz	s1,1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:601
				printk_pad_space(vlen, field_width, &count, info);
   14a18:	86d2                	mv	a3,s4
   14a1a:	1030                	addi	a2,sp,40
   14a1c:	85ca                	mv	a1,s2
   14a1e:	855a                	mv	a0,s6
   14a20:	fffff097          	auipc	ra,0xfffff
   14a24:	794080e7          	jalr	1940(ra) # 141b4 <printk_pad_space>
   14a28:	b691                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:593
					printk_pad_space(vlen, field_width, &count, info);
   14a2a:	86d2                	mv	a3,s4
   14a2c:	1030                	addi	a2,sp,40
   14a2e:	85ca                	mv	a1,s2
   14a30:	855a                	mv	a0,s6
   14a32:	fffff097          	auipc	ra,0xfffff
   14a36:	782080e7          	jalr	1922(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14a3a:	00098503          	lb	a0,0(s3)
   14a3e:	f161                	bnez	a0,149fe <printk+0x50e>
   14a40:	b635                	j	1456c <printk+0x7c>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14a42:	8b4a                	mv	s6,s2
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14a44:	4bb2                	lw	s7,12(sp)
   14a46:	bf4d                	j	149f8 <printk+0x508>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14a48:	8b4a                	mv	s6,s2
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14a4a:	8bee                	mv	s7,s11
   14a4c:	b775                	j	149f8 <printk+0x508>
   14a4e:	8b4a                	mv	s6,s2
   14a50:	8bee                	mv	s7,s11
   14a52:	b75d                	j	149f8 <printk+0x508>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14a54:	8b4a                	mv	s6,s2
   14a56:	b74d                	j	149f8 <printk+0x508>
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:607
			}

			break;
        //字符型输出
		case 'c':
			cval = (char) va_arg1(ap, unsigned int);
   14a58:	004b8493          	addi	s1,s7,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:608
			printk_putc(cval, &count, info);
   14a5c:	8652                	mv	a2,s4
   14a5e:	102c                	addi	a1,sp,40
   14a60:	000b8503          	lb	a0,0(s7)
   14a64:	fffff097          	auipc	ra,0xfffff
   14a68:	692080e7          	jalr	1682(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:607
			cval = (char) va_arg1(ap, unsigned int);
   14a6c:	8ba6                	mv	s7,s1
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:609
			break;
   14a6e:	bcfd                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:611
		case 's':
			sval = (char *) va_arg1(ap, char *);
   14a70:	004b8d93          	addi	s11,s7,4
   14a74:	000bab03          	lw	s6,0(s7)
   14a78:	8bee                	mv	s7,s11
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:612
			if (sval) {
   14a7a:	ae0b09e3          	beqz	s6,1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:613
				vlen = strlen(sval);
   14a7e:	855a                	mv	a0,s6
   14a80:	00002097          	auipc	ra,0x2
   14a84:	884080e7          	jalr	-1916(ra) # 16304 <strlen>
   14a88:	c62a                	sw	a0,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:614
				if (!IS_FLAG_MINUS(flags_used)) {
   14a8a:	8885                	andi	s1,s1,1
   14a8c:	cc85                	beqz	s1,14ac4 <printk+0x5d4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:617
					printk_pad_space(vlen, field_width, &count, info);
				}
				if(precision_width!=0)
   14a8e:	04099363          	bnez	s3,14ad4 <printk+0x5e4>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:628
							printk_putc(*sval++, &count, info);					
					}
				}
				else    //precision_width=0情况
				{
					while (*sval)
   14a92:	000b0503          	lb	a0,0(s6)
   14a96:	c919                	beqz	a0,14aac <printk+0x5bc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:629
					   printk_putc(*sval++, &count, info);
   14a98:	0b05                	addi	s6,s6,1
   14a9a:	8652                	mv	a2,s4
   14a9c:	102c                	addi	a1,sp,40
   14a9e:	fffff097          	auipc	ra,0xfffff
   14aa2:	658080e7          	jalr	1624(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:628
					while (*sval)
   14aa6:	000b0503          	lb	a0,0(s6)
   14aaa:	f57d                	bnez	a0,14a98 <printk+0x5a8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:611
			sval = (char *) va_arg1(ap, char *);
   14aac:	8bee                	mv	s7,s11
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:631
				}
				if (IS_FLAG_MINUS(flags_used)) {
   14aae:	aa048fe3          	beqz	s1,1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:632
					printk_pad_space(vlen, field_width, &count, info);
   14ab2:	86d2                	mv	a3,s4
   14ab4:	1030                	addi	a2,sp,40
   14ab6:	85ca                	mv	a1,s2
   14ab8:	4532                	lw	a0,12(sp)
   14aba:	fffff097          	auipc	ra,0xfffff
   14abe:	6fa080e7          	jalr	1786(ra) # 141b4 <printk_pad_space>
   14ac2:	b46d                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:615
					printk_pad_space(vlen, field_width, &count, info);
   14ac4:	86d2                	mv	a3,s4
   14ac6:	1030                	addi	a2,sp,40
   14ac8:	85ca                	mv	a1,s2
   14aca:	fffff097          	auipc	ra,0xfffff
   14ace:	6ea080e7          	jalr	1770(ra) # 141b4 <printk_pad_space>
   14ad2:	bf75                	j	14a8e <printk+0x59e>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   14ad4:	fd305ce3          	blez	s3,14aac <printk+0x5bc>
   14ad8:	000b0503          	lb	a0,0(s6)
   14adc:	d961                	beqz	a0,14aac <printk+0x5bc>
   14ade:	99da                	add	s3,s3,s6
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:623
							printk_putc(*sval++, &count, info);					
   14ae0:	0b05                	addi	s6,s6,1
   14ae2:	8652                	mv	a2,s4
   14ae4:	102c                	addi	a1,sp,40
   14ae6:	fffff097          	auipc	ra,0xfffff
   14aea:	610080e7          	jalr	1552(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:620
					while (precision_width>=1&&*sval)
   14aee:	fb3b0fe3          	beq	s6,s3,14aac <printk+0x5bc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:620 (discriminator 1)
   14af2:	000b0503          	lb	a0,0(s6)
   14af6:	f56d                	bnez	a0,14ae0 <printk+0x5f0>
   14af8:	bf55                	j	14aac <printk+0x5bc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:637
				}
			}
			break;
		case 'n':
			ivalp = (int *) va_arg1(ap, int *);
   14afa:	000ba783          	lw	a5,0(s7)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:638
			*ivalp = count;
   14afe:	5722                	lw	a4,40(sp)
   14b00:	c398                	sw	a4,0(a5)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:637
			ivalp = (int *) va_arg1(ap, int *);
   14b02:	0b91                	addi	s7,s7,4
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:639
			break;
   14b04:	b4a5                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:642

		default:
			printk_putc(c, &count, info);
   14b06:	8652                	mv	a2,s4
   14b08:	102c                	addi	a1,sp,40
   14b0a:	fffff097          	auipc	ra,0xfffff
   14b0e:	5ec080e7          	jalr	1516(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:643
			break;
   14b12:	bca9                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:561
			if ((IS_FLAG_POUND(flags_used)) && !dschar) {
   14b14:	0104f793          	andi	a5,s1,16
   14b18:	c7b5                	beqz	a5,14b84 <printk+0x694>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:562
				printk_putc('0', &count, info);
   14b1a:	8652                	mv	a2,s4
   14b1c:	102c                	addi	a1,sp,40
   14b1e:	03000513          	li	a0,48
   14b22:	fffff097          	auipc	ra,0xfffff
   14b26:	5d4080e7          	jalr	1492(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:563
				printk_putc('x', &count, info);
   14b2a:	8652                	mv	a2,s4
   14b2c:	102c                	addi	a1,sp,40
   14b2e:	07800513          	li	a0,120
   14b32:	fffff097          	auipc	ra,0xfffff
   14b36:	5c4080e7          	jalr	1476(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:564
				vlen += 2;
   14b3a:	0b09                	addi	s6,s6,2
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14b3c:	8bee                	mv	s7,s11
   14b3e:	bd6d                	j	149f8 <printk+0x508>
printk_pad_zero():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:179
	for (i = curlen; i < field_width; i++) {
   14b40:	8b4a                	mv	s6,s2
printk():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14b42:	8bee                	mv	s7,s11
   14b44:	bd55                	j	149f8 <printk+0x508>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:552
					printk_pad_space(vlen, field_width, &count, info);
   14b46:	86d2                	mv	a3,s4
   14b48:	1030                	addi	a2,sp,40
   14b4a:	85ca                	mv	a1,s2
   14b4c:	fffff097          	auipc	ra,0xfffff
   14b50:	668080e7          	jalr	1640(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14b54:	00098503          	lb	a0,0(s3)
   14b58:	8bee                	mv	s7,s11
   14b5a:	ea0512e3          	bnez	a0,149fe <printk+0x50e>
   14b5e:	b439                	j	1456c <printk+0x7c>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:419
			if (IS_FLAG_ZERO(flags_used)) {
   14b60:	0084fd93          	andi	s11,s1,8
   14b64:	ba0d96e3          	bnez	s11,14710 <printk+0x220>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:426
				if (!IS_FLAG_MINUS(flags_used)) {
   14b68:	0014f793          	andi	a5,s1,1
   14b6c:	b60796e3          	bnez	a5,146d8 <printk+0x1e8>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14b70:	86d2                	mv	a3,s4
   14b72:	1030                	addi	a2,sp,40
   14b74:	85ca                	mv	a1,s2
   14b76:	855a                	mv	a0,s6
   14b78:	fffff097          	auipc	ra,0xfffff
   14b7c:	63c080e7          	jalr	1596(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14b80:	4bb2                	lw	s7,12(sp)
   14b82:	bd65                	j	14a3a <printk+0x54a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14b84:	00098503          	lb	a0,0(s3)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:533
			uval = (unsigned int) va_arg1(ap, unsigned int);
   14b88:	8bee                	mv	s7,s11
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:597
			cont_xd: while (*vstrp)
   14b8a:	e6051ae3          	bnez	a0,149fe <printk+0x50e>
   14b8e:	b569                	j	14a18 <printk+0x528>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:427
					printk_pad_space(vlen, field_width, &count, info);  //输出空格
   14b90:	86d2                	mv	a3,s4
   14b92:	1030                	addi	a2,sp,40
   14b94:	85ca                	mv	a1,s2
   14b96:	855a                	mv	a0,s6
   14b98:	fffff097          	auipc	ra,0xfffff
   14b9c:	61c080e7          	jalr	1564(ra) # 141b4 <printk_pad_space>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:430
						printk_putc(schar, &count, info);
   14ba0:	8652                	mv	a2,s4
   14ba2:	102c                	addi	a1,sp,40
   14ba4:	856e                	mv	a0,s11
   14ba6:	fffff097          	auipc	ra,0xfffff
   14baa:	550080e7          	jalr	1360(ra) # 140f6 <printk_putc>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:391
			ival = (int) va_arg1(ap, int);  //返回当前参数，并将ap指向下一个参数
   14bae:	4bb2                	lw	s7,12(sp)
   14bb0:	b569                	j	14a3a <printk+0x54a>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:646
		}
	}
	return count;
   14bb2:	5522                	lw	a0,40(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:647
}
   14bb4:	40ba                	lw	ra,140(sp)
   14bb6:	442a                	lw	s0,136(sp)
   14bb8:	449a                	lw	s1,132(sp)
   14bba:	490a                	lw	s2,128(sp)
   14bbc:	59f6                	lw	s3,124(sp)
   14bbe:	5a66                	lw	s4,120(sp)
   14bc0:	5ad6                	lw	s5,116(sp)
   14bc2:	5b46                	lw	s6,112(sp)
   14bc4:	5bb6                	lw	s7,108(sp)
   14bc6:	5c26                	lw	s8,104(sp)
   14bc8:	5c96                	lw	s9,100(sp)
   14bca:	5d06                	lw	s10,96(sp)
   14bcc:	4df6                	lw	s11,92(sp)
   14bce:	6149                	addi	sp,sp,144
   14bd0:	8082                	ret

00014bd2 <myprintf>:
myprintf():
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:656
//参数说明：const char *:打印参数字符串：对输入的字符串进行解析并按格式输出
//       例如： printf("c=%c\n",c); 将c按char型进行输出
//函数返回：字符串长度
//======================================================================
int myprintf(const char *fmt, ...)
{
   14bd2:	7139                	addi	sp,sp,-64
   14bd4:	ce06                	sw	ra,28(sp)
   14bd6:	d22e                	sw	a1,36(sp)
   14bd8:	d432                	sw	a2,40(sp)
   14bda:	d636                	sw	a3,44(sp)
   14bdc:	d83a                	sw	a4,48(sp)
   14bde:	da3e                	sw	a5,52(sp)
   14be0:	dc42                	sw	a6,56(sp)
   14be2:	de46                	sw	a7,60(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:662
	//char * ap;
  va_list ap;
	char c;
	int rvalue;
	PRINTK_INFO info;
	info.dest = DEST_CONSOLE;  //宏定义为1
   14be4:	4785                	li	a5,1
   14be6:	c03e                	sw	a5,0(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:663
	info.func = &out_char;     //调用的串口输出函数
   14be8:	fffff797          	auipc	a5,0xfffff
   14bec:	60878793          	addi	a5,a5,1544 # 141f0 <out_char>
   14bf0:	c23e                	sw	a5,4(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:664
	va_start(ap, fmt);  //对ap 进行初始化，让它指向可变参数表里面的第一个参数
   14bf2:	1050                	addi	a2,sp,36
   14bf4:	c632                	sw	a2,12(sp)
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:665
	rvalue = printk(&info, fmt, ap);
   14bf6:	85aa                	mv	a1,a0
   14bf8:	850a                	mv	a0,sp
   14bfa:	00000097          	auipc	ra,0x0
   14bfe:	8f6080e7          	jalr	-1802(ra) # 144f0 <printk>
C:\Users\xuyixin\Desktop\CH573-BLE\CH573-BLE-Update-20241104\AHL-User-RF-CH573-20241104\Debug/srcc/printf.c:670
    
	va_end(ap);

	return rvalue;
}
   14c02:	40f2                	lw	ra,28(sp)
   14c04:	6121                	addi	sp,sp,64
   14c06:	8082                	ret

00014c08 <__udivdi3>:
__udivdi3():
   14c08:	87b6                	mv	a5,a3
   14c0a:	88b2                	mv	a7,a2
   14c0c:	832a                	mv	t1,a0
   14c0e:	882e                	mv	a6,a1
   14c10:	14069d63          	bnez	a3,14d6a <__udivdi3+0x162>
   14c14:	0ac5f963          	bgeu	a1,a2,14cc6 <__udivdi3+0xbe>
   14c18:	6741                	lui	a4,0x10
   14c1a:	1ae66e63          	bltu	a2,a4,14dd6 <__udivdi3+0x1ce>
   14c1e:	010007b7          	lui	a5,0x1000
   14c22:	34f66363          	bltu	a2,a5,14f68 <__udivdi3+0x360>
   14c26:	01865693          	srli	a3,a2,0x18
   14c2a:	47e1                	li	a5,24
   14c2c:	00002717          	auipc	a4,0x2
   14c30:	b9470713          	addi	a4,a4,-1132 # 167c0 <__clz_tab>
   14c34:	9736                	add	a4,a4,a3
   14c36:	00074703          	lbu	a4,0(a4)
   14c3a:	97ba                	add	a5,a5,a4
   14c3c:	02000713          	li	a4,32
   14c40:	8f1d                	sub	a4,a4,a5
   14c42:	cb19                	beqz	a4,14c58 <__udivdi3+0x50>
   14c44:	00e59833          	sll	a6,a1,a4
   14c48:	00f557b3          	srl	a5,a0,a5
   14c4c:	00e618b3          	sll	a7,a2,a4
   14c50:	0107e833          	or	a6,a5,a6
   14c54:	00e51333          	sll	t1,a0,a4
   14c58:	0108d613          	srli	a2,a7,0x10
   14c5c:	02c85533          	divu	a0,a6,a2
   14c60:	01089693          	slli	a3,a7,0x10
   14c64:	82c1                	srli	a3,a3,0x10
   14c66:	01035793          	srli	a5,t1,0x10
   14c6a:	02c87733          	remu	a4,a6,a2
   14c6e:	02a685b3          	mul	a1,a3,a0
   14c72:	0742                	slli	a4,a4,0x10
   14c74:	00f76833          	or	a6,a4,a5
   14c78:	00b87a63          	bgeu	a6,a1,14c8c <__udivdi3+0x84>
   14c7c:	9846                	add	a6,a6,a7
   14c7e:	fff50793          	addi	a5,a0,-1
   14c82:	01186463          	bltu	a6,a7,14c8a <__udivdi3+0x82>
   14c86:	30b86763          	bltu	a6,a1,14f94 <__udivdi3+0x38c>
   14c8a:	853e                	mv	a0,a5
   14c8c:	40b80833          	sub	a6,a6,a1
   14c90:	02c85733          	divu	a4,a6,a2
   14c94:	0342                	slli	t1,t1,0x10
   14c96:	01035313          	srli	t1,t1,0x10
   14c9a:	02c87833          	remu	a6,a6,a2
   14c9e:	02e686b3          	mul	a3,a3,a4
   14ca2:	0842                	slli	a6,a6,0x10
   14ca4:	00686833          	or	a6,a6,t1
   14ca8:	00d87b63          	bgeu	a6,a3,14cbe <__udivdi3+0xb6>
   14cac:	9846                	add	a6,a6,a7
   14cae:	fff70793          	addi	a5,a4,-1
   14cb2:	01186563          	bltu	a6,a7,14cbc <__udivdi3+0xb4>
   14cb6:	1779                	addi	a4,a4,-2
   14cb8:	00d86363          	bltu	a6,a3,14cbe <__udivdi3+0xb6>
   14cbc:	873e                	mv	a4,a5
   14cbe:	0542                	slli	a0,a0,0x10
   14cc0:	8d59                	or	a0,a0,a4
   14cc2:	4581                	li	a1,0
   14cc4:	8082                	ret
   14cc6:	e601                	bnez	a2,14cce <__udivdi3+0xc6>
   14cc8:	4705                	li	a4,1
   14cca:	02c758b3          	divu	a7,a4,a2
   14cce:	6741                	lui	a4,0x10
   14cd0:	0ee8ea63          	bltu	a7,a4,14dc4 <__udivdi3+0x1bc>
   14cd4:	010007b7          	lui	a5,0x1000
   14cd8:	28f8ec63          	bltu	a7,a5,14f70 <__udivdi3+0x368>
   14cdc:	0188d693          	srli	a3,a7,0x18
   14ce0:	47e1                	li	a5,24
   14ce2:	00002717          	auipc	a4,0x2
   14ce6:	ade70713          	addi	a4,a4,-1314 # 167c0 <__clz_tab>
   14cea:	9736                	add	a4,a4,a3
   14cec:	00074683          	lbu	a3,0(a4)
   14cf0:	96be                	add	a3,a3,a5
   14cf2:	02000793          	li	a5,32
   14cf6:	8f95                	sub	a5,a5,a3
   14cf8:	ebe5                	bnez	a5,14de8 <__udivdi3+0x1e0>
   14cfa:	01089e93          	slli	t4,a7,0x10
   14cfe:	41158733          	sub	a4,a1,a7
   14d02:	0108df13          	srli	t5,a7,0x10
   14d06:	010ede93          	srli	t4,t4,0x10
   14d0a:	4585                	li	a1,1
   14d0c:	01035793          	srli	a5,t1,0x10
   14d10:	03e75533          	divu	a0,a4,t5
   14d14:	03e77733          	remu	a4,a4,t5
   14d18:	03d506b3          	mul	a3,a0,t4
   14d1c:	0742                	slli	a4,a4,0x10
   14d1e:	8fd9                	or	a5,a5,a4
   14d20:	00d7fa63          	bgeu	a5,a3,14d34 <__udivdi3+0x12c>
   14d24:	97c6                	add	a5,a5,a7
   14d26:	fff50713          	addi	a4,a0,-1
   14d2a:	0117e463          	bltu	a5,a7,14d32 <__udivdi3+0x12a>
   14d2e:	26d7e663          	bltu	a5,a3,14f9a <__udivdi3+0x392>
   14d32:	853a                	mv	a0,a4
   14d34:	8f95                	sub	a5,a5,a3
   14d36:	03e7d733          	divu	a4,a5,t5
   14d3a:	0342                	slli	t1,t1,0x10
   14d3c:	01035313          	srli	t1,t1,0x10
   14d40:	03e7f7b3          	remu	a5,a5,t5
   14d44:	03d70eb3          	mul	t4,a4,t4
   14d48:	07c2                	slli	a5,a5,0x10
   14d4a:	0067e7b3          	or	a5,a5,t1
   14d4e:	01d7fb63          	bgeu	a5,t4,14d64 <__udivdi3+0x15c>
   14d52:	97c6                	add	a5,a5,a7
   14d54:	fff70693          	addi	a3,a4,-1
   14d58:	0117e563          	bltu	a5,a7,14d62 <__udivdi3+0x15a>
   14d5c:	1779                	addi	a4,a4,-2
   14d5e:	01d7e363          	bltu	a5,t4,14d64 <__udivdi3+0x15c>
   14d62:	8736                	mv	a4,a3
   14d64:	0542                	slli	a0,a0,0x10
   14d66:	8d59                	or	a0,a0,a4
   14d68:	8082                	ret
   14d6a:	04d5e263          	bltu	a1,a3,14dae <__udivdi3+0x1a6>
   14d6e:	67c1                	lui	a5,0x10
   14d70:	04f6e263          	bltu	a3,a5,14db4 <__udivdi3+0x1ac>
   14d74:	010007b7          	lui	a5,0x1000
   14d78:	1ef6e463          	bltu	a3,a5,14f60 <__udivdi3+0x358>
   14d7c:	0186d713          	srli	a4,a3,0x18
   14d80:	4861                	li	a6,24
   14d82:	00002797          	auipc	a5,0x2
   14d86:	a3e78793          	addi	a5,a5,-1474 # 167c0 <__clz_tab>
   14d8a:	97ba                	add	a5,a5,a4
   14d8c:	0007c703          	lbu	a4,0(a5)
   14d90:	02000e13          	li	t3,32
   14d94:	9742                	add	a4,a4,a6
   14d96:	40ee0e33          	sub	t3,t3,a4
   14d9a:	0c0e1a63          	bnez	t3,14e6e <__udivdi3+0x266>
   14d9e:	1cb6ed63          	bltu	a3,a1,14f78 <__udivdi3+0x370>
   14da2:	00c53533          	sltu	a0,a0,a2
   14da6:	00154513          	xori	a0,a0,1
   14daa:	4581                	li	a1,0
   14dac:	8082                	ret
   14dae:	4581                	li	a1,0
   14db0:	4501                	li	a0,0
   14db2:	8082                	ret
   14db4:	0ff00793          	li	a5,255
   14db8:	1cd7f363          	bgeu	a5,a3,14f7e <__udivdi3+0x376>
   14dbc:	0086d713          	srli	a4,a3,0x8
   14dc0:	4821                	li	a6,8
   14dc2:	b7c1                	j	14d82 <__udivdi3+0x17a>
   14dc4:	0ff00713          	li	a4,255
   14dc8:	86c6                	mv	a3,a7
   14dca:	f1177ce3          	bgeu	a4,a7,14ce2 <__udivdi3+0xda>
   14dce:	0088d693          	srli	a3,a7,0x8
   14dd2:	47a1                	li	a5,8
   14dd4:	b739                	j	14ce2 <__udivdi3+0xda>
   14dd6:	0ff00713          	li	a4,255
   14dda:	86b2                	mv	a3,a2
   14ddc:	e4c778e3          	bgeu	a4,a2,14c2c <__udivdi3+0x24>
   14de0:	00865693          	srli	a3,a2,0x8
   14de4:	47a1                	li	a5,8
   14de6:	b599                	j	14c2c <__udivdi3+0x24>
   14de8:	00f898b3          	sll	a7,a7,a5
   14dec:	00d5d633          	srl	a2,a1,a3
   14df0:	0108df13          	srli	t5,a7,0x10
   14df4:	03e65e33          	divu	t3,a2,t5
   14df8:	00f59733          	sll	a4,a1,a5
   14dfc:	00d556b3          	srl	a3,a0,a3
   14e00:	8f55                	or	a4,a4,a3
   14e02:	01089e93          	slli	t4,a7,0x10
   14e06:	010ede93          	srli	t4,t4,0x10
   14e0a:	00f51333          	sll	t1,a0,a5
   14e0e:	01075593          	srli	a1,a4,0x10
   14e12:	03e676b3          	remu	a3,a2,t5
   14e16:	03ce87b3          	mul	a5,t4,t3
   14e1a:	06c2                	slli	a3,a3,0x10
   14e1c:	8ecd                	or	a3,a3,a1
   14e1e:	00f6fb63          	bgeu	a3,a5,14e34 <__udivdi3+0x22c>
   14e22:	96c6                	add	a3,a3,a7
   14e24:	fffe0613          	addi	a2,t3,-1
   14e28:	1716e463          	bltu	a3,a7,14f90 <__udivdi3+0x388>
   14e2c:	16f6f263          	bgeu	a3,a5,14f90 <__udivdi3+0x388>
   14e30:	1e79                	addi	t3,t3,-2
   14e32:	96c6                	add	a3,a3,a7
   14e34:	8e9d                	sub	a3,a3,a5
   14e36:	03e6d633          	divu	a2,a3,t5
   14e3a:	01071793          	slli	a5,a4,0x10
   14e3e:	83c1                	srli	a5,a5,0x10
   14e40:	03e6f6b3          	remu	a3,a3,t5
   14e44:	02ce8533          	mul	a0,t4,a2
   14e48:	01069713          	slli	a4,a3,0x10
   14e4c:	8f5d                	or	a4,a4,a5
   14e4e:	00a77b63          	bgeu	a4,a0,14e64 <__udivdi3+0x25c>
   14e52:	9746                	add	a4,a4,a7
   14e54:	fff60793          	addi	a5,a2,-1
   14e58:	13176863          	bltu	a4,a7,14f88 <__udivdi3+0x380>
   14e5c:	12a77663          	bgeu	a4,a0,14f88 <__udivdi3+0x380>
   14e60:	1679                	addi	a2,a2,-2
   14e62:	9746                	add	a4,a4,a7
   14e64:	010e1593          	slli	a1,t3,0x10
   14e68:	8f09                	sub	a4,a4,a0
   14e6a:	8dd1                	or	a1,a1,a2
   14e6c:	b545                	j	14d0c <__udivdi3+0x104>
   14e6e:	00e657b3          	srl	a5,a2,a4
   14e72:	01c696b3          	sll	a3,a3,t3
   14e76:	8edd                	or	a3,a3,a5
   14e78:	00e5d333          	srl	t1,a1,a4
   14e7c:	0106df13          	srli	t5,a3,0x10
   14e80:	03e357b3          	divu	a5,t1,t5
   14e84:	01069e93          	slli	t4,a3,0x10
   14e88:	010ede93          	srli	t4,t4,0x10
   14e8c:	01c59833          	sll	a6,a1,t3
   14e90:	00e55733          	srl	a4,a0,a4
   14e94:	01076833          	or	a6,a4,a6
   14e98:	01085893          	srli	a7,a6,0x10
   14e9c:	01c61633          	sll	a2,a2,t3
   14ea0:	03e37333          	remu	t1,t1,t5
   14ea4:	02fe85b3          	mul	a1,t4,a5
   14ea8:	0342                	slli	t1,t1,0x10
   14eaa:	011368b3          	or	a7,t1,a7
   14eae:	00b8fb63          	bgeu	a7,a1,14ec4 <__udivdi3+0x2bc>
   14eb2:	98b6                	add	a7,a7,a3
   14eb4:	fff78713          	addi	a4,a5,-1
   14eb8:	0cd8ea63          	bltu	a7,a3,14f8c <__udivdi3+0x384>
   14ebc:	0cb8f863          	bgeu	a7,a1,14f8c <__udivdi3+0x384>
   14ec0:	17f9                	addi	a5,a5,-2
   14ec2:	98b6                	add	a7,a7,a3
   14ec4:	40b888b3          	sub	a7,a7,a1
   14ec8:	03e8d733          	divu	a4,a7,t5
   14ecc:	0842                	slli	a6,a6,0x10
   14ece:	01085813          	srli	a6,a6,0x10
   14ed2:	03e8f8b3          	remu	a7,a7,t5
   14ed6:	02ee8333          	mul	t1,t4,a4
   14eda:	08c2                	slli	a7,a7,0x10
   14edc:	0108e5b3          	or	a1,a7,a6
   14ee0:	0065fb63          	bgeu	a1,t1,14ef6 <__udivdi3+0x2ee>
   14ee4:	95b6                	add	a1,a1,a3
   14ee6:	fff70813          	addi	a6,a4,-1
   14eea:	08d5ed63          	bltu	a1,a3,14f84 <__udivdi3+0x37c>
   14eee:	0865fb63          	bgeu	a1,t1,14f84 <__udivdi3+0x37c>
   14ef2:	1779                	addi	a4,a4,-2
   14ef4:	95b6                	add	a1,a1,a3
   14ef6:	07c2                	slli	a5,a5,0x10
   14ef8:	6f41                	lui	t5,0x10
   14efa:	8fd9                	or	a5,a5,a4
   14efc:	ffff0713          	addi	a4,t5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   14f00:	00e7f6b3          	and	a3,a5,a4
   14f04:	0107d893          	srli	a7,a5,0x10
   14f08:	8f71                	and	a4,a4,a2
   14f0a:	8241                	srli	a2,a2,0x10
   14f0c:	02e68eb3          	mul	t4,a3,a4
   14f10:	406585b3          	sub	a1,a1,t1
   14f14:	02c686b3          	mul	a3,a3,a2
   14f18:	010ed813          	srli	a6,t4,0x10
   14f1c:	02e88733          	mul	a4,a7,a4
   14f20:	96ba                	add	a3,a3,a4
   14f22:	96c2                	add	a3,a3,a6
   14f24:	02c88633          	mul	a2,a7,a2
   14f28:	00e6f363          	bgeu	a3,a4,14f2e <__udivdi3+0x326>
   14f2c:	967a                	add	a2,a2,t5
   14f2e:	0106d893          	srli	a7,a3,0x10
   14f32:	9646                	add	a2,a2,a7
   14f34:	02c5e263          	bltu	a1,a2,14f58 <__udivdi3+0x350>
   14f38:	00c58563          	beq	a1,a2,14f42 <__udivdi3+0x33a>
   14f3c:	853e                	mv	a0,a5
   14f3e:	4581                	li	a1,0
   14f40:	8082                	ret
   14f42:	6741                	lui	a4,0x10
   14f44:	177d                	addi	a4,a4,-1
   14f46:	8ef9                	and	a3,a3,a4
   14f48:	06c2                	slli	a3,a3,0x10
   14f4a:	00eefeb3          	and	t4,t4,a4
   14f4e:	01c51533          	sll	a0,a0,t3
   14f52:	96f6                	add	a3,a3,t4
   14f54:	fed574e3          	bgeu	a0,a3,14f3c <__udivdi3+0x334>
   14f58:	fff78513          	addi	a0,a5,-1
   14f5c:	4581                	li	a1,0
   14f5e:	8082                	ret
   14f60:	0106d713          	srli	a4,a3,0x10
   14f64:	4841                	li	a6,16
   14f66:	bd31                	j	14d82 <__udivdi3+0x17a>
   14f68:	01065693          	srli	a3,a2,0x10
   14f6c:	47c1                	li	a5,16
   14f6e:	b97d                	j	14c2c <__udivdi3+0x24>
   14f70:	0108d693          	srli	a3,a7,0x10
   14f74:	47c1                	li	a5,16
   14f76:	b3b5                	j	14ce2 <__udivdi3+0xda>
   14f78:	4581                	li	a1,0
   14f7a:	4505                	li	a0,1
   14f7c:	8082                	ret
   14f7e:	8736                	mv	a4,a3
   14f80:	4801                	li	a6,0
   14f82:	b501                	j	14d82 <__udivdi3+0x17a>
   14f84:	8742                	mv	a4,a6
   14f86:	bf85                	j	14ef6 <__udivdi3+0x2ee>
   14f88:	863e                	mv	a2,a5
   14f8a:	bde9                	j	14e64 <__udivdi3+0x25c>
   14f8c:	87ba                	mv	a5,a4
   14f8e:	bf1d                	j	14ec4 <__udivdi3+0x2bc>
   14f90:	8e32                	mv	t3,a2
   14f92:	b54d                	j	14e34 <__udivdi3+0x22c>
   14f94:	1579                	addi	a0,a0,-2
   14f96:	9846                	add	a6,a6,a7
   14f98:	b9d5                	j	14c8c <__udivdi3+0x84>
   14f9a:	1579                	addi	a0,a0,-2
   14f9c:	97c6                	add	a5,a5,a7
   14f9e:	bb59                	j	14d34 <__udivdi3+0x12c>

00014fa0 <__umoddi3>:
__umoddi3():
   14fa0:	87b6                	mv	a5,a3
   14fa2:	8832                	mv	a6,a2
   14fa4:	832a                	mv	t1,a0
   14fa6:	872e                	mv	a4,a1
   14fa8:	8e2e                	mv	t3,a1
   14faa:	14069363          	bnez	a3,150f0 <__umoddi3+0x150>
   14fae:	0ac5f163          	bgeu	a1,a2,15050 <__umoddi3+0xb0>
   14fb2:	6741                	lui	a4,0x10
   14fb4:	1ae67863          	bgeu	a2,a4,15164 <__umoddi3+0x1c4>
   14fb8:	0ff00713          	li	a4,255
   14fbc:	86b2                	mv	a3,a2
   14fbe:	00c77563          	bgeu	a4,a2,14fc8 <__umoddi3+0x28>
   14fc2:	00865693          	srli	a3,a2,0x8
   14fc6:	47a1                	li	a5,8
   14fc8:	00001717          	auipc	a4,0x1
   14fcc:	7f870713          	addi	a4,a4,2040 # 167c0 <__clz_tab>
   14fd0:	9736                	add	a4,a4,a3
   14fd2:	00074703          	lbu	a4,0(a4)
   14fd6:	02000893          	li	a7,32
   14fda:	97ba                	add	a5,a5,a4
   14fdc:	40f888b3          	sub	a7,a7,a5
   14fe0:	00088c63          	beqz	a7,14ff8 <__umoddi3+0x58>
   14fe4:	011595b3          	sll	a1,a1,a7
   14fe8:	00f557b3          	srl	a5,a0,a5
   14fec:	01161833          	sll	a6,a2,a7
   14ff0:	00b7ee33          	or	t3,a5,a1
   14ff4:	01151333          	sll	t1,a0,a7
   14ff8:	01085613          	srli	a2,a6,0x10
   14ffc:	02ce57b3          	divu	a5,t3,a2
   15000:	01081513          	slli	a0,a6,0x10
   15004:	8141                	srli	a0,a0,0x10
   15006:	01035693          	srli	a3,t1,0x10
   1500a:	02ce7e33          	remu	t3,t3,a2
   1500e:	02f507b3          	mul	a5,a0,a5
   15012:	0e42                	slli	t3,t3,0x10
   15014:	00de6733          	or	a4,t3,a3
   15018:	00f77863          	bgeu	a4,a5,15028 <__umoddi3+0x88>
   1501c:	9742                	add	a4,a4,a6
   1501e:	01076563          	bltu	a4,a6,15028 <__umoddi3+0x88>
   15022:	00f77363          	bgeu	a4,a5,15028 <__umoddi3+0x88>
   15026:	9742                	add	a4,a4,a6
   15028:	8f1d                	sub	a4,a4,a5
   1502a:	02c756b3          	divu	a3,a4,a2
   1502e:	01031793          	slli	a5,t1,0x10
   15032:	83c1                	srli	a5,a5,0x10
   15034:	02c77733          	remu	a4,a4,a2
   15038:	02d50533          	mul	a0,a0,a3
   1503c:	0742                	slli	a4,a4,0x10
   1503e:	8fd9                	or	a5,a5,a4
   15040:	08a7ec63          	bltu	a5,a0,150d8 <__umoddi3+0x138>
   15044:	40a78533          	sub	a0,a5,a0
   15048:	01155533          	srl	a0,a0,a7
   1504c:	4581                	li	a1,0
   1504e:	8082                	ret
   15050:	e601                	bnez	a2,15058 <__umoddi3+0xb8>
   15052:	4705                	li	a4,1
   15054:	02c75833          	divu	a6,a4,a2
   15058:	6741                	lui	a4,0x10
   1505a:	0ee86c63          	bltu	a6,a4,15152 <__umoddi3+0x1b2>
   1505e:	010007b7          	lui	a5,0x1000
   15062:	2af86563          	bltu	a6,a5,1530c <__umoddi3+0x36c>
   15066:	01885693          	srli	a3,a6,0x18
   1506a:	47e1                	li	a5,24
   1506c:	00001717          	auipc	a4,0x1
   15070:	75470713          	addi	a4,a4,1876 # 167c0 <__clz_tab>
   15074:	9736                	add	a4,a4,a3
   15076:	00074703          	lbu	a4,0(a4)
   1507a:	02000893          	li	a7,32
   1507e:	97ba                	add	a5,a5,a4
   15080:	40f888b3          	sub	a7,a7,a5
   15084:	1e089a63          	bnez	a7,15278 <__umoddi3+0x2d8>
   15088:	01081e13          	slli	t3,a6,0x10
   1508c:	410585b3          	sub	a1,a1,a6
   15090:	01085613          	srli	a2,a6,0x10
   15094:	010e5e13          	srli	t3,t3,0x10
   15098:	01035713          	srli	a4,t1,0x10
   1509c:	02c5d6b3          	divu	a3,a1,a2
   150a0:	02c5f5b3          	remu	a1,a1,a2
   150a4:	03c686b3          	mul	a3,a3,t3
   150a8:	05c2                	slli	a1,a1,0x10
   150aa:	8f4d                	or	a4,a4,a1
   150ac:	00d77763          	bgeu	a4,a3,150ba <__umoddi3+0x11a>
   150b0:	9742                	add	a4,a4,a6
   150b2:	01076463          	bltu	a4,a6,150ba <__umoddi3+0x11a>
   150b6:	26d76a63          	bltu	a4,a3,1532a <__umoddi3+0x38a>
   150ba:	8f15                	sub	a4,a4,a3
   150bc:	02c75533          	divu	a0,a4,a2
   150c0:	0342                	slli	t1,t1,0x10
   150c2:	01035313          	srli	t1,t1,0x10
   150c6:	02c77733          	remu	a4,a4,a2
   150ca:	03c50533          	mul	a0,a0,t3
   150ce:	0742                	slli	a4,a4,0x10
   150d0:	006767b3          	or	a5,a4,t1
   150d4:	00a7f863          	bgeu	a5,a0,150e4 <__umoddi3+0x144>
   150d8:	97c2                	add	a5,a5,a6
   150da:	0107e563          	bltu	a5,a6,150e4 <__umoddi3+0x144>
   150de:	00a7f363          	bgeu	a5,a0,150e4 <__umoddi3+0x144>
   150e2:	97c2                	add	a5,a5,a6
   150e4:	40a78533          	sub	a0,a5,a0
   150e8:	01155533          	srl	a0,a0,a7
   150ec:	4581                	li	a1,0
   150ee:	8082                	ret
   150f0:	882a                	mv	a6,a0
   150f2:	f4d5eee3          	bltu	a1,a3,1504e <__umoddi3+0xae>
   150f6:	67c1                	lui	a5,0x10
   150f8:	04f6e563          	bltu	a3,a5,15142 <__umoddi3+0x1a2>
   150fc:	010007b7          	lui	a5,0x1000
   15100:	20f6e263          	bltu	a3,a5,15304 <__umoddi3+0x364>
   15104:	0186d313          	srli	t1,a3,0x18
   15108:	48e1                	li	a7,24
   1510a:	00001797          	auipc	a5,0x1
   1510e:	6b678793          	addi	a5,a5,1718 # 167c0 <__clz_tab>
   15112:	979a                	add	a5,a5,t1
   15114:	0007ce03          	lbu	t3,0(a5)
   15118:	02000313          	li	t1,32
   1511c:	9e46                	add	t3,t3,a7
   1511e:	41c30333          	sub	t1,t1,t3
   15122:	04031963          	bnez	t1,15174 <__umoddi3+0x1d4>
   15126:	00b6e463          	bltu	a3,a1,1512e <__umoddi3+0x18e>
   1512a:	00c56963          	bltu	a0,a2,1513c <__umoddi3+0x19c>
   1512e:	40c50833          	sub	a6,a0,a2
   15132:	8d95                	sub	a1,a1,a3
   15134:	01053733          	sltu	a4,a0,a6
   15138:	40e58733          	sub	a4,a1,a4
   1513c:	8542                	mv	a0,a6
   1513e:	85ba                	mv	a1,a4
   15140:	8082                	ret
   15142:	0ff00793          	li	a5,255
   15146:	1cd7fb63          	bgeu	a5,a3,1531c <__umoddi3+0x37c>
   1514a:	0086d313          	srli	t1,a3,0x8
   1514e:	48a1                	li	a7,8
   15150:	bf6d                	j	1510a <__umoddi3+0x16a>
   15152:	0ff00713          	li	a4,255
   15156:	86c2                	mv	a3,a6
   15158:	f1077ae3          	bgeu	a4,a6,1506c <__umoddi3+0xcc>
   1515c:	00885693          	srli	a3,a6,0x8
   15160:	47a1                	li	a5,8
   15162:	b729                	j	1506c <__umoddi3+0xcc>
   15164:	010007b7          	lui	a5,0x1000
   15168:	1af66663          	bltu	a2,a5,15314 <__umoddi3+0x374>
   1516c:	01865693          	srli	a3,a2,0x18
   15170:	47e1                	li	a5,24
   15172:	bd99                	j	14fc8 <__umoddi3+0x28>
   15174:	01c657b3          	srl	a5,a2,t3
   15178:	006696b3          	sll	a3,a3,t1
   1517c:	8edd                	or	a3,a3,a5
   1517e:	01c5d8b3          	srl	a7,a1,t3
   15182:	0106d713          	srli	a4,a3,0x10
   15186:	02e8deb3          	divu	t4,a7,a4
   1518a:	01069f13          	slli	t5,a3,0x10
   1518e:	01c557b3          	srl	a5,a0,t3
   15192:	010f5f13          	srli	t5,t5,0x10
   15196:	006595b3          	sll	a1,a1,t1
   1519a:	8ddd                	or	a1,a1,a5
   1519c:	0105d813          	srli	a6,a1,0x10
   151a0:	00661633          	sll	a2,a2,t1
   151a4:	00651533          	sll	a0,a0,t1
   151a8:	02e8f8b3          	remu	a7,a7,a4
   151ac:	03df07b3          	mul	a5,t5,t4
   151b0:	08c2                	slli	a7,a7,0x10
   151b2:	0108e833          	or	a6,a7,a6
   151b6:	00f87b63          	bgeu	a6,a5,151cc <__umoddi3+0x22c>
   151ba:	9836                	add	a6,a6,a3
   151bc:	fffe8893          	addi	a7,t4,-1
   151c0:	16d86363          	bltu	a6,a3,15326 <__umoddi3+0x386>
   151c4:	16f87163          	bgeu	a6,a5,15326 <__umoddi3+0x386>
   151c8:	1ef9                	addi	t4,t4,-2
   151ca:	9836                	add	a6,a6,a3
   151cc:	40f80833          	sub	a6,a6,a5
   151d0:	02e857b3          	divu	a5,a6,a4
   151d4:	05c2                	slli	a1,a1,0x10
   151d6:	81c1                	srli	a1,a1,0x10
   151d8:	02e87833          	remu	a6,a6,a4
   151dc:	02ff0f33          	mul	t5,t5,a5
   151e0:	01081713          	slli	a4,a6,0x10
   151e4:	8f4d                	or	a4,a4,a1
   151e6:	01e77b63          	bgeu	a4,t5,151fc <__umoddi3+0x25c>
   151ea:	9736                	add	a4,a4,a3
   151ec:	fff78593          	addi	a1,a5,-1 # ffffff <_data_lma+0xfe973f>
   151f0:	12d76963          	bltu	a4,a3,15322 <__umoddi3+0x382>
   151f4:	13e77763          	bgeu	a4,t5,15322 <__umoddi3+0x382>
   151f8:	17f9                	addi	a5,a5,-2
   151fa:	9736                	add	a4,a4,a3
   151fc:	0ec2                	slli	t4,t4,0x10
   151fe:	62c1                	lui	t0,0x10
   15200:	00feeeb3          	or	t4,t4,a5
   15204:	fff28813          	addi	a6,t0,-1 # ffff <MCU_SECTORSIZE+0xefff>
   15208:	010ef8b3          	and	a7,t4,a6
   1520c:	01065593          	srli	a1,a2,0x10
   15210:	010ede93          	srli	t4,t4,0x10
   15214:	01067833          	and	a6,a2,a6
   15218:	03088fb3          	mul	t6,a7,a6
   1521c:	41e70733          	sub	a4,a4,t5
   15220:	030e8833          	mul	a6,t4,a6
   15224:	010fd793          	srli	a5,t6,0x10
   15228:	02b888b3          	mul	a7,a7,a1
   1522c:	98c2                	add	a7,a7,a6
   1522e:	97c6                	add	a5,a5,a7
   15230:	02be8eb3          	mul	t4,t4,a1
   15234:	0107f363          	bgeu	a5,a6,1523a <__umoddi3+0x29a>
   15238:	9e96                	add	t4,t4,t0
   1523a:	6841                	lui	a6,0x10
   1523c:	187d                	addi	a6,a6,-1
   1523e:	0107d593          	srli	a1,a5,0x10
   15242:	0107f7b3          	and	a5,a5,a6
   15246:	07c2                	slli	a5,a5,0x10
   15248:	010fffb3          	and	t6,t6,a6
   1524c:	95f6                	add	a1,a1,t4
   1524e:	97fe                	add	a5,a5,t6
   15250:	0ab76263          	bltu	a4,a1,152f4 <__umoddi3+0x354>
   15254:	08b70e63          	beq	a4,a1,152f0 <__umoddi3+0x350>
   15258:	40f507b3          	sub	a5,a0,a5
   1525c:	00f53533          	sltu	a0,a0,a5
   15260:	40b705b3          	sub	a1,a4,a1
   15264:	8d89                	sub	a1,a1,a0
   15266:	01c59e33          	sll	t3,a1,t3
   1526a:	0067d533          	srl	a0,a5,t1
   1526e:	00ae6533          	or	a0,t3,a0
   15272:	0065d5b3          	srl	a1,a1,t1
   15276:	8082                	ret
   15278:	01181833          	sll	a6,a6,a7
   1527c:	00f5d733          	srl	a4,a1,a5
   15280:	01085613          	srli	a2,a6,0x10
   15284:	02c756b3          	divu	a3,a4,a2
   15288:	01081e13          	slli	t3,a6,0x10
   1528c:	00f557b3          	srl	a5,a0,a5
   15290:	010e5e13          	srli	t3,t3,0x10
   15294:	011595b3          	sll	a1,a1,a7
   15298:	8ddd                	or	a1,a1,a5
   1529a:	0105de93          	srli	t4,a1,0x10
   1529e:	01151333          	sll	t1,a0,a7
   152a2:	02c77733          	remu	a4,a4,a2
   152a6:	02de07b3          	mul	a5,t3,a3
   152aa:	01071693          	slli	a3,a4,0x10
   152ae:	01d6e6b3          	or	a3,a3,t4
   152b2:	00f6f863          	bgeu	a3,a5,152c2 <__umoddi3+0x322>
   152b6:	96c2                	add	a3,a3,a6
   152b8:	0106e563          	bltu	a3,a6,152c2 <__umoddi3+0x322>
   152bc:	00f6f363          	bgeu	a3,a5,152c2 <__umoddi3+0x322>
   152c0:	96c2                	add	a3,a3,a6
   152c2:	8e9d                	sub	a3,a3,a5
   152c4:	02c6d733          	divu	a4,a3,a2
   152c8:	01059793          	slli	a5,a1,0x10
   152cc:	83c1                	srli	a5,a5,0x10
   152ce:	02c6f6b3          	remu	a3,a3,a2
   152d2:	02ee0733          	mul	a4,t3,a4
   152d6:	01069593          	slli	a1,a3,0x10
   152da:	8ddd                	or	a1,a1,a5
   152dc:	00e5f863          	bgeu	a1,a4,152ec <__umoddi3+0x34c>
   152e0:	95c2                	add	a1,a1,a6
   152e2:	0105e563          	bltu	a1,a6,152ec <__umoddi3+0x34c>
   152e6:	00e5f363          	bgeu	a1,a4,152ec <__umoddi3+0x34c>
   152ea:	95c2                	add	a1,a1,a6
   152ec:	8d99                	sub	a1,a1,a4
   152ee:	b36d                	j	15098 <__umoddi3+0xf8>
   152f0:	f6f574e3          	bgeu	a0,a5,15258 <__umoddi3+0x2b8>
   152f4:	40c78633          	sub	a2,a5,a2
   152f8:	00c7b7b3          	sltu	a5,a5,a2
   152fc:	97b6                	add	a5,a5,a3
   152fe:	8d9d                	sub	a1,a1,a5
   15300:	87b2                	mv	a5,a2
   15302:	bf99                	j	15258 <__umoddi3+0x2b8>
   15304:	0106d313          	srli	t1,a3,0x10
   15308:	48c1                	li	a7,16
   1530a:	b501                	j	1510a <__umoddi3+0x16a>
   1530c:	01085693          	srli	a3,a6,0x10
   15310:	47c1                	li	a5,16
   15312:	bba9                	j	1506c <__umoddi3+0xcc>
   15314:	01065693          	srli	a3,a2,0x10
   15318:	47c1                	li	a5,16
   1531a:	b17d                	j	14fc8 <__umoddi3+0x28>
   1531c:	8336                	mv	t1,a3
   1531e:	4881                	li	a7,0
   15320:	b3ed                	j	1510a <__umoddi3+0x16a>
   15322:	87ae                	mv	a5,a1
   15324:	bde1                	j	151fc <__umoddi3+0x25c>
   15326:	8ec6                	mv	t4,a7
   15328:	b555                	j	151cc <__umoddi3+0x22c>
   1532a:	9742                	add	a4,a4,a6
   1532c:	b379                	j	150ba <__umoddi3+0x11a>

0001532e <__eqdf2>:
__eqdf2():
   1532e:	0145d713          	srli	a4,a1,0x14
   15332:	001007b7          	lui	a5,0x100
   15336:	17fd                	addi	a5,a5,-1
   15338:	0146d813          	srli	a6,a3,0x14
   1533c:	7ff77713          	andi	a4,a4,2047
   15340:	7ff00893          	li	a7,2047
   15344:	00b7fe33          	and	t3,a5,a1
   15348:	8eaa                	mv	t4,a0
   1534a:	8ff5                	and	a5,a5,a3
   1534c:	81fd                	srli	a1,a1,0x1f
   1534e:	8f32                	mv	t5,a2
   15350:	7ff87813          	andi	a6,a6,2047
   15354:	82fd                	srli	a3,a3,0x1f
   15356:	01170b63          	beq	a4,a7,1536c <__eqdf2+0x3e>
   1535a:	4305                	li	t1,1
   1535c:	01180663          	beq	a6,a7,15368 <__eqdf2+0x3a>
   15360:	01071463          	bne	a4,a6,15368 <__eqdf2+0x3a>
   15364:	00fe0d63          	beq	t3,a5,1537e <__eqdf2+0x50>
   15368:	851a                	mv	a0,t1
   1536a:	8082                	ret
   1536c:	00ae68b3          	or	a7,t3,a0
   15370:	4305                	li	t1,1
   15372:	fe089be3          	bnez	a7,15368 <__eqdf2+0x3a>
   15376:	fee819e3          	bne	a6,a4,15368 <__eqdf2+0x3a>
   1537a:	8fd1                	or	a5,a5,a2
   1537c:	f7f5                	bnez	a5,15368 <__eqdf2+0x3a>
   1537e:	4305                	li	t1,1
   15380:	ffee94e3          	bne	t4,t5,15368 <__eqdf2+0x3a>
   15384:	4301                	li	t1,0
   15386:	fed581e3          	beq	a1,a3,15368 <__eqdf2+0x3a>
   1538a:	4305                	li	t1,1
   1538c:	ff71                	bnez	a4,15368 <__eqdf2+0x3a>
   1538e:	00ae6533          	or	a0,t3,a0
   15392:	00a03333          	snez	t1,a0
   15396:	bfc9                	j	15368 <__eqdf2+0x3a>

00015398 <__ledf2>:
__ltdf2():
   15398:	0145d713          	srli	a4,a1,0x14
   1539c:	001007b7          	lui	a5,0x100
   153a0:	17fd                	addi	a5,a5,-1
   153a2:	0146d813          	srli	a6,a3,0x14
   153a6:	7ff77713          	andi	a4,a4,2047
   153aa:	7ff00893          	li	a7,2047
   153ae:	00b7fe33          	and	t3,a5,a1
   153b2:	8eaa                	mv	t4,a0
   153b4:	8ff5                	and	a5,a5,a3
   153b6:	81fd                	srli	a1,a1,0x1f
   153b8:	8f32                	mv	t5,a2
   153ba:	7ff87813          	andi	a6,a6,2047
   153be:	82fd                	srli	a3,a3,0x1f
   153c0:	03170e63          	beq	a4,a7,153fc <__ledf2+0x64>
   153c4:	01180d63          	beq	a6,a7,153de <__ledf2+0x46>
   153c8:	e329                	bnez	a4,1540a <__ledf2+0x72>
   153ca:	00ae68b3          	or	a7,t3,a0
   153ce:	00081f63          	bnez	a6,153ec <__ledf2+0x54>
   153d2:	8e5d                	or	a2,a2,a5
   153d4:	ee01                	bnez	a2,153ec <__ledf2+0x54>
   153d6:	4301                	li	t1,0
   153d8:	04088c63          	beqz	a7,15430 <__ledf2+0x98>
   153dc:	a821                	j	153f4 <__ledf2+0x5c>
   153de:	00c7e8b3          	or	a7,a5,a2
   153e2:	4309                	li	t1,2
   153e4:	04089663          	bnez	a7,15430 <__ledf2+0x98>
   153e8:	d36d                	beqz	a4,153ca <__ledf2+0x32>
   153ea:	a005                	j	1540a <__ledf2+0x72>
   153ec:	04088463          	beqz	a7,15434 <__ledf2+0x9c>
   153f0:	02d58563          	beq	a1,a3,1541a <__ledf2+0x82>
   153f4:	4305                	li	t1,1
   153f6:	cd8d                	beqz	a1,15430 <__ledf2+0x98>
   153f8:	537d                	li	t1,-1
   153fa:	a81d                	j	15430 <__ledf2+0x98>
   153fc:	00ae68b3          	or	a7,t3,a0
   15400:	4309                	li	t1,2
   15402:	02089763          	bnez	a7,15430 <__ledf2+0x98>
   15406:	02e80a63          	beq	a6,a4,1543a <__ledf2+0xa2>
   1540a:	00081463          	bnez	a6,15412 <__ledf2+0x7a>
   1540e:	8e5d                	or	a2,a2,a5
   15410:	d275                	beqz	a2,153f4 <__ledf2+0x5c>
   15412:	fed591e3          	bne	a1,a3,153f4 <__ledf2+0x5c>
   15416:	fce84fe3          	blt	a6,a4,153f4 <__ledf2+0x5c>
   1541a:	01074963          	blt	a4,a6,1542c <__ledf2+0x94>
   1541e:	fdc7ebe3          	bltu	a5,t3,153f4 <__ledf2+0x5c>
   15422:	00fe0f63          	beq	t3,a5,15440 <__ledf2+0xa8>
   15426:	4301                	li	t1,0
   15428:	00fe7463          	bgeu	t3,a5,15430 <__ledf2+0x98>
   1542c:	d5f1                	beqz	a1,153f8 <__ledf2+0x60>
   1542e:	4305                	li	t1,1
   15430:	851a                	mv	a0,t1
   15432:	8082                	ret
   15434:	feed                	bnez	a3,1542e <__ledf2+0x96>
   15436:	537d                	li	t1,-1
   15438:	bfe5                	j	15430 <__ledf2+0x98>
   1543a:	8e5d                	or	a2,a2,a5
   1543c:	da79                	beqz	a2,15412 <__ledf2+0x7a>
   1543e:	bfcd                	j	15430 <__ledf2+0x98>
   15440:	fbdf6ae3          	bltu	t5,t4,153f4 <__ledf2+0x5c>
   15444:	4301                	li	t1,0
   15446:	ffeef5e3          	bgeu	t4,t5,15430 <__ledf2+0x98>
   1544a:	f1f5                	bnez	a1,1542e <__ledf2+0x96>
   1544c:	b775                	j	153f8 <__ledf2+0x60>

0001544e <__muldf3>:
__muldf3():
   1544e:	7139                	addi	sp,sp,-64
   15450:	d84a                	sw	s2,48(sp)
   15452:	0145d913          	srli	s2,a1,0x14
   15456:	d64e                	sw	s3,44(sp)
   15458:	d452                	sw	s4,40(sp)
   1545a:	d256                	sw	s5,36(sp)
   1545c:	00c59993          	slli	s3,a1,0xc
   15460:	de06                	sw	ra,60(sp)
   15462:	dc22                	sw	s0,56(sp)
   15464:	da26                	sw	s1,52(sp)
   15466:	d05a                	sw	s6,32(sp)
   15468:	ce5e                	sw	s7,28(sp)
   1546a:	7ff97913          	andi	s2,s2,2047
   1546e:	8a2a                	mv	s4,a0
   15470:	00c9d993          	srli	s3,s3,0xc
   15474:	01f5da93          	srli	s5,a1,0x1f
   15478:	0e090d63          	beqz	s2,15572 <__muldf3+0x124>
   1547c:	7ff00793          	li	a5,2047
   15480:	18f90a63          	beq	s2,a5,15614 <__muldf3+0x1c6>
   15484:	01d55413          	srli	s0,a0,0x1d
   15488:	098e                	slli	s3,s3,0x3
   1548a:	013469b3          	or	s3,s0,s3
   1548e:	00800437          	lui	s0,0x800
   15492:	0089e433          	or	s0,s3,s0
   15496:	00351493          	slli	s1,a0,0x3
   1549a:	c0190913          	addi	s2,s2,-1023
   1549e:	4981                	li	s3,0
   154a0:	4b81                	li	s7,0
   154a2:	0146d713          	srli	a4,a3,0x14
   154a6:	00c69a13          	slli	s4,a3,0xc
   154aa:	7ff77713          	andi	a4,a4,2047
   154ae:	85b2                	mv	a1,a2
   154b0:	00ca5a13          	srli	s4,s4,0xc
   154b4:	01f6db13          	srli	s6,a3,0x1f
   154b8:	10070d63          	beqz	a4,155d2 <__muldf3+0x184>
   154bc:	7ff00793          	li	a5,2047
   154c0:	04f70363          	beq	a4,a5,15506 <__muldf3+0xb8>
   154c4:	01d65793          	srli	a5,a2,0x1d
   154c8:	0a0e                	slli	s4,s4,0x3
   154ca:	0147ea33          	or	s4,a5,s4
   154ce:	c0170713          	addi	a4,a4,-1023
   154d2:	008007b7          	lui	a5,0x800
   154d6:	00fa67b3          	or	a5,s4,a5
   154da:	00361593          	slli	a1,a2,0x3
   154de:	993a                	add	s2,s2,a4
   154e0:	4881                	li	a7,0
   154e2:	016ac733          	xor	a4,s5,s6
   154e6:	46bd                	li	a3,15
   154e8:	853a                	mv	a0,a4
   154ea:	00190813          	addi	a6,s2,1
   154ee:	1736ec63          	bltu	a3,s3,15666 <__muldf3+0x218>
   154f2:	00001617          	auipc	a2,0x1
   154f6:	28e60613          	addi	a2,a2,654 # 16780 <strlen+0x47c>
   154fa:	098a                	slli	s3,s3,0x2
   154fc:	99b2                	add	s3,s3,a2
   154fe:	0009a683          	lw	a3,0(s3)
   15502:	96b2                	add	a3,a3,a2
   15504:	8682                	jr	a3
   15506:	00ca67b3          	or	a5,s4,a2
   1550a:	7ff90913          	addi	s2,s2,2047
   1550e:	12079d63          	bnez	a5,15648 <__muldf3+0x1fa>
   15512:	0029e993          	ori	s3,s3,2
   15516:	4581                	li	a1,0
   15518:	4889                	li	a7,2
   1551a:	b7e1                	j	154e2 <__muldf3+0x94>
   1551c:	4701                	li	a4,0
   1551e:	7ff00793          	li	a5,2047
   15522:	00080437          	lui	s0,0x80
   15526:	4481                	li	s1,0
   15528:	0432                	slli	s0,s0,0xc
   1552a:	07d2                	slli	a5,a5,0x14
   1552c:	8031                	srli	s0,s0,0xc
   1552e:	077e                	slli	a4,a4,0x1f
   15530:	8c5d                	or	s0,s0,a5
   15532:	8c59                	or	s0,s0,a4
   15534:	85a2                	mv	a1,s0
   15536:	50f2                	lw	ra,60(sp)
   15538:	5462                	lw	s0,56(sp)
   1553a:	8526                	mv	a0,s1
   1553c:	5942                	lw	s2,48(sp)
   1553e:	54d2                	lw	s1,52(sp)
   15540:	59b2                	lw	s3,44(sp)
   15542:	5a22                	lw	s4,40(sp)
   15544:	5a92                	lw	s5,36(sp)
   15546:	5b02                	lw	s6,32(sp)
   15548:	4bf2                	lw	s7,28(sp)
   1554a:	6121                	addi	sp,sp,64
   1554c:	8082                	ret
   1554e:	855a                	mv	a0,s6
   15550:	843e                	mv	s0,a5
   15552:	84ae                	mv	s1,a1
   15554:	8bc6                	mv	s7,a7
   15556:	4789                	li	a5,2
   15558:	10fb8163          	beq	s7,a5,1565a <__muldf3+0x20c>
   1555c:	478d                	li	a5,3
   1555e:	fafb8fe3          	beq	s7,a5,1551c <__muldf3+0xce>
   15562:	4785                	li	a5,1
   15564:	872a                	mv	a4,a0
   15566:	3afb9663          	bne	s7,a5,15912 <__muldf3+0x4c4>
   1556a:	4781                	li	a5,0
   1556c:	4401                	li	s0,0
   1556e:	4481                	li	s1,0
   15570:	bf65                	j	15528 <__muldf3+0xda>
   15572:	00a9e433          	or	s0,s3,a0
   15576:	c461                	beqz	s0,1563e <__muldf3+0x1f0>
   15578:	c636                	sw	a3,12(sp)
   1557a:	c432                	sw	a2,8(sp)
   1557c:	2c098263          	beqz	s3,15840 <__muldf3+0x3f2>
   15580:	854e                	mv	a0,s3
   15582:	00001097          	auipc	ra,0x1
   15586:	d0c080e7          	jalr	-756(ra) # 1628e <__clzsi2>
   1558a:	4622                	lw	a2,8(sp)
   1558c:	46b2                	lw	a3,12(sp)
   1558e:	87aa                	mv	a5,a0
   15590:	ff550713          	addi	a4,a0,-11
   15594:	4475                	li	s0,29
   15596:	ff878493          	addi	s1,a5,-8 # 7ffff8 <_data_lma+0x7e9738>
   1559a:	8c19                	sub	s0,s0,a4
   1559c:	009999b3          	sll	s3,s3,s1
   155a0:	008a5433          	srl	s0,s4,s0
   155a4:	01346433          	or	s0,s0,s3
   155a8:	009a14b3          	sll	s1,s4,s1
   155ac:	0146d713          	srli	a4,a3,0x14
   155b0:	c0d00913          	li	s2,-1011
   155b4:	00c69a13          	slli	s4,a3,0xc
   155b8:	7ff77713          	andi	a4,a4,2047
   155bc:	40f90933          	sub	s2,s2,a5
   155c0:	4981                	li	s3,0
   155c2:	4b81                	li	s7,0
   155c4:	85b2                	mv	a1,a2
   155c6:	00ca5a13          	srli	s4,s4,0xc
   155ca:	01f6db13          	srli	s6,a3,0x1f
   155ce:	ee0717e3          	bnez	a4,154bc <__muldf3+0x6e>
   155d2:	00ca67b3          	or	a5,s4,a2
   155d6:	cba1                	beqz	a5,15626 <__muldf3+0x1d8>
   155d8:	240a0163          	beqz	s4,1581a <__muldf3+0x3cc>
   155dc:	8552                	mv	a0,s4
   155de:	c432                	sw	a2,8(sp)
   155e0:	00001097          	auipc	ra,0x1
   155e4:	cae080e7          	jalr	-850(ra) # 1628e <__clzsi2>
   155e8:	4622                	lw	a2,8(sp)
   155ea:	872a                	mv	a4,a0
   155ec:	ff550693          	addi	a3,a0,-11
   155f0:	47f5                	li	a5,29
   155f2:	ff870593          	addi	a1,a4,-8
   155f6:	8f95                	sub	a5,a5,a3
   155f8:	00ba1a33          	sll	s4,s4,a1
   155fc:	00f657b3          	srl	a5,a2,a5
   15600:	0147e7b3          	or	a5,a5,s4
   15604:	00b615b3          	sll	a1,a2,a1
   15608:	40e90933          	sub	s2,s2,a4
   1560c:	c0d90913          	addi	s2,s2,-1011
   15610:	4881                	li	a7,0
   15612:	bdc1                	j	154e2 <__muldf3+0x94>
   15614:	00a9e433          	or	s0,s3,a0
   15618:	ec01                	bnez	s0,15630 <__muldf3+0x1e2>
   1561a:	49a1                	li	s3,8
   1561c:	4481                	li	s1,0
   1561e:	7ff00913          	li	s2,2047
   15622:	4b89                	li	s7,2
   15624:	bdbd                	j	154a2 <__muldf3+0x54>
   15626:	0019e993          	ori	s3,s3,1
   1562a:	4581                	li	a1,0
   1562c:	4885                	li	a7,1
   1562e:	bd55                	j	154e2 <__muldf3+0x94>
   15630:	844e                	mv	s0,s3
   15632:	84aa                	mv	s1,a0
   15634:	49b1                	li	s3,12
   15636:	7ff00913          	li	s2,2047
   1563a:	4b8d                	li	s7,3
   1563c:	b59d                	j	154a2 <__muldf3+0x54>
   1563e:	4991                	li	s3,4
   15640:	4481                	li	s1,0
   15642:	4901                	li	s2,0
   15644:	4b85                	li	s7,1
   15646:	bdb1                	j	154a2 <__muldf3+0x54>
   15648:	0039e993          	ori	s3,s3,3
   1564c:	87d2                	mv	a5,s4
   1564e:	488d                	li	a7,3
   15650:	bd49                	j	154e2 <__muldf3+0x94>
   15652:	4789                	li	a5,2
   15654:	8556                	mv	a0,s5
   15656:	f0fb93e3          	bne	s7,a5,1555c <__muldf3+0x10e>
   1565a:	872a                	mv	a4,a0
   1565c:	7ff00793          	li	a5,2047
   15660:	4401                	li	s0,0
   15662:	4481                	li	s1,0
   15664:	b5d1                	j	15528 <__muldf3+0xda>
   15666:	6ec1                	lui	t4,0x10
   15668:	fffe8613          	addi	a2,t4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   1566c:	0104d693          	srli	a3,s1,0x10
   15670:	0105de13          	srli	t3,a1,0x10
   15674:	8cf1                	and	s1,s1,a2
   15676:	8df1                	and	a1,a1,a2
   15678:	02958633          	mul	a2,a1,s1
   1567c:	02b68333          	mul	t1,a3,a1
   15680:	01065893          	srli	a7,a2,0x10
   15684:	029e0533          	mul	a0,t3,s1
   15688:	951a                	add	a0,a0,t1
   1568a:	98aa                	add	a7,a7,a0
   1568c:	03c682b3          	mul	t0,a3,t3
   15690:	0068f363          	bgeu	a7,t1,15696 <__muldf3+0x248>
   15694:	92f6                	add	t0,t0,t4
   15696:	6fc1                	lui	t6,0x10
   15698:	ffff8313          	addi	t1,t6,-1 # ffff <MCU_SECTORSIZE+0xefff>
   1569c:	0067f533          	and	a0,a5,t1
   156a0:	0107d393          	srli	t2,a5,0x10
   156a4:	0068f7b3          	and	a5,a7,t1
   156a8:	07c2                	slli	a5,a5,0x10
   156aa:	00667333          	and	t1,a2,t1
   156ae:	933e                	add	t1,t1,a5
   156b0:	02950633          	mul	a2,a0,s1
   156b4:	0108d893          	srli	a7,a7,0x10
   156b8:	02a687b3          	mul	a5,a3,a0
   156bc:	01065f13          	srli	t5,a2,0x10
   156c0:	029384b3          	mul	s1,t2,s1
   156c4:	94be                	add	s1,s1,a5
   156c6:	94fa                	add	s1,s1,t5
   156c8:	02768eb3          	mul	t4,a3,t2
   156cc:	00f4f363          	bgeu	s1,a5,156d2 <__muldf3+0x284>
   156d0:	9efe                	add	t4,t4,t6
   156d2:	6a41                	lui	s4,0x10
   156d4:	fffa0793          	addi	a5,s4,-1 # ffff <MCU_SECTORSIZE+0xefff>
   156d8:	01045f93          	srli	t6,s0,0x10
   156dc:	00f476b3          	and	a3,s0,a5
   156e0:	00f4f9b3          	and	s3,s1,a5
   156e4:	8e7d                	and	a2,a2,a5
   156e6:	80c1                	srli	s1,s1,0x10
   156e8:	02d58433          	mul	s0,a1,a3
   156ec:	09c2                	slli	s3,s3,0x10
   156ee:	01d48f33          	add	t5,s1,t4
   156f2:	99b2                	add	s3,s3,a2
   156f4:	98ce                	add	a7,a7,s3
   156f6:	02de07b3          	mul	a5,t3,a3
   156fa:	01045e93          	srli	t4,s0,0x10
   156fe:	02bf85b3          	mul	a1,t6,a1
   15702:	97ae                	add	a5,a5,a1
   15704:	9ebe                	add	t4,t4,a5
   15706:	03fe0e33          	mul	t3,t3,t6
   1570a:	00bef363          	bgeu	t4,a1,15710 <__muldf3+0x2c2>
   1570e:	9e52                	add	t3,t3,s4
   15710:	67c1                	lui	a5,0x10
   15712:	fff78593          	addi	a1,a5,-1 # ffff <MCU_SECTORSIZE+0xefff>
   15716:	00bef633          	and	a2,t4,a1
   1571a:	8c6d                	and	s0,s0,a1
   1571c:	0642                	slli	a2,a2,0x10
   1571e:	9622                	add	a2,a2,s0
   15720:	010ede93          	srli	t4,t4,0x10
   15724:	02d505b3          	mul	a1,a0,a3
   15728:	9e76                	add	t3,t3,t4
   1572a:	02af8533          	mul	a0,t6,a0
   1572e:	0105d413          	srli	s0,a1,0x10
   15732:	02d386b3          	mul	a3,t2,a3
   15736:	96aa                	add	a3,a3,a0
   15738:	96a2                	add	a3,a3,s0
   1573a:	03f38fb3          	mul	t6,t2,t6
   1573e:	00a6f363          	bgeu	a3,a0,15744 <__muldf3+0x2f6>
   15742:	9fbe                	add	t6,t6,a5
   15744:	6541                	lui	a0,0x10
   15746:	157d                	addi	a0,a0,-1
   15748:	00a6f7b3          	and	a5,a3,a0
   1574c:	07c2                	slli	a5,a5,0x10
   1574e:	8d6d                	and	a0,a0,a1
   15750:	97aa                	add	a5,a5,a0
   15752:	005885b3          	add	a1,a7,t0
   15756:	0135b9b3          	sltu	s3,a1,s3
   1575a:	97fa                	add	a5,a5,t5
   1575c:	95b2                	add	a1,a1,a2
   1575e:	01378433          	add	s0,a5,s3
   15762:	00c5b633          	sltu	a2,a1,a2
   15766:	01c40eb3          	add	t4,s0,t3
   1576a:	00ce8533          	add	a0,t4,a2
   1576e:	01343433          	sltu	s0,s0,s3
   15772:	01e7b7b3          	sltu	a5,a5,t5
   15776:	8fc1                	or	a5,a5,s0
   15778:	01cebe33          	sltu	t3,t4,t3
   1577c:	0106d413          	srli	s0,a3,0x10
   15780:	00c53633          	sltu	a2,a0,a2
   15784:	943e                	add	s0,s0,a5
   15786:	00ce6633          	or	a2,t3,a2
   1578a:	00959493          	slli	s1,a1,0x9
   1578e:	9432                	add	s0,s0,a2
   15790:	947e                	add	s0,s0,t6
   15792:	0064e4b3          	or	s1,s1,t1
   15796:	0426                	slli	s0,s0,0x9
   15798:	01755693          	srli	a3,a0,0x17
   1579c:	009034b3          	snez	s1,s1
   157a0:	81dd                	srli	a1,a1,0x17
   157a2:	00951793          	slli	a5,a0,0x9
   157a6:	8ccd                	or	s1,s1,a1
   157a8:	8c55                	or	s0,s0,a3
   157aa:	8cdd                	or	s1,s1,a5
   157ac:	00741793          	slli	a5,s0,0x7
   157b0:	0007db63          	bgez	a5,157c6 <__muldf3+0x378>
   157b4:	0014d793          	srli	a5,s1,0x1
   157b8:	8885                	andi	s1,s1,1
   157ba:	01f41693          	slli	a3,s0,0x1f
   157be:	8cdd                	or	s1,s1,a5
   157c0:	8cd5                	or	s1,s1,a3
   157c2:	8005                	srli	s0,s0,0x1
   157c4:	8942                	mv	s2,a6
   157c6:	3ff90793          	addi	a5,s2,1023
   157ca:	08f05d63          	blez	a5,15864 <__muldf3+0x416>
   157ce:	0074f693          	andi	a3,s1,7
   157d2:	ce81                	beqz	a3,157ea <__muldf3+0x39c>
   157d4:	00f4f693          	andi	a3,s1,15
   157d8:	4611                	li	a2,4
   157da:	00c68863          	beq	a3,a2,157ea <__muldf3+0x39c>
   157de:	00448693          	addi	a3,s1,4
   157e2:	0096b4b3          	sltu	s1,a3,s1
   157e6:	9426                	add	s0,s0,s1
   157e8:	84b6                	mv	s1,a3
   157ea:	00741693          	slli	a3,s0,0x7
   157ee:	0006d863          	bgez	a3,157fe <__muldf3+0x3b0>
   157f2:	ff0007b7          	lui	a5,0xff000
   157f6:	17fd                	addi	a5,a5,-1
   157f8:	8c7d                	and	s0,s0,a5
   157fa:	40090793          	addi	a5,s2,1024
   157fe:	7fe00693          	li	a3,2046
   15802:	10f6c363          	blt	a3,a5,15908 <__muldf3+0x4ba>
   15806:	0034d693          	srli	a3,s1,0x3
   1580a:	01d41493          	slli	s1,s0,0x1d
   1580e:	0426                	slli	s0,s0,0x9
   15810:	8cd5                	or	s1,s1,a3
   15812:	8031                	srli	s0,s0,0xc
   15814:	7ff7f793          	andi	a5,a5,2047
   15818:	bb01                	j	15528 <__muldf3+0xda>
   1581a:	8532                	mv	a0,a2
   1581c:	c432                	sw	a2,8(sp)
   1581e:	00001097          	auipc	ra,0x1
   15822:	a70080e7          	jalr	-1424(ra) # 1628e <__clzsi2>
   15826:	01550693          	addi	a3,a0,21 # 10015 <MCU_SECTORSIZE+0xf015>
   1582a:	47f1                	li	a5,28
   1582c:	02050713          	addi	a4,a0,32
   15830:	4622                	lw	a2,8(sp)
   15832:	dad7dfe3          	bge	a5,a3,155f0 <__muldf3+0x1a2>
   15836:	1561                	addi	a0,a0,-8
   15838:	00a617b3          	sll	a5,a2,a0
   1583c:	4581                	li	a1,0
   1583e:	b3e9                	j	15608 <__muldf3+0x1ba>
   15840:	00001097          	auipc	ra,0x1
   15844:	a4e080e7          	jalr	-1458(ra) # 1628e <__clzsi2>
   15848:	01550713          	addi	a4,a0,21
   1584c:	45f1                	li	a1,28
   1584e:	02050793          	addi	a5,a0,32
   15852:	4622                	lw	a2,8(sp)
   15854:	46b2                	lw	a3,12(sp)
   15856:	d2e5dfe3          	bge	a1,a4,15594 <__muldf3+0x146>
   1585a:	1561                	addi	a0,a0,-8
   1585c:	00aa1433          	sll	s0,s4,a0
   15860:	4481                	li	s1,0
   15862:	b3a9                	j	155ac <__muldf3+0x15e>
   15864:	4685                	li	a3,1
   15866:	8e9d                	sub	a3,a3,a5
   15868:	e7b1                	bnez	a5,158b4 <__muldf3+0x466>
   1586a:	41e90913          	addi	s2,s2,1054
   1586e:	012497b3          	sll	a5,s1,s2
   15872:	00d4d4b3          	srl	s1,s1,a3
   15876:	01241933          	sll	s2,s0,s2
   1587a:	00f037b3          	snez	a5,a5
   1587e:	009964b3          	or	s1,s2,s1
   15882:	8cdd                	or	s1,s1,a5
   15884:	0074f793          	andi	a5,s1,7
   15888:	00d456b3          	srl	a3,s0,a3
   1588c:	cf81                	beqz	a5,158a4 <__muldf3+0x456>
   1588e:	00f4f793          	andi	a5,s1,15
   15892:	4611                	li	a2,4
   15894:	00c78863          	beq	a5,a2,158a4 <__muldf3+0x456>
   15898:	00448793          	addi	a5,s1,4
   1589c:	0097b4b3          	sltu	s1,a5,s1
   158a0:	96a6                	add	a3,a3,s1
   158a2:	84be                	mv	s1,a5
   158a4:	00869793          	slli	a5,a3,0x8
   158a8:	0407d863          	bgez	a5,158f8 <__muldf3+0x4aa>
   158ac:	4785                	li	a5,1
   158ae:	4401                	li	s0,0
   158b0:	4481                	li	s1,0
   158b2:	b99d                	j	15528 <__muldf3+0xda>
   158b4:	03800613          	li	a2,56
   158b8:	cad649e3          	blt	a2,a3,1556a <__muldf3+0x11c>
   158bc:	467d                	li	a2,31
   158be:	fad656e3          	bge	a2,a3,1586a <__muldf3+0x41c>
   158c2:	5605                	li	a2,-31
   158c4:	40f607b3          	sub	a5,a2,a5
   158c8:	02000593          	li	a1,32
   158cc:	00f45633          	srl	a2,s0,a5
   158d0:	00b68763          	beq	a3,a1,158de <__muldf3+0x490>
   158d4:	43e90913          	addi	s2,s2,1086
   158d8:	012417b3          	sll	a5,s0,s2
   158dc:	8cdd                	or	s1,s1,a5
   158de:	009034b3          	snez	s1,s1
   158e2:	8cd1                	or	s1,s1,a2
   158e4:	0074f693          	andi	a3,s1,7
   158e8:	4401                	li	s0,0
   158ea:	ca99                	beqz	a3,15900 <__muldf3+0x4b2>
   158ec:	00f4f793          	andi	a5,s1,15
   158f0:	4611                	li	a2,4
   158f2:	4681                	li	a3,0
   158f4:	fac792e3          	bne	a5,a2,15898 <__muldf3+0x44a>
   158f8:	00969413          	slli	s0,a3,0x9
   158fc:	8031                	srli	s0,s0,0xc
   158fe:	06f6                	slli	a3,a3,0x1d
   15900:	808d                	srli	s1,s1,0x3
   15902:	8cd5                	or	s1,s1,a3
   15904:	4781                	li	a5,0
   15906:	b10d                	j	15528 <__muldf3+0xda>
   15908:	7ff00793          	li	a5,2047
   1590c:	4401                	li	s0,0
   1590e:	4481                	li	s1,0
   15910:	b921                	j	15528 <__muldf3+0xda>
   15912:	8942                	mv	s2,a6
   15914:	bd4d                	j	157c6 <__muldf3+0x378>

00015916 <__subdf3>:
__subdf3():
   15916:	00100737          	lui	a4,0x100
   1591a:	177d                	addi	a4,a4,-1
   1591c:	1101                	addi	sp,sp,-32
   1591e:	00b77333          	and	t1,a4,a1
   15922:	0146d893          	srli	a7,a3,0x14
   15926:	8f75                	and	a4,a4,a3
   15928:	01d65e93          	srli	t4,a2,0x1d
   1592c:	cc22                	sw	s0,24(sp)
   1592e:	ca26                	sw	s1,20(sp)
   15930:	030e                	slli	t1,t1,0x3
   15932:	0145d493          	srli	s1,a1,0x14
   15936:	01d55793          	srli	a5,a0,0x1d
   1593a:	070e                	slli	a4,a4,0x3
   1593c:	ce06                	sw	ra,28(sp)
   1593e:	c84a                	sw	s2,16(sp)
   15940:	c64e                	sw	s3,12(sp)
   15942:	7ff8f893          	andi	a7,a7,2047
   15946:	7ff00e13          	li	t3,2047
   1594a:	00eee733          	or	a4,t4,a4
   1594e:	7ff4f493          	andi	s1,s1,2047
   15952:	01f5d413          	srli	s0,a1,0x1f
   15956:	0067e333          	or	t1,a5,t1
   1595a:	00351f13          	slli	t5,a0,0x3
   1595e:	82fd                	srli	a3,a3,0x1f
   15960:	00361e93          	slli	t4,a2,0x3
   15964:	19c88263          	beq	a7,t3,15ae8 <__subdf3+0x1d2>
   15968:	0016c693          	xori	a3,a3,1
   1596c:	411485b3          	sub	a1,s1,a7
   15970:	12d40763          	beq	s0,a3,15a9e <__subdf3+0x188>
   15974:	18b05363          	blez	a1,15afa <__subdf3+0x1e4>
   15978:	1a088d63          	beqz	a7,15b32 <__subdf3+0x21c>
   1597c:	008007b7          	lui	a5,0x800
   15980:	8f5d                	or	a4,a4,a5
   15982:	59c48563          	beq	s1,t3,15f0c <__subdf3+0x5f6>
   15986:	03800793          	li	a5,56
   1598a:	34b7c863          	blt	a5,a1,15cda <__subdf3+0x3c4>
   1598e:	47fd                	li	a5,31
   15990:	48b7c963          	blt	a5,a1,15e22 <__subdf3+0x50c>
   15994:	02000793          	li	a5,32
   15998:	8f8d                	sub	a5,a5,a1
   1599a:	00bed9b3          	srl	s3,t4,a1
   1599e:	00f71833          	sll	a6,a4,a5
   159a2:	00fe9eb3          	sll	t4,t4,a5
   159a6:	01386833          	or	a6,a6,s3
   159aa:	00b75733          	srl	a4,a4,a1
   159ae:	01d039b3          	snez	s3,t4
   159b2:	01386833          	or	a6,a6,s3
   159b6:	40e30333          	sub	t1,t1,a4
   159ba:	410f09b3          	sub	s3,t5,a6
   159be:	013f37b3          	sltu	a5,t5,s3
   159c2:	40f30633          	sub	a2,t1,a5
   159c6:	00861793          	slli	a5,a2,0x8
   159ca:	2407d563          	bgez	a5,15c14 <__subdf3+0x2fe>
   159ce:	00800937          	lui	s2,0x800
   159d2:	197d                	addi	s2,s2,-1
   159d4:	01267933          	and	s2,a2,s2
   159d8:	2e090163          	beqz	s2,15cba <__subdf3+0x3a4>
   159dc:	854a                	mv	a0,s2
   159de:	00001097          	auipc	ra,0x1
   159e2:	8b0080e7          	jalr	-1872(ra) # 1628e <__clzsi2>
   159e6:	ff850713          	addi	a4,a0,-8
   159ea:	02000793          	li	a5,32
   159ee:	8f99                	sub	a5,a5,a4
   159f0:	00f9d7b3          	srl	a5,s3,a5
   159f4:	00e91633          	sll	a2,s2,a4
   159f8:	8fd1                	or	a5,a5,a2
   159fa:	00e999b3          	sll	s3,s3,a4
   159fe:	2a974463          	blt	a4,s1,15ca6 <__subdf3+0x390>
   15a02:	8f05                	sub	a4,a4,s1
   15a04:	00170613          	addi	a2,a4,1 # 100001 <_data_lma+0xe9741>
   15a08:	46fd                	li	a3,31
   15a0a:	3ac6c763          	blt	a3,a2,15db8 <__subdf3+0x4a2>
   15a0e:	02000713          	li	a4,32
   15a12:	8f11                	sub	a4,a4,a2
   15a14:	00c9d6b3          	srl	a3,s3,a2
   15a18:	00e99833          	sll	a6,s3,a4
   15a1c:	00e79733          	sll	a4,a5,a4
   15a20:	8f55                	or	a4,a4,a3
   15a22:	01003833          	snez	a6,a6
   15a26:	010769b3          	or	s3,a4,a6
   15a2a:	00c7d633          	srl	a2,a5,a2
   15a2e:	4481                	li	s1,0
   15a30:	0079f793          	andi	a5,s3,7
   15a34:	cf81                	beqz	a5,15a4c <__subdf3+0x136>
   15a36:	00f9f693          	andi	a3,s3,15
   15a3a:	4791                	li	a5,4
   15a3c:	00f68863          	beq	a3,a5,15a4c <__subdf3+0x136>
   15a40:	00498693          	addi	a3,s3,4
   15a44:	0136b833          	sltu	a6,a3,s3
   15a48:	9642                	add	a2,a2,a6
   15a4a:	89b6                	mv	s3,a3
   15a4c:	00861793          	slli	a5,a2,0x8
   15a50:	1c07d663          	bgez	a5,15c1c <__subdf3+0x306>
   15a54:	00148713          	addi	a4,s1,1
   15a58:	7ff00793          	li	a5,2047
   15a5c:	8805                	andi	s0,s0,1
   15a5e:	20f70663          	beq	a4,a5,15c6a <__subdf3+0x354>
   15a62:	ff8007b7          	lui	a5,0xff800
   15a66:	17fd                	addi	a5,a5,-1
   15a68:	8ff1                	and	a5,a5,a2
   15a6a:	01d79813          	slli	a6,a5,0x1d
   15a6e:	0039d993          	srli	s3,s3,0x3
   15a72:	07a6                	slli	a5,a5,0x9
   15a74:	01386833          	or	a6,a6,s3
   15a78:	83b1                	srli	a5,a5,0xc
   15a7a:	7ff77713          	andi	a4,a4,2047
   15a7e:	00c79693          	slli	a3,a5,0xc
   15a82:	0752                	slli	a4,a4,0x14
   15a84:	82b1                	srli	a3,a3,0xc
   15a86:	047e                	slli	s0,s0,0x1f
   15a88:	8ed9                	or	a3,a3,a4
   15a8a:	8ec1                	or	a3,a3,s0
   15a8c:	40f2                	lw	ra,28(sp)
   15a8e:	4462                	lw	s0,24(sp)
   15a90:	44d2                	lw	s1,20(sp)
   15a92:	4942                	lw	s2,16(sp)
   15a94:	49b2                	lw	s3,12(sp)
   15a96:	8542                	mv	a0,a6
   15a98:	85b6                	mv	a1,a3
   15a9a:	6105                	addi	sp,sp,32
   15a9c:	8082                	ret
   15a9e:	0ab05663          	blez	a1,15b4a <__subdf3+0x234>
   15aa2:	12088a63          	beqz	a7,15bd6 <__subdf3+0x2c0>
   15aa6:	008007b7          	lui	a5,0x800
   15aaa:	8f5d                	or	a4,a4,a5
   15aac:	2dc48963          	beq	s1,t3,15d7e <__subdf3+0x468>
   15ab0:	03800793          	li	a5,56
   15ab4:	18b7c763          	blt	a5,a1,15c42 <__subdf3+0x32c>
   15ab8:	47fd                	li	a5,31
   15aba:	3cb7d463          	bge	a5,a1,15e82 <__subdf3+0x56c>
   15abe:	fe058813          	addi	a6,a1,-32
   15ac2:	02000793          	li	a5,32
   15ac6:	010759b3          	srl	s3,a4,a6
   15aca:	00f58a63          	beq	a1,a5,15ade <__subdf3+0x1c8>
   15ace:	04000793          	li	a5,64
   15ad2:	40b785b3          	sub	a1,a5,a1
   15ad6:	00b71733          	sll	a4,a4,a1
   15ada:	00eeeeb3          	or	t4,t4,a4
   15ade:	01d03833          	snez	a6,t4
   15ae2:	01386833          	or	a6,a6,s3
   15ae6:	a295                	j	15c4a <__subdf3+0x334>
   15ae8:	01d767b3          	or	a5,a4,t4
   15aec:	80148593          	addi	a1,s1,-2047
   15af0:	e399                	bnez	a5,15af6 <__subdf3+0x1e0>
   15af2:	0016c693          	xori	a3,a3,1
   15af6:	04d40a63          	beq	s0,a3,15b4a <__subdf3+0x234>
   15afa:	e1d1                	bnez	a1,15b7e <__subdf3+0x268>
   15afc:	00148793          	addi	a5,s1,1
   15b00:	7fe7f793          	andi	a5,a5,2046
   15b04:	1e079b63          	bnez	a5,15cfa <__subdf3+0x3e4>
   15b08:	01e367b3          	or	a5,t1,t5
   15b0c:	01d76833          	or	a6,a4,t4
   15b10:	16049263          	bnez	s1,15c74 <__subdf3+0x35e>
   15b14:	3c078463          	beqz	a5,15edc <__subdf3+0x5c6>
   15b18:	42081863          	bnez	a6,15f48 <__subdf3+0x632>
   15b1c:	00351813          	slli	a6,a0,0x3
   15b20:	01d31693          	slli	a3,t1,0x1d
   15b24:	00385813          	srli	a6,a6,0x3
   15b28:	0106e833          	or	a6,a3,a6
   15b2c:	00335793          	srli	a5,t1,0x3
   15b30:	a219                	j	15c36 <__subdf3+0x320>
   15b32:	01d767b3          	or	a5,a4,t4
   15b36:	1a078763          	beqz	a5,15ce4 <__subdf3+0x3ce>
   15b3a:	fff58793          	addi	a5,a1,-1
   15b3e:	3a078d63          	beqz	a5,15ef8 <__subdf3+0x5e2>
   15b42:	23c58e63          	beq	a1,t3,15d7e <__subdf3+0x468>
   15b46:	85be                	mv	a1,a5
   15b48:	bd3d                	j	15986 <__subdf3+0x70>
   15b4a:	1c059b63          	bnez	a1,15d20 <__subdf3+0x40a>
   15b4e:	00148693          	addi	a3,s1,1
   15b52:	7fe6f793          	andi	a5,a3,2046
   15b56:	efc1                	bnez	a5,15bee <__subdf3+0x2d8>
   15b58:	01e367b3          	or	a5,t1,t5
   15b5c:	36049263          	bnez	s1,15ec0 <__subdf3+0x5aa>
   15b60:	44078f63          	beqz	a5,15fbe <__subdf3+0x6a8>
   15b64:	01d767b3          	or	a5,a4,t4
   15b68:	46079663          	bnez	a5,15fd4 <__subdf3+0x6be>
   15b6c:	050e                	slli	a0,a0,0x3
   15b6e:	01d31813          	slli	a6,t1,0x1d
   15b72:	810d                	srli	a0,a0,0x3
   15b74:	00a86833          	or	a6,a6,a0
   15b78:	00335793          	srli	a5,t1,0x3
   15b7c:	a86d                	j	15c36 <__subdf3+0x320>
   15b7e:	409885b3          	sub	a1,a7,s1
   15b82:	20049963          	bnez	s1,15d94 <__subdf3+0x47e>
   15b86:	01e367b3          	or	a5,t1,t5
   15b8a:	30078f63          	beqz	a5,15ea8 <__subdf3+0x592>
   15b8e:	fff58793          	addi	a5,a1,-1
   15b92:	40078b63          	beqz	a5,15fa8 <__subdf3+0x692>
   15b96:	7ff00513          	li	a0,2047
   15b9a:	20a58563          	beq	a1,a0,15da4 <__subdf3+0x48e>
   15b9e:	85be                	mv	a1,a5
   15ba0:	03800793          	li	a5,56
   15ba4:	2ab7c463          	blt	a5,a1,15e4c <__subdf3+0x536>
   15ba8:	47fd                	li	a5,31
   15baa:	3cb7ca63          	blt	a5,a1,15f7e <__subdf3+0x668>
   15bae:	02000793          	li	a5,32
   15bb2:	8f8d                	sub	a5,a5,a1
   15bb4:	00f31833          	sll	a6,t1,a5
   15bb8:	00bf5633          	srl	a2,t5,a1
   15bbc:	00ff17b3          	sll	a5,t5,a5
   15bc0:	00c86833          	or	a6,a6,a2
   15bc4:	00f039b3          	snez	s3,a5
   15bc8:	00b35333          	srl	t1,t1,a1
   15bcc:	01386833          	or	a6,a6,s3
   15bd0:	40670733          	sub	a4,a4,t1
   15bd4:	a441                	j	15e54 <__subdf3+0x53e>
   15bd6:	01d767b3          	or	a5,a4,t4
   15bda:	10078563          	beqz	a5,15ce4 <__subdf3+0x3ce>
   15bde:	fff58793          	addi	a5,a1,-1
   15be2:	20078163          	beqz	a5,15de4 <__subdf3+0x4ce>
   15be6:	2fc58263          	beq	a1,t3,15eca <__subdf3+0x5b4>
   15bea:	85be                	mv	a1,a5
   15bec:	b5d1                	j	15ab0 <__subdf3+0x19a>
   15bee:	7ff00793          	li	a5,2047
   15bf2:	06f68b63          	beq	a3,a5,15c68 <__subdf3+0x352>
   15bf6:	9efa                	add	t4,t4,t5
   15bf8:	01eeb633          	sltu	a2,t4,t5
   15bfc:	00e307b3          	add	a5,t1,a4
   15c00:	97b2                	add	a5,a5,a2
   15c02:	01f79813          	slli	a6,a5,0x1f
   15c06:	001ede93          	srli	t4,t4,0x1
   15c0a:	01d869b3          	or	s3,a6,t4
   15c0e:	0017d613          	srli	a2,a5,0x1
   15c12:	84b6                	mv	s1,a3
   15c14:	0079f793          	andi	a5,s3,7
   15c18:	e0079fe3          	bnez	a5,15a36 <__subdf3+0x120>
   15c1c:	01d61793          	slli	a5,a2,0x1d
   15c20:	0039d813          	srli	a6,s3,0x3
   15c24:	00f86833          	or	a6,a6,a5
   15c28:	85a6                	mv	a1,s1
   15c2a:	00365793          	srli	a5,a2,0x3
   15c2e:	7ff00713          	li	a4,2047
   15c32:	06e58063          	beq	a1,a4,15c92 <__subdf3+0x37c>
   15c36:	07b2                	slli	a5,a5,0xc
   15c38:	83b1                	srli	a5,a5,0xc
   15c3a:	7ff5f713          	andi	a4,a1,2047
   15c3e:	8805                	andi	s0,s0,1
   15c40:	bd3d                	j	15a7e <__subdf3+0x168>
   15c42:	01d76733          	or	a4,a4,t4
   15c46:	00e03833          	snez	a6,a4
   15c4a:	01e809b3          	add	s3,a6,t5
   15c4e:	01e9b7b3          	sltu	a5,s3,t5
   15c52:	00678633          	add	a2,a5,t1
   15c56:	00861793          	slli	a5,a2,0x8
   15c5a:	fa07dde3          	bgez	a5,15c14 <__subdf3+0x2fe>
   15c5e:	0485                	addi	s1,s1,1
   15c60:	7ff00793          	li	a5,2047
   15c64:	18f49e63          	bne	s1,a5,15e00 <__subdf3+0x4ea>
   15c68:	8805                	andi	s0,s0,1
   15c6a:	7ff00713          	li	a4,2047
   15c6e:	4781                	li	a5,0
   15c70:	4801                	li	a6,0
   15c72:	b531                	j	15a7e <__subdf3+0x168>
   15c74:	10079363          	bnez	a5,15d7a <__subdf3+0x464>
   15c78:	3c080363          	beqz	a6,1603e <__subdf3+0x728>
   15c7c:	00361813          	slli	a6,a2,0x3
   15c80:	01d71793          	slli	a5,a4,0x1d
   15c84:	00385813          	srli	a6,a6,0x3
   15c88:	00f86833          	or	a6,a6,a5
   15c8c:	8436                	mv	s0,a3
   15c8e:	00375793          	srli	a5,a4,0x3
   15c92:	00f867b3          	or	a5,a6,a5
   15c96:	dbe9                	beqz	a5,15c68 <__subdf3+0x352>
   15c98:	4401                	li	s0,0
   15c9a:	7ff00713          	li	a4,2047
   15c9e:	000807b7          	lui	a5,0x80
   15ca2:	4801                	li	a6,0
   15ca4:	bbe9                	j	15a7e <__subdf3+0x168>
   15ca6:	ff800637          	lui	a2,0xff800
   15caa:	167d                	addi	a2,a2,-1
   15cac:	8e7d                	and	a2,a2,a5
   15cae:	0079f793          	andi	a5,s3,7
   15cb2:	8c99                	sub	s1,s1,a4
   15cb4:	d80791e3          	bnez	a5,15a36 <__subdf3+0x120>
   15cb8:	b795                	j	15c1c <__subdf3+0x306>
   15cba:	854e                	mv	a0,s3
   15cbc:	00000097          	auipc	ra,0x0
   15cc0:	5d2080e7          	jalr	1490(ra) # 1628e <__clzsi2>
   15cc4:	01850713          	addi	a4,a0,24
   15cc8:	47fd                	li	a5,31
   15cca:	d2e7d0e3          	bge	a5,a4,159ea <__subdf3+0xd4>
   15cce:	ff850613          	addi	a2,a0,-8
   15cd2:	00c997b3          	sll	a5,s3,a2
   15cd6:	4981                	li	s3,0
   15cd8:	b31d                	j	159fe <__subdf3+0xe8>
   15cda:	01d76833          	or	a6,a4,t4
   15cde:	01003833          	snez	a6,a6
   15ce2:	b9e1                	j	159ba <__subdf3+0xa4>
   15ce4:	00351813          	slli	a6,a0,0x3
   15ce8:	01d31793          	slli	a5,t1,0x1d
   15cec:	00385813          	srli	a6,a6,0x3
   15cf0:	00f86833          	or	a6,a6,a5
   15cf4:	00335793          	srli	a5,t1,0x3
   15cf8:	bf1d                	j	15c2e <__subdf3+0x318>
   15cfa:	41df09b3          	sub	s3,t5,t4
   15cfe:	40e30933          	sub	s2,t1,a4
   15d02:	013f3633          	sltu	a2,t5,s3
   15d06:	40c90933          	sub	s2,s2,a2
   15d0a:	00891793          	slli	a5,s2,0x8
   15d0e:	2007ca63          	bltz	a5,15f22 <__subdf3+0x60c>
   15d12:	0129e833          	or	a6,s3,s2
   15d16:	cc0811e3          	bnez	a6,159d8 <__subdf3+0xc2>
   15d1a:	4781                	li	a5,0
   15d1c:	4401                	li	s0,0
   15d1e:	bf21                	j	15c36 <__subdf3+0x320>
   15d20:	409885b3          	sub	a1,a7,s1
   15d24:	14048163          	beqz	s1,15e66 <__subdf3+0x550>
   15d28:	008006b7          	lui	a3,0x800
   15d2c:	7ff00793          	li	a5,2047
   15d30:	00d36333          	or	t1,t1,a3
   15d34:	20f88163          	beq	a7,a5,15f36 <__subdf3+0x620>
   15d38:	03800793          	li	a5,56
   15d3c:	22b7cc63          	blt	a5,a1,15f74 <__subdf3+0x65e>
   15d40:	47fd                	li	a5,31
   15d42:	2cb7c963          	blt	a5,a1,16014 <__subdf3+0x6fe>
   15d46:	02000793          	li	a5,32
   15d4a:	8f8d                	sub	a5,a5,a1
   15d4c:	00f31833          	sll	a6,t1,a5
   15d50:	00bf56b3          	srl	a3,t5,a1
   15d54:	00ff17b3          	sll	a5,t5,a5
   15d58:	00d86833          	or	a6,a6,a3
   15d5c:	00f039b3          	snez	s3,a5
   15d60:	00b35333          	srl	t1,t1,a1
   15d64:	01386833          	or	a6,a6,s3
   15d68:	971a                	add	a4,a4,t1
   15d6a:	01d809b3          	add	s3,a6,t4
   15d6e:	01d9b7b3          	sltu	a5,s3,t4
   15d72:	00e78633          	add	a2,a5,a4
   15d76:	84c6                	mv	s1,a7
   15d78:	bdf9                	j	15c56 <__subdf3+0x340>
   15d7a:	f0081fe3          	bnez	a6,15c98 <__subdf3+0x382>
   15d7e:	00351813          	slli	a6,a0,0x3
   15d82:	01d31793          	slli	a5,t1,0x1d
   15d86:	00385813          	srli	a6,a6,0x3
   15d8a:	00f86833          	or	a6,a6,a5
   15d8e:	00335793          	srli	a5,t1,0x3
   15d92:	b701                	j	15c92 <__subdf3+0x37c>
   15d94:	00800537          	lui	a0,0x800
   15d98:	7ff00793          	li	a5,2047
   15d9c:	00a36333          	or	t1,t1,a0
   15da0:	e0f890e3          	bne	a7,a5,15ba0 <__subdf3+0x28a>
   15da4:	060e                	slli	a2,a2,0x3
   15da6:	01d71813          	slli	a6,a4,0x1d
   15daa:	820d                	srli	a2,a2,0x3
   15dac:	00c86833          	or	a6,a6,a2
   15db0:	00375793          	srli	a5,a4,0x3
   15db4:	8436                	mv	s0,a3
   15db6:	bdf1                	j	15c92 <__subdf3+0x37c>
   15db8:	1705                	addi	a4,a4,-31
   15dba:	02000693          	li	a3,32
   15dbe:	00e7d733          	srl	a4,a5,a4
   15dc2:	00d60a63          	beq	a2,a3,15dd6 <__subdf3+0x4c0>
   15dc6:	04000693          	li	a3,64
   15dca:	40c68633          	sub	a2,a3,a2
   15dce:	00c79633          	sll	a2,a5,a2
   15dd2:	00c9e9b3          	or	s3,s3,a2
   15dd6:	01303833          	snez	a6,s3
   15dda:	00e869b3          	or	s3,a6,a4
   15dde:	4601                	li	a2,0
   15de0:	4481                	li	s1,0
   15de2:	bd0d                	j	15c14 <__subdf3+0x2fe>
   15de4:	01df09b3          	add	s3,t5,t4
   15de8:	00e307b3          	add	a5,t1,a4
   15dec:	01e9bf33          	sltu	t5,s3,t5
   15df0:	01e78633          	add	a2,a5,t5
   15df4:	00861793          	slli	a5,a2,0x8
   15df8:	4485                	li	s1,1
   15dfa:	e007dde3          	bgez	a5,15c14 <__subdf3+0x2fe>
   15dfe:	4489                	li	s1,2
   15e00:	ff8007b7          	lui	a5,0xff800
   15e04:	17fd                	addi	a5,a5,-1
   15e06:	8ff1                	and	a5,a5,a2
   15e08:	0019d713          	srli	a4,s3,0x1
   15e0c:	0019f813          	andi	a6,s3,1
   15e10:	01076833          	or	a6,a4,a6
   15e14:	01f79993          	slli	s3,a5,0x1f
   15e18:	0109e9b3          	or	s3,s3,a6
   15e1c:	0017d613          	srli	a2,a5,0x1
   15e20:	b901                	j	15a30 <__subdf3+0x11a>
   15e22:	fe058813          	addi	a6,a1,-32
   15e26:	02000793          	li	a5,32
   15e2a:	010759b3          	srl	s3,a4,a6
   15e2e:	00f58a63          	beq	a1,a5,15e42 <__subdf3+0x52c>
   15e32:	04000793          	li	a5,64
   15e36:	40b785b3          	sub	a1,a5,a1
   15e3a:	00b71733          	sll	a4,a4,a1
   15e3e:	00eeeeb3          	or	t4,t4,a4
   15e42:	01d03833          	snez	a6,t4
   15e46:	01386833          	or	a6,a6,s3
   15e4a:	be85                	j	159ba <__subdf3+0xa4>
   15e4c:	01e36333          	or	t1,t1,t5
   15e50:	00603833          	snez	a6,t1
   15e54:	410e89b3          	sub	s3,t4,a6
   15e58:	013eb7b3          	sltu	a5,t4,s3
   15e5c:	40f70633          	sub	a2,a4,a5
   15e60:	84c6                	mv	s1,a7
   15e62:	8436                	mv	s0,a3
   15e64:	b68d                	j	159c6 <__subdf3+0xb0>
   15e66:	01e367b3          	or	a5,t1,t5
   15e6a:	18078763          	beqz	a5,15ff8 <__subdf3+0x6e2>
   15e6e:	fff58793          	addi	a5,a1,-1
   15e72:	1c078c63          	beqz	a5,1604a <__subdf3+0x734>
   15e76:	7ff00693          	li	a3,2047
   15e7a:	0ad58e63          	beq	a1,a3,15f36 <__subdf3+0x620>
   15e7e:	85be                	mv	a1,a5
   15e80:	bd65                	j	15d38 <__subdf3+0x422>
   15e82:	02000793          	li	a5,32
   15e86:	8f8d                	sub	a5,a5,a1
   15e88:	00bed9b3          	srl	s3,t4,a1
   15e8c:	00f71833          	sll	a6,a4,a5
   15e90:	00fe9eb3          	sll	t4,t4,a5
   15e94:	01386833          	or	a6,a6,s3
   15e98:	00b75733          	srl	a4,a4,a1
   15e9c:	01d039b3          	snez	s3,t4
   15ea0:	01386833          	or	a6,a6,s3
   15ea4:	933a                	add	t1,t1,a4
   15ea6:	b355                	j	15c4a <__subdf3+0x334>
   15ea8:	00361813          	slli	a6,a2,0x3
   15eac:	01d71793          	slli	a5,a4,0x1d
   15eb0:	00385813          	srli	a6,a6,0x3
   15eb4:	0107e833          	or	a6,a5,a6
   15eb8:	8436                	mv	s0,a3
   15eba:	00375793          	srli	a5,a4,0x3
   15ebe:	bb85                	j	15c2e <__subdf3+0x318>
   15ec0:	cbbd                	beqz	a5,15f36 <__subdf3+0x620>
   15ec2:	01d76733          	or	a4,a4,t4
   15ec6:	dc0719e3          	bnez	a4,15c98 <__subdf3+0x382>
   15eca:	050e                	slli	a0,a0,0x3
   15ecc:	01d31813          	slli	a6,t1,0x1d
   15ed0:	810d                	srli	a0,a0,0x3
   15ed2:	00a86833          	or	a6,a6,a0
   15ed6:	00335793          	srli	a5,t1,0x3
   15eda:	bb65                	j	15c92 <__subdf3+0x37c>
   15edc:	e2080fe3          	beqz	a6,15d1a <__subdf3+0x404>
   15ee0:	00361813          	slli	a6,a2,0x3
   15ee4:	01d71793          	slli	a5,a4,0x1d
   15ee8:	00385813          	srli	a6,a6,0x3
   15eec:	00f86833          	or	a6,a6,a5
   15ef0:	8436                	mv	s0,a3
   15ef2:	00375793          	srli	a5,a4,0x3
   15ef6:	b381                	j	15c36 <__subdf3+0x320>
   15ef8:	41df09b3          	sub	s3,t5,t4
   15efc:	40e307b3          	sub	a5,t1,a4
   15f00:	013f3f33          	sltu	t5,t5,s3
   15f04:	41e78633          	sub	a2,a5,t5
   15f08:	4485                	li	s1,1
   15f0a:	bc75                	j	159c6 <__subdf3+0xb0>
   15f0c:	00351813          	slli	a6,a0,0x3
   15f10:	01d31693          	slli	a3,t1,0x1d
   15f14:	00385813          	srli	a6,a6,0x3
   15f18:	0106e833          	or	a6,a3,a6
   15f1c:	00335793          	srli	a5,t1,0x3
   15f20:	bb8d                	j	15c92 <__subdf3+0x37c>
   15f22:	41ee89b3          	sub	s3,t4,t5
   15f26:	40670633          	sub	a2,a4,t1
   15f2a:	013eb933          	sltu	s2,t4,s3
   15f2e:	41260933          	sub	s2,a2,s2
   15f32:	8436                	mv	s0,a3
   15f34:	b455                	j	159d8 <__subdf3+0xc2>
   15f36:	060e                	slli	a2,a2,0x3
   15f38:	01d71813          	slli	a6,a4,0x1d
   15f3c:	820d                	srli	a2,a2,0x3
   15f3e:	00c86833          	or	a6,a6,a2
   15f42:	00375793          	srli	a5,a4,0x3
   15f46:	b3b1                	j	15c92 <__subdf3+0x37c>
   15f48:	41df09b3          	sub	s3,t5,t4
   15f4c:	40e307b3          	sub	a5,t1,a4
   15f50:	013f3633          	sltu	a2,t5,s3
   15f54:	40c78633          	sub	a2,a5,a2
   15f58:	00861793          	slli	a5,a2,0x8
   15f5c:	0a07d763          	bgez	a5,1600a <__subdf3+0x6f4>
   15f60:	41ee89b3          	sub	s3,t4,t5
   15f64:	406707b3          	sub	a5,a4,t1
   15f68:	013ebeb3          	sltu	t4,t4,s3
   15f6c:	41d78633          	sub	a2,a5,t4
   15f70:	8436                	mv	s0,a3
   15f72:	bc7d                	j	15a30 <__subdf3+0x11a>
   15f74:	01e36333          	or	t1,t1,t5
   15f78:	00603833          	snez	a6,t1
   15f7c:	b3fd                	j	15d6a <__subdf3+0x454>
   15f7e:	fe058813          	addi	a6,a1,-32
   15f82:	02000793          	li	a5,32
   15f86:	010359b3          	srl	s3,t1,a6
   15f8a:	00f58a63          	beq	a1,a5,15f9e <__subdf3+0x688>
   15f8e:	04000793          	li	a5,64
   15f92:	40b785b3          	sub	a1,a5,a1
   15f96:	00b31333          	sll	t1,t1,a1
   15f9a:	006f6f33          	or	t5,t5,t1
   15f9e:	01e03833          	snez	a6,t5
   15fa2:	01386833          	or	a6,a6,s3
   15fa6:	b57d                	j	15e54 <__subdf3+0x53e>
   15fa8:	41ee89b3          	sub	s3,t4,t5
   15fac:	406707b3          	sub	a5,a4,t1
   15fb0:	013ebeb3          	sltu	t4,t4,s3
   15fb4:	41d78633          	sub	a2,a5,t4
   15fb8:	8436                	mv	s0,a3
   15fba:	4485                	li	s1,1
   15fbc:	b429                	j	159c6 <__subdf3+0xb0>
   15fbe:	00361813          	slli	a6,a2,0x3
   15fc2:	01d71793          	slli	a5,a4,0x1d
   15fc6:	00385813          	srli	a6,a6,0x3
   15fca:	00f86833          	or	a6,a6,a5
   15fce:	00375793          	srli	a5,a4,0x3
   15fd2:	b195                	j	15c36 <__subdf3+0x320>
   15fd4:	01df09b3          	add	s3,t5,t4
   15fd8:	00e307b3          	add	a5,t1,a4
   15fdc:	01e9bf33          	sltu	t5,s3,t5
   15fe0:	01e78633          	add	a2,a5,t5
   15fe4:	00861793          	slli	a5,a2,0x8
   15fe8:	c207d6e3          	bgez	a5,15c14 <__subdf3+0x2fe>
   15fec:	ff8007b7          	lui	a5,0xff800
   15ff0:	17fd                	addi	a5,a5,-1
   15ff2:	8e7d                	and	a2,a2,a5
   15ff4:	4485                	li	s1,1
   15ff6:	b939                	j	15c14 <__subdf3+0x2fe>
   15ff8:	060e                	slli	a2,a2,0x3
   15ffa:	01d71813          	slli	a6,a4,0x1d
   15ffe:	820d                	srli	a2,a2,0x3
   16000:	00c86833          	or	a6,a6,a2
   16004:	00375793          	srli	a5,a4,0x3
   16008:	b11d                	j	15c2e <__subdf3+0x318>
   1600a:	00c9e833          	or	a6,s3,a2
   1600e:	d00806e3          	beqz	a6,15d1a <__subdf3+0x404>
   16012:	b109                	j	15c14 <__subdf3+0x2fe>
   16014:	fe058813          	addi	a6,a1,-32
   16018:	02000793          	li	a5,32
   1601c:	010359b3          	srl	s3,t1,a6
   16020:	00f58a63          	beq	a1,a5,16034 <__subdf3+0x71e>
   16024:	04000793          	li	a5,64
   16028:	40b785b3          	sub	a1,a5,a1
   1602c:	00b31333          	sll	t1,t1,a1
   16030:	006f6f33          	or	t5,t5,t1
   16034:	01e03833          	snez	a6,t5
   16038:	01386833          	or	a6,a6,s3
   1603c:	b33d                	j	15d6a <__subdf3+0x454>
   1603e:	4401                	li	s0,0
   16040:	7ff00713          	li	a4,2047
   16044:	000807b7          	lui	a5,0x80
   16048:	bc1d                	j	15a7e <__subdf3+0x168>
   1604a:	01df09b3          	add	s3,t5,t4
   1604e:	00e307b3          	add	a5,t1,a4
   16052:	01d9beb3          	sltu	t4,s3,t4
   16056:	01d78633          	add	a2,a5,t4
   1605a:	bb69                	j	15df4 <__subdf3+0x4de>

0001605c <__fixunsdfdi>:
__fixunsdfdi():
   1605c:	0145d793          	srli	a5,a1,0x14
   16060:	001006b7          	lui	a3,0x100
   16064:	fff68713          	addi	a4,a3,-1 # fffff <_data_lma+0xe973f>
   16068:	7ff7f793          	andi	a5,a5,2047
   1606c:	3fe00613          	li	a2,1022
   16070:	8f6d                	and	a4,a4,a1
   16072:	81fd                	srli	a1,a1,0x1f
   16074:	00f65363          	bge	a2,a5,1607a <__fixunsdfdi+0x1e>
   16078:	c581                	beqz	a1,16080 <__fixunsdfdi+0x24>
   1607a:	4501                	li	a0,0
   1607c:	4581                	li	a1,0
   1607e:	8082                	ret
   16080:	43e00613          	li	a2,1086
   16084:	00f65563          	bge	a2,a5,1608e <__fixunsdfdi+0x32>
   16088:	557d                	li	a0,-1
   1608a:	55fd                	li	a1,-1
   1608c:	8082                	ret
   1608e:	43200613          	li	a2,1074
   16092:	00d765b3          	or	a1,a4,a3
   16096:	00f65c63          	bge	a2,a5,160ae <__fixunsdfdi+0x52>
   1609a:	bad78713          	addi	a4,a5,-1107 # 7fbad <_data_lma+0x692ed>
   1609e:	bcd78793          	addi	a5,a5,-1075
   160a2:	04074063          	bltz	a4,160e2 <__fixunsdfdi+0x86>
   160a6:	00e515b3          	sll	a1,a0,a4
   160aa:	4501                	li	a0,0
   160ac:	8082                	ret
   160ae:	43300693          	li	a3,1075
   160b2:	8e9d                	sub	a3,a3,a5
   160b4:	477d                	li	a4,31
   160b6:	00d75b63          	bge	a4,a3,160cc <__fixunsdfdi+0x70>
   160ba:	41300713          	li	a4,1043
   160be:	40f707b3          	sub	a5,a4,a5
   160c2:	00f5d7b3          	srl	a5,a1,a5
   160c6:	4581                	li	a1,0
   160c8:	853e                	mv	a0,a5
   160ca:	8082                	ret
   160cc:	bed78713          	addi	a4,a5,-1043
   160d0:	00e59733          	sll	a4,a1,a4
   160d4:	00d55533          	srl	a0,a0,a3
   160d8:	00a767b3          	or	a5,a4,a0
   160dc:	00d5d5b3          	srl	a1,a1,a3
   160e0:	b7e5                	j	160c8 <__fixunsdfdi+0x6c>
   160e2:	46fd                	li	a3,31
   160e4:	00155713          	srli	a4,a0,0x1
   160e8:	8e9d                	sub	a3,a3,a5
   160ea:	00d75733          	srl	a4,a4,a3
   160ee:	00f595b3          	sll	a1,a1,a5
   160f2:	8dd9                	or	a1,a1,a4
   160f4:	00f51533          	sll	a0,a0,a5
   160f8:	8082                	ret

000160fa <__floatundidf>:
__floatundidf():
   160fa:	00b567b3          	or	a5,a0,a1
   160fe:	c3b1                	beqz	a5,16142 <__floatundidf+0x48>
   16100:	1141                	addi	sp,sp,-16
   16102:	c422                	sw	s0,8(sp)
   16104:	c226                	sw	s1,4(sp)
   16106:	c04a                	sw	s2,0(sp)
   16108:	c606                	sw	ra,12(sp)
   1610a:	84aa                	mv	s1,a0
   1610c:	892e                	mv	s2,a1
   1610e:	842e                	mv	s0,a1
   16110:	c1b9                	beqz	a1,16156 <__floatundidf+0x5c>
   16112:	852e                	mv	a0,a1
   16114:	00000097          	auipc	ra,0x0
   16118:	17a080e7          	jalr	378(ra) # 1628e <__clzsi2>
   1611c:	43e00693          	li	a3,1086
   16120:	8e89                	sub	a3,a3,a0
   16122:	43300793          	li	a5,1075
   16126:	06d7c763          	blt	a5,a3,16194 <__floatundidf+0x9a>
   1612a:	00c91793          	slli	a5,s2,0xc
   1612e:	462d                	li	a2,11
   16130:	8726                	mv	a4,s1
   16132:	7ff6f693          	andi	a3,a3,2047
   16136:	83b1                	srli	a5,a5,0xc
   16138:	0ca65f63          	bge	a2,a0,16216 <__floatundidf+0x11c>
   1613c:	ff550613          	addi	a2,a0,-11 # 7ffff5 <_data_lma+0x7e9735>
   16140:	a825                	j	16178 <__floatundidf+0x7e>
   16142:	4781                	li	a5,0
   16144:	4681                	li	a3,0
   16146:	07b2                	slli	a5,a5,0xc
   16148:	06d2                	slli	a3,a3,0x14
   1614a:	83b1                	srli	a5,a5,0xc
   1614c:	4701                	li	a4,0
   1614e:	8fd5                	or	a5,a5,a3
   16150:	853a                	mv	a0,a4
   16152:	85be                	mv	a1,a5
   16154:	8082                	ret
   16156:	00000097          	auipc	ra,0x0
   1615a:	138080e7          	jalr	312(ra) # 1628e <__clzsi2>
   1615e:	862a                	mv	a2,a0
   16160:	43e00693          	li	a3,1086
   16164:	02050513          	addi	a0,a0,32
   16168:	8e89                	sub	a3,a3,a0
   1616a:	02a00713          	li	a4,42
   1616e:	7ff6f693          	andi	a3,a3,2047
   16172:	0ca74c63          	blt	a4,a0,1624a <__floatundidf+0x150>
   16176:	0655                	addi	a2,a2,21
   16178:	02b00713          	li	a4,43
   1617c:	8f09                	sub	a4,a4,a0
   1617e:	00c917b3          	sll	a5,s2,a2
   16182:	00e4d733          	srl	a4,s1,a4
   16186:	8f5d                	or	a4,a4,a5
   16188:	00c71793          	slli	a5,a4,0xc
   1618c:	83b1                	srli	a5,a5,0xc
   1618e:	00c49733          	sll	a4,s1,a2
   16192:	a051                	j	16216 <__floatundidf+0x11c>
   16194:	43600793          	li	a5,1078
   16198:	02d7d963          	bge	a5,a3,161ca <__floatundidf+0xd0>
   1619c:	01850713          	addi	a4,a0,24
   161a0:	03850793          	addi	a5,a0,56
   161a4:	0c074763          	bltz	a4,16272 <__floatundidf+0x178>
   161a8:	00e49633          	sll	a2,s1,a4
   161ac:	4701                	li	a4,0
   161ae:	4421                	li	s0,8
   161b0:	8c09                	sub	s0,s0,a0
   161b2:	8f51                	or	a4,a4,a2
   161b4:	fe040793          	addi	a5,s0,-32 # 7ffe0 <_data_lma+0x69720>
   161b8:	00e03733          	snez	a4,a4
   161bc:	0807cf63          	bltz	a5,1625a <__floatundidf+0x160>
   161c0:	00f954b3          	srl	s1,s2,a5
   161c4:	4781                	li	a5,0
   161c6:	8cd9                	or	s1,s1,a4
   161c8:	843e                	mv	s0,a5
   161ca:	47a1                	li	a5,8
   161cc:	06a7c163          	blt	a5,a0,1622e <__floatundidf+0x134>
   161d0:	ff800737          	lui	a4,0xff800
   161d4:	177d                	addi	a4,a4,-1
   161d6:	0074f613          	andi	a2,s1,7
   161da:	00e477b3          	and	a5,s0,a4
   161de:	c605                	beqz	a2,16206 <__floatundidf+0x10c>
   161e0:	00f4f613          	andi	a2,s1,15
   161e4:	4591                	li	a1,4
   161e6:	02b60063          	beq	a2,a1,16206 <__floatundidf+0x10c>
   161ea:	00448613          	addi	a2,s1,4
   161ee:	009634b3          	sltu	s1,a2,s1
   161f2:	97a6                	add	a5,a5,s1
   161f4:	00879593          	slli	a1,a5,0x8
   161f8:	0805d963          	bgez	a1,1628a <__floatundidf+0x190>
   161fc:	43f00693          	li	a3,1087
   16200:	8ff9                	and	a5,a5,a4
   16202:	8e89                	sub	a3,a3,a0
   16204:	84b2                	mv	s1,a2
   16206:	01d79713          	slli	a4,a5,0x1d
   1620a:	808d                	srli	s1,s1,0x3
   1620c:	07a6                	slli	a5,a5,0x9
   1620e:	8f45                	or	a4,a4,s1
   16210:	83b1                	srli	a5,a5,0xc
   16212:	7ff6f693          	andi	a3,a3,2047
   16216:	40b2                	lw	ra,12(sp)
   16218:	4422                	lw	s0,8(sp)
   1621a:	07b2                	slli	a5,a5,0xc
   1621c:	06d2                	slli	a3,a3,0x14
   1621e:	83b1                	srli	a5,a5,0xc
   16220:	8fd5                	or	a5,a5,a3
   16222:	4492                	lw	s1,4(sp)
   16224:	4902                	lw	s2,0(sp)
   16226:	853a                	mv	a0,a4
   16228:	85be                	mv	a1,a5
   1622a:	0141                	addi	sp,sp,16
   1622c:	8082                	ret
   1622e:	02800713          	li	a4,40
   16232:	ff850613          	addi	a2,a0,-8
   16236:	8f09                	sub	a4,a4,a0
   16238:	00e4d733          	srl	a4,s1,a4
   1623c:	00c417b3          	sll	a5,s0,a2
   16240:	00f76433          	or	s0,a4,a5
   16244:	00c494b3          	sll	s1,s1,a2
   16248:	b761                	j	161d0 <__floatundidf+0xd6>
   1624a:	ff560793          	addi	a5,a2,-11 # ff7ffff5 <_eusrstack+0xdf7f7ff5>
   1624e:	00f497b3          	sll	a5,s1,a5
   16252:	07b2                	slli	a5,a5,0xc
   16254:	83b1                	srli	a5,a5,0xc
   16256:	4701                	li	a4,0
   16258:	bf7d                	j	16216 <__floatundidf+0x11c>
   1625a:	467d                	li	a2,31
   1625c:	00191793          	slli	a5,s2,0x1
   16260:	8e01                	sub	a2,a2,s0
   16262:	00c797b3          	sll	a5,a5,a2
   16266:	0084d4b3          	srl	s1,s1,s0
   1626a:	8cdd                	or	s1,s1,a5
   1626c:	008957b3          	srl	a5,s2,s0
   16270:	bf99                	j	161c6 <__floatundidf+0xcc>
   16272:	467d                	li	a2,31
   16274:	8e1d                	sub	a2,a2,a5
   16276:	0014d713          	srli	a4,s1,0x1
   1627a:	00c75733          	srl	a4,a4,a2
   1627e:	00f91633          	sll	a2,s2,a5
   16282:	8e59                	or	a2,a2,a4
   16284:	00f49733          	sll	a4,s1,a5
   16288:	b71d                	j	161ae <__floatundidf+0xb4>
   1628a:	84b2                	mv	s1,a2
   1628c:	bfad                	j	16206 <__floatundidf+0x10c>

0001628e <__clzsi2>:
__clzsi2():
   1628e:	67c1                	lui	a5,0x10
   16290:	02f57e63          	bgeu	a0,a5,162cc <__clzsi2+0x3e>
   16294:	0ff00793          	li	a5,255
   16298:	02000713          	li	a4,32
   1629c:	00a7ec63          	bltu	a5,a0,162b4 <__clzsi2+0x26>
   162a0:	00000797          	auipc	a5,0x0
   162a4:	52078793          	addi	a5,a5,1312 # 167c0 <__clz_tab>
   162a8:	97aa                	add	a5,a5,a0
   162aa:	0007c503          	lbu	a0,0(a5)
   162ae:	40a70533          	sub	a0,a4,a0
   162b2:	8082                	ret
   162b4:	8121                	srli	a0,a0,0x8
   162b6:	00000797          	auipc	a5,0x0
   162ba:	50a78793          	addi	a5,a5,1290 # 167c0 <__clz_tab>
   162be:	97aa                	add	a5,a5,a0
   162c0:	0007c503          	lbu	a0,0(a5)
   162c4:	4761                	li	a4,24
   162c6:	40a70533          	sub	a0,a4,a0
   162ca:	8082                	ret
   162cc:	010007b7          	lui	a5,0x1000
   162d0:	00f56e63          	bltu	a0,a5,162ec <__clzsi2+0x5e>
   162d4:	8161                	srli	a0,a0,0x18
   162d6:	00000797          	auipc	a5,0x0
   162da:	4ea78793          	addi	a5,a5,1258 # 167c0 <__clz_tab>
   162de:	97aa                	add	a5,a5,a0
   162e0:	0007c503          	lbu	a0,0(a5)
   162e4:	4721                	li	a4,8
   162e6:	40a70533          	sub	a0,a4,a0
   162ea:	8082                	ret
   162ec:	8141                	srli	a0,a0,0x10
   162ee:	00000797          	auipc	a5,0x0
   162f2:	4d278793          	addi	a5,a5,1234 # 167c0 <__clz_tab>
   162f6:	97aa                	add	a5,a5,a0
   162f8:	0007c503          	lbu	a0,0(a5)
   162fc:	4741                	li	a4,16
   162fe:	40a70533          	sub	a0,a4,a0
   16302:	8082                	ret

00016304 <strlen>:
strlen():
   16304:	87aa                	mv	a5,a0
   16306:	0785                	addi	a5,a5,1
   16308:	fff7c703          	lbu	a4,-1(a5)
   1630c:	ff6d                	bnez	a4,16306 <strlen+0x2>
   1630e:	40a78533          	sub	a0,a5,a0
   16312:	157d                	addi	a0,a0,-1
   16314:	8082                	ret
   16316:	0000                	unimp
   16318:	2d2d                	jal	16952 <_data_lma+0x92>
   1631a:	2d2d                	jal	16954 <_data_lma+0x94>
   1631c:	2d2d                	jal	16956 <_data_lma+0x96>
   1631e:	2d2d                	jal	16958 <_data_lma+0x98>
   16320:	2d2d                	jal	1695a <_data_lma+0x9a>
   16322:	2d2d                	jal	1695c <_data_lma+0x9c>
   16324:	2d2d                	jal	1695e <_data_lma+0x9e>
   16326:	2d2d                	jal	16960 <_data_lma+0xa0>
   16328:	2d2d                	jal	16962 <_data_lma+0xa2>
   1632a:	2d2d                	jal	16964 <_data_lma+0xa4>
   1632c:	2d2d                	jal	16966 <_data_lma+0xa6>
   1632e:	2d2d                	jal	16968 <_data_lma+0xa8>
   16330:	2d2d                	jal	1696a <_data_lma+0xaa>
   16332:	2d2d                	jal	1696c <_data_lma+0xac>
   16334:	2d2d                	jal	1696e <_data_lma+0xae>
   16336:	2d2d                	jal	16970 <_data_lma+0xb0>
   16338:	2d2d                	jal	16972 <_data_lma+0xb2>
   1633a:	2d2d                	jal	16974 <_data_lma+0xb4>
   1633c:	2d2d                	jal	16976 <_data_lma+0xb6>
   1633e:	2d2d                	jal	16978 <_data_lma+0xb8>
   16340:	2d2d                	jal	1697a <_data_lma+0xba>
   16342:	2d2d                	jal	1697c <_data_lma+0xbc>
   16344:	2d2d                	jal	1697e <_data_lma+0xbe>
   16346:	2d2d                	jal	16980 <_data_lma+0xc0>
   16348:	2d2d                	jal	16982 <_data_lma+0xc2>
   1634a:	2d2d                	jal	16984 <_data_lma+0xc4>
   1634c:	2d2d                	jal	16986 <_data_lma+0xc6>
   1634e:	000a                	c.slli	zero,0x2
   16350:	efa1                	bnez	a5,163a8 <strlen+0xa4>
   16352:	f0bd                	bnez	s1,162b8 <__clzsi2+0x2a>
   16354:	f9ba                	fsw	fa4,240(sp)
   16356:	abc2                	fsd	fa6,464(sp)
   16358:	e1cc                	fsw	fa1,4(a1)
   1635a:	beca                	fsd	fs2,376(sp)
   1635c:	efa1                	bnez	a5,163b4 <strlen+0xb0>
   1635e:	2020                	fld	fs0,64(s0)
   16360:	2020                	fld	fs0,64(s0)
   16362:	2020                	fld	fs0,64(s0)
   16364:	2020                	fld	fs0,64(s0)
   16366:	2020                	fld	fs0,64(s0)
   16368:	2020                	fld	fs0,64(s0)
   1636a:	2020                	fld	fs0,64(s0)
   1636c:	2020                	fld	fs0,64(s0)
   1636e:	2020                	fld	fs0,64(s0)
   16370:	2020                	fld	fs0,64(s0)
   16372:	2020                	fld	fs0,64(s0)
   16374:	2020                	fld	fs0,64(s0)
   16376:	2020                	fld	fs0,64(s0)
   16378:	2020                	fld	fs0,64(s0)
   1637a:	2020                	fld	fs0,64(s0)
   1637c:	2020                	fld	fs0,64(s0)
   1637e:	2020                	fld	fs0,64(s0)
   16380:	2020                	fld	fs0,64(s0)
   16382:	2020                	fld	fs0,64(s0)
   16384:	2020                	fld	fs0,64(s0)
   16386:	0a20                	addi	s0,sp,280
   16388:	0000                	unimp
   1638a:	0000                	unimp
   1638c:	bea1                	j	15ee4 <__subdf3+0x5ce>
   1638e:	d0d6                	sw	s5,96(sp)
   16390:	c4ce                	sw	s3,72(sp)
   16392:	c6b3fbc3          	fmadd.q	fs7,ft7,fa1,fs8
   16396:	bfa1                	j	162ee <__clzsi2+0x60>
   16398:	b5434547          	0xb5434547
   1639c:	4ec4                	lw	s1,28(a3)
   1639e:	e0b1534f          	fnmadd.s	ft6,ft2,fa1,ft8,unknown
   163a2:	f2bfccb3          	0xf2bfccb3
   163a6:	dcbc                	sw	a5,120(s1)
   163a8:	6155a8a3          	sw	s5,1553(a1)
   163ac:	7472                	flw	fs0,60(sp)
   163ae:	b9b9                	j	1600c <__subdf3+0x6f6>
   163b0:	febc                	fsw	fa5,120(a3)
   163b2:	e2b2                	fsw	fa2,68(sp)
   163b4:	d4ca                	sw	s2,104(sp)
   163b6:	f9d1                	bnez	a1,1634a <strlen+0x46>
   163b8:	fdc0                	fsw	fs0,60(a1)
   163ba:	2020a9a3          	sw	sp,531(ra)
   163be:	2020                	fld	fs0,64(s0)
   163c0:	2020                	fld	fs0,64(s0)
   163c2:	2020                	fld	fs0,64(s0)
   163c4:	000a                	c.slli	zero,0x2
   163c6:	0000                	unimp
   163c8:	bea1                	j	15f20 <__subdf3+0x60a>
   163ca:	f2d0ccb3          	0xf2d0ccb3
   163ce:	a6b9                	j	1671c <strlen+0x418>
   163d0:	dcc4                	sw	s1,60(s1)
   163d2:	bfa1                	j	1632a <strlen+0x26>
   163d4:	e2d5                	bnez	a3,16478 <strlen+0x174>
   163d6:	f6b8                	fsw	fa4,104(a3)
   163d8:	f9d1                	bnez	a1,1636c <strlen+0x68>
   163da:	fdc0                	fsw	fs0,60(a1)
   163dc:	c7ca                	sw	s2,204(sp)
   163de:	dad4                	sw	a3,52(a3)
   163e0:	4f495047          	fmsub.q	ft0,fs2,fs4,fs1,unknown
   163e4:	b9b9                	j	16042 <__subdf3+0x72c>
   163e6:	febc                	fsw	fa5,120(a3)
   163e8:	f9d1                	bnez	a1,1637c <strlen+0x78>
   163ea:	fdc0                	fsw	fs0,60(a1)
   163ec:	a1b4f9bb          	0xa1b4f9bb
   163f0:	cfc9                	beqz	a5,1648a <strlen+0x186>
   163f2:	f6d4                	fsw	fa3,44(a3)
   163f4:	d3bc                	sw	a5,96(a5)
   163f6:	aeb4                	fsd	fa3,88(a3)
   163f8:	d0d6dabf 2020cfb6 	0x2020cfb6d0d6dabf
   16400:	000a                	c.slli	zero,0x2
   16402:	0000                	unimp
   16404:	bea1                	j	15f5c <__subdf3+0x646>
   16406:	febcb2d3          	0xfebcb2d3
   1640a:	acc1                	j	166da <strlen+0x3d6>
   1640c:	d3bd                	beqz	a5,16372 <strlen+0x6e>
   1640e:	bfa1                	j	16366 <strlen+0x62>
   16410:	fbbc                	fsw	fa5,112(a5)
   16412:	beb1                	j	15f6e <__subdf3+0x658>
   16414:	a4b9                	j	16662 <strlen+0x35e>
   16416:	3530ccb3          	0x3530ccb3
   1641a:	555f 6573 4272      	0x42726573555f
   16420:	6472616f          	jal	sp,3d266 <_data_lma+0x269a6>
   16424:	c4ce                	sw	s3,72(sp)
   16426:	febc                	fsw	fa5,120(a3)
   16428:	d0bc                	sw	a5,96(s1)
   1642a:	7375c2cf          	fnmadd.d	ft5,fa1,fs7,fa4,rmm
   1642e:	7265                	lui	tp,0xffff9
   16430:	682e                	flw	fa6,200(sp)
   16432:	c4ce                	sw	s3,72(sp)
   16434:	febc                	fsw	fa5,120(a3)
   16436:	2020                	fld	fs0,64(s0)
   16438:	2020                	fld	fs0,64(s0)
   1643a:	2020                	fld	fs0,64(s0)
   1643c:	000a                	c.slli	zero,0x2
   1643e:	0000                	unimp
   16440:	bea1                	j	15f98 <__subdf3+0x682>
   16442:	d9b2                	sw	a2,240(sp)
   16444:	b5cbf7d7          	0xb5cbf7d7
   16448:	bfa1f7c3          	fmadd.q	fa5,ft3,fs10,fs7
   1644c:	a8cd                	j	1653e <strlen+0x23a>
   1644e:	fdb9                	bnez	a1,163ac <strlen+0xa8>
   16450:	cbb2                	sw	a2,212(sp)
   16452:	a5b5                	j	16abe <_data_lma+0x1fe>
   16454:	b8c0                	fsd	fs0,176(s1)
   16456:	b0a1                	j	15c9e <__subdf3+0x388>
   16458:	a4b9                	j	166a6 <strlen+0x3a2>
   1645a:	dfbe                	sw	a5,252(sp)
   1645c:	b1a1                	j	160a4 <__fixunsdfdi+0x48>
   1645e:	faa1                	bnez	a3,163ae <strlen+0xaa>
   16460:	b0a1                	j	15ca8 <__subdf3+0x392>
   16462:	aeb4                	fsd	fa3,88(a3)
   16464:	a4b9dabf b1a1dfbe 	0xb1a1dfbea4b9dabf
   1646c:	2020aca3          	sw	sp,537(ra)
   16470:	2020                	fld	fs0,64(s0)
   16472:	2020                	fld	fs0,64(s0)
   16474:	2020                	fld	fs0,64(s0)
   16476:	2020                	fld	fs0,64(s0)
   16478:	000a                	c.slli	zero,0x2
   1647a:	0000                	unimp
   1647c:	2020                	fld	fs0,64(s0)
   1647e:	2020                	fld	fs0,64(s0)
   16480:	2020                	fld	fs0,64(s0)
   16482:	b420                	fsd	fs0,104(s0)
   16484:	bff2                	fsd	ft8,504(sp)
   16486:	d3aa                	sw	a0,228(sp)
   16488:	b4a7bbc3          	0xb4a7bbc3
   1648c:	bfae                	fsd	fa1,504(sp)
   1648e:	20da                	fld	ft1,400(sp)
   16490:	d3bdaca3          	sw	s11,-711(s11)
   16494:	d5ca                	sw	s2,232(sp)
   16496:	ebc8b6c7          	fmsub.d	fa3,fa7,ft8,ft9,rup
   1649a:	bdca                	fsd	fs2,248(sp)
   1649c:	d5d6                	sw	s5,232(sp)
   1649e:	cbb6                	sw	a3,212(sp)
   164a0:	cdcba2b7          	lui	t0,0xcdcba
   164a4:	c4b5                	beqz	s1,16510 <strlen+0x20c>
   164a6:	dabdd6d7          	0xdabdd6d7
   164aa:	2020                	fld	fs0,64(s0)
   164ac:	2020                	fld	fs0,64(s0)
   164ae:	2020                	fld	fs0,64(s0)
   164b0:	000a                	c.slli	zero,0x2
   164b2:	0000                	unimp
   164b4:	6d20                	flw	fs0,88(a0)
   164b6:	694c                	flw	fa1,20(a0)
   164b8:	43746867          	0x43746867
   164bc:	746e756f          	jal	a0,fdc02 <_data_lma+0xe7342>
   164c0:	3d20                	fld	fs0,120(a0)
   164c2:	2520                	fld	fs0,72(a0)
   164c4:	0d64                	addi	s1,sp,668
   164c6:	000a                	c.slli	zero,0x2
   164c8:	4c20                	lw	s0,88(s0)
   164ca:	4749                	li	a4,18
   164cc:	5448                	lw	a0,44(s0)
   164ce:	425f 554c 3a45      	0x3a45554c425f
   164d4:	2d2d4e4f          	0x2d2d4e4f
   164d8:	0a0d                	addi	s4,s4,3
   164da:	0000                	unimp
   164dc:	2020                	fld	fs0,64(s0)
   164de:	0d20                	addi	s0,sp,664
   164e0:	000a                	c.slli	zero,0x2
   164e2:	0000                	unimp
   164e4:	4c20                	lw	s0,88(s0)
   164e6:	4749                	li	a4,18
   164e8:	5448                	lw	a0,44(s0)
   164ea:	425f 554c 3a45      	0x3a45554c425f
   164f0:	2d46464f          	0x2d46464f
   164f4:	0d2d                	addi	s10,s10,11
   164f6:	000a                	c.slli	zero,0x2
   164f8:	c3b8                	sw	a4,64(a5)
   164fa:	e8c9                	bnez	s1,1658c <strlen+0x288>
   164fc:	b8b1                	j	15d58 <__subdf3+0x442>
   164fe:	febcb2d3          	0xfebcb2d3
   16502:	d8b5                	beqz	s1,16476 <strlen+0x172>
   16504:	b7d6                	fsd	fs5,488(sp)
   16506:	aace                	fsd	fs3,336(sp)
   16508:	7830baa3          	0x7830baa3
   1650c:	7825                	lui	a6,0xfffe9
   1650e:	c82c                	sw	a1,80(s0)
   16510:	bced                	j	1600a <__subdf3+0x6f4>
   16512:	b5fe                	fsd	ft11,232(sp)
   16514:	d6d8                	sw	a4,44(a3)
   16516:	a3aaceb7          	lui	t4,0xa3aac
   1651a:	30ba                	fld	ft1,424(sp)
   1651c:	2578                	fld	fa4,200(a0)
   1651e:	2064                	fld	fs1,192(s0)
   16520:	0a0d                	addi	s4,s4,3
   16522:	0000                	unimp
   16524:	e8c9                	bnez	s1,165b6 <strlen+0x2b2>
   16526:	b8b1                	j	15d82 <__subdf3+0x46c>
   16528:	e0c0                	fsw	fs0,4(s1)
   1652a:	cdd0                	sw	a2,28(a1)
   1652c:	aace                	fsd	fs3,336(sp)
   1652e:	f7d6baa3          	0xf7d6baa3
   16532:	0a0dfabb          	0xa0dfabb
   16536:	0000                	unimp
   16538:	e8c9                	bnez	s1,165ca <strlen+0x2c6>
   1653a:	b8b1                	j	15d96 <__subdf3+0x480>
   1653c:	e0c0                	fsw	fs0,4(s1)
   1653e:	cdd0                	sw	a2,28(a1)
   16540:	aace                	fsd	fs3,336(sp)
   16542:	d3b4baa3          	0xd3b4baa3
   16546:	0a0dfabb          	0xa0dfabb
   1654a:	0000                	unimp
   1654c:	2020                	fld	fs0,64(s0)
   1654e:	bea1                	j	160a6 <__fixunsdfdi+0x4a>
   16550:	7355                	lui	t1,0xffff5
   16552:	7265                	lui	tp,0xffff9
   16554:	e1cc                	fsw	fa1,4(a1)
   16556:	beca                	fsd	fs2,376(sp)
   16558:	bfa1                	j	164b0 <strlen+0x1ac>
   1655a:	abbdbaa3          	0xabbdbaa3
   1655e:	f8bd                	bnez	s1,164d4 <strlen+0x1d0>
   16560:	ebc8                	fsw	fa0,20(a5)
   16562:	7355                	lui	t1,0xffff5
   16564:	7265                	lui	tp,0xffff9
   16566:	c4b5                	beqz	s1,165d2 <strlen+0x2ce>
   16568:	616d                	addi	sp,sp,240
   1656a:	6e69                	lui	t3,0x1a
   1656c:	afba                	fsd	fa4,472(sp)
   1656e:	fdca                	fsw	fs2,248(sp)
   16570:	b4d6                	fsd	fs5,104(sp)
   16572:	d0d0                	sw	a2,36(s1)
   16574:	2e2e                	fld	ft8,200(sp)
   16576:	0d2e                	slli	s10,s10,0xb
   16578:	0a0a                	slli	s4,s4,0x2
   1657a:	0000                	unimp
   1657c:	d800                	sw	s0,48(s0)
   1657e:	ffff                	0xffff
   16580:	d804                	sw	s1,48(s0)
   16582:	ffff                	0xffff
   16584:	d7fc                	sw	a5,108(a5)
   16586:	ffff                	0xffff
   16588:	d80a                	sw	sp,48(sp)
   1658a:	ffff                	0xffff
   1658c:	d7f4                	sw	a3,108(a5)
   1658e:	ffff                	0xffff
   16590:	d80a                	sw	sp,48(sp)
   16592:	ffff                	0xffff
   16594:	d7f0                	sw	a2,108(a5)
   16596:	ffff                	0xffff
   16598:	d80a                	sw	sp,48(sp)
   1659a:	ffff                	0xffff
   1659c:	d80a                	sw	sp,48(sp)
   1659e:	ffff                	0xffff
   165a0:	d80a                	sw	sp,48(sp)
   165a2:	ffff                	0xffff
   165a4:	d80a                	sw	sp,48(sp)
   165a6:	ffff                	0xffff
   165a8:	d80a                	sw	sp,48(sp)
   165aa:	ffff                	0xffff
   165ac:	d7f8                	sw	a4,108(a5)
   165ae:	ffff                	0xffff
   165b0:	d73c                	sw	a5,104(a4)
   165b2:	ffff                	0xffff
   165b4:	d740                	sw	s0,44(a4)
   165b6:	ffff                	0xffff
   165b8:	d738                	sw	a4,104(a4)
   165ba:	ffff                	0xffff
   165bc:	d7d6                	sw	s5,236(sp)
   165be:	ffff                	0xffff
   165c0:	d730                	sw	a2,104(a4)
   165c2:	ffff                	0xffff
   165c4:	d7d6                	sw	s5,236(sp)
   165c6:	ffff                	0xffff
   165c8:	d72c                	sw	a1,104(a4)
   165ca:	ffff                	0xffff
   165cc:	d7d6                	sw	s5,236(sp)
   165ce:	ffff                	0xffff
   165d0:	d7d6                	sw	s5,236(sp)
   165d2:	ffff                	0xffff
   165d4:	d7d6                	sw	s5,236(sp)
   165d6:	ffff                	0xffff
   165d8:	d7d6                	sw	s5,236(sp)
   165da:	ffff                	0xffff
   165dc:	d7d6                	sw	s5,236(sp)
   165de:	ffff                	0xffff
   165e0:	d734                	sw	a3,104(a4)
   165e2:	ffff                	0xffff
   165e4:	d744                	sw	s1,44(a4)
   165e6:	ffff                	0xffff
   165e8:	d748                	sw	a0,44(a4)
   165ea:	ffff                	0xffff
   165ec:	d740                	sw	s0,44(a4)
   165ee:	ffff                	0xffff
   165f0:	d7a2                	sw	s0,236(sp)
   165f2:	ffff                	0xffff
   165f4:	d738                	sw	a4,104(a4)
   165f6:	ffff                	0xffff
   165f8:	d7a2                	sw	s0,236(sp)
   165fa:	ffff                	0xffff
   165fc:	d734                	sw	a3,104(a4)
   165fe:	ffff                	0xffff
   16600:	d7a2                	sw	s0,236(sp)
   16602:	ffff                	0xffff
   16604:	d7a2                	sw	s0,236(sp)
   16606:	ffff                	0xffff
   16608:	d7a2                	sw	s0,236(sp)
   1660a:	ffff                	0xffff
   1660c:	d7a2                	sw	s0,236(sp)
   1660e:	ffff                	0xffff
   16610:	d7a2                	sw	s0,236(sp)
   16612:	ffff                	0xffff
   16614:	d73c                	sw	a5,104(a4)
   16616:	ffff                	0xffff
   16618:	d74c                	sw	a1,44(a4)
   1661a:	ffff                	0xffff
   1661c:	d750                	sw	a2,44(a4)
   1661e:	ffff                	0xffff
   16620:	d748                	sw	a0,44(a4)
   16622:	ffff                	0xffff
   16624:	d76e                	sw	s11,172(sp)
   16626:	ffff                	0xffff
   16628:	d740                	sw	s0,44(a4)
   1662a:	ffff                	0xffff
   1662c:	d76e                	sw	s11,172(sp)
   1662e:	ffff                	0xffff
   16630:	d73c                	sw	a5,104(a4)
   16632:	ffff                	0xffff
   16634:	d76e                	sw	s11,172(sp)
   16636:	ffff                	0xffff
   16638:	d76e                	sw	s11,172(sp)
   1663a:	ffff                	0xffff
   1663c:	d76e                	sw	s11,172(sp)
   1663e:	ffff                	0xffff
   16640:	d76e                	sw	s11,172(sp)
   16642:	ffff                	0xffff
   16644:	d76e                	sw	s11,172(sp)
   16646:	ffff                	0xffff
   16648:	d744                	sw	s1,44(a4)
   1664a:	ffff                	0xffff
   1664c:	7874                	flw	fa3,116(s0)
   1664e:	7220                	flw	fs0,96(a2)
   16650:	6365                	lui	t1,0x19
   16652:	2c76                	fld	fs8,344(sp)
   16654:	7372                	flw	ft6,60(sp)
   16656:	253a6973          	csrrsi	s2,0x253,20
   1665a:	0a64                	addi	s1,sp,284
   1665c:	0000                	unimp
   1665e:	0000                	unimp
   16660:	656c                	flw	fa1,76(a0)
   16662:	3a6e                	fld	fs4,248(sp)
   16664:	6425                	lui	s0,0x9
   16666:	002d                	c.nop	11
   16668:	7825                	lui	a6,0xfffe9
   1666a:	0020                	addi	s0,sp,8
   1666c:	20637263          	bgeu	t1,t1,16870 <__clz_tab+0xb0>
   16670:	7265                	lui	tp,0xffff9
   16672:	6f72                	flw	ft10,28(sp)
   16674:	0a72                	slli	s4,s4,0x1c
   16676:	0000                	unimp
   16678:	616d                	addi	sp,sp,240
   1667a:	6374                	flw	fa3,68(a4)
   1667c:	2068                	fld	fa0,192(s0)
   1667e:	7974                	flw	fa3,116(a0)
   16680:	6570                	flw	fa2,76(a0)
   16682:	6520                	flw	fs0,72(a0)
   16684:	7272                	flw	ft4,60(sp)
   16686:	000a726f          	jal	tp,bd686 <_data_lma+0xa6dc6>
   1668a:	0000                	unimp
   1668c:	20637263          	bgeu	t1,t1,16890 <__clz_tab+0xd0>
   16690:	7265                	lui	tp,0xffff9
   16692:	6f72                	flw	ft10,28(sp)
   16694:	0d72                	slli	s10,s10,0x1c
   16696:	000a                	c.slli	zero,0x2
   16698:	6572                	flw	fa0,28(sp)
   1669a:	645f7663          	bgeu	t5,t0,16ce6 <_data_lma+0x426>
   1669e:	7461                	lui	s0,0xffff8
   166a0:	0d61                	addi	s10,s10,24
   166a2:	000a                	c.slli	zero,0x2
   166a4:	df22                	sw	s0,188(sp)
   166a6:	ffff                	0xffff
   166a8:	dfa4                	sw	s1,120(a5)
   166aa:	ffff                	0xffff
   166ac:	dfa4                	sw	s1,120(a5)
   166ae:	ffff                	0xffff
   166b0:	df2e                	sw	a1,188(sp)
   166b2:	ffff                	0xffff
   166b4:	dfa4                	sw	s1,120(a5)
   166b6:	ffff                	0xffff
   166b8:	dfa4                	sw	s1,120(a5)
   166ba:	ffff                	0xffff
   166bc:	dfa4                	sw	s1,120(a5)
   166be:	ffff                	0xffff
   166c0:	dfa4                	sw	s1,120(a5)
   166c2:	ffff                	0xffff
   166c4:	dfa4                	sw	s1,120(a5)
   166c6:	ffff                	0xffff
   166c8:	dfa4                	sw	s1,120(a5)
   166ca:	ffff                	0xffff
   166cc:	dfa4                	sw	s1,120(a5)
   166ce:	ffff                	0xffff
   166d0:	df1c                	sw	a5,56(a4)
   166d2:	ffff                	0xffff
   166d4:	dfa4                	sw	s1,120(a5)
   166d6:	ffff                	0xffff
   166d8:	def8                	sw	a4,124(a3)
   166da:	ffff                	0xffff
   166dc:	dfa4                	sw	s1,120(a5)
   166de:	ffff                	0xffff
   166e0:	dfa4                	sw	s1,120(a5)
   166e2:	ffff                	0xffff
   166e4:	df28                	sw	a0,120(a4)
   166e6:	ffff                	0xffff
   166e8:	e190                	fsw	fa2,0(a1)
   166ea:	ffff                	0xffff
   166ec:	e41e                	fsw	ft7,8(sp)
   166ee:	ffff                	0xffff
   166f0:	e41e                	fsw	ft7,8(sp)
   166f2:	ffff                	0xffff
   166f4:	e41e                	fsw	ft7,8(sp)
   166f6:	ffff                	0xffff
   166f8:	e41e                	fsw	ft7,8(sp)
   166fa:	ffff                	0xffff
   166fc:	e41e                	fsw	ft7,8(sp)
   166fe:	ffff                	0xffff
   16700:	e41e                	fsw	ft7,8(sp)
   16702:	ffff                	0xffff
   16704:	e41e                	fsw	ft7,8(sp)
   16706:	ffff                	0xffff
   16708:	e41e                	fsw	ft7,8(sp)
   1670a:	ffff                	0xffff
   1670c:	e41e                	fsw	ft7,8(sp)
   1670e:	ffff                	0xffff
   16710:	e294                	fsw	fa3,0(a3)
   16712:	ffff                	0xffff
   16714:	e370                	fsw	fa2,68(a4)
   16716:	ffff                	0xffff
   16718:	dfa0                	sw	s0,120(a5)
   1671a:	ffff                	0xffff
   1671c:	e41e                	fsw	ft7,8(sp)
   1671e:	ffff                	0xffff
   16720:	e048                	fsw	fa0,4(s0)
   16722:	ffff                	0xffff
   16724:	e41e                	fsw	ft7,8(sp)
   16726:	ffff                	0xffff
   16728:	e41e                	fsw	ft7,8(sp)
   1672a:	ffff                	0xffff
   1672c:	dfa0                	sw	s0,120(a5)
   1672e:	ffff                	0xffff
   16730:	e41e                	fsw	ft7,8(sp)
   16732:	ffff                	0xffff
   16734:	e41e                	fsw	ft7,8(sp)
   16736:	ffff                	0xffff
   16738:	e41e                	fsw	ft7,8(sp)
   1673a:	ffff                	0xffff
   1673c:	e41e                	fsw	ft7,8(sp)
   1673e:	ffff                	0xffff
   16740:	e412                	fsw	ft4,8(sp)
   16742:	ffff                	0xffff
   16744:	e25c                	fsw	fa5,4(a2)
   16746:	ffff                	0xffff
   16748:	e2b4                	fsw	fa3,64(a3)
   1674a:	ffff                	0xffff
   1674c:	e41e                	fsw	ft7,8(sp)
   1674e:	ffff                	0xffff
   16750:	e41e                	fsw	ft7,8(sp)
   16752:	ffff                	0xffff
   16754:	e388                	fsw	fa0,0(a5)
   16756:	ffff                	0xffff
   16758:	e41e                	fsw	ft7,8(sp)
   1675a:	ffff                	0xffff
   1675c:	e2d4                	fsw	fa3,4(a3)
   1675e:	ffff                	0xffff
   16760:	e41e                	fsw	ft7,8(sp)
   16762:	ffff                	0xffff
   16764:	e41e                	fsw	ft7,8(sp)
   16766:	ffff                	0xffff
   16768:	e190                	fsw	fa2,0(a1)
   1676a:	ffff                	0xffff
	...
   16774:	0000                	unimp
   16776:	4024                	lw	s1,64(s0)
   16778:	999a                	add	s3,s3,t1
   1677a:	9999                	andi	a1,a1,-26
   1677c:	9999                	andi	a1,a1,-26
   1677e:	3fb9                	jal	166dc <strlen+0x3d8>
   16780:	eee6                	fsw	fs9,92(sp)
   16782:	ffff                	0xffff
   16784:	edd0                	fsw	fa2,28(a1)
   16786:	ffff                	0xffff
   16788:	edd0                	fsw	fa2,28(a1)
   1678a:	ffff                	0xffff
   1678c:	edce                	fsw	fs3,216(sp)
   1678e:	ffff                	0xffff
   16790:	edd6                	fsw	fs5,216(sp)
   16792:	ffff                	0xffff
   16794:	edd6                	fsw	fs5,216(sp)
   16796:	ffff                	0xffff
   16798:	ed9c                	fsw	fa5,24(a1)
   1679a:	ffff                	0xffff
   1679c:	edce                	fsw	fs3,216(sp)
   1679e:	ffff                	0xffff
   167a0:	edd6                	fsw	fs5,216(sp)
   167a2:	ffff                	0xffff
   167a4:	ed9c                	fsw	fa5,24(a1)
   167a6:	ffff                	0xffff
   167a8:	edd6                	fsw	fs5,216(sp)
   167aa:	ffff                	0xffff
   167ac:	edce                	fsw	fs3,216(sp)
   167ae:	ffff                	0xffff
   167b0:	eed2                	fsw	fs4,92(sp)
   167b2:	ffff                	0xffff
   167b4:	eed2                	fsw	fs4,92(sp)
   167b6:	ffff                	0xffff
   167b8:	eed2                	fsw	fs4,92(sp)
   167ba:	ffff                	0xffff
   167bc:	ed9c                	fsw	fa5,24(a1)
   167be:	ffff                	0xffff

000167c0 <__clz_tab>:
   167c0:	0100 0202 0303 0303 0404 0404 0404 0404     ................
   167d0:	0505 0505 0505 0505 0505 0505 0505 0505     ................
   167e0:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   167f0:	0606 0606 0606 0606 0606 0606 0606 0606     ................
   16800:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16810:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16820:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16830:	0707 0707 0707 0707 0707 0707 0707 0707     ................
   16840:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16850:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16860:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16870:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16880:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   16890:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   168a0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
   168b0:	0808 0808 0808 0808 0808 0808 0808 0808     ................
